jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
ss
xor
xor
add
add
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
push
mov
add
movb
mov
cmp
jne
xchg
lea
lea
lea
xchg
mov
mov
mov
mov
mov
mov
inc
lea
mov
inc
movl
mov
mov
mov
push
mov
push
call
push
push
lea
push
call
mov
cmp
jno
dec
inc
mov
mov
mov
mov
xchg
xchg
lea
lea
mov
lea
xchg
inc
inc
dec
je
xchg
mov
dec
inc
dec
movl
mov
mov
mov
push
mov
push
call
lea
mov
cmp
js
lea
lea
mov
xchg
mov
xchg
lea
lea
dec
je
mov
inc
inc
lea
mov
mov
inc
dec
incb
cmpb
jne
mov
pop
ret
add
xor
xor
aaa
xor
xor
add
xor
xor
xor
add
add
in
add
lea
mov
cmp
js
lea
lea
mov
xchg
mov
xchg
lea
lea
dec
je
mov
inc
inc
lea
mov
mov
inc
dec
movl
mov
mov
movl
mov
push
mov
push
mov
push
call
xchg
cmp
jo
xchg
mov
inc
lea
lea
inc
mov
mov
mov
xchg
lea
dec
push
push
lea
push
call
cmp
jae
lea
lea
xchg
lea
lea
xchg
inc
inc
xchg
mov
mov
lea
lea
xchg
mov
push
push
lea
push
call
movl
mov
mov
movl
mov
push
mov
push
mov
push
call
mov
mov
mov
lea
mov
mov
lea
mov
inc
inc
dec
je
lea
mov
mov
mov
mov
mov
dec
mov
pop
ret
xor
add
add
add
add
add
xor
add
add
add
add
add
add
add
add
in
add
mov
mov
mov
cmp
jno
dec
inc
mov
mov
mov
mov
xchg
xchg
lea
lea
mov
lea
xchg
inc
inc
dec
je
xchg
mov
dec
inc
dec
mov
cmp
je
jmp
cmp
jae
lea
lea
xchg
lea
lea
xchg
inc
inc
xchg
mov
mov
lea
lea
xchg
mov
mov
xor
divl
test
jne
mov
mov
mov
lea
mov
mov
lea
mov
inc
inc
dec
je
lea
mov
mov
mov
mov
mov
dec
mov
mov
jmp
mov
xor
divl
inc
imull
mov
cmp
jns
mov
mov
xchg
mov
lea
inc
dec
mov
inc
mov
mov
lea
xchg
lea
lea
dec
jne
mov
dec
mov
mov
pop
ret
nop
push
mov
add
mov
mov
mov
lea
mov
cmp
js
lea
lea
mov
xchg
mov
xchg
lea
lea
dec
je
mov
inc
inc
lea
mov
mov
inc
dec
mov
cmp
je
jmp
mov
cmp
jne
xchg
lea
lea
lea
xchg
mov
mov
mov
mov
mov
mov
inc
lea
mov
inc
mov
mov
mov
mov
call
mov
mov
movzwl
dec
test
jb
inc
mov
movl
mov
lea
mov
mov
mov
lea
mov
add
cmp
jbe
xor
mov
jmp
mov
lea
mov
cmpl
je
mov
lea
mov
cmpl
je
mov
lea
mov
mov
mov
lea
mov
add
mov
mov
call
mov
jmp
mov
lea
mov
mov
mov
lea
mov
add
mov
mov
call
mov
jmp
mov
lea
mov
mov
mov
lea
mov
cmp
jae
mov
mov
mov
lea
mov
mov
call
add
jmp
mov
mov
mov
lea
mov
mov
call
add
incl
decl
jne
mov
mov
pop
ret
lea
push
mov
add
mov
mov
mov
cmp
jg
jmp
inc
xchg
xchg
mov
dec
inc
inc
lea
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
inc
mov
cmp
je
jmp
mov
cmp
jne
xchg
lea
lea
lea
xchg
mov
mov
mov
mov
mov
mov
inc
lea
mov
inc
mov
push
mov
push
mov
push
mov
push
call
mov
mov
mov
pop
ret
mov
push
mov
add
mov
cmp
je
jmp
cmp
jns
mov
mov
xchg
mov
lea
inc
dec
mov
inc
mov
mov
lea
xchg
lea
lea
dec
jne
mov
dec
mov
sub
mov
cmp
jno
mov
mov
mov
inc
inc
dec
je
mov
xchg
lea
mov
xchg
mov
mov
dec
inc
lea
mov
push
mov
mov
xor
call
mov
mov
mov
mov
lea
mov
mov
lea
mov
inc
inc
dec
je
lea
mov
mov
mov
mov
mov
dec
mov
mov
mov
call
lea
mov
cmp
js
lea
lea
mov
xchg
mov
xchg
lea
lea
dec
je
mov
inc
inc
lea
mov
mov
inc
dec
push
mov
mov
xor
call
mov
cmp
jae
lea
lea
xchg
lea
lea
xchg
inc
inc
xchg
mov
mov
lea
lea
xchg
mov
mov
cmp
jno
dec
inc
mov
mov
mov
mov
xchg
xchg
lea
lea
mov
lea
xchg
inc
inc
dec
je
xchg
mov
dec
inc
dec
lea
mov
push
jmp
cmp
jno
mov
mov
mov
inc
inc
dec
je
mov
xchg
lea
mov
xchg
mov
mov
dec
inc
lea
mov
mov
mov
add
mov
add
mov
call
mov
mov
add
mov
mov
movzwl
mov
add
add
mov
mov
push
mov
mov
mov
call
mov
mov
mov
cmpl
je
push
mov
mov
mov
xor
call
mov
mov
mov
cmp
jne
xchg
lea
lea
lea
xchg
mov
mov
mov
mov
mov
mov
inc
lea
mov
inc
mov
cmpl
je
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
movzwl
dec
test
jl
inc
mov
movl
mov
lea
mov
cmpl
je
mov
lea
mov
mov
cmp
jae
mov
lea
mov
mov
mov
incl
decl
jne
mov
mov
mov
mov
call
mov
mov
add
mov
mov
mov
mov
movzwl
dec
test
jl
inc
mov
movl
mov
lea
mov
cmpl
je
mov
mov
mov
lea
mov
add
mov
cmp
jg
jmp
inc
xchg
xchg
mov
dec
inc
inc
lea
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
inc
mov
lea
mov
cmpl
je
mov
lea
mov
mov
mov
lea
mov
mov
add
mov
call
mov
lea
mov
mov
mov
lea
mov
cmp
jae
mov
mov
mov
lea
mov
mov
call
add
mov
jmp
mov
mov
mov
lea
mov
mov
call
add
mov
jmp
mov
mov
mov
lea
mov
mov
call
add
mov
incl
decl
jne
push
push
mov
call
push
mov
call
xchg
cmp
jo
xchg
mov
inc
lea
lea
inc
mov
mov
mov
xchg
lea
dec
mov
mov
mov
mov
mov
add
mov
mov
mov
cmp
jae
lea
lea
xchg
lea
lea
xchg
inc
inc
xchg
mov
mov
lea
lea
xchg
mov
mov
sub
add
add
mov
mov
cmp
jno
dec
inc
mov
mov
mov
mov
xchg
xchg
lea
lea
mov
lea
xchg
inc
inc
dec
je
xchg
mov
dec
inc
dec
lea
pushl
call
mov
pop
ret
push
mov
add
mov
mov
lea
mov
cmp
js
lea
lea
mov
xchg
mov
xchg
lea
lea
dec
je
mov
inc
inc
lea
mov
mov
inc
dec
push
call
mov
push
mov
push
call
mov
mov
mov
mov
mov
mov
lea
mov
mov
lea
mov
inc
inc
dec
je
lea
mov
mov
mov
mov
mov
dec
mov
call
push
mov
push
mov
mov
call
mov
mov
mov
cmp
jno
mov
mov
mov
inc
inc
dec
je
mov
xchg
lea
mov
xchg
mov
mov
dec
inc
lea
mov
mov
mov
movl
xchg
cmp
jo
xchg
mov
inc
lea
lea
inc
mov
mov
mov
xchg
lea
dec
mov
call
push
mov
push
mov
mov
call
mov
mov
mov
cmp
jae
lea
lea
xchg
lea
lea
xchg
inc
inc
xchg
mov
mov
lea
lea
xchg
mov
mov
call
push
mov
push
mov
mov
call
mov
mov
mov
xchg
cmp
jo
xchg
mov
inc
lea
lea
inc
mov
mov
mov
xchg
lea
dec
mov
call
push
mov
push
mov
mov
call
mov
mov
mov
cmp
jns
mov
mov
xchg
mov
lea
inc
dec
mov
inc
mov
mov
lea
xchg
lea
lea
dec
jne
mov
dec
mov
pop
ret
add
imul
gs
xor
cs
insb
add
add
inc
gs
jb
arpl
fs
jae
add
push
cmp
testb
mov
xchg
lcall
cld
mov
xchg
sahf
mov
mov
mov
mov
cld
cld
mov
mov
mov
cwtl
mov
xchg
lahf
mov
xchg
cltd
mov
lahf
nop
lods
mov
mov
xchg
lahf
mov
fisubl
cld
cld
xchg
cld
lahf
cld
mov
lcall
cld
into
cld
mov
cld
cld
cld
cld
cld
scas
jne
jge
add
mov
mov
xchg
test
loopne
repnz
fidivr
mov
fidivr
cwtl
fidivr
jl
mov
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
mov
cmp
mov
xor
jae
or
cmp
mov
cld
scas
jne
jge
xor
mov
ja
sub
jne
aam
jne
xor
mov
xor
lods
mov
mov
jne
xor
mov
xor
mov
sbb
movsb
jne
sbb
or
cld
cld
jne
or
hlt
jne
sbb
enter
jae
or
mov
cld
cld
jae
and
mov
cld
stc
subb
and
cld
std
mov
adc
cld
cld
xchg
cld
xchg
cld
jne
xor
clc
std
mov
xor
lods
jae
adc
xchg
stc
subb
cld
jne
xor
cld
nop
jecxz
mov
mov
jne
xor
in
std
mov
adc
jne
in
std
mov
jne
xor
in
std
mov
adc
adc
mov
or
cld
cld
lods
jne
adc
jne
xor
lods
les
sbb
adc
jne
and
jae
sub
mov
lods
jne
adc
jne
xor
lods
les
sbb
jge
sbb
jge
and
jne
and
cld
push
jge
xor
jne
xor
clc
cld
stc
jg
or
or
or
mov
jae
add
mov
jae
adc
cmp
mov
mov
lods
jne
cmp
movsb
xchg
cld
jl
cld
xchg
cld
jne
xor
mov
xor
lods
mov
cld
jl
cld
xchg
cld
jne
hlt
lods
jne
xor
lods
mov
scas
add
lahf
adc
loopne
or
or
push
jnp
cld
or
or
cmp
push
jne
cmpsl
ds
cmp
jne
pushf
jne
hlt
jne
clc
or
lret
and
xchg
cld
cld
cld
lea
lret
xor
cld
cld
cld
call
cld
cld
cld
fisttpll
mov
cld
cld
cld
in
cmp
adc
adc
cld
cld
cld
shll
in
adc
cld
cld
cld
adc
nop
mov
xor
sbb
pop
adc
cld
cld
cld
cld
xchg
cld
idivb
lea
jge
mov
jae
dec
sti
mov
or
inc
or
cld
cs
pushl
ret
cmp
sbb
or
jmp
adc
or
or
ds
cld
ja
cld
jae
jae
inc
or
or
into
cmp
pop
inc
or
or
xor
xor
jnp
add
or
jae
or
hlt
pushf
mov
repz
mov
add
mov
je
clc
pushf
mov
jl
add
mov
or
or
or
add
stc
xorb
cld
inc
mov
jbe
push
jne
or
dec
jbe,pn
add
or
or
mov
mov
mov
add
sub
push
cld
inc
mov
jbe
push
int
jbe
add
add
or
std
ds
jbe
add
pushf
mov
or
cld
cld
je
push
int
jbe
add
mov
int
jbe
push
jbe
add
pushf
mov
jl
add
pop
cmpsl
cmp
jne
stos
je
or
cmp
hlt
pushf
mov
cld
cld
cld
pop
hlt
pushf
mov
repz
mov
out
hlt
pushf
mov
clc
pushf
mov
or
cld
cld
pop
repz
mov
hlt
pushf
mov
pushf
mov
int
pop
repz
mov
pushf
mov
out
hlt
pushf
mov
pushf
mov
repz
mov
je
clc
pushf
mov
hlt
pushf
mov
clc
pushf
mov
out
repz
mov
clc
pushf
mov
or
cld
cld
je
pop
int
jbe
pop
jbe
clc
pushf
mov
je
or
or
xor
add
lea
push
mov
add
mov
mov
cmp
je
jmp
movb
mov
cmp
ja
mov
mov
mov
cmpl
je
mov
mov
mov
cmp
ja
mov
mov
mov
cmp
jne
mov
mov
movb
jmp
incl
cmpl
jne
mov
mov
pop
ret
nop
push
mov
add
mov
xor
mov
xor
mov
mov
cmp
je
jmp
mov
mov
call
cmpl
ja
incl
mov
mov
cmpb
jne
mov
call
test
je
mov
mov
movb
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
incl
cmpl
jbe
mov
pop
ret
nop
push
mov
add
mov
mov
mov
push
mov
push
call
mov
mov
mov
pop
ret
nop
push
mov
add
cmp
jg
jmp
inc
xchg
xchg
mov
dec
inc
inc
lea
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
inc
movl
cmp
jno
mov
mov
mov
inc
inc
dec
je
mov
xchg
lea
mov
xchg
mov
mov
dec
inc
lea
mov
movl
lea
push
push
mov
sub
push
mov
push
push
call
mov
mov
call
mov
cmpl
je
cmp
jns
mov
mov
xchg
mov
lea
inc
dec
mov
inc
mov
mov
lea
xchg
lea
lea
dec
jne
mov
dec
mov
mov
call
mov
cmpl
je
xchg
cmp
jo
xchg
mov
inc
lea
lea
inc
mov
mov
mov
xchg
lea
dec
mov
cmp
je
mov
subb
cmp
jae
lea
lea
xchg
lea
lea
xchg
inc
inc
xchg
mov
mov
lea
lea
xchg
mov
mov
xorb
cmp
jns
mov
mov
xchg
mov
lea
inc
dec
mov
inc
mov
mov
lea
xchg
lea
lea
dec
jne
mov
dec
incl
mov
cmp
jne
mov
cmp
jne
xchg
lea
lea
lea
xchg
mov
mov
mov
mov
mov
mov
inc
lea
mov
inc
mov
call
xchg
cmp
jo
xchg
mov
inc
lea
lea
inc
mov
mov
mov
xchg
lea
dec
mov
push
mov
push
call
cmpl
je
mov
push
call
xchg
cmp
jo
xchg
mov
inc
lea
lea
inc
mov
mov
mov
xchg
lea
dec
cmp
jae
lea
lea
xchg
lea
lea
xchg
inc
inc
xchg
mov
mov
lea
lea
xchg
mov
mov
cmp
jno
dec
inc
mov
mov
mov
mov
xchg
xchg
lea
lea
mov
lea
xchg
inc
inc
dec
je
xchg
mov
dec
inc
dec
push
mov
push
call
mov
pop
ret
push
mov
add
mov
cmp
jno
dec
inc
mov
mov
mov
mov
xchg
xchg
lea
lea
mov
lea
xchg
inc
inc
dec
je
xchg
mov
dec
inc
dec
mov
mov
mov
xor
mov
mov
cmp
jne
call
add
cmp
jne
mov
mov
mov
lea
mov
mov
lea
mov
inc
inc
dec
je
lea
mov
mov
mov
mov
mov
dec
movb
cmp
jae
lea
lea
xchg
lea
lea
xchg
inc
inc
xchg
mov
mov
lea
lea
xchg
mov
mov
mov
pop
ret
mov
push
mov
add
xchg
cmp
jo
xchg
mov
inc
lea
lea
inc
mov
mov
mov
xchg
lea
dec
call
call
call
test
jne
mov
jmp
movw
lea
mov
cmp
js
lea
lea
mov
xchg
mov
xchg
lea
lea
dec
je
mov
inc
inc
lea
mov
mov
inc
dec
call
lea
mov
pop
ret
nop
push
mov
add
movl
mov
mov
mov
push
mov
push
call
mov
cmp
jno
dec
inc
mov
mov
mov
mov
xchg
xchg
lea
lea
mov
lea
xchg
inc
inc
dec
je
xchg
mov
dec
inc
dec
movl
mov
mov
movl
mov
push
mov
push
mov
push
call
lea
mov
cmp
js
lea
lea
mov
xchg
mov
xchg
lea
lea
dec
je
mov
inc
inc
lea
mov
mov
inc
dec
movl
mov
mov
movl
mov
push
mov
push
mov
push
call
cmp
jns
mov
mov
xchg
mov
lea
inc
dec
mov
inc
mov
mov
lea
xchg
lea
lea
dec
jne
mov
dec
movl
mov
mov
movl
mov
push
mov
push
mov
push
call
cmp
jg
jmp
inc
xchg
xchg
mov
dec
inc
inc
lea
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
inc
movl
movl
movw
mov
push
mov
push
mov
push
call
cmp
jae
lea
lea
xchg
lea
lea
xchg
inc
inc
xchg
mov
mov
lea
lea
xchg
mov
movl
movl
movw
mov
push
mov
push
mov
push
call
mov
mov
mov
lea
mov
mov
lea
mov
inc
inc
dec
je
lea
mov
mov
mov
mov
mov
dec
movl
mov
mov
movl
mov
push
mov
push
mov
push
call
cmp
jno
mov
mov
mov
inc
inc
dec
je
mov
xchg
lea
mov
xchg
mov
mov
dec
inc
lea
mov
movl
mov
mov
movl
mov
push
mov
push
mov
push
call
mov
cmp
jne
xchg
lea
lea
lea
xchg
mov
mov
mov
mov
mov
mov
inc
lea
mov
inc
movl
movl
movw
mov
push
mov
push
mov
push
call
mov
cmp
jno
dec
inc
mov
mov
mov
mov
xchg
xchg
lea
lea
mov
lea
xchg
inc
inc
dec
je
xchg
mov
dec
inc
dec
movl
mov
mov
movl
mov
push
mov
push
mov
push
call
lea
mov
cmp
js
lea
lea
mov
xchg
mov
xchg
lea
lea
dec
je
mov
inc
inc
lea
mov
mov
inc
dec
movl
mov
mov
movl
mov
push
mov
push
mov
push
call
cmp
jns
mov
mov
xchg
mov
lea
inc
dec
mov
inc
mov
mov
lea
xchg
lea
lea
dec
jne
mov
dec
movl
mov
mov
movl
mov
push
mov
push
mov
push
call
cmp
jg
jmp
inc
xchg
xchg
mov
dec
inc
inc
lea
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
inc
xchg
cmp
jo
xchg
mov
inc
lea
lea
inc
mov
mov
mov
xchg
lea
dec
mov
mov
mov
lea
mov
mov
lea
mov
inc
inc
dec
je
lea
mov
mov
mov
mov
mov
dec
push
call
mov
call
cmp
jno
mov
mov
mov
inc
inc
dec
je
mov
xchg
lea
mov
xchg
mov
mov
dec
inc
lea
mov
mov
pop
ret
add
add
xor
xor
xor
xor
xor
aaa
add
cmp
cmp
xor
cmp
add
add
xor
xor
xor
cmp
xor
xor
aaa
xor
add
cmp
xor
cmp
xor
xor
xor
xor
cmp
add
add
aaa
cmp
xor
xor
add
cmp
xor
cmp
xor
add
push
outsb
push
inc
jae
fs
insb
and
add
add
jae
mov
mov
cmp
jne
xchg
lea
lea
lea
xchg
mov
mov
mov
mov
mov
mov
inc
lea
mov
inc
movl
mov
mov
push
push
push
call
cmp
jae
lea
lea
xchg
lea
lea
xchg
inc
inc
xchg
mov
mov
lea
lea
xchg
mov
movl
movl
mov
push
mov
push
push
call
mov
mov
mov
lea
mov
mov
lea
mov
inc
inc
dec
je
lea
mov
mov
mov
mov
mov
dec
movl
mov
mov
mov
push
mov
push
call
cmp
jno
mov
mov
mov
inc
inc
dec
je
mov
xchg
lea
mov
xchg
mov
mov
dec
inc
lea
mov
call
movl
mov
mov
movl
mov
push
mov
push
mov
push
call
mov
cmp
jne
xchg
lea
lea
lea
xchg
mov
mov
mov
mov
mov
mov
inc
lea
mov
inc
movl
mov
mov
push
push
push
call
mov
cmp
jno
dec
inc
mov
mov
mov
mov
xchg
xchg
lea
lea
mov
lea
xchg
inc
inc
dec
je
xchg
mov
dec
inc
dec
movl
mov
mov
movl
mov
push
mov
push
mov
push
call
lea
mov
cmp
js
lea
lea
mov
xchg
mov
xchg
lea
lea
dec
je
mov
inc
inc
lea
mov
mov
inc
dec
movl
mov
mov
push
push
push
call
cmp
jns
mov
mov
xchg
mov
lea
inc
dec
mov
inc
mov
mov
lea
xchg
lea
lea
dec
jne
mov
dec
movl
movl
mov
push
mov
push
push
call
cmp
jg
jmp
inc
xchg
xchg
mov
dec
inc
inc
lea
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
inc
movl
mov
mov
push
push
push
call
cmp
jae
lea
lea
xchg
lea
lea
xchg
inc
inc
xchg
mov
mov
lea
lea
xchg
mov
movl
mov
mov
push
push
push
call
mov
mov
mov
lea
mov
mov
lea
mov
inc
inc
dec
je
lea
mov
mov
mov
mov
mov
dec
movl
mov
mov
movl
mov
push
mov
push
mov
push
call
cmp
jno
mov
mov
mov
inc
inc
dec
je
mov
xchg
lea
mov
xchg
mov
mov
dec
inc
lea
mov
movl
mov
mov
movl
mov
push
mov
push
mov
push
call
mov
cmp
jne
xchg
lea
lea
lea
xchg
mov
mov
mov
mov
mov
mov
inc
lea
mov
inc
movl
movl
mov
push
mov
push
push
call
mov
cmp
jno
dec
inc
mov
mov
mov
mov
xchg
xchg
lea
lea
mov
lea
xchg
inc
inc
dec
je
xchg
mov
dec
inc
dec
movl
mov
mov
push
push
push
call
lea
mov
cmp
js
lea
lea
mov
xchg
mov
xchg
lea
lea
dec
je
mov
inc
inc
lea
mov
mov
inc
dec
movl
mov
mov
movl
mov
push
mov
push
mov
push
call
cmp
jns
mov
mov
xchg
mov
lea
inc
dec
mov
inc
mov
mov
lea
xchg
lea
lea
dec
jne
mov
dec
movl
mov
mov
movl
mov
push
mov
push
mov
push
call
cmp
jg
jmp
inc
xchg
xchg
mov
dec
inc
inc
lea
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
inc
movl
mov
mov
movl
mov
push
mov
push
mov
push
call
cmp
jae
lea
lea
xchg
lea
lea
xchg
inc
inc
xchg
mov
mov
lea
lea
xchg
mov
mov
mov
mov
lea
call
cmp
jns
mov
mov
xchg
mov
lea
inc
dec
mov
inc
mov
mov
lea
xchg
lea
lea
dec
jne
mov
dec
ret
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
cmp
xor
xor
add
xor
add
cmp
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
add
cmp
xor
xor
add
add
xor
add
xor
aaa
add
add
add
add
add
add
add
add
add
aaa
add
add
add
add
add
add
xor
xor
cmp
xor
aaa
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
cmp
add
add
add
add
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
add
add
add
add
add
add
add
lea
xor
pop
add
add
jbe
push
push
in
push
pop
push
jno
add
cmp
add
mov
adc
ljmp
inc
add
fidiv
aas
push
jnp
push
movsl
data16
add
xor
add
add
add
outsl
lock
xchg
std
addr16
add
add
add
add
add
add
insb
lea
add
add
add
mov
lea
andb
add
add
and
int
fadds
pop
aad
add
mov
add
call
sbb
iret
pushf
cmp
fistpll
std
pop
add
fimull
movsl
aas
sub
sbb
add
mov
je
add
outsl
add
push
inc
inc
mov
test
push
add
mov
arpl
jnp
pop
add
fldl
sbb
into
in
add
add
outsl
jns
vmaxss
push
add
or
mov
add
xor
das
sub
add
inc
add
daa
pop
xor
add
ret
out
sub
out
add
add
negb
sub
arpl
add
jns
add
inc
mov
mov
leave
mov
loopne
add
jnp
add
sti
add
test
subl
add
aaa
rcr
add
xor
add
push
mov
test
dec
test
fwait
sbb
movl
xchg
lahf
add
add
add
dec
add
dec
add
jecxz
fidivl
cmp
pop
add
lea
outsb
add
adc
add
pmullw
push
lahf
out
gs
pop
jmp
add
add
adc
dec
mov
add
add
add
add
ss
sub
fistp
push
add
pusha
add
mov
mov
mov
ja
in
add
and
adc
in
cmpsb
dec
je
add
cmpsl
push
push
add
loopne
add
out
cld
adc
loop
sub
add
add
add
dec
lods
xchg
std
cmp
add
add
rcrb
add
add
add
jb
gs
mov
mov
int
pop
mov
jge
sbb
mov
push
sub
add
add
sbb
add
adc
push
add
add
mov
mov
subb
int3
adc
sbb
mov
add
pop
add
cmp
add
mov
add
addl
pop
add
fwait
jno
mov
add
fwait
add
call
in
add
push
leave
lds
imul
mov
ja
mov
loop
pop
outsb
imul
add
jns
mov
add
dec
add
push
add
and
mov
push
xor
mov
incb
or
add
add
pushf
add
cmp
xor
mov
mov
fisttpll
imul
inc
xchg
mov
add
pop
cld
add
sub
mov
stos
or
icebp
pop
add
pop
arpl
pop
lret
mov
loope
add
or
dec
add
sar
fwait
add
jnp
pop
stc
add
fwait
dec
fscale
je
aad
out
add
fldl
or
pop
leave
add
push
add
add
xchg
add
add
add
jecxz
add
add
es
testl
mov
add
cmp
jno
mov
push
add
fwait
mov
data16
add
or
ljmp
or
dec
pop
daa
xlat
test
subl
inc
dec
movsl
dec
test
inc
dec
add
fwait
inc
push
push
add
fnsave
xor
shlb
cld
pop
jns
xor
rcrl
mov
out
and
mov
stos
jp
jmp
lods
mov
xchg
mov
dec
lds
das
pop
in
enter
je
jle
out
in
es
xor
mov
rorb
or
sbb
push
xchg
imul
pop
jnp
adc
cmp
rdpmc
pusha
enter
mov
adc
inc
sti
bt
lods
ds
gs
popf
bound
mov
in
and
fcmove
and
xchg
sbb
push
sbb
icebp
imul
push
adc
pop
mov
lock
leave
shrl
arpl
ret
or
mov
push
dec
or
arpl
int3
push
test
pop
sub
add
lds
lds
and
mov
stos
das
movsb
test
sbb
mov
jbe
push
pop
jge
sti
adc
psrad
inc
xchg
mov
sub
jno
jg
jl
out
loopne
xchg
cmp
xor
aas
stos
push
lahf
pushf
jne,pt
ret
cld
adc
push
inc
pop
loopne
ds
lock
ror
in
imul
enter
pop
ss
xor
loope
adc
sub
jo
cmp
sti
fldenv
sti
ja
lock
jp
imul
pop
es
xor
cmpsl
rcl
xor
xchg
in
js
xchg
mov
lods
in
ds
jle
clc
aaa
lret
push
repnz
loop
test
repnz
dec
xchg
mov
add
mov
clc
add
fdivrs
push
or
cmp
sub
mull
fistpl
xchg
mov
mov
mov
sahf
adc
jl
cwtl
adc
subb
outsl
movsb
and
out
stc
mov
jns
adc
pop
sub
push
lds
fcomps
and
cli
push
cld
popf
xor
add
or
jp
into
repz
cmc
adc
div
pushf
pop
add
jbe
fmuls
jle
cmp
adc
rcrl
data16
out
lods
inc
fwait
cmpsb
mov
jne
and
mov
in
adc
sti
push
popa
mov
dec
mov
mov
xchg
mov
dec
inc
pop
add
fsts
jb
repz
fs
inc
or
sbb
sbb
das
inc
pop
es
xchg
adc
pop
jge
ret
stos
xchg
jmp
push
pop
cs
push
mov
nop
dec
xchg
jge
rolb
dec
std
dec
in
mov
cltd
and
in
push
lea
roll
fwait
jmp
rorl
fcmovnb
nop
add
mov
inc
fcmove
testl
rcrb
mov
lret
sarl
mov
push
sbb
movsb
cwtl
insb
std
pop
cmpsl
inc
or
mov
cwtl
mov
cld
mov
cmp
mov
gs
out
lock
mov
cmp
sub
subl
out
xor
sub
movsb
ret
add
adc
lcall
sbb
ljmp
xor
xchg
mov
push
lahf
mov
and
roll
test
in
jecxz
lods
mov
dec
xchg
push
xchg
sbb
lahf
repnz
clc
or
xchg
stos
xor
xor
inc
sar
out
rcrb
stos
stos
lahf
jno
out
adc
xor
cli
xchg
xor
or
dec
xor
stos
sbb
fisttp
pusha
xchg
or
add
xor
jecxz
xor
fwait
jo
inc
push
in
or
clc
pop
out
adc
jge
into
pop
dec
jns
es
in
stos
cmp
negl
enter
push
pop
sti
pop
ret
or
jp
mov
xchg
mov
add
xchg
cld
jne
sub
mov
jb
fist
cmp
jmp
fistpl
out
pushf
shrl
mov
push
stos
push
mov
and
arpl
jnp
repnz
jle
or
in
push
dec
pusha
arpl
sbb
call
mov
inc
push
test
dec
push
sub
adc
mov
imul
fidivrl
fcoml
sbb
sti
scas
or
add
push
push
adc
push
push
leave
cmp
hlt
pusha
mov
add
outsb
dec
xor
cmp
cs
xchg
lods
or
fstps
int3
cmp
ds
fisubr
xlat
rcrb
cltd
scas
sub
cmp
cmp
jle
lea
and
sub
mov
daa
inc
loope
cmp
pusha
jno
and
jl
roll
add
jno
inc
pop
xlat
xor
lcall
push
xchg
fdivrs
test
adc
ret
cmpsb
push
mov
mov
pop
jne
scas
push
xchg
repz
dec
cld
sub
fisubrl
push
sbb
leave
sbb
and
imul
dec
sbb
lea
sbb
adc
xor
pop
xchg
pop
mov
sbb
fcomip
pop
sub
lcall
into
fsubl
dec
inc
outsb
inc
fwait
jmp
ror
or
mov
pop
jmp
mov
hlt
pop
and
in
inc
push
paddd
mull
dec
sub
loop
mull
lret
cwtl
shrl
push
mov
adc
sbb
mov
test
cmp
outsl
andl
stc
outsl
sahf
jge
adc
xor
pop
push
in
cltd
vmread
fsubrs
out
push
loopne
mov
je
pop
sahf
adc
or
aaa
popf
cmc
fldenv
mov
adc
movsl
aas
adc
stc
sub
adc
cmp
das
mov
mov
mov
fs
mov
jge
jl
mov
es
jno
sbb
loopne
repnz
dec
bound
jb
inc
fxch
ret
or
push
xchg
or
out
cmp
fadd
sub
ds
fnstenv
xchg
adc
decl
jmp
inc
add
mov
bound
and
inc
aas
outsl
ffree
jb
in
je
xorl
xchg
out
data16
icebp
loope
call
je
pop
mov
ret
xor
sahf
fcomi
sbb
pop
dec
roll
dec
cmpsb
inc
sub
jp
sbb
mov
mov
cmc
mov
int
mov
dec
test
test
mov
out
testl
ror
mov
out
mov
push
int3
lock
and
pop
lret
ret
fldenv
stos
inc
stc
aam
popl
pop
nop
sbb
dec
in
sbb
xchg
xchg
mov
push
popa
dec
pop
inc
lods
cmp
sarb
imul
jg
mov
xchg
pop
test
out
dec
test
push
pop
xor
clc
inc
incb
xchg
in
out
daa
rcll
movsl
pop
jns
fildll
jbe
test
push
mov
int3
in
bound
or
xor
rcr
mov
adc
dec
sub
shrl
ljmp
jp
cmp
lds
lahf
push
out
push
xchg
imul
pop
jl
repnz
inc
jns
mov
out
xchg
sbbl
scas
mov
mov
push
addr16
jp
inc
fs
rcr
jbe
jmp
je
jns
mov
iret
jne
mov
mov
notl
xchg
mov
into
xchg
lret
sbbl
out
pop
cmp
or
frstor
add
mov
and
pushf
jnp
sub
jle
loopne
in
cmc
push
pusha
repz
iret
jbe
sub
sti
fwait
hlt
pop
ljmp
jae
jl
push
jmp
rcrb
imul
ljmp
xchg
enter
les
imul
scas
outsl
call
push
sahf
mov
sub
leave
scas
sub
hlt
stos
idivl
arpl
js
inc
jno
int3
or
mov
push
aaa
push
xor
mov
add
lcall
dec
xor
lds
mov
and
inc
cmp
punpcklbw
rcrb
jge
dec
adc
test
push
cmp
in
jl
mov
dec
jo
mov
and
int
sub
stos
jne
fidivl
push
imul
scas
push
fisttpll
cmpsb
fstps
test
cmp
fstl
mov
out
push
dec
sub
pop
lods
lods
sub
pop
repz
movsb
push
ds
sub
movsl
fstl
and
out
icebp
scas
mov
or
fsubrs
mov
mov
pop
jle
in
push
pop
stos
sub
push
jle
sbb
dec
fisubr
xchg
outsb
test
iret
adc
test
icebp
jg
mov
or
sub
inc
cmpsb
and
movsb
daa
push
adc
int
add
dec
mull
and
lret
out
rol
xchg
mov
insb
jns
mov
loop
pop
test
rep
bound
jmp
stc
mov
adc
int
cmp
xchg
add
and
pop
cli
mov
insb
adc
or
or
mov
add
pop
inc
add
imul
jae
add
insl
shrl
dec
lret
mov
mov
pop
mov
call
int3
xchg
or
dec
push
loopne
cmp
dec
es
inc
test
arpl
push
dec
test
ficompl
xchg
int3
insl
cmp
xchg
shrl
test
lret
loop
je
lret
daa
cld
jmp
inc
mov
and
aam
jmp
fdivrs
push
cmp
jb
inc
adc
in
icebp
je
je
jecxz
gs
repnz
lea
cwtl
call
xor
mov
out
mov
mov
and
pop
mov
sub
pop
das
cli
xlat
sbb
das
mov
and
into
rcrl
xchg
std
push
out
and
loop
adc
sub
popf
cld
div
in
lret
daa
popf
je
adc
daa
or
pop
ljmp
sub
sahf
xchg
ret
and
es
jne
sub
ja
xchg
rcr
mov
xchg
popa
dec
repnz
mov
pusha
mov
and
adc
push
add
jecxz
test
add
sbb
mov
movl
test
sarb
jge
shr
fnstcw
push
xchg
push
mov
xor
inc
jle
test
mov
adc
dec
xchg
jmp
sbb
cmp
dec
pop
into
loope
adc
adc
pop
push
push
sub
test
add
imul
hlt
add
add
jmp
xchg
rolb
mov
jno
mov
jp
jle
mov
mov
inc
mov
js
dec
outsb
push
add
fwait
int3
mov
nop
hlt
dec
push
xchg
addr16
jmp
xchg
iret
jo
out
sub
sub
popf
mov
inc
fimull
stos
add
cmpsb
and
insb
sahf
mov
push
jle
test
lock
cltd
push
iret
aad
mov
pop
and
adc
cmp
lret
scas
movaps
mov
xchg
inc
imul
jmp
imul
scas
rorb
dec
adc
mov
fisttpll
aas
bnd
pushf
or
testb
inc
je
or
cs
cmp
jnp
roll
pop
xor
pop
mov
mov
aaa
rclb
jmp
jne
cmp
je
movsb
and
enter
cmp
jge
dec
fistpl
inc
mov
daa
inc
pop
mov
les
adc
dec
fist
push
pop
jno
xor
push
dec
aam
stc
and
sub
test
test
xor
cmpsb
pop
out
inc
in
and
pop
repz
call
loope
das
mov
cmp
into
leave
ds
sbb
pusha
xchg
mov
mov
cmovne
add
in
add
push
clc
mov
pop
add
xchg
cmp
sub
xchg
push
aad
or
stc
shrl
jne
jecxz
or
adc
rolb
fimull
mov
lea
add
push
pop
int
aas
sub
cmp
fxch
xlat
lds
out
xchg
outsl
sbb
imul
sub
cwtl
jno
inc
scas
dec
loop
mov
int3
sub
xorl
outsb
ds
dec
sub
out
cmp
cli
lock
adc
or
cmp
lret
stc
or
in
into
fistp
push
xor
movsl
in
popa
loopne
adc
mov
adc
inc
xchg
das
cli
xchg
popfw
push
push
lods
cli
dec
dec
mov
xlat
loop
push
sub
jge
in
push
or
adc
pusha
mov
cmp
or
xchg
cmp
scas
repnz
cwtl
push
fnstcw
push
repz
into
xchg
sbb
into
pop
sbb
sub
dec
pop
aas
pop
mov
lret
testb
rolb
je
test
ret
xchg
add
lods
lcall
bound
cmpsb
je
sub
jecxz
xor
cmc
jb
lea
sbb
mov
and
pushf
das
fistl
rcrb
fstpt
inc
bound
das
fldenv
mov
sub
imul
iret
scas
cmp
negl
cwtl
popf
stos
stos
cmpsl
inc
ret
lcall
adc
cld
and
mov
xchg
cmc
mov
inc
mov
std
pusha
insb
pop
or
out
shlb
sarl
lea
inc
ret
mov
mov
insl
adc
dec
dec
jecxz
clc
xchg
adc
popa
jge
mov
mov
mov
das
mov
cmp
aad
cltd
stos
iret
xchg
test
bound
loopne
outsl
fstl
ljmp
xchg
pop
sbb
roll
bound
pop
iret
jb
insb
cmp
cli
adc
pushl
xor
movsl
sbb
pusha
mov
pop
aam
or
jl
push
or
jp
sub
addr16
xchg
pusha
dec
push
stos
push
inc
test
cs
sbb
lcall
outsb
fwait
add
jecxz
mov
inc
bound
fcompl
in
into
pop
xchg
pop
cs
mov
add
mov
sub
xor
outsb
jp
outsb
out
jae
das
mov
push
inc
mov
jne
ljmp
lock
xchg
cmp
jmp
pusha
xchg
xorl
out
push
sub
ret
push
and
stos
ja
and
arpl
bnd
fbstp
in
insb
pusha
pusha
xor
inc
iret
xor
ret
ret
mov
test
jae
pop
xchg
push
jno
jge
jl
mov
call
orb
jbe
ret
jo
imul
scas
xor
sbb
adc
cmpsb
mov
cmp
mov
hlt
inc
push
inc
inc
ja
push
or
test
and
outsb
xor
inc
int3
fstpt
jmp
aaa
adc
mov
sbb
outsl
icebp
shrb
mov
icebp
cmp
cmpsb
cmp
add
icebp
roll
lret
sub
mov
cmp
mov
jno
mov
add
mov
ljmp
jo
cld
cmp
sbb
out
test
jae
fadds
mov
lahf
in
pop
mov
pop
xor
in
loope
xchg
sub
push
push
cmp
push
movsl
jmp
addr16
xor
insb
adc
movb
add
scas
xor
arpl
sub
ret
pop
test
imul
movsb
stos
cmc
sub
outsb
outsb
inc
loopne
sahf
imul
jg
std
dec
mov
pop
inc
mov
sub
and
cwtl
push
sbb
push
push
push
scas
lret
mov
mov
xchg
and
adc
pop
out
test
push
and
pop
loop
adc
shll
adc
inc
bound
jg
or
pop
out
repz
cli
and
ss
jae
cmp
pusha
pushf
or
mov
fdivl
bound
add
adc
insb
imul
inc
mov
lods
loope
adc
and
sub
roll
mov
inc
fnop
shlb
sub
add
cmp
fldt
dec
in
jae
push
repz
xor
xchg
inc
mov
or
pop
repnz
xor
and
fstps
test
cs
or
dec
mov
and
dec
in
jb
ljmp
out
sub
ja
call
lea
xchg
call
mov
mov
cmpl
cmp
sbbb
out
lahf
inc
mulb
es
jge
cmpsb
das
mov
mov
or
xchg
xchg
sarl
jb
std
sahf
mov
cwtl
pop
or
cmpsl
aas
pop
pop
mov
hlt
cs
cld
dec
mov
lret
add
loopne
mov
neg
lock
sbb
adc
js
aam
nop
setns
pop
mov
lods
mov
jbe
dec
fsubrp
mov
push
scas
cmc
ljmp
add
mov
ret
inc
cmp
dec
out
inc
setl
add
add
test
or
push
mov
fistpll
idivl
jg
out
add
call
mov
xor
lahf
mov
adc
xor
adc
outsl
or
dec
sub
cmp
sbb
out
sbb
inc
dec
pusha
xor
test
out
ja
mov
dec
inc
cmp
inc
aas
dec
std
or
pop
js
sub
jp
jo
jle
js
lcall
inc
jecxz
sbb
mov
js
jbe
outsb
sbb
add
insb
mov
out
data16
loope
jp
adc
mov
int3
and
iret
mov
jne
popf
add
lds
lods
xorb
add
bound
push
add
push
shr
stos
ljmp
insb
je
xchg
popa
sarb
ss
cmp
ror
jae
ret
push
pop
mov
loope
loopne
adcl
and
sbb
inc
cmp
fimull
adc
sbb
test
inc
scas
cwtl
mov
push
jae
sbb
and
cltd
mov
xor
leave
adc
mov
arpl
ret
jp
popf
or
and
aaa
xchg
pop
outsl
or
add
inc
sbb
int3
jmp
cmpsl
and
cmp
scas
cmpsl
cmc
xchg
and
ret
sti
cmp
sub
movsb
cmp
adcl
mov
xor
mov
mov
aas
cmp
pop
jno
or
mov
stos
stc
xor
push
ret
pop
lahf
aaa
push
loop
xor
push
ds
inc
or
add
out
test
fcoms
jno
les
test
loope
mov
xchg
cmp
jo
ds
sbb
movsl
repnz
lret
mov
mov
add
adc
xor
subl
dec
cmp
xor
daa
call
sti
push
adcl
dec
cltd
cli
sub
push
sarl
imul
xor
mov
mov
sub
and
bound
push
sbb
int
cmc
mov
mull
fwait
lret
pop
rorl
aas
sbb
sahf
inc
mov
cmp
mov
leave
or
stc
dec
and
fs
or
xchg
stos
aas
movsl
rolb
mov
ss
out
xor
mov
int
or
fmul
movsl
into
and
cmc
mov
lods
jmp
mull
mov
test
fdivs
dec
int
mov
xor
xlat
pusha
xchg
movsb
andl
sti
jno
xor
gs
gs
mov
inc
mov
pop
push
les
or
repz
jbe
xchg
adc
cmp
adc
movsl
lret
jns
inc
pushf
sbb
mov
aad
dec
dec
nop
nop
jb
aas
jmp
fwait
jb
or
xor
into
sti
dec
cltd
lea
jmp
jo
push
adcl
pop
pusha
fldt
mov
inc
inc
cwtl
push
clc
das
xchg
jle
mov
cltd
add
and
jae
rorl
pop
jae
push
test
sub
adc
mov
mov
lret
jno
cld
ja
or
mov
hlt
dec
lock
sbb
rorb
xor
aam
ret
xchg
xor
loop
lret
dec
flds
jne
nop
pop
imul
loopne
mulb
hlt
inc
lods
in
jle
std
push
xchg
mov
jbe
loopne
jecxz
loope
sti
sbb
add
arpl
sbb
mov
into
push
data16
aam
clc
xor
xlat
xchg
aad
mov
rcl
or
pop
and
out
out
add
pop
xchg
mov
inc
push
daa
jno
pushl
leave
push
or
leave
xor
scas
push
xchg
fisttp
scas
subl
push
xor
inc
xor
or
pop
mov
jae
fnop
add
xchg
out
outsb
rcrl
bound
mov
xchg
mov
cmp
movq
mov
loope
jp
push
cs
xor
cmp
pop
push
mov
mov
aam
fildll
lds
movsb
dec
in
xchg
divb
cltd
out
mov
sub
mov
aas
mov
and
add
sbb
mov
cmpsl
pusha
push
jb
repnz
jmp
inc
sbb
pop
lcall
scas
dec
mov
popf
dec
cmc
sub
out
outsl
out
xchg
and
in
sbb
mov
imul
in
scas
sti
clc
jo
mov
lock
mov
loop
int
mov
pop
hlt
xlat
sub
inc
jge
xlat
or
lahf
jmp
mov
add
inc
in
int3
aam
jb
inc
lea
or
movsl
jmp
scas
xchg
adc
cmc
jge
movsb
popa
js
mov
loope
ja
jecxz
sbb
or
cmp
aam
mov
mov
adc
dec
push
xor
popa
popf
in
lahf
push
add
cld
test
or
inc
cwtl
pop
jl
in
shr
aad
js
jecxz
pop
mov
xchg
xor
sub
push
adc
aad
out
js
xor
xor
bound
in
inc
jae
mov
mov
mov
lods
lahf
cs
jbe
fidivrl
adc
cmpsb
lcall
fdivr
pop
nop
sub
fsubrl
and
adc
adc
push
jg
push
mov
or
stos
mov
enter
sub
push
push
mov
int
bound
pop
sbb
negl
xchg
mov
mov
cmc
shll
push
sbb
mov
test
aad
orb
outsl
ficomp
loop
fs
stc
add
adc
bound
call
cmp
gs
repz
cli
mov
jno
cmp
or
aaa
into
mov
pop
cmc
mov
pop
push
pop
mov
int
mov
mov
mov
es
lods
scas
cli
movsb
mov
sbb
idivb
sbb
mov
xchg
add
and
push
and
add
sbb
or
inc
gs
shll
mov
repz
mov
xchg
fsubrs
iret
cmp
cmp
pop
pop
xor
adc
adc
pushf
lds
sub
lods
push
aad
inc
dec
nop
imul
aam
jb
pop
jns
fstpt
jecxz
sub
fmull
pop
test
mov
jo
mov
mov
dec
lret
fcmovnu
push
or
cwtl
cmp
add
adc
outsl
xchg
das
jbe
pop
mov
push
movsb
std
and
movsl
stos
rcrl
push
negb
or
into
mov
mov
mov
push
lret
jecxz
xor
mov
push
pop
lock
rolb
pop
data16
push
rcrb
mov
sub
not
out
and
pop
push
fbld
cmpsl
enter
sbb
xchg
iret
xchg
ja
push
xchg
jle
ret
lods
dec
lret
mov
mov
jge
jbe
jle
stc
cvtps2pd
imul
clc
inc
cltd
dec
insb
add
mov
sbb
push
sub
fisttpll
mov
enter
pop
roll
mov
stos
cmp
mov
gs
inc
xchg
iret
xchg
xchg
push
add
sar
push
or
xor
sub
or
xor
ja
mov
pop
pushf
mov
divps
jg
movsl
dec
sub
inc
insl
ss
and
int3
sti
push
mov
push
add
lcall
bound
movsl
jns
push
shl
mov
fcoml
mov
es
pop
lds
mov
xchg
mov
lahf
ss
cli
push
dec
jne
cs
mov
mov
mov
fwait
mov
sub
addr16
sub
mov
mov
adc
rcl
or
insb
dec
jb
jnp
mov
jle
push
mov
pusha
add
fsubr
ret
les
sbb
inc
dec
and
jae
test
out
jae
mov
pushf
leave
imul
test
push
sbb
cltd
adc
scas
pop
pop
fist
gs
cld
dec
mov
xor
rcl
hlt
and
loope
sbb
test
or
sbb
jns
packsswb
or
add
out
int3
mov
dec
mov
jle
pop
lds
mov
scas
gs
icebp
and
push
movsb
push
cmp
add
adc
and
sub
pop
daa
cmp
inc
push
jno
fnstcw
jl
nop
mov
push
xchg
mov
xor
mov
xor
push
mov
test
aam
icebp
inc
daa
sbb
or
mov
pop
mov
out
pop
ret
push
imul
test
cmpsb
ds
rcr
movsl
add
pop
sub
pushl
sbb
adc
loopne
xchg
sbb
mov
xchg
pop
popf
out
aad
or
hlt
pop
and
jae
xor
aaa
fsubl
or
xchg
jg
adc
out
inc
mov
mov
sub
mov
and
add
and
popa
mov
sub
jecxz
neg
clc
ja
mov
out
mov
sahf
repz
xchg
outsb
andb
push
outsl
mov
pop
arpl
mov
imul
sub
cmp
cmp
cli
mov
lea
arpl
lea
xlat
sub
imul
cmc
adc
xor
inc
pop
fisttpll
loopne
xchg
adc
jo
imul
lods
xchg
test
mov
inc
sub
fisubr
mov
mov
inc
mov
call
sti
iret
ds
gs
lock
sarl
dec
add
inc
in
dec
fstps
sbb
repz
int
flds
sbb
mov
cmp
pop
or
adc
mov
pop
jmp
test
pop
aad
sahf
lret
nop
inc
mov
aas
sub
jb
in
dec
ds
je
push
push
jecxz
or
add
push
lea
pop
mov
idivb
cmpl
addr16
or
imul
sahf
and
push
lods
ret
mov
pop
in
pop
and
sub
cmpsl
in
neg
jae
std
xchg
or
cwtl
mov
xchg
mov
jns
mov
lret
push
jmp
mov
sbb
lock
push
icebp
loopne
sub
xlat
aam
aam
ret
out
mov
sub
inc
insl
mov
in
iret
ljmp
lods
shlb
imul
pop
in
test
mov
mov
ret
xchg
rolb
lods
pop
push
in
aaa
dec
fnsave
mov
xchg
sbb
sarl
pop
inc
ds
jnp
subl
push
test
push
mov
orl
sbb
xor
xchg
push
mov
and
jge
xchg
push
pop
test
fbstp
ds
mov
or
mov
jge
pop
and
add
mov
push
out
sub
punpckldq
enter
cmp
sbb
xchg
pop
jnp
mov
cmp
add
addr16
insl
or
xor
mov
sbb
js
mov
fisttpll
jne
or
aad
insb
bound
jmp
mov
pop
xorl
test
or
xlat
push
jle
gs
inc
jge
mov
mov
jnp
jle
jle
jecxz
in
or
cmovb
mov
and
insl
adc
pop
xor
es
push
or
push
jge
int3
popf
lcall
inc
in
sub
fs
int3
xchg
rcrb
inc
imul
scas
shrl
adc
mov
leave
jns
inc
hlt
insl
cmp
sub
or
orl
setg
xchg
inc
add
or
popa
pop
add
or
stos
dec
out
movsl
aad
fisub
scas
out
into
sub
rcr
insl
scas
inc
mov
sub
arpl
sub
jbe
outsb
iret
jge
mov
dec
daa
cmp
mov
ret
sbb
jbe
jl
inc
iret
dec
or
xorl
xchg
addr16
push
pop
mov
test
lahf
int
inc
mov
add
in
mov
popa
scas
pop
cs
addr16
pop
push
loope
fcmove
sub
jmp
cmp
and
mov
jg
and
pop
adc
cmp
and
and
mov
divl
popa
into
pusha
dec
lret
les
cmpsb
js
xor
lcall
je
push
pop
sub
scas
int
cli
rcrb
mov
out
jg
mov
mov
fcmovnb
mov
xchg
popa
mov
add
push
subl
mov
int
jmp
adc
popf
loop
lret
rorw
mov
aad
sahf
sub
mov
ss
outsl
pushf
xchg
xor
sbb
sar
jo
sub
lods
adc
pusha
cmp
cmc
mov
psubd
adc
out
cmp
std
sub
inc
out
into
dec
ret
dec
loop
xor
add
cld
jl
adc
pop
imul
pop
int
sub
sbb
mov
mov
xlat
sbb
cli
mov
push
out
sti
jle
lahf
inc
and
mov
insl
xchg
fmull
mov
inc
not
lock
mov
pop
mov
bound
cs
cmp
adc
mov
aaa
pushf
sbb
jmp
cmp
cmp
nop
and
jb
lahf
cmp
sub
adc
add
add
cmp
push
xchg
in
mov
add
xor
jecxz
aad
cltd
dec
mov
bound
das
fldl
mov
inc
jmp
dec
push
mov
mov
add
not
sbb
push
pop
pop
std
cmp
or
cmp
sarb
adc
cld
clc
daa
push
lret
shrl
mov
test
lock
dec
pop
movsb
bound
les
sub
aam
fldt
jge
pop
lods
stc
mov
dec
bound
mov
mov
popa
lock
lods
and
sub
mov
mov
movsl
mov
sbb
add
out
mov
mov
jle
scas
jns
fst
or
xchg
push
int3
sbb
dec
sbb
mov
pop
pop
bound
pop
sub
out
sub
jns
mov
outsl
aaa
xor
cli
add
push
das
mov
and
jns
test
add
ja
dec
inc
dec
adc
or
testb
cmp
push
cld
cmpsb
ret
insl
mov
shrb
out
or
lret
jns
fmul
in
out
enter
push
mov
out
js
add
xor
ficom
or
dec
mov
jge
sbb
xor
cmp
mov
and
pop
add
jmp
push
mov
out
push
cmp
test
inc
int
mov
mov
insb
and
mov
jle
fs
in
imul
iret
andnps
sbbb
imul
inc
pop
inc
lret
xor
popf
rcll
adc
stos
inc
arpl
ficoml
jno
pop
imul
outsb
scas
and
sub
adc
xchg
mov
fistl
leave
lock
fcomi
mov
xor
inc
xchg
push
lea
or
sahf
or
incb
pop
aam
lahf
faddp
in
cli
lds
call
scas
and
and
mov
sbb
movsb
addr16
push
sahf
and
jge
divl
sbb
fnstenv
jno
aaa
adc
inc
dec
jns
lock
pop
mov
xor
jb
out
lahf
mov
mov
test
push
loope
inc
outsb
repnz
outsb
outsb
stos
in
mov
enter
pop
insl
shll
jae
fsub
sti
xor
push
cmp
loop
loope,pt
xor
add
hlt
and
push
dec
add
push
loop
xor
rcl
adc
pop
jmp
mov
pop
and
xchg
and
sub
adc
or
shlb
jmp
mov
mov
adc
push
pop
push
daa
es
sub
cs
pop
push
out
lret
mov
mov
lods
sbb
xor
int
pop
test
ret
sbbb
outsl
jnp
mov
stc
daa
in
fs
jne
rclb
jb
pop
inc
ljmp
push
nop
cli
and
out
adc
cmpsl
cmp
mov
or
cmpsb
and
xor
sbb
lods
adc
mov
adc
idiv
add
lret
cmp
es
xlat
pop
out
sub
pop
mov
aad
popa
sti
sub
inc
mov
loopne
addr16
cmc
repz
or
mov
repz
xchg
and
adc
xor
pop
jno
mov
pushf
insb
add
push
fldcw
push
jl
mov
sti
nop
cld
icebp
hlt
aas
xor
jb
popl
je
bound
jecxz
lea
ja
lea
test
call
insb
nop
lahf
mov
js
subl
fldt
std
pop
push
jmp
adc
add
out
adc
inc
mov
jne
insb
and
xor
roll
js
popa
push
push
std
loope
jb
jmp
fnstsw
daa
in
cld
and
je
xor
mov
pop
mov
jne
pop
negl
pop
ret
sbb
sub
cs
ss
ret
or
sbb
xor
insl
jle
adc
xchg
mov
ljmp
lahf
lods
nop
sub
mov
xchg
fistpl
mov
ja
inc
add
lock
inc
fistpl
push
jb
push
nop
and
push
nop
rolb
jle
and
pop
rorl
stos
push
jb
out
mov
movsb
xchg
call
ljmp
sub
xor
sub
xor
lret
pop
mov
sub
call
test
mov
dec
dec
add
or
add
fwait
pop
cwtl
mov
lahf
sbb
in
add
or
out
ljmp
jns
xchg
hlt
in
repnz
xchg
stc
mov
push
mov
mov
gs
mov
scas
and
into
mov
sti
dec
mov
idiv
mov
repnz
fildll
es
sbb
xchg
and
adc
mov
lock
sub
movsb
or
subl
mov
pop
jle
fsts
in
cs
pusha
mov
in
ret
jle
mov
into
out
jmp
push
popf
call
and
aad
lret
xchg
xorb
sbb
and
loop
ljmp
xor
adc
stos
mov
cs
in
leave
addr16
hlt
add
incl
mov
mov
or
scas
xchg
add
pop
hlt
int3
addb
fisub
mov
adc
scas
add
in
xchg
mov
shrl
push
in
hlt
out
cmpl
mov
fwait
sbb
fsubl
cmp
sarb
and
jno
sbb
jl
sbb
dec
call
jmp
lods
jo
into
add
rcr
aas
push
add
pop
push
xor
cld
cmp
jno
xchg
ret
pop
lods
aam
push
push
pop
loope
mov
sub
rorb
ds
inc
movsl
adc
cmpsb
push
nopl
ss
xor
decl
pop
adc
test
mov
ljmp
pop
mov
sub
aas
data16
rorb
dec
pop
nop
rolb
daa
xorl
mov
hlt
and
lret
xor
mov
dec
mov
negl
inc
pop
lret
jbe
jge
in
mov
xor
sahf
jo
push
test
daa
mov
outsl
pop
aad
loop
jae
stc
fsubrp
push
fs
jb
adc
hlt
inc
ss
mov
pushl
jle
sbb
idiv
push
fs
cmp
inc
sti
or
or
cmc
fsubrs
cmpsb
xor
data16
dec
loope
jl
rcll
testb
cmpl
test
decl
fwait
mov
sub
iret
or
inc
push
xchg
fcompl
dec
lods
das
stos
gs
push
inc
loopne
dec
xor
inc
sbb
imul
push
dec
inc
xchg
in
cli
sbb
imul
mov
fnstcw
adc
xchg
mov
cmp
nop
xlat
inc
test
jb
mov
dec
mov
xchg
jecxz
xor
cmc
lea
ss
mov
repnz
xor
pop
mov
pop
adc
movsb
jl
repnz
mov
sub
cmpsb
and
mov
rcll
insl
std
mov
mov
aam
mov
dec
fsub
lret
lahf
xor
stos
lds
jp
out
loop
add
push
inc
sub
test
sbb
pusha
ret
fwait
jge
es
sub
or
dec
rcrb
xchg
lret
xchg
pop
and
cmp
arpl
cltd
sub
mov
lret
push
add
sti
cltd
sub
btr
imulb
push
xor
cli
mov
pop
pop
in
loope
mov
xor
shll
mov
popa
stos
cmc
jle
out
icebp
cmpsl
mov
outsb
fldt
out
xor
cmpsl
or
in
mov
sub
ret
dec
lret
test
or
jnp
pop
dec
negb
inc
leave
mov
or
out
fwait
inc
mov
xor
push
mov
shlb
scas
idivb
icebp
and
mov
aas
xlat
mov
stos
in
push
add
dec
dec
jmp
popf
fstpt
test
mov
scas
inc
mov
pop
xor
dec
xchg
lcall
sub
rclb
xchg
jl
jmp
in
mov
push
out
and
sub
lahf
insl
cwtl
push
cmp
and
inc
insb
imulb
jnp
jg
jle
inc
xor
cmp
pusha
jno
push
iret
int
pop
ret
sbbb
ja
je
or
enter
xchg
push
push
mov
es
popa
push
sti
fidivrl
rclb
addr16
scas
ljmp
adc
es
adcl
sti
arpl
inc
inc
mov
inc
sub
push
or
mov
iret
aaa
adc
imul
pop
xor
data16
dec
jl
arpl
inc
sub
xor
xchg
mov
cmp
repz
xlat
jbe
xor
sbb
test
jno
and
jl
dec
rorl
xchg
movsl
push
pop
cmp
movsb
pop
jo
or
enter
icebp
test
add
arpl
into
cmpsb
je
and
pop
jmp
enter
pop
jmp
es
popa
ret
loope
pop
leave
sub
test
daa
mov
movsl
sbb
dec
and
adc
add
cmp
add
insb
icebp
xor
jle
xchg
cltd
sub
cmp
js
mov
and
push
lea
movsl
fcoml
or
in
imul
addr16
jg
addr16
mov
push
xor
add
mov
jge
mov
int
loope
sub
leave
neg
mov
lret
adc
adc
rorb
adc
sahf
adc
jbe
xchg
cmp
cmp
loop
cmp
xchg
popf
dec
xorb
jo
aas
ss
loop
cmp
es
fsubp
sbb
cli
mov
inc
cmp
movsl
lea
xchg
mov
into
dec
xchg
cmc
lahf
insb
xor
popl
pop
jno
adc
mov
or
jg
add
cli
out
xor
mov
pop
sub
addr16
in
stos
stc
or
mov
outsl
gs
loopne
dec
dec
dec
jge
push
inc
xor
icebp
fxtract
into
rol
pop
mov
and
imul
cmpsb
push
adc
and
into
adc
shl
jmp
xchg
test
aad
jmp
nop
mov
pop
aas
movsl
das
imul
outsl
dec
je
mov
and
or
push
mov
ret
into
dec
mov
cmp
sbbl
mov
pop
pop
cmp
inc
cmpsl
icebp
inc
cmp
leave
das
aaa
ljmp
jb
and
mov
jecxz
xchg
mul
js
std
das
cmc
mov
cmp
stos
mov
aad
push
lret
push
dec
xchg
mov
fucomi
mov
sbb
lock
fs
add
push
sub
mov
in
rol
sub
jg
ss
insl
dec
inc
fimul
scas
and
xchg
or
popa
xor
mov
mov
mov
xchg
xlat
sysexit
xchg
inc
add
test
pop
inc
mov
clc
mulb
fisttpll
clc
xchg
mov
cs
sti
inc
sarl
fcomps
out
push
iret
pop
xchg
xor
pop
ljmp
xor
jp
xor
push
mov
xchg
inc
mov
test
in
popa
ja
in
dec
jmp
outsb
cld
or
pushf
pusha
fwait
jne
insb
push
in
movsl
add
and
out
test
cmp
jns
repnz
in
repz
xchg
xchg
or
mov
add
adc
mov
jp
aaa
pusha
mov
rcrl
and
cs
sbb
popf
jne
jo
mov
jns
fucomip
push
rcll
adcl
out
jno
out
cs
sub
lcall
stos
psubsb
and
xchg
xor
jmp
jecxz
xor
in
in
pusha
or
int
sub
je
pop
adc
jno
jg
in
mov
push
mov
loop
ss
jno
loopne
in
fidivl
sbb
jb
pop
imul
cld
scas
dec
xchg
push
fs
ja
je
stos
repnz
stc
leave
push
jg
hlt
cltd
dec
mov
inc
push
or
and
das
or
int
add
push
int3
push
add
xchg
fisubr
cmp
inc
or
scas
rorb
and
cmp
aas
fcoml
push
mov
jbe
pop
lds
push
bound
rcll
daa
cmp
pop
cmp
push
cmpl
dec
out
push
push
add
xor
sbbl
adc
cmpsl
mov
test
lret
mov
repnz
cmpsb
lret
in
aas
adc
enter
pop
sub
push
and
loope
pop
into
sub
or
out
ret
dec
dec
movsl
and
inc
fs
es
pop
outsb
jo
incb
xor
jno
pop
pusha
ret
idivl
xor
mov
mov
fdivr
dec
je
fsub
and
adc
ss
pop
jg
stos
ss
popf
movsb
mov
ds
mov
push
rolb
xor
sub
inc
jne
negl
jnp
shrl
fwait
sbb
jno
test
test
subb
jecxz
push
lock
or
sub
mov
sub
cmp
loope
mov
pop
push
xor
xor
fisubl
or
jl
into
fimull
hlt
cmc
or
cmp
jecxz
js
aas
adc
cwtl
adc
inc
scas
add
push
dec
data16
xlat
lods
sbb
mov
xor
xlat
sbb
sub
je
mov
push
je
sti
cmp
lret
bnd
xchg
loopne
pop
xchg
dec
fmul
out
inc
inc
fwait
out
fldcw
jbe
test
das
rep
clc
xchg
push
negb
loope
aaa
lahf
and
xchg
adc
adc
jmp
xor
dec
aad
cmp
nop
lea
mov
inc
mov
jb
xchg
push
dec
xchg
js
je
imul
out
push
outsb
adc
lea
mov
mov
push
sti
mov
movsb
push
xorl
mov
pop
dec
sub
lea
das
mov
inc
mov
lcall
xor
imulb
fsubr
std
imul
cmpsl
aaa
cmp
lods
xor
jle
jge
inc
mov
pop
sub
xor
inc
pop
and
rclb
rolb
sub
mov
mov
xlat
ret
mov
lret
mov
dec
mov
push
xchg
dec
cltd
mov
add
jo
lods
sar
idivb
push
mov
xchg
in
push
icebp
pop
test
inc
mov
jl
push
mov
js
clc
iret
mov
xchg
sub
sbb
push
inc
pop
sar
loop
shl
xchg
out
mov
stos
xchg
jns
addr16
and
push
or
xor
scas
or
adc
xchg
nop
xor
xor
mov
cwtl
mov
ja
pop
cmpsl
dec
fmull
stos
inc
dec
and
cmpsl
es
fwait
movsb
inc
adc
mov
add
cmp
lods
out
xchg
bound
xchg
push
in
icebp
xor
sbb
in
mov
mov
push
fstpt
jp
mov
sbb
mov
cmp
ja
dec
gs
dec
inc
aad
ficoml
xchg
movsl
push
jmp
addl
jge
fsub
jns
sub
xchg
jmp
leave
stos
outsb
adc
xor
jnp
idivl
icebp
sbb
pusha
cmpsl
dec
dec
iret
mov
ret
leave
pop
inc
xchg
mov
jae
jo
push
dec
jg
popf
pop
test
mov
pop
sub
imull
xchg
test
sbb
inc
imul
rclb
test
sti
out
mov
daa
scas
es
int3
pop
mov
arpl
push
inc
xchg
or
or
cld
ds
aaa
mov
jmp
stc
imul
pop
nop
lock
ficom
popa
lds
add
lahf
cld
lods
and
test
jmp
fiaddl
dec
jbe
stc
and
cmp
daa
aaa
mov
cmp
push
pop
jno
mov
int3
dec
xor
mov
xor
faddp
and
jp
xor
xchg
or
addl
in
and
pop
imul
hlt
loope
or
cmp
fistl
sub
stos
pop
lret
jno
int
xor
aam
xor
sbb
mov
data16
mov
pop
in
lcall
xor
cmpsl
fidivr
sub
pop
mov
mov
adc
adc
pop
repnz
mov
dec
mov
xchg
push
fisub
fwait
or
xor
dec
lret
push
subl
pop
das
test
roll
mov
xlat
sbb
movsb
test
push
or
cmp
fadds
sti
pop
pop
stc
add
inc
fs
jo
adc
mov
ss
insw
fcomps
in
cli
out
pop
mov
cmp
jecxz
or
mov
mov
adc
xor
jge
adc
mov
adc
push
rolb
lds
sbb
adc
int3
sub
shr
ret
jmp
mov
gs
rcll
loopne
cmpl
fldenv
cmp
jno
repz
jmp
icebp
jb
cmp
rol
push
adc
pop
cmp
xchg
inc
pushf
jb
xor
es
push
cs
out
aad
jmp
outsb
aas
jecxz
pop
jb
push
mov
es
mov
jecxz
lds
adc
inc
lds
mov
repz
enter
aaa
jno
addr16
pop
mov
mov
inc
das
xchg
cmp
push
push
mov
fldcw
imul
in
imulb
push
jge
cmpsb
cwtl
jmp
cmpsl
ss
cmc
icebp
sbbl
lret
in
test
mov
repnz
lock
pop
aas
sub
jecxz
arpl
aas
adc
jnp
sbb
dec
cmpsl
mov
cmp
cld
insl
sbb
dec
mov
push
xchg
mov
ljmp
dec
lods
cmp
lods
mov
cmp
jne
mov
xor
add
mov
jb
call
push
jle
cmp
lcall
xchg
popf
sbb
push
shll
dec
pop
jge
pusha
stos
ret
out
sbb
mov
push
call
cmp
xor
jmp
push
add
mov
aad
xchg
sub
lcall
mov
in
sub
dec
out
or
test
push
sub
add
pusha
out
data16
inc
push
jns
fbstp
xchg
xor
sub
mov
jp
pop
addr16
jno
jp
jb
mov
xchg
mov
adc
mov
dec
adc
arpl
jmp
dec
andl
cld
mov
fmuls
nop
add
adc
dec
cli
mov
jnp
mov
ss
in
sub
inc
sti
mov
ljmp
pop
jle
rolb
jae
stos
sti
push
cpuid
fcomps
cmp
inc
repnz
ficomp
enter
sahf
cli
les
repnz
adc
jg
mov
jp
scas
leave
inc
fidivrl
arpl
mov
or
ja
aaa
dec
mov
or
mov
out
int3
sub
cmp
fdivp
ja
test
jge
cld
scas
jle
sub
dec
lods
cmp
outsb
or
sub
mov
push
add
sbb
hlt
daa
ss
cmp
jnp
jno
pop
or
or
out
std
push
enter
arpl
jo
inc
mov
push
dec
jle
test
popa
fimul
inc
adc
lods
cmpsb
std
clc
insl
in
or
mov
push
push
mov
jg
jb
push
ds
pop
inc
movsl
xor
cmp
test
sbb
add
push
jmp
fistpll
scas
in
jge
test
jne
sahf
cmc
inc
lcall
mov
sub
mov
xchg
in
push
push
mov
imul
xchg
repz
stc
mov
xor
shrb
mov
notl
xor
rcr
and
pop
and
sahf
cld
decb
and
shrb
mov
stc
mov
insl
and
pop
sub
cmp
push
adc
cli
and
xor
cltd
cmp
shrb
mov
jp
xor
roll
mov
pop
inc
inc
adc
sarb
cmpsl
or
cmp
mov
in
in
sti
cwtl
mov
jmp
fidivrl
dec
lcall
fstps
clc
push
repz
or
sbb
xchg
popf
xchg
adc
fwait
sahf
jmp
leave
sub
aad
call
aas
leave
sub
movsb
inc
mov
jg
cmc
je
mov
test
push
sbb
call
daa
push
test
pop
cmpsl
dec
and
inc
fistl
inc
pop
inc
aad
inc
cmp
inc
inc
mov
fldcw
outsb
dec
mov
mov
add
lock
decl
cmpsl
xor
adc
icebp
pop
pop
push
cld
cli
sub
mov
je
lock
jmp
pop
cmc
inc
mov
pop
sub
mov
aam
call
sub
insl
add
dec
lods
rorl
mov
sahf
popa
jp
fisubrl
cmp
and
push
push
rorl
push
or
add
adc
adc
inc
mov
inc
push
xor
std
std
push
sarl
ret
mov
push
out
jge
jo
pop
adc
push
mov
dec
add
or
jbe
or
aam
aaa
mov
dec
data16
test
or
ja
and
ret
inc
and
mov
fwait
add
lahf
push
into
mov
aas
add
inc
out
inc
test
fsubs
jns
int3
fsubp
out
lods
xchg
test
and
out
andl
addr16
adc
ret
push
gs
pop
jb
dec
adc
mov
inc
icebp
ljmp
inc
cld
xchg
sbb
fsub
jg
mov
or
inc
push
stos
push
fs
jnp
fnstcw
outsl
aad
push
jecxz
pusha
fnstsw
adc
repnz
scas
pop
mov
sbb
mov
push
sarb
mov
stos
sub
inc
pop
adc
fimull
xchg
xor
mov
lea
out
jbe
sub
scas
fstl
mov
inc
mov
int
ror
std
hlt
jp
cmp
push
fiadd
test
or
repnz
mov
or
mov
sub
pop
jl
pop
out
lock
xchg
outsl
sub
jg
repnz
es
je
cmp
movsb
test
or
jbe
jge
mov
sbb
movsl
daa
xor
push
add
mov
jl
inc
mov
adc
je
sub
jge
xchg
into
cmc
lahf
insl
cmp
jae
mov
lahf
push
sub
cli
inc
lahf
ror
cmpb
enter
pop
out
adc
xchg
in
loope
dec
or
xchg
mov
and
movsb
mov
mov
sbb
lea
xor
and
mov
pop
pusha
js
ficompl
pop
sbb
fwait
adc
and
mov
outsb
scas
mov
fnop
cltd
ret
lea
mov
clc
dec
mov
es
mov
dec
sbb
cltd
dec
nop
sub
mov
lret
or
mov
ds
sbb
lret
mov
test
jmp
sbb
and
stc
jno
jo
lods
mov
fs
mov
cmp
adc
arpl
adc
cmp
push
jbe
xor
dec
cmp
jno
or
mov
cmc
mov
gs
aad
push
adc
cmpsl
inc
adc
jle
add
fsubl
enter
daa
mov
in
xlat
jo
sub
mov
mov
push
fstpt
pop
daa
nop
gs
inc
cmc
loopne
push
outsb
dec
stc
lret
movsl
inc
jl
xchg
rol
movsb
les
shrb
scas
mov
aas
xlat
cmc
cmp
jge
pop
mov
cli
add
mov
sub
pop
js
nop
push
or
imull
dec
imulb
and
jecxz
jp
sbb
jl
xchg
cmpsl
add
scas
mov
out
jge
fsubs
and
fildl
inc
mov
ret
inc
adc
das
dec
add
mov
out
es
rcrl
cmp
std
lret
pop
cmp
xor
mov
xor
idiv
and
sarb
mov
pop
or
inc
pop
adc
jge
int3
rorb
add
cmp
ret
data16
cs
imul
push
ss
cmpsl
mov
xchg
push
xchg
dec
ljmp
mov
mov
inc
sub
and
icebp
fs
cmpxchg
pushf
add
test
ret
add
push
fucomp
arpl
xchg
sbb
rcr
pop
shll
stos
mov
hlt
dec
xchg
dec
es
mov
cld
call
mov
or
sbb
xor
dec
lret
mov
cmp
cld
dec
int
fisubrl
ss
dec
mov
sub
mov
mov
addr16
jno
mov
inc
insl
add
out
and
int3
bound
vmwrite
mov
xchg
rcl
xchg
xchg
fildl
pop
lock
iret
addr16
cmp
fnsave
rcr
rorl
dec
or
adc
fbld
xchg
push
cmp
jmp
in
inc
subl
jmp
add
push
sub
xchg
mov
mov
dec
and
sbb
aam
lahf
jnp
jle
pushf
cmc
in
add
pusha
js
ljmp
adc
push
inc
stos
add
vpsubd
xchg
inc
rcrb
js
inc
fmul
data16
sbb
xchg
mov
sbb
int3
ret
imul
fldenv
adc
enter
mov
xor
cltd
hlt
lds
adc
or
insl
cmp
movb
or
js
add
lods
inc
int3
add
scas
pop
sbb
pop
cmp
push
mov
mov
jns
cmp
xchg
and
sbb
sbb
cmp
push
jbe
jbe
mov
jge
inc
add
mov
inc
ret
loopne
jno
insl
and
dec
add
mov
arpl
out
jo
lahf
mov
mov
testl
mov
fistpl
xlat
pop
es
push
es
pushf
mov
pop
cmp
cmp
ja
aas
push
orb
inc
fstps
fisubl
add
sub
fxtract
jg
gs
addr16
cld
cmpsl
xchg
js
aad
pop
pushf
movsb
mov
push
inc
xchg
test
sub
lods
stos
adc
mov
loope
mov
sahf
call
mov
or
lret
adc
add
movsl
notl
fistpl
pop
popl
hlt
sbb
push
sahf
inc
pop
and
or
sbbb
shrb
add
mov
vmovapd
cmp
sti
fldt
cmp
int
xor
cli
xchg
add
cmp
or
xchg
mov
js
xor
lods
int
or
int3
imul
xchg
add
inc
inc
pop
test
mov
repz
adc
cs
mov
ret
sti
idivb
jle
lret
gs
adc
loopne
addr16
dec
pop
sub
mov
sub
repz
repnz
jbe
in
data16
fwait
notl
adc
in
pushf
jae
insl
jmp
insb
cmpsb
cs
cmp
nop
stc
shlb
jb
lret
insl
push
jmp
jecxz
mov
pop
cli
jne
call
movsl
out
mov
mov
cmp
mov
mov
out
mov
inc
ror
das
sub
adc
jbe
add
mov
divb
icebp
and
cwtl
sbb
fwait
cmpsl
xor
int3
mov
or
aam
cmp
sbb
jg
jmp
push
movsb
sub
pushf
or
pushf
fwait
cld
rcrb
sub
imul
loope
ret
cmc
xor
es
insl
iret
mov
dec
mov
out
pop
ljmp
imul
push
mov
ret
aas
sbb
mov
aas
add
in
test
mov
push
xlat
pop
fisttpll
and
test
fildl
push
shrl
inc
pop
jle
bts
loopne
xchg
xchg
pushf
ficoml
mov
xchg
or
fwait
xor
pusha
mov
cmp
imul
cmc
dec
test
or
push
sub
fwait
pusha
xchg
jo
adc
mov
add
and
clc
xchg
jns
xchg
inc
in
xor
mov
rol
cmp
leave
pop
stos
mov
jmp
sbb
sti
enter
sub
dec
fcom
sub
jbe
mov
daa
aad
sbbl
xchg
icebp
leave
sbb
inc
dec
loop
scas
cmp
cmpl
js
sub
add
adc
mov
mov
jnp
sub
fsub
sbbl
pop
fsub
ret
mov
and
mov
sti
jae
out
outsl
push
pop
ret
stc
cmp
ljmp
fisubrl
addr16
sbb
cmc
dec
imul
scas
cmp
push
imul
mov
jae
inc
leave
test
push
hlt
adc
imul
int3
scas
or
call
outsb
cmpsb
or
in
add
mov
in
inc
pop
dec
add
cmp
lea
pop
scas
sbb
and
mov
xlat
movsb
mov
and
cmpsl
jge
mov
es
xor
jae
mov
loopne
hlt
dec
in
out
decl
cs
push
jno
fnsave
dec
daa
repz
stos
out
push
xor
fwait
push
ret
inc
mov
and
enter
pop
gs
cmp
push
loope
push
mov
cmp
ds
fwait
imul
aas
xor
mov
clc
stc
add
xchg
outsb
xor
je
pop
and
xchg
js
arpl
pop
sbb
lcall
xchg
push
popa
imulb
xchg
xchg
xchg
lods
adc
jge
lds
cmp
mov
std
sbb
ds
cmpsb
int
fimul
sub
dec
int3
lret
cltd
rcrl
mov
sahf
in
cmp
xor
shrb
fildll
pop
fs
adc
imul
nop
int
fmuls
push
mov
xor
pop
ret
cmp
push
fwait
or
adc
pop
xor
enter
mov
imul
adc
adc
or
push
imul
sbb
in
sub
jmp
mov
inc
in
loopne
frstpm(287
dec
mov
xchg
inc
mov
xchg
les
lret
nop
xchg
cmp
jb
or
dec
pop
or
loope
repz
pushf
push
fisubrl
jmp
in
cs
mov
stos
nop
aam
test
jb
pop
mov
in
inc
je
mov
jecxz
jne,pt
pop
xchg
popa
sub
call
fs
xchg
and
push
dec
jecxz
xchg
fninit
in
pop
cs
ja
shll
inc
fadd
sbb
or
icebp
mov
add
xchg
dec
idivb
outsb
std
sbb
adc
daa
lret
icebp
fisttp
leave
lret
test
orl
push
mov
pop
mov
xlat
mov
aam
fsubrl
inc
jns
dec
les
mov
lds
sub
xchg
test
inc
ljmp
dec
lods
call
add
mov
lret
mov
outsl
mov
mov
test
lock
push
mov
ds
mulb
aas
xchg
jne
push
push
push
rol
fcompl
sub
push
stos
jle
shr
cmpsb
mov
int3
push
imul
jmp
xchg
or
les
lds
ficom
lahf
dec
fwait
lock
test
pop
sbb
push
xor
inc
ljmp
fwait
adc
add
ret
mov
mov
xchg
nop
sbb
push
in
clc
xchg
jno
inc
mov
test
pop
out
loope
xchg
sbb
mov
sahf
clc
mov
fs
insl
dec
mov
cmp
cmpsl
fbld
mov
xchg
jp
sbb
or
cli
sub
jl
push
push
hlt
cmp
rcrl
insb
jecxz
add
mov
scas
in
data16
scas
jge
iret
data16
pop
pop
icebp
mov
xchg
jae
cmp
sbb
jno
and
enter
rcll
je
hlt
imul
scas
lahf
xchg
fstl
inc
cmpsl
aas
mov
hlt
adc
pop
inc
and
pop
cmp
arpl
stc
faddl
push
ret
or
arpl
ja
mov
cmp
pop
pop
jnp
enter
stos
lds
and
jmp
mov
jns
mov
movsb
dec
push
push
push
gs
aas
jbe
xlat
jg
in
push
fstpl
xor
loop
cmp
adc
jno
push
pop
jl
scas
pop
dec
pusha
and
push
push
adc
xor
movsl
icebp
sbb
cltd
test
push
lea
inc
dec
add
cmpsb
or
mov
enter
pop
movsb
outsb
subl
std
loope
mov
lahf
cmp
das
movsb
ds
xor
jne
pushf
sahf
adc
shl
loopne
dec
cs
pop
mov
ja
dec
jmp
or
repnz
test
lcall
push
out
mov
fdivr
adc
sub
dec
outsb
fsubrs
adc
pop
movsb
jle
jbe
aas
mov
xlat
popf
jne
mov
fcom
and
xor
sub
into
sti
scas
sub
sahf
ret
pusha
sub
xor
mov
sbb
mov
test
mov
adcb
outsl
push
test
stc
xchg
push
lret
fs
cmpsl
std
adc
push
outsb
cmp
inc
in
int3
out
inc
hlt
cli
in
mov
pusha
cmp
jge
or
out
adc
xorl
xchg
iret
pop
xor
adc
mov
ret
dec
in
lods
sub
mov
lret
xchg
sub
mov
cwtl
mov
sti
push
addr16
clc
add
fiadd
dec
push
in
push
fnstenv
adc
pop
repz
xchg
cld
sbb
inc
aad
cltd
js
pop
mov
and
outsl
jmp
and
aad
cmp
nop
scas
mov
mov
dec
pop
and
pop
jecxz
push
lock
and
jle
and
sbb
mov
inc
cmpl
nop
pop
pop
rcll
inc
pop
xchg
das
ljmp
mov
nop
popl
or
mov
mov
flds
cmpsl
xor
mov
mov
lods
cld
cmpsb
mov
fimul
loop
pop
lock
sahf
adc
ficoml
rolb
inc
cli
sub
mov
aam
sub
adc
cmp
dec
cwtl
rcll
mov
sbb
jp
lods
push
cld
mov
mov
sarl
jp
into
xchg
cltd
jecxz
imul
mull
clc
xor
add
leave
fcomps
pop
aam
mov
out
or
es
inc
bound
inc
arpl
in
mov
xor
jg
mov
inc
mov
stos
test
inc
push
ja
pop
mov
mov
jnp
xorl
fwait
mov
sub
mov
out
shll
jns
out
in
int
xchg
sar
mov
mov
pushf
pop
and
andb
push
jp
sarb
mov
shr
mov
jne
addr16
mov
push
xchg
xchg
cmp
das
out
xchg
inc
lods
testl
neg
cmpsb
or
fs
xor
cld
stos
xor
and
xchg
jnp
fmull
pusha
dec
nop
xchg
iret
lds
push
pop
xchg
and
inc
int3
xchg
push
ficomp
leave
popf
inc
flds
inc
pop
or
xchg
int3
int3
sbb
lds
call
pop
push
push
mov
adc
adc
leave
xchg
repz
hlt
cmpsb
or
inc
movsb
in
or
fiadd
or
cmp
int3
ret
pop
cvtdq2ps
lds
rolb
scas
fldcw
and
lahf
dec
cmp
push
movsb
aad
push
mov
jbe
sub
jge
push
xchg
sbb
mov
cmp
mov
idivl
cmp
xlat
rorl
aaa
pushl
add
cwtl
lahf
jmp
or
test
pop
repnz
inc
fcomi
cmpsb
mov
pop
in
nop
and
pop
jecxz
test
or
loope
sbbb
mov
cmp
mov
xor
movsl
push
jns
and
mov
jl
jecxz
inc
sbb
imul
mov
inc
add
lock
jno
lcall
or
lcall
inc
fsubrl
ss
outsb
cmp
imul
adc
shrl
xchg
mov
mov
lahf
push
inc
and
int
std
jl
popf
push
mov
lret
test
int3
stc
or
sahf
negb
sbb
mov
loope
popf
mov
sub
loop
mov
stc
dec
and
inc
mov
call
les
cmp
push
icebp
out
mov
stc
xor
jg
addr16
or
jl
into
psubw
xor
add
adcl
iret
add
push
xchg
data16
aad
push
or
hlt
xchg
inc
xlat
jno
sub
fildl
pop
xchg
in
add
cmp
add
out
pusha
gs
js
push
add
inc
enter
lods
clc
push
roll
iret
xchg
mov
dec
xor
jle
mov
sbb
pop
outsl
jb
adc
jl
pushf
je
fucomi
shlb
cs
fs
inc
rclb
popf
les
jb
adc
dec
shrb
sub
and
cmp
call
loop
cltd
mov
gs
mov
in
pop
je
jl
fisttp
imul
push
sbb
fwait
inc
popa
and
add
mov
incl
std
addr16
cwtl
dec
es
cmpsl
xor
mov
frstor
shr
fcmove
xchg
mov
fnop
lock
xchg
pop
stc
xor
rcl
fidivr
aam
into
ja
mov
in
fwait
insl
test
in
dec
xchg
imulb
ljmp
lods
mov
fcoms
and
pop
jae
cvtps2pi
add
push
scas
cltd
sbb
mov
adc
xchg
insb
mov
jl
cmp
jo
dec
pop
jg
stos
pop
scas
out
insb
pop
xchg
push
pop
push
and
sbb
fs
sti
xor
mov
or
std
inc
xor
mov
xchg
dec
imul
ja
xor
orl
xchg
or
sbb
fwait
in
push
outsl
push
std
sub
add
outsb
fsubr
mov
pop
in
jns
or
in
pop
xchg
xchg
pavgw
lock
mov
rclb
nop
add
xchg
jl
inc
mov
cmpsl
dec
subl
push
mov
mov
fnstsw
repz
es
pusha
andl
out
fstpt
jb
cmp
stos
cmpsl
lret
mov
insb
mov
fisubl
stc
fdiv
in
pop
je
in
cwtl
iret
and
enter
push
pop
enter
xlat
pop
pop
jae
cltd
in
mov
decl
mov
fcom
cwtl
fcmove
jnp
xchg
out
test
lret
imul
imul
clc
mov
mov
insb
jecxz
leave
or
sub
arpl
adc
cmpsl
push
cmp
pop
call
mov
add
pop
sub
scas
sub
pop
add
lds
mov
pop
and
scas
mov
imul
idivl
adc
enter
mulb
jge
js
sbb
nop
sarl
sbb
jl
sbb
ds
sbb
sbb
jb
or
ret
or
jno
test
in
inc
push
in
cmpsb
punpcklbw
enter
pop
and
mul
clc
addr16
sub
add
cmp
bound
movsl
pop
ljmp
pop
out
notb
sbb
pop
adc
adc
jg
pop
cwtl
int3
test
xchg
cwtl
xor
lcall
fcoml
sub
outsb
sahf
stc
adcl
mov
in
loope
mov
mov
repnz
push
dec
mov
int
loop
sub
mov
or
jp
shll
mov
and
sahf
into
xchg
test
push
outsl
adc
jmp
stc
add
in
aaa
jno
ss
stos
push
cmp
mov
mov
cli
push
sbb
xor
nop
cmp
push
or
pop
clc
cmc
sahf
and
xor
jb
pop
jo
sub
push
xlat
enter
push
adc
pop
roll
fisubrl
lods
push
mov
mov
repnz
sbb
popa
sub
mov
outsb
pop
imul
bound
or
daa
gs
das
loopne
mov
dec
aam
jno
fucomi
pop
scas
faddl
sahf
repz
sbb
mov
or
and
pop
pushf
pop
lea
scas
in
cs
sbb
nop
gs
cmp
std
jb
aas
sti
dec
dec
aam
je
popf
ja
bound
sub
sahf
lea
mov
mov
mov
faddl
movsb
ljmp
push
pop
pop
lret
lock
data16
std
inc
sub
fildl
mov
cmpsb
into
scas
shrl
inc
pop
std
push
pop
pop
cwtl
or
bound
ror
icebp
fs
cld
cld
stc
push
lret
cmc
clc
mov
dec
jmp
jo
cmp
or
push
shrb
aam
lds
shrl
test
imul
mov
ds
test
imul
and
clc
call
sbb
add
push
orl
mov
xor
shl
imul
cmpsl
and
sbb
push
rol
jp
pop
sub
leave
stos
dec
sbb
out
iret
adc
aam
cld
mov
xor
nop
pop
xor
in
shll
into
cld
dec
ror
pop
test
fidiv
dec
je
imul
inc
pop
fwait
sbb
fistpl
mov
out
jg
bound
xchg
jns
int3
lahf
in
mov
xchg
pop
adc
mov
mov
mov
xchg
pop
push
addr16
idivb
in
mov
imul
dec
test
jmp
je
lcall
sub
sbb
outsl
push
xor
out
cli
pop
sub
insl
stc
pop
push
mov
sbb
ljmp
jnp
pushf
loopne
sbb
ret
insl
aaa
pusha
jg
and
cmpl
fs
or
inc
loop
inc
jae
scas
xor
fs
sbb
mov
push
and
fidivrl
imul
in
imul
or
push
jecxz
repz
add
mov
inc
mov
arpl
add
inc
stos
int3
stc
or
aam
adc
orl
add
leave
into
pop
or
fisubr
fadd
test
loopne
scas
xchg
add
dec
insb
sub
scas
daa
pop
movsb
jmp
test
jbe
xor
loop
sbb
fisub
das
sub
mov
cmp
xchg
mov
dec
lods
nop
mov
std
mov
mov
lahf
daa
insb
xchg
push
adc
xchg
std
inc
stc
movsb
add
pop
cwtl
out
mov
pop
popa
ljmp
mov
cmp
mov
insb
movsl
jmp
fisttpll
or
sbb
test
add
xchg
test
in
rcl
xor
aad
mov
faddl
pop
loopne
lcall
sbb
jmp
mov
outsb
add
rcl
jmp
mov
jmp
mov
jge
and
mov
push
dec
ret
add
notl
push
lret
dec
sar
push
je
sbb
pushf
sahf
jno
sbb
stos
inc
out
andb
clc
loop
sbb
stc
mov
test
ss
xor
je
pop
out
xor
xor
imul
cld
sub
jmp
lods
sub
gs
lret
xor
outsl
pop
dec
aam
daa
push
push
imul
aad
add
adc
mov
ljmp
sub
sub
in
flds
stos
sub
sti
sbb
dec
jbe
dec
xor
mov
aas
into
fstps
jmp
out
nop
repz
adc
sbb
hlt
and
push
sbb
aad
adc
jmp
jo
jmp
insb
push
jp,pn
push
aad
test
aas
fistl
fdivl
sahf
add
mov
in
jecxz
idiv
sub
std
flds
call
pusha
jns
mov
iret
dec
lahf
fcomps
mov
dec
rolb
pop
das
xchg
mov
xor
mov
stc
jle
testb
fstps
lea
icebp
cmp
mov
sbb
mov
icebp
lock
mov
sub
xor
pinsrw
sbb
push
out
insl
push
sub
adc
ljmp
xchg
lods
xchg
sub
in
mov
aam
out
arpl
jmp
xchg
add
adc
mov
mov
jnp
push
xchg
or
fst
inc
add
loop
mov
push
mov
loop
push
rcrl
mov
into
stos
cmp
mov
clc
movl
jmp
adc
mov
mov
adc
aaa
xchg
test
xchg
dec
addr16
test
inc
push
or
inc
xor
inc
add
mov
das
jae
out
pop
adc
add
xor
jo
lods
xorl
push
loop
mov
das
jp
jnp
mov
cmc
aad
shl
jnp
and
dec
inc
shlb
dec
inc
je
lcall
xchg
adc
call
addl
sub
push
bound
and
cmp
jnp
and
in
loop
pusha
sbb
iret
loop
jo
ja
scas
pop
mov
jae
or
push
daa
or
popf
mov
pushf
out
lock
fisubrl
arpl
xchg
xchg
jno
sbb
xor
imul
push
scas
sub
push
sub
insb
mov
adc
inc
hlt
xchg
arpl
cmp
inc
lods
out
stos
or
dec
jno
aaa
inc
dec
or
mov
pop
aaa
nop
xor
or
repz
mov
rclb
scas
jbe
push
and
mov
int
jbe
cmc
push
mov
in
jge
imul
daa
cs
fidivrl
in
imul
adc
mov
sbb
test
loopne
add
adc
adc
inc
xlat
add
test
mov
arpl
in
inc
test
inc
pop
mov
inc
mul
mov
xor
lds
ds
adc
loope
push
sbb
pop
sbb
push
sbb
xchg
add
addr16
lret
out
pop
js
xor
xchg
adc
mov
ret
sbb
xor
lods
outsb
fs
sbb
les
in
repnz
mov
mov
mov
cmp
and
mov
pop
int
pop
dec
sub
hlt
mov
lret
faddp
xchg
test
mov
fcompl
arpl
mov
xor
fsubrl
mov
mov
fs
jo
aad
cld
ss
out
cmp
das
pop
add
or
dec
mov
std
or
call
mov
mov
rorl
enter
scas
jp
adc
cld
scas
imul
fist
add
mov
push
arpl
mov
push
xlat
pop
jmp
inc
fstp
mov
inc
enter
outsb
mov
push
mov
lods
loopne
dec
and
xchg
cmpsb
ljmp
pop
jp
repnz
push
pop
xchg
or
sbb
das
mov
pop
pop
mov
adc
mov
jne
or
fnsave
aad
mov
mov
jp
lds
xor
aaa
adc
je
xor
jecxz
into
scas
cs
or
add
mov
pop
mov
inc
adcl
in
fcmovne
js
pop
pop
adc
arpl
in
adcw
lcall
rorl
js
enter
pop
hlt
jb
jle
xchg
cmpsl
sub
push
mov
adc
cld
push
mov
mov
in
mov
xchg
add
mov
out
js
dec
lock
out
int
sahf
scas
cmp
dec
jl
xlat
adc
dec
test
seta
dec
sub
xor
sarl
cmp
and
cs
cmovp
es
aad
jne
lcall
pop
lret
clc
sbb
jnp
sbb
in
xor
xor
stos
sub
mov
xchg
push
arpl
add
xor
iret
adc
xor
lods
jge
sub
xchg
sahf
and
cmp
dec
pop
xchg
push
inc
mov
push
out
xchg
add
dec
adc
out
cmp
xchg
pop
jns
inc
xchg
in
out
rcll
mov
aas
lds
push
mov
lds
push
push
mov
adc
jne
sti
pop
mov
repz
cmp
data16
or
fistl
ja
out
xchg
xchg
arpl
insl
stos
add
and
vpunpcklqdq
fsubr
jnp
imul
mov
xchg
iret
inc
bound
ret
pop
insl
dec
ds
clc
xor
outsb
cmpsb
test
popf
jecxz
in
dec
jge
inc
push
inc
out
loope
xor
lret
push
test
or
mov
out
push
jno
popf
adc
mov
repnz
inc
leave
jb
xor
rorb
mov
test
sbb
cs
dec
mov
add
sahf
das
int3
outsl
orl
xchg
mov
lds
xchg
sub
push
lods
fsubl
jne
aas
cmp
cmpsb
movsb
add
hlt
jbe
or
cmp
daa
sub
gs
jno
xchg
dec
mov
push
ret
inc
mov
leave
cmp
adc
lahf
gs
mov
test
test
jmp
cwtl
mov
in
sub
add
orl
push
ret
cmp
insl
xchg
je
sarl
lret
aam
movsl
jo
shlb
jl
sbb
jns
inc
das
or
sbb
aam
pop
lea
sub
mov
ret
mov
int
outsb
popa
ficoml
and
std
inc
sub
sbb
cmc
notl
lahf
lock
jg
lcall
lock
test
std
push
push
xor
int
ljmp
into
je
lret
jbe
sub
push
sbb
test
test
or
loop
push
xchg
sub
jno
add
sub
and
cmp
pop
adc
mov
out
mov
fbstp
aam
sarl
lret
push
or
sarl
repz
lea
stos
jnp
int
add
adc
cmp
add
xor
fldenv
lods
push
cmpsl
mov
into
mov
sub
not
in
scas
pop
imul
sbb
adc
gs
lods
push
loopne
cmp
dec
icebp
push
mov
test
std
jnp
repz
cltd
xchg
lret
test
cmp
sahf
adc
je
cmp
or
jmp
enter
or
xchg
push
mov
testb
jb
stc
xchg
dec
scas
sub
je
jp
jecxz
ljmp
lret
or
xchg
mov
sbb
dec
gs
cwtl
fsubrl
pop
add
inc
sti
adc
inc
jle
addr16
inc
pop
pop
mov
ja
shll
and
or
cs
add
test
pop
and
mov
lret
inc
cmpsb
mov
mov
cwtl
ds
rcrl
jne
xchg
and
sub
pusha
dec
aam
mov
sub
pop
scas
mov
dec
jg
ljmp
mov
pop
lods
push
movsb
mov
pop
sti
mov
leave
rorl
cmp
dec
cltd
lret
pop
test
pop
sbb
sbb
repnz
pop
xor
pop
push
push
xchg
sbb
gs
pop
test
inc
stos
sbb
inc
out
clc
incl
xchg
xchg
push
push
loopne
jmp
repz
test
addr16
or
xchg
pop
dec
add
xchg
aaa
ja
mov
movsb
inc
je
sub
mov
sbbl
scas
inc
add
gs
shr
sbb
or
fdivrl
repz
xchg
dec
xor
cld
mov
ret
push
out
mov
pop
mov
jns
mov
inc
pop
dec
or
sbb
xor
fistp
xchg
mov
outsb
jmp
cmp
inc
andl
repnz
pop
jmp
shrl
jae
insb
gs
jge
pop
jns
jle
push
and
xchg
clc
shlb
sbb
iret
mov
adc
cmove
stc
inc
jae
mov
popf
or
in
inc
aam
sbb
sbb
inc
ds
jbe
jl
hlt
stc
ljmp
les
fs
xchg
repnz
adc
hlt
sbb
jb
inc
mov
fwait
or
inc
dec
aaa
mov
nop
clc
add
add
pop
sahf
insb
pop
xchg
pop
xlat
ficom
into
lds
in
rorb
pushf
and
cmpsb
push
cmp
enter
add
and
sub
ljmp
sub
pop
cmp
xchg
xchg
arpl
dec
cli
jecxz
push
cmpsb
cmc
inc
xor
push
outsl
lahf
test
pop
test
dec
cmp
cmpsb
sbb
fsubrp
adc
enter
pop
push
or
loope
insb
enter
cmpb
sub
movsl
ja
jo
pop
add
fdivrs
inc
sbb
pop
xor
push
sbb
jge
mov
js
jbe
pop
xchg
add
and
inc
push
clc
mov
xchg
sub
std
xlat
outsb
sub
mov
jp
cmp
push
and
mov
popa
mov
pop
cld
and
jnp
push
fwait
mov
cmp
sub
sahf
lea
inc
sarl
fstpl
shrl
pop
icebp
roll
repnz
mov
outsl
cmp
dec
mov
jmp
push
and
jae
test
sahf
lret
lds
movsl
or
out
ret
mov
xor
lock
into
jle
mov
xor
xchg
pop
in
ficomp
mov
jecxz
adc
out
xor
ljmp
lods
in
js
mov
xor
xlat
or
bound
mov
leave
jns
outsb
mov
xchg
push
xor
pushf
jle
sbb
fwait
push
inc
daa
je
fnstcw
dec
push
adc
sahf
xor
movsb
mov
xchg
pop
nop
pop
out
mov
pushf
lret
adc
mov
dec
xchg
icebp
mov
jb
hlt
orl
push
sub
mov
pop
pop
lea
stc
pop
call
popf
int
mov
cli
addl
and
sub
mov
inc
cmp
mov
das
and
xchg
mov
cs
and
cmp
shl
mov
dec
fisttpl
cwtl
hlt
push
repz
sub
cmp
rcrb
cld
test
or
mov
jle
xchg
dec
sub
je
jmp
xchg
aam
hlt
lcall
sub
outsb
es
call
mulb
ffree
pop
insl
pop
sbb
fcoml
imul
jb
cli
push
push
mov
sti
jmp
fs
invd
cmp
dec
xor
sub
cmpl
cmp
call
xor
movsb
clc
xchg
cmp
xchg
out
movsl
sbb
mov
pop
dec
adc
pop
mov
push
jmp
sbb
and
xor
mov
mov
dec
insb
adc
ja
and
dec
inc
and
inc
or
loop
fsubr
push
push
sub
in
add
orb
bound
inc
gs
js
xchg
lcall
mov
sub
addr16
dec
jp
jns
mov
jno
mov
insl
movsb
jne
lock
jne
pushf
adc
jnp
xchg
mov
pushf
xchg
pop
out
xorl
stos
out
add
sub
pop
popa
xor
sub
out
xchg
inc
inc
sbb
shrb
aaa
jle
push
fsub
pushf
cltd
jmp
iret
lcall
ret
fcompl
mov
add
scas
fsts
jo
fistpl
ret
inc
push
jp
fiaddl
pop
xchg
cltd
pop
fistpl
adc
jecxz
movsl
scas
push
sbb
push
push
sbb
aas
sarb
inc
leavew
pusha
pushf
scas
hlt
push
je
inc
mov
cmp
rclb
pop
popf
mov
adc
test
inc
lea
pop
hlt
xchg
xchg
shlb
and
inc
andl
mov
jge
addl
cmp
jb
jno
fs
jl
cmpsl
outsb
dec
imul
and
cmpsb
push
pop
fs
test
sbb
ret
cmpsb
sahf
enter
push
enter
pop
pop
xor
aad
loope
pop
mov
sub
cmp
sub
pop
movsl
jle
ljmp
mov
push
add
aad
xor
push
inc
mov
movsl
js
movsl
insl
pop
adc
jnp
dec
inc
out
fsubrl
mov
lret
adc
push
into
sarb
test
mov
subl
rep
and
addl
jbe
int
mov
mov
dec
dec
dec
lret
jge
push
fwait
in
mov
loop
sbb
mov
push
test
add
outsl
outsl
imul
fistp
stc
xchg
outsl
inc
fs
call
ret
ss
ds
pusha
in
mul
or
cli
push
push
xor
jmp
lods
into
popa
test
xor
jb
pop
or
xlat
adc
imul
adc
hlt
call
data16
inc
lods
aam
add
dec
jmp
sub
fwait
sub
test
mov
sbb
xchg
loope
mov
push
jo
scas
sbb
inc
cmp
jae
adc
repz
and
lds
cmp
idivl
jp
pop
mov
jbe
pushf
jbe
xchg
jmp
xor
cs
sbb
aad
mov
nop
lods
outsl
arpl
push
fsubl
xor
aas
jge
push
pop
es
out
faddp
aaa
xchg
leave
lea
push
in
pop
pushf
push
mov
or
cmp
sbb
inc
and
mov
comiss
sbb
mov
in
mov
test
notb
fcomps
sub
out
mov
xchg
xor
rcrl
ret
mov
fwait
mov
rclb
pop
mov
adc
aad
sub
and
aam
and
cld
xor
lahf
insl
out
in
dec
jne
xchg
xchg
jl
push
ljmp
cmp
mov
sbb
add
packuswb
add
loop
xor
idiv
test
mov
add
push
outsb
bndldx
cmpsl
pop
xorl
xor
inc
rcrb
push
jecxz
xor
call
xchg
xor
shlb
push
lret
pop
das
xor
pop
imulb
lods
adc
dec
xor
inc
mov
and
pop
mov
push
iret
daa
lds
fwait
imul
fiaddl
sti
jns
inc
ja
fistpll
sub
divb
sbb
pop
ds
xchg
jp
loopne
mov
mov
jle
pusha
mov
inc
rorl
xchg
dec
jne
cmpl
lcall
jmp
rclb
fildl
and
dec
mov
repnz
in
lret
insl
stos
pop
ds
and
sub
dec
jnp
loopne
jle
lret
or
mov
inc
out
iret
pop
fnsave
ret
pop
cli
pop
adc
inc
sbb
adc
fistl
movhps
fwait
icebp
popf
pop
cwtl
mov
inc
rcrb
mov
push
sbb
mov
imul
jle
mov
sbb
xchg
sbb
addr16
lret
pop
hlt
mov
xor
mov
mov
cmp
aaa
cmp
stc
or
out
test
mov
xor
pop
repz
xchg
sti
lret
lds
rol
mov
repnz
mov
jnp,pn
cmp
bound
cmp
jge
cld
xlat
sbb
cli
mov
jno
mov
jl
aas
or
push
insb
aaa
mov
mov
jle
jge
mov
ret
push
xor
dec
pop
out
push
in
jnp
les
imul
jb
inc
pop
pushf
or
push
insl
or
mov
jbe
and
ds
loopne
test
and
pop
xchg
mov
jg
add
bound
div
xor
int3
mov
pop
mov
mov
xchg
lcall
lcall
inc
fcoml
shrl
out
push
test
adc
xor
dec
jg
add
mov
sub
jle
push
pop
lds
int
mull
or
lret
dec
shr
clc
mov
sbb
sahf
mov
lock
xor
jb
repz
dec
mov
ja
adc
ss
push
cmp
sbb
out
arpl
test
aad
pop
call
push
or
inc
into
inc
pushf
imul
xor
or
push
loopne
inc
mov
repz
dec
movsb
add
pushf
sub
and
mov
dec
cmp
mov
subl
mov
mov
lock
mov
fadd
sbb
cmpsb
es
jns
dec
push
mov
fldcw
in
repz
es
sbb
sbb
lods
xchg
sbb
pop
push
hlt
imul
enter
dec
js
dec
nop
loopne
imul
pop
aas
negb
xchg
dec
adc
je
dec
mov
cmp
lea
out
clc
stc
arpl
dec
and
dec
mov
popa
pop
jmp
mov
inc
iret
cmc
xchg
das
loop
cmc
mov
pushf
div
and
imul
test
jg
aam
repnz
clc
dec
dec
cwtl
push
push
cmpsl
sub
mov
outsb
imul
mov
popa
mov
add
pop
ror
push
lcall
aam
jno
ret
mov
lods
insl
aad
and
xchg
mov
popa
mov
cmpsl
lods
stos
pop
leave
mov
lds
and
lcall
add
in
fdivs
jecxz
push
gs
iret
fstl
rclb
jno
sbb
pushf
rcl
fwait
pop
sub
dec
stos
in
shr
and
xchg
pop
mov
push
push
jmp
xor
push
or
jae
xor
sbb
mov
pop
cmp
dec
cmp
ss
mov
dec
es
inc
cmp
dec
or
movsl
sbb
jb
cli
add
mov
jmp
mov
or
jns
fisttpll
xchg
cmp
mov
stc
shll
jp
sti
cmp
int3
xchg
mov
dec
stos
pop
dec
mov
jne
into
fbstp
mov
mov
xchg
popf
lcall
mov
dec
push
or
adc
stos
int3
pushf
imul
cmpsb
shl
jnp
cmp
jle
je
in
pop
adc
cmc
push
iret
mov
dec
out
pop
dec
mov
sub
push
mulb
aad
cmp
xor
mov
imul
shll
sbb
loope
lea
adc
push
pop
mov
mov
cmc
leave
dec
lahf
fwait
hlt
decb
dec
inc
movsl
inc
mov
xor
in
aaa
sti
or
add
inc
sbb
pop
and
fidivr
arpl
rcr
bound
mov
cmp
sub
test
sub
fdivl
es
jge
pop
push
sbb
jp
daa
sub
addr16
mov
xchg
stos
push
dec
inc
sbb
push
dec
repnz
fcoms
push
add
or
mov
insl
inc
push
sbb
cmpsb
movsb
lret
out
in
enter
insl
in
pop
fcmovne
add
mov
mov
cmp
jg
ds
mov
movsl
mov
pop
cmc
lds
jnp
mov
add
insl
dec
xor
jne
pop
test
mov
dec
lcall
repnz
mov
enter
movsl
adc
or
push
jg
xor
mov
test
mov
movsl
dec
and
out
push
pop
mov
sbb
lret
lret
jecxz
test
mov
and
sub
aad
xor
inc
jnp
outsl
sub
into
loop
xor
xor
adc
out
cmpsb
cmp
push
cmpsb
fs
push
out
stc
data16
mov
cmp
mov
inc
jg
daa
test
cmc
mulps
pop
dec
xchg
data16
imul
adc
cld
adc
xchg
decl
in
and
int3
mov
xlat
lret
sub
iret
cmpsb
in
pop
add
jnp
push
jmp
push
gs
roll
insl
sub
inc
pusha
jl
fldenv
les
mov
repz
xchg
xlat
rclb
adc
fnstcw
push
pop
cmc
adc
pop
pop
and
pushf
int3
sub
jmp
mov
cs
cld
jo
mov
pusha
nop
bound
lret
jb
push
push
dec
mov
push
je
jecxz
jecxz
add
cmp
sbb
call
fcmovb
dec
mov
mov
adc
mov
mov
repnz
pop
lds
mov
das
shl
mov
push
push
lock
orl
pop
or
rcrl
sub
cwtl
icebp
inc
in
cld
sub
lret
out
cwtl
mov
stos
mov
xchg
push
lock
mov
sub
jo
aam
mov
ret
sbb
es
insl
mov
and
ret
popa
movsl
mov
mov
call
inc
adc
and
pop
mov
test
pop
mov
les
push
sub
fnstsw
roll
adc
pop
shrl
jnp
xlat
adc
test
lret
jns
push
stc
adc
lcall
xor
cld
loope
mov
push
mov
pop
mov
dec
mov
movsb
xchg
adc
sbb
flds
daa
repz
fwait
xor
adc
add
rcrl
out
cwtl
push
mov
jns
sbb
lods
xchg
xchg
dec
mov
mov
inc
mov
jp
lret
fwait
xor
mov
test
call
fnop
xchg
rcll
fnop
push
push
ljmp
push
mov
dec
push
push
or
aas
scas
stos
and
mov
dec
jle
adc
mov
add
mov
lret
ret
jmp
xorb
jae
mov
push
mov
inc
call
inc
shlb
mov
sbb
push
dec
scas
jge
jl
aam
les
rolb
sub
add
sbb
lds
xchg
hlt
dec
arpl
pop
inc
mov
pop
mov
aaa
mov
cld
ret
or
push
push
pop
push
sbb
fnstsw
enter
sahf
scas
mov
shlb
push
and
movsb
mov
sub
jge
popf
jnp
xorl
sub
mov
mov
aas
pop
jl
jmp
dec
mov
xlat
push
xor
xor
xor
fist
iret
inc
test
jnp
xchg
inc
loop
or
scas
ret
push
pop
mov
cld
mov
loope
mov
sub
add
jp,pt
mov
and
mov
mov
inc
sbb
out
add
aaa
xorl
mov
mov
dec
js
cmpsl
stc
pop
nop
push
inc
lcall
arpl
lods
lcall
mov
mov
out
mov
mov
and
mov
xchg
mov
jl
and
push
pusha
mov
cltd
sub
int3
mov
lret
jb
sbb
mov
sbb
cmp
out
and
pop
or
or
jo
cwtl
imul
cmp
fs
pop
mov
stos
sub
cmp
xchg
pop
arpl
pop
adc
jmp
fdivs
pop
mov
cmp
int3
pop
or
push
push
into
or
es
cld
xchg
pop
push
dec
or
fistpll
into
std
out
cmpsl
loope
push
test
mov
mov
xlat
or
dec
sub
in
mov
mov
and
in
gs
and
mov
push
dec
int3
mov
inc
jae
imul
imul
repz
cmp
cmp
add
in
loope
mov
fnstenv
pushf
ja
cli
jmp
xchg
fs
pop
dec
aad
sub
nop
cmp
push
cmpsl
jb
ljmp
out
iret
jge
fbstp
movb
into
lcall
cltd
and
das
je
andl
dec
jae
das
enter
gs
inc
add
rolb
sbb
lret
ljmp
pop
mov
std
inc
aam
cwtl
loopne
dec
cmpsl
daa
xchg
adc
pop
int3
icebp
sbb
es
push
sbb
lret
insl
insb
or
test
push
lock
gs
adc
stc
rolb
jg
mov
dec
mov
es
sub
dec
mov
adc
xor
and
mov
or
sbb
pop
cwtl
hlt
mov
test
add
adc
dec
mov
jmp
lahf
fucom
stos
mov
jg
inc
xchg
add
sbb
mov
sarl
xlat
pop
out
stos
ret
push
ds
out
ss
jmp
push
in
sti
out
xor
aad
or
xor
xor
enter
rol
popa
cmpsb
and
xchg
push
sub
sti
push
dec
or
adc
or
gs
xchg
cli
aam
mov
adc
ja
sub
jns
add
xchg
or
mov
fcmovnb
mov
outsl
or
jae
add
mov
xchg
mov
ret
jl
add
mov
nop
push
fcomip
pop
mov
aad
or
aad
rclb
test
test
push
xchg
or
inc
push
test
jne
and
inc
jnp
cmp
xor
and
mov
xchg
cmp
jnp
ret
push
pop
mov
pushf
inc
cmp
fs
jl
pusha
popf
int
arpl
dec
adc
ficoml
xor
xchg
cmc
xor
int
insb
imul
sbb
adc
and
leave
cmp
jbe
xchg
and
and
mov
iret
xor
xchg
jns
or
fldenv
int3
icebp
nop
inc
pop
xorb
push
rclb
sbb
out
mov
movsw
adc
push
lret
jbe
insl
sub
les
daa
daa
movsl
or
repnz
movsl
jno
rolb
dec
and
sarb
hlt
jmp
lahf
pop
xor
push
test
inc
mov
inc
jno
cmp
xchg
shld
arpl
jns
outsl
imul
fldt
sub
cltd
daa
cmp
pop
inc
movsl
lcall
mov
movb
lret
popf
push
push
xor
dec
sbb
js
es
paddusb
lcall
pop
fcoml
imul
sbb
cmpsl
rol
jns
jg
mov
mov
adc
mov
test
and
push
int
pop
sub
dec
sub
mov
and
cmp
mov
mov
jns
jecxz
out
das
loop
fptan
stc
jae
sbb
push
adc
lret
in
es
orl
push
mov
cli
push
xchg
cmp
fimul
cmp
push
cwtl
or
mov
in
fwait
lods
cmc
popf
jle
xor
cli
pop
xchg
stos
adc
cmp
add
xor
mov
inc
rcl
dec
mov
sub
mov
xor
sti
fnstenv
jo
inc
pop
call
loopne
imul
sub
inc
xchg
lods
push
sbb
aas
inc
repz
popa
add
popa
push
imul
or
push
sbb
pop
insl
xchg
xchg
adc
pop
imul
push
cmp
cs
lods
aas
aad
push
add
shl
sbb
dec
js
repz
adc
movb
lea
imul
pop
decl
mov
sub
cmp
pop
dec
out
xor
pop
dec
adc
xchg
adc
aad
inc
and
das
jg
push
mov
shrl
and
test
jno
xchg
negb
insb
lds
es
icebp
repz
cld
jg
sbb
fsubrl
mov
out
cli
lock
clc
pop
das
fimull
rclb
xor
adc
ss
ret
cmp
subl
cmovs
or
test
jne
rcr
sub
mov
cs
aam
push
push
stos
mov
jecxz
dec
add
test
and
push
scas
mov
fisttpll
add
clc
mov
xchg
rcrb
jp
add
in
pop
pop
sub
in
scas
out
dec
nop
dec
xchg
xor
adc
movsl
mov
xor
ret
or
lods
xor
sbb
int3
xchg
dec
outsl
jno
test
mov
pop
dec
dec
adc
xchg
inc
add
fwait
ret
cmpsl
ja
pop
mov
add
movsb
inc
out
push
xor
jns
mov
or
test
mov
sub
xlat
jp
test
mov
fs
sub
mov
xchg
aaa
jne
push
insl
mov
inc
mov
push
and
mov
xchg
sbb
xchg
out
jp
sub
inc
gs
call
lock
jnp
insb
out
fdivrs
fbstp
push
sub
in
lcall
fimull
mov
divps
inc
inc
mov
xor
aas
outsb
mov
jmp
add
fcmovb
and
xchg
dec
add
sbb
outsl
jno
mov
cmc
push
bound
mov
stos
mov
mov
fisttp
loope
lds
or
daa
mov
aaa
cmp
or
push
add
mov
scas
adc
and
lds
aas
shrb
jne
jp
dec
cmp
xchg
push
sbb
xorl
jge
ror
sbb
sbb
cmp
and
test
dec
xchg
ss
push
clc
sub
xor
jmp
rolb
sub
push
inc
add
andl
inc
ror
pop
imul
cwtl
xor
cmp
fisubr
imul
je
cmp
pop
sahf
movsl
mov
or
mov
sbb
fdivl
pusha
xor
pusha
ret
nopl
pop
push
subb
cmp
lcall
dec
faddl
or
sub
repz
adc
pushf
mov
ljmp
mov
adc
mov
daa
in
lcall
int
aam
sub
pop
ret
testl
ret
dec
push
stc
mov
inc
ds
sub
xchg
xchg
popa
lods
outsl
ljmp
sub
fs
adc
dec
jle
xor
fadds
std
xchg
add
and
xor
xor
mov
into
rolb
lea
mov
imul
mov
imul
std
jl
inc
ret
outsb
pop
fisubr
mov
jle
sub
shrb
pushf
stos
push
sti
mov
outsl
push
push
loopne
jecxz
dec
mov
cs
cltd
pop
in
in
les
lods
repz
adc
mov
adc
into
lcall
fcmovnbe
adc
jns
pushf
int
mov
add
repz
jae
nop
repz
aas
jb
pop
jb
sbb
dec
out
scas
sub
out
std
push
sub
inc
jnp
lea
cs
bound
or
pushf
sbb
inc
or
jne
mov
inc
cmp
das
pop
mov
test
and
mov
lret
mul
push
jbe
xchg
jmp
inc
cmpsl
and
xchg
enter
sar
jmp
lret
dec
mov
mov
pop
jg
ss
lock
stos
dec
pop
dec
out
shl
push
jecxz
cmpsb
xlat
aam
je
ret
adc
es
mov
insl
jno
ds
pop
and
xchg
mov
scas
ljmp
lods
push
insl
fwait
mov
push
pushf
arpl
push
int
cmovb
add
loope
test
inc
push
jno
jno
xor
in
cmc
mov
negl
sub
pop
les
gs
mov
sarl
xchg
ja
jo
mov
cmp
scas
xor
and
in
test
mov
jns
dec
xor
test
orl
dec
repnz
std
inc
xchg
in
fimull
sbb
incb
add
and
xor
mov
hlt
in
repz
xchg
je
xorl
in
inc
test
jp
jo
mov
xor
mov
pop
jmp
or
loope
mov
push
cmp
xchg
jnp
dec
jmp
leave
icebp
mov
mov
stos
sub
cmp
push
daa
test
hlt
and
and
jge
loopne
xor
jp
cmp
xchg
xchg
xchg
cmp
jmp
and
sub
jae
and
push
add
popf
sbb
mov
dec
jns
fidivrl
sub
and
mov
pop
inc
scas
cmpsb
push
xor
inc
ja
popa
mov
mov
std
or
sub
hlt
sub
arpl
test
or
mov
test
or
scas
xor
int3
mov
pop
fidiv
mov
vxorps
rorb
scas
dec
hlt
adc
or
lods
iret
movsb
pop
inc
xchg
xchg
mov
test
push
shrl
cmp
pop
jno
pop
sub
call
push
fisttpl
lea
push
dec
lahf
pop
dec
add
setp
fdivl
dec
inc
mov
mov
enter
pop
xlat
or
push
out
mov
sub
dec
ss
push
icebp
jecxz,pt
ljmp
shl
jno
leave
rol
sbb
cmp
add
lea
cs
pop
inc
sub
js
fisub
add
push
daa
rcll
sbb
cltd
mov
jae
sbb
loopne
mov
mov
cmp
test
sbb
int
xchg
test
je
shl
popf
mov
sbb
iret
popf
jno
icebp
pusha
mov
movsl
loop
loop
push
mov
loope
sbb
fistl
pushf
jne
ss
movsl
cmp
ret
out
jns
cli
test
xor
or
or
sub
xor
cmp
lds
lods
imul
xor
ljmp
and
xlat
hlt
out
push
frndint
mov
pop
loop
sti
aaa
pop
movsl
decb
adc
movsl
dec
jmp
mov
flds
sbb
push
and
repz
fstpl
jecxz
insl
sbb
inc
or
je
rcl
fcoms
dec
andb
js
jmp
xlat
jge
pop
cs
aad
sub
nop
into
push
stos
aas
adc
dec
data16
je
mov
jecxz
pop
stos
dec
imul
outsb
shr
pop
lock
or
rorl
sti
xor
add
inc
xor
roll
mov
cmp
xchg
int3
mov
lahf
pop
fcmovnbe
pmaxub
mulb
push
and
cmp
cwtl
adc
pop
cmpsl
and
js
icebp
push
out
mov
adc
mov
mov
mov
or
icebp
push
pop
insl
clc
adc
sbb
sub
pop
xchg
ret
push
aad
es
xchg
xchg
inc
dec
push
inc
iret
xchg
mulb
insl
ljmp
inc
lods
ret
mov
je
stc
and
mov
cwtl
or
rorl
test
out
push
xor
repz
icebp
clc
xor
scas
sbb
xchg
pop
roll
jb
nop
push
out
adc
xor
mov
xchg
fcoms
stc
xor
sahf
or
xor
repz
push
xchg
dec
cmp
repnz
ja
xchg
dec
in
or
jbe
or
mov
iret
push
mov
xchg
cltd
add
and
bound
mov
xchg
ret
mov
adc
mov
mov
sahf
jae
mov
jbe
mov
and
and
mov
in
movsb
fist
xchg
dec
mov
jmp
xchg
sbb
sbb
and
fldenv
stos
or
sub
insb
mov
jbe
jle
push
or
int
or
sub
scas
ret
in
pop
out
inc
inc
pop
icebp
sub
es
push
lds
stos
mov
int3
jno
fisubrl
ret
adc
sbb
imul
xchg
adc
js
loopne
and
push
mov
mov
pusha
arpl
repnz
cs
or
sbb
lods
je
add
mov
mov
pop
pop
or
mov
lds
shlb
scas
sub
and
mov
cmpsb
nop
movsb
in
push
jbe
mov
aad
outsl
sbb
and
push
cmp
pop
test
fmuls
iret
push
mov
iret
dec
jo
ss
lahf
jl
das
push
and
ss
cmpsl
lock
push
jno
cmpsb
xor
in
dec
dec
jns
push
test
shrl
fndisi(8087
or
xor
cmp
adcb
mov
pushf
shlb
lcall
imul
xor
inc
jno
xchg
je
pop
insb
mov
roll
mov
mov
mov
cwtl
sub
scas
rclb
or
cmp
lds
sub
and
mov
and
int
sbb
testl
push
mov
sahf
jb
rolb
or
outsl
test
and
pop
xchg
stc
cwtl
out
lret
dec
pop
adc
mov
ss
arpl
jge
das
out
mov
and
arpl
addr16
jmp
push
into
xchg
das
mov
xor
repz
in
sub
cmp
dec
imul
in
test
je
fsubrs
mov
adc
add
xchg
ljmp
in
out
sti
out
add
scas
loopne
shll
loopne
adc
dec
dec
push
pop
inc
mov
out
in
les
repz
lds
sbbl
mov
int
cmpsb
stos
pushf
pushf
and
sbb
jecxz
mov
mov
dec
movsb
nop
test
pop
test
pop
stc
dec
fnstsw
js
sbb
jg
dec
iret
xor
ficoml
jge
xchg
mov
mov
xchg
cmp
adc
pop
mov
jnp
inc
jno
shrb
sbb
xchg
mov
out
dec
and
fld
rcrl
stos
mulb
xchg
std
loop
xchg
cwtl
int3
je
cmpsl
and
pop
icebp
js
aad
add
lret
sub
rorl
les
lock
outsl
add
mov
sub
aam
out
ds
in
sbb
cmc
movsl
push
insl
aas
orb
xor
dec
popaw
sbb
ret
cwtl
pop
mov
xchg
lock
and
cmp
xor
add
loopne
in
cwtl
test
adc
notl
mov
imul
sbb
lcall
jg
das
out
jae
addr16
add
push
pushl
sub
outsl
ds
or
mov
adc
xchg
or
pop
jno
sbb
loop
in
inc
dec
fdivs
inc
ret
and
or
aad
fwait
push
inc
fs
inc
pop
add
pop
mov
xor
jns
std
cs
mov
push
mov
cmp
pop
jo
addr16
jp
bound
aas
mov
stos
pop
cmp
or
dec
jne
ret
sbb
fbstp
clc
xchg
and
jmp
pop
xchg
push
test
int3
xchg
sub
xor
push
movsl
popf
je
jle
fwait
and
in
insb
sub
jecxz
ds
pushf
in
mov
pusha
ret
enter
pop
xchg
pop
or
jae
insb
aam
mov
popf
imul
jnp
dec
out
mov
fbld
loope
push
dec
popa
sbb
xor
scas
insb
scas
sahf
push
aaa
jle
adc
popf
mov
mov
or
hlt
rol
arpl
dec
mov
push
jne
and
cmc
push
ja
leave
in
addr16
popf
aam
pop
cmp
sbb
or
mov
mov
sarb
scas
or
xchg
and
dec
cmp
inc
inc
aam
outsl
mov
push
push
sub
mov
jge
inc
cmp
daa
and
sbb
mov
jnp
jl
cwtl
xchg
dec
loope
adc
mov
mov
jo
sub
lahf
fwait
jns
push
notb
out
jb
leave
inc
lods
sbb
mov
arpl
xor
ror
dec
es
push
inc
dec
push
inc
pop
loope
lock
sub
inc
fdivrl
dec
shll
sub
adc
mov
mov
cmpl
push
xor
sarb
js
out
pop
or
stos
lcall
popa
faddl
in
push
sub
nop
outsb
movsl
xchg
test
gs
rcl
mov
out
mov
popf
dec
and
popl
outsl
sahf
outsl
int
xchg
mov
push
adc
testl
rorl
push
mov
les
push
arpl
in
or
ficomp
loop
xchg
or
dec
mov
fs
inc
adc
xor
ss
xchg
adc
cmp
dec
out
push
out
ljmp
cmp
jno
sbb
rep
cmc
mov
sbb
dec
adc
ror
imul
call
xlat
lods
or
jae
scas
push
pushf
xlat
inc
insl
mov
cmp
cmpsb
mov
int
xchg
ljmp
fcoms
aas
dec
cmpsl
scas
fiadd
or
les
jle
jmp
inc
xchg
imul
fidivrl
mov
pop
cmp
loop
std
clc
addr16
into
mov
jmp
orl
push
jg
aad
lret
push
nop
test
and
dec
xor
jb
out
mov
je
pop
mov
sub
pop
shrl
call
push
mov
pop
adcl
bound
inc
push
inc
inc
jnp
inc
mov
lret
scas
outsb
mov
popf
adc
and
out
shrl
lods
push
std
mov
das
cmpsl
and
or
dec
fldenv
cwtl
push
hlt
mov
dec
or
cmpsl
outsl
mov
rcrb
dec
sub
sub
ret
je
cmpsb
es
aas
insl
es
hlt
xchg
je
jp
je
push
popa
das
cmp
imul
and
mov
cmp
mov
pop
xlat
push
idivl
cltd
sbb
push
test
jns
jg
xchg
sub
frstor
inc
or
inc
ljmp
xor
pop
stos
outsb
clc
xchg
push
add
dec
cmp
push
sbb
xor
ret
or
mov
mov
jo
movsb
dec
or
movsb
test
xchg
push
ja
and
dec
lret
fs
inc
pop
cmc
pop
or
ret
jg
sub
out
pop
add
jae
mov
rcrb
jbe
shrl
in
lahf
push
xchg
popa
mov
mov
push
pusha
pop
push
cmp
cmp
jp
push
mov
jnp
mov
push
loope
dec
jmp
push
jne
leave
mov
loop
fist
pop
inc
jmp
sub
cmpl
cmp
cmp
sub
orb
or
xchg
stos
icebp
loope
and
jmp
inc
jle
les
in
inc
pusha
pop
pop
mov
push
xorb
pop
sahf
jmp
lret
inc
jno
push
push
idivb
push
dec
and
mov
lret
ficoml
lods
ficomp
outsb
xor
scas
iret
lret
sub
adc
les
push
mov
or
push
add
or
mov
fisubr
push
xor
sbb
call
pop
add
mov
mov
xor
scas
call
mov
cltd
xchg
ds
ljmp
cmp
test
movsb
cli
insb
xchg
push
push
pop
and
mov
jge
loope
sbb
fs
and
dec
cmp
testl
jl
rol
dec
push
push
dec
xor
push
aaa
rcrb
leave
and
push
inc
aad
cmp
or
imul
in
push
enter
pop
xchg
mov
test
cmp
repz
add
cmp
mov
dec
movsl
mov
mov
mov
mov
xlat
add
xor
mov
out
js
dec
aas
pop
mov
jecxz
pop
imul
data16
or
mov
jg
outsb
pushl
or
insb
pop
and
lcall
repnz
sub
jne
testl
ret
movsl
or
xchg
sub
sahf
mov
push
stos
addb
push
outsl
inc
loop
loop
or
fs
cmova
mov
pop
ss
fstpt
repz
fsub
add
xor
addr16
in
out
nop
or
call
xor
jle
fsubrp
pop
imul
mov
lods
repz
push
mov
outsl
lea
stos
sub
mov
jge
sti
inc
add
hlt
mov
fildll
loopne
mov
inc
in
movsl
fxam
mov
jbe
cmp
mov
inc
out
and
sub
repz
movsl
pop
in
add
push
imul
jns
mov
sar
adcl
cmp
out
or
sub
lret
pop
mov
mov
cmp
push
lea
inc
dec
call
adc
stos
subl
fmuls
add
fild
fiadd
das
fidivl
adc
inc
dec
or
cld
push
pop
imul
pop
mov
cwtl
inc
push
dec
cmpsl
and
mov
loop
push
jl
lret
pop
imul
jne
fdivl
add
xor
sub
mov
test
sti
data16
or
pop
mov
ljmp
lret
adc
mov
mov
inc
fmul
mov
mov
mov
sub
pop
mov
jge
sbb
int
es
loope
sbb
sbb
ret
rorl
cmpsl
or
out
cmp
xchg
xchg
mov
test
mov
xor
mov
mov
jae
xchg
dec
jb
int3
test
mov
into
dec
mov
ljmp
scas
test
push
mov
add
mov
bound
jns
rol
in
aad
xchg
mov
jecxz
fucom
fstpt
rcrl
enter
addr16
fisttpl
mov
out
dec
into
push
jne
xor
mov
cld
lock
nop
inc
jmp
cmc
mov
add
mov
mov
mov
stos
push
and
fldenv
sub
in
incb
pop
jle
push
lret
pop
shlb
pop
jmp
mov
dec
ret
pop
pop
add
inc
jl
jle
and
and
push
sub
popf
mov
popa
mov
dec
jae
fiaddl
jns
pushl
aam
iret
jg
imul
add
push
lds
adc
add
repnz
inc
dec
leave
push
dec
popf
hlt
push
and
inc
aam
pop
or
mov
aaa
repz
push
or
lret
testl
pop
lcall
lds
push
push
scas
leave
negl
pop
enter
imul
movsb
sar
jbe
and
sbb
out
cmp
inc
jno
sub
jl
fsubl
dec
mov
lea
jo
push
jno
fnstenv
sub
or
stos
inc
lret
cmp
cmpsb
mov
xchg
mov
pop
roll
push
loope
shlb
cmp
xor
sarb
adc
dec
add
in
mov
adc
fsubp
int
loope
xchg
js
aas
popf
pop
or
mov
fcompl
out
sub
mov
adc
jecxz
push
add
push
mov
mov
inc
popl
jne
push
int
xor
test
inc
xor
cmp
fmull
sahf
pop
clc
ljmp
sbb
outsl
and
movsl
loop
scas
ljmp
lock
fdivr
fidiv
jg
cmc
cmp
scas
addb
push
xchg
cmp
xor
into
aas
push
pushf
cmc
inc
dec
ret
push
pop
inc
and
adc
ret
pop
cmp
shrd
std
mov
lods
fiaddl
mov
inc
sub
add
mov
add
sti
repz
pop
dec
jp
out
in
push
dec
gs
jg
clc
sub
fstps
repnz
add
xchg
out
es
sbb
cs
or
enter
das
adc
fsubrs
mov
lock
cli
aad
stc
pop
nop
cmp
sbb
dec
inc
and
jecxz
repz
push
mov
lea
ljmp
aam
adc
imul
daa
pop
movsb
dec
xor
cmpsb
hlt
inc
ret
das
mov
sub
or
daa
and
std
rcl
cmpsl
sbb
das
xlat
xchg
std
xlat
mov
cwtl
std
mov
sbb
icebp
std
stos
std
cld
xor
push
mov
add
lock
lods
push
jmp
pop
push
sub
repnz
lcall
jle
cs
hlt
cwtl
jb
inc
xchg
xchg
repnz
mov
pop
jge
popa
pop
inc
lods
outsb
mov
jg
mov
dec
lock
mov
sbb
cmp
mov
pop
mov
pop
sbb
mov
mov
clc
sbb
mov
dec
lods
cmp
shl
mov
stos
dec
xchg
sahf
out
pushf
jo
xchg
ficompl
popf
call
xor
or
movsl
xor
add
mov
jbe
add
dec
push
test
xorb
mov
xor
mov
or
sbb
push
sub
mov
loope
nop
das
cmp
hlt
pop
jns
xor
in
pusha
sbb
and
cs
mov
jp
xchg
fdivs
sub
mov
mov
adc
add
xchg
sub
xchg
lcall
xchg
rolb
adcl
out
xor
or
mov
push
bound
stos
xlat
xchg
or
inc
xchg
scas
insb
imul
fistpll
dec
vpsubsw
xchg
sar
adc
rol
xor
dec
inc
xchg
jae
aad
push
roll
popf
fiadd
fwait
inc
enter
clc
jbe
xchg
push
fidivl
imul
cwtl
scas
xchg
loopne
push
or
lea
test
or
pushf
cwtl
add
jge
xor
mov
adc
or
or
ss
mov
scas
or
xchg
mov
mov
je
leave
pop
sbb
cmc
jmp
lds
push
pop
scas
test
cwtl
and
aam
cmp
push
movsb
adc
xor
mov
jbe
sub
jge
ret
pop
add
daa
and
cmp
add
mov
jl
mov
test
dec
mov
xor
or
nop
push
outsl
fisubr
test
shrl
push
inc
pop
mov
cmpsb
aas
mov
in
out
sub
inc
adc
push
push
add
movsb
sti
clc
cmp
jp
xchg
mov
movsl
lret
jg
and
outsb
dec
mov
out
mov
xor
fwait
mov
or
dec
js
leave
push
pop
mov
cmpsb
lcall
clc
faddl
sub
outsb
into
scas
pop
adc
mov
mov
mov
gs
mov
pop
adc
hlt
add
js
sbb
or
inc
sub
clc
mov
or
cmp
sarl
or
mov
sahf
mov
test
pop
outsl
add
ja
xor
cltd
adc
stos
ss
cmp
imul
adc
mov
inc
add
push
aam
and
div
push
push
sbb
ret
pop
pusha
mov
adc
unpcklps
fsubl
add
xor
lods
rol
mov
add
mov
push
pop
push
sti
mov
add
jb
popa
pop
aas
dec
les
push
mov
les
mov
mov
mov
cmp
loopne
xchg
sub
adc
mov
push
jmp
inc
pop
cs
sahf
add
das
cmpsl
in
nop
adc
rcll
jb
xchg
jmp
je
add
jecxz
and
pop
out
lea
sahf
jo
pop
insl
mov
xchg
sbbl
out
clc
pop
inc
lds
inc
fnop
popf
das
cwtl
leave
andl
push
pop
and
lcall
std
jle
inc
cwtl
mov
adc
aam
addr16
lods
cmp
lret
in
aam
cmp
push
mov
mov
rcr
insl
shrb
jo
adc
ror
ret
and
xchg
insl
fistl
xor
xchg
xor
ljmp
lods
mov
cs
xor
dec
push
add
add
in
cltd
shll
mov
lahf
popf
push
add
xor
push
push
jnp
lock
pop
imul
pop
fcmovu
ss
cmp
aaa
xchg
and
stc
push
lods
sbb
push
movsb
scas
xor
xlat
aaa
xor
mov
add
inc
popa
mov
add
imul
inc
pop
inc
dec
or
test
push
shr
dec
add
les
sbb
outsl
cmp
pop
jns
cmp
in
ds
xchg
dec
add
sbb
inc
adc
addr16
push
jp
mov
mov
pop
push
mov
mov
ret
repnz
mov
xchg
insl
lcall
mov
imul
xchg
shrl
sbb
mov
stos
dec
stc
and
pop
insb
aam
gs
les
jl
in
popf
add
iret
jae
mov
pop
outsl
and
inc
xchg
mov
jae
sub
push
xchg
sarl
mov
inc
or
xchg
lods
cmpsb
out
and
out
xchg
scas
clc
fdivrs
push
mov
jg
sti
out
repnz
sbb
xor
in
cmpsl
mov
fild
fimull
mov
sub
aaa
jno
daa
or
adc
add
pop
mov
clc
adc
ficomp
lods
push
shr
dec
scas
xchg
repnz
cmp
and
push
inc
mov
jge
or
push
sub
daa
pop
sbb
insb
jno
data16
inc
jno
dec
popf
xchg
push
push
sub
bound
lahf
pop
incb
inc
or
jmp
cmp
insb
inc
jmp
les
enter
pop
push
fisub
loope
inc
in
sysexit
out
cmp
push
lea
mov
shll
mulb
stos
jmp
cmp
sbb
xlat
add
adc
ja
fs
js
out
pop
pop
fcom
lcall
std
fsubrl
das
cltd
outsb
xor
cwtl
rcrb
pop
mov
mov
mov
add
push
jnp
lods
int
clc
sub
add
inc
test
lock
mov
pop
sbb
daa
sahf
mov
int3
dec
adcb
outsl
fild
mov
sub
fs
lods
adc
lods
ss
mov
and
add
xor
int3
or
xchg
sub
insl
das
mov
into
add
mov
xor
lock
jge
imul
jg
add
lods
test
lcall
mov
mov
mov
pop
mov
gs
dec
xor
cld
pop
rorl
roll
and
mov
xchg
jne
fstps
movsb
neg
movl
cmpl
pushf
jp
sub
mov
lods
cs
nop
test
jbe
insl
nop
lock
and
lret
mov
xchg
dec
xor
mov
push
jne
pop
jge
insl
and
call
push
test
xor
mov
fisttpl
sbb
popa
ret
ja
das
ja
mov
jns
pusha
and
fs
jmp
rorl
and
stc
lods
cmpsl
push
popf
cmp
stos
or
cld
xlat
pop
ss
push
inc
mov
mov
in
mov
pop
daa
mov
shrb
jo
aam
pop
push
ret
mov
je
test
shrb
jb
dec
cmp
pop
xchg
jo
sbb
inc
and
popa
mov
or
inc
add
mov
inc
icebp
nop
and
inc
lods
inc
pand
cltd
clc
pop
fwait
test
xorl
or
fldl
push
clc
xchg
outsb
and
sbb
dec
and
mov
pop
pop
test
jl
bound
xchg
push
or
call
xchg
add
cs
lret
xchg
and
or
aad
jl
das
dec
cmpsl
pop
pop
test
mov
pop
dec
xchg
cmp
inc
mov
movsl
or
ret
cmp
loopne
fildll
add
aam
out
dec
dec
xchg
bound
loope
in
jno
xchg
popf
mov
mov
add
mov
add
jp
jle
loope
rorb
mov
mov
push
add
mov
ror
push
push
sub
test
xchg
mov
repz
sbb
aad
mov
mov
into
jnp
pushf
clc
jle
mov
mov
leave
insl
iret
xor
ret
xchg
pop
cmpsb
orl
push
push
aam
popf
sub
push
mov
sbb
ficompl
push
xchg
add
in
shrb
scas
pop
vandnpd
sub
mov
inc
xlat
lahf
leave
imul
hlt
aaa
mov
arpl
mov
repnz
clc
add
xor
or
stos
int3
xor
pop
pop
daa
xchg
loopne
cmp
loop
add
and
and
mov
aad
sbb
push
xchg
int
jbe
cwtl
inc
jge
xor
daa
push
jle
cmp
cmp
dec
or
fs
adc
cmp
shrl
lahf
ss
inc
test
imul
cmpsb
inc
jne
in
mov
cmp
ss
sbb
push
pop
ljmp
inc
sub
mov
test
movsl
fnstenv
insb
and
pop
icebp
dec
ljmp
add
fdivl
mov
sub
leave
mov
pop
xchg
lcall
daa
fcompl
std
sub
lret
xchg
mov
adc
je
mov
add
mov
mov
data16
icebp
mov
push
jle
aaa
int
dec
daa
sub
or
adc
jl
add
adc
push
and
mov
loop
outsl
mov
xlat
add
loop
stc
sub
fnstenv
dec
push
stc
cmp
fcomip
xor
std
jb
cli
jmp
push
inc
cmp
in
push
or
or
pushf
jge
xor
cmp
pop
xchg
sub
imul
into
lods
data16
imul
jg
sub
in
mov
hlt
mov
sti
add
orb
sti
mov
loopne
js
dec
or
inc
xor
push
fld
insl
clc
les
imul
cmp
dec
cmp
int
movl
pushf
bound
xchg
shrb
or
sub
dec
aas
push
cmp
pop
scas
dec
cmpsl
dec
and
daa
jecxz
outsl
stc
pop
stos
scas
aam
aaa
call
invd
mov
xchg
ljmp
fwait
sub
mov
inc
in
incb
adc
push
out
aad
in
insb
push
sarl
or
idiv
cld
jb
int3
fidiv
add
mov
repz
add
lret
ret
lods
mov
sarl
outsb
iret
adc
outsb
popf
pop
inc
loopne
sarb
mov
aam
cmp
aas
movsl
jmp
pop
pop
and
mov
dec
xor
lds
mov
mov
fcoms
scas
clc
xlat
mov
imul
or
fimul
dec
add
scas
cltd
das
mov
test
cmc
int3
push
mov
lret
ss
int
bound
shl
ret
xor
stos
sbb
dec
out
lds
fistl
bound
int3
pushl
cld
mov
or
loope
mov
jg
dec
dec
push
cmp
test
cmp
ja
sub
xchg
inc
dec
sub
fwait
push
mov
push
sub
add
cli
mov
out
sub
jmp
jns
sub
sbb
jmp
mov
and
and
cmp
mov
jg
mov
pop
rclb
mov
sub
xchg
adc
jnp
aad
and
addl
icebp
out
lods
sub
add
or
movsl
dec
push
pop
fildl
xor
sbb
mov
cmpl
mov
lock
gs
sub
xor
jl
mov
add
jae
mov
aam
push
or
mov
inc
lods
mov
adc
push
xchg
pop
stos
sbb
push
imul
mov
push
loope
imul
cmp
es
out
loop
xor
arpl
je
inc
loopne
cmp
jp
ja
out
cmp
or
test
int3
pop
xchg
sub
aad
xchg
inc
daa
xchg
mov
scas
inc
cmp
and
push
movsb
mov
les
push
sub
jge
inc
in
sbb
dec
cmp
mov
jno
xor
jl
push
adc
jnp
sahf
push
repz
xor
sbb
cmp
call
push
pop
push
xor
nop
inc
pop
scas
xchg
cmpsb
enter
pushf
or
enter
pop
iret
inc
ret
sbb
loope
inc
sub
and
fs
ds
push
loopne
mov
pop
cltd
outsb
sbb
pushf
loop
or
in
ljmp
js
loopne
pop
add
in
hlt
push
adc
in
add
sub
outsb
imull
adc
dec
sahf
idivb
mov
mov
mov
push
xor
cmp
int
and
cmp
fcomi
mov
push
xadd
dec
xchg
sbb
xchg
mov
sub
addb
jmp
shrl
mov
fist
adc
sbb
cmp
lcall
cli
sbb
sub
inc
or
ret
jge
or
mov
cmc
arpl
jmp
mov
mov
ja
adc
mov
inc
or
shrl
out
mov
insb
push
adc
in
pop
gs
mov
jle
loopne
movsl
test
loope
push
inc
inc
in
fprem
rclb
lds
xchg
sti
xor
out
cmp
sbb
jo
add
push
pop
imul
pop
ret
ds
rorb
jmp
out
jo,pn
mov
add
add
aas
or
insl
dec
push
mov
and
popa
cmp
lea
shrl
call
into
push
orb
cmp
push
fucomi
aas
imul
lods
pop
inc
cs
xor
cli
pop
mov
negl
roll
pushf
mov
jae
enter
pop
cmpsl
sbb
fstpt
pop
fdivr
sub
dec
xchg
mov
lret
xchg
mov
adc
loopne
gs
rclb
subb
and
sbb
ret
into
mov
insl
nop
fdivr
dec
das
or
ljmp
ja
sbb
add
mov
sub
mov
cltd
repz
add
rcrl
nop
add
push
pop
push
dec
xor
fstl
sti
loope
inc
mov
sbb
push
sarl
out
pop
fnclex
stos
or
mov
xchg
or
push
cmp
sub
rorl
daa
scas
xor
jle
mov
jmp
sub
push
push
leave
dec
jge
pop
inc
in
jnp
jo
push
fwait
cltd
xchg
cmp
add
adc
jg
bound
sti
pop
jns
push
cmp
jns
repnz
cmp
jae
sub
cmp
js
xchg
lods
dec
jp
pop
pop
mov
push
mov
out
jge
dec
cmp
es
mov
cmpsl
sahf
fisttp
xchg
out
mov
jb
icebp
xchg
in
daa
jbe
xchg
in
out
imul
push
pop
mov
stos
mov
je
insb
adc
je
jle
scas
in
jmp
iret
nop
mov
das
pop
adc
popf
inc
mov
fidiv
fnsave
fnstcw
lds
les
stc
sbb
inc
mov
cmp
push
sub
fstpt
call
test
hlt
int
dec
arpl
sbb
into
rorl
cmc
push
xor
or
lcall
test
sbb
andl
sarb
cmp
and
lss
inc
test
push
das
push
mov
jge
xor
ljmp
cmc
test
jl
test
push
ret
divb
ja
out
lahf
je
add
lds
test
jmp
cmpsb
dec
xor
enter
pop
push
mov
cmpsl
loope
std
ljmp
les
push
and
and
pop
xchg
xchg
arpl
add
mov
push
dec
mov
lods
add
js
mov
or
push
repnz
add
pop
cmp
jmp
jg
push
movsb
mov
jecxz
mov
sub
and
movsl
rolb
test
mov
idivl
mov
negb
shrl
inc
mov
sbb
sbb
sbb
test
lret
jl
dec
loop
divb
push
adc
fs
aas
ljmp
iret
sahf
cmp
push
js
out
call
xor
cs
cmp
loop
or
xchg
into
into
scas
mov
sub
outsl
xor
sub
cmp
rcr
and
outsb
push
fist
stos
test
data16
lods
pop
mov
mov
push
xor
pop
leave
add
in
lret
sti
pop
movsb
fsin
imul
loopne
in
dec
inc
sbbl
das
mov
div
xchg
scas
pop
xchg
mov
rcrl
movl
or
mov
rcrl
cs
inc
sti
nop
subl
dec
jb
dec
std
dec
xchg
cltd
ret
je
jnp
jecxz
imul
mov
in
mov
cltd
push
mov
rcl
add
fcmovu
sbb
lods
pop
shll
in
inc
repnz
inc
dec
test
das
adc
adc
sahf
mov
and
jne
rcl
pushf
push
idivb
cmp
sbb
fstpl
sbb
lods
icebp
xor
mov
mov
mov
dec
lock
lcall
mov
aam
hlt
pop
ret
pop
mov
es
out
dec
sub
xchg
sub
in
popa
rolb
lods
test
mov
scas
popa
push
imul
mov
clc
xor
add
cltd
popf
dec
stos
test
pop
lds
repnz
pop
push
xchg
movb
sub
rcll
aaa
mov
testl
cmpsb
xchg
cmp
pop
push
ljmp
cmpsb
xor
xor
xor
outsl
dec
mov
test
dec
fsubl
jmp
fldl
xlat
dec
jo
repz
jnp
fisttpl
je
fwait
enter
pop
cmp
add
xor
gs
ds
in
add
bound
mov
ss
mov
xor
push
addr16
add
dec
sbb
add
xchg
dec
and
dec
mov
cmp
fildll
imul
mov
xor
int
stos
sub
or
cltd
stos
push
fwait
sbb
insb
adcb
fmul
sbb
or
adc
in
and
out
pusha
push
ret
cwtl
pop
dec
jno
inc
mov
sub
mov
fcompl
jb
mov
inc
bound
fidivl
xchg
xchg
or
sbb
dec
inc
imul
mov
push
outsl
or
out
or
ja
mov
leave
jae
hlt
sbb
arpl
mov
inc
out
call
push
insl
push
rorl
lea
add
sbb
pop
mov
cld
fisub
fcmovb
xor
push
dec
scas
add
and
pop
mov
movsb
mov
jbe
and
jge
or
daa
sbb
mov
sbb
xchg
jl
mov
pop
cmp
mov
jns
jo
scas
sbb
mov
mov
lret
inc
and
ds
in
push
enter
pop
dec
mov
mov
fcmovnu
cld
sub
bound
ret
ds
pop
andb
jmp
daa
rcll
test
out
add
push
adc
adc
sti
jo
dec
pop
lret
jae
loope
dec
pop
add
sub
mov
mov
sub
xor
outsb
mov
jae
rolb
pop
pushf
mov
dec
lcall
inc
mov
push
xchg
lahf
int
jo
sub
pop
mov
cmp
sub
jmp
mov
mov
mov
loopne
call
test
mov
cmpb
xchg
loop
aam
stc
pop
sti
adc
adc
cmp
cmp
fcoms
cltd
out
push
sbb
leave
jae
bnd
cmp
sbb
or
bound
cmc
icebp
das
jo
mov
movsb
pop
sti
mov
inc
imul
and
data16
lods
inc
lods
pop
mov
out
shrb
rcr
out
mov
xor
sbb
jmp
inc
adc
push
inc
test
jns
fldenv
rol
ret
ds
arpl
cld
xchg
sub
in
nop
lret
and
add
cmpsl
adc
and
jmp
shrl
aad
in
nop
pop
in
in
inc
xchg
jb
mov
mov
mov
dec
movsl
addr16
lea
adc
sub
test
mov
push
dec
jmp
cmp
dec
aam
pop
jbe
xor
inc
fs
dec
das
repz
jg
xchg
sbb
and
and
ss
rorl
pop
cwtl
cmc
cmpsl
sbb
mov
pop
sbbb
sbb
lret
adc
mov
int3
adc
pop
mov
shrb
aam
iret
mov
push
jbe
nop
push
cmp
dec
and
imul
or
in
out
imull
and
mov
jb
cmp
push
jb
add
xchg
insb
test
repz
shlb
cmp
clc
jle
push
sbb
aam
shr
cmp
pop
xor
stos
out
mov
out
mov
push
push
repz
jecxz
push
popf
and
or
nop
xor
mov
mov
mov
repnz
inc
xor
sub
mov
arpl
adc
adc
pushl
xor
dec
int
out
lret
bound
mov
in
addl
fldenv
cmp
mov
xor
jp
stos
jp
repz
mov
int3
jl
dec
add
jmp
aad
loope
mov
test
xchg
mov
sbb
pusha
jle
xchg
mov
xorl
push
sub
add
dec
push
fsubr
int
xor
jnp
pop
fwait
jle
mov
lods
pusha
ss
mov
ret
test
inc
leave
scas
xchg
jae
aam
push
arpl
popf
enter
lods
or
inc
ret
fisubrl
sbb
outsb
sbb
sub
scas
out
mov
adc
rcrl
push
and
repnz
fmul
inc
jecxz
hlt
arpl
ret
cmp
mov
mov
cli
dec
aaa
sub
loopne
orb
int3
loopne
das
pop
jecxz
dec
faddp
aad
lds
mov
pop
mov
mov
pop
movsb
push
stc
iret
push
int
lods
jbe
in
jge
xabort
mov
sub
cmp
negb
sbb
dec
enter
pushf
test
xor
sub
jge
push
popa
icebp
cmp
xchg
pop
add
mov
mov
push
add
enter
pop
mov
push
test
repnz
jnp
rorb
fs
jno
cmc
push
fsubs
std
mov
cwtl
fisub
sbb
sub
jmp
xor
pop
repnz
fidivrl
sub
lcall
neg
push
inc
daa
sub
adc
loopne
clc
jg
fildl
mov
fbstp
mov
mov
and
push
mov
int
in
jns
stos
popa
out
sti
mov
xlat
rcrl
mov
mov
sahf
rorb
movb
add
loop
in
stc
mov
inc
imul
sahf
push
sbb
cmp
lret
dec
xchg
out
mov
mov
cmp
sub
into
je
fs
mov
ja
pop
sbb
hlt
imul
add
mov
xchg
cltd
shrb
orl
sub
push
mov
mov
dec
xor
or
jg
pop
aaa
outsl
loopne
mov
mov
jge
lock
cmc
xor
xor
ja
inc
cld
sbb
lret
repnz
andl
or
aam
shrl
jmp
outsl
xchg
cltd
cwtl
mov
fldl2e
insb
nop
aaa
mov
jb
pop
push
dec
cmpl
or
aas
jecxz
ja
push
lea
movsb
call
or
outsb
mov
roll
nop
jp
add
sbb
mov
jg
ret
das
shrb
mov
or
fbld
and
je
inc
testb
std
push
repnz
sbb
and
icebp
fdivp
leave
cld
scas
pop
ror
jg
mov
mov
ss
mov
ret
ror
sbb
sub
imulb
ret
jnp
scas
adc
mov
xchg
stos
cs
popa
incb
pop
push
inc
mov
cmc
jns
arpl
mov
out
mov
jl
test
rolb
push
xchg
roll
clc
mov
leave
cmpsb
sbb
pop
int3
pop
fcompl
aad
add
xchg
lret
mov
jo
lods
xor
cmp
xor
dec
add
mov
dec
stos
mov
xchg
ja
in
dec
push
pushf
push
inc
test
fs
push
mov
xchg
loope
data16
int3
out
test
popa
aaa
jns
enter
pop
mov
mov
repnz
test
pop
jp,pn
dec
ds
ljmp
cmp
jae
out
fdivl
lcall
test
xchg
jmp
dec
ja
cmpl
and
rcll
sub
ljmp
stos
cld
and
insb
push
cmp
jnp
cmc
push
in
mov
cld
iret
lods
jmp
xchg
pop
mov
adc
es
xchg
popf
out
cmp
mov
inc
daa
sbb
cs
mov
in
daa
fstpl
mov
sbb
std
adc
adc
mov
sub
mov
rorl
arpl
add
push
or
lods
or
jmp
test
jae
jge
scas
dec
dec
int3
lret
cmc
pop
pop
adc
cwtl
lds
xchg
rorb
and
fcompl
push
movsb
and
adc
jb
cmp
adc
daa
sbb
pop
cmp
int
inc
push
scas
dec
aaa
mov
gs
mov
movsl
lahf
sarl
push
xor
pop
test
pusha
mov
inc
inc
popa
test
cmp
mov
sbb
inc
addr16
invd
loope
sti
xlat
sub
icebp
ja
and
xchg
push
cwtl
inc
jb
in
pop
stos
pop
adc
cmpsl
lods
jg
aaa
outsb
cmc
xor
push
call
js
rorl
add
ja
insl
repz
dec
jmp
subl
outsl
mov
sarb
lcall
cmp
mov
jp
and
addb
pop
ds
dec
movsb
sub
scas
pop
lret
imul
cmpsb
test
ds
lret
test
push
xor
or
loop
sub
jne
mull
inc
adc
loopne
xchg
push
cmp
xchg
push
cli
call
ja
cmp
or
or
jae
push
push
cwtl
cmc
jg
popf
xor
cmp
adc
pop
imul
fildl
xchg
adc
lods
adc
mov
xlat
mov
push
push
outsl
mov
in
or
cmpsl
sti
imul
das
mov
gs
xchg
mov
dec
pop
into
in
nop
fnsave
flds
test
add
push
sbb
push
scas
imul
lret
sbb
jnp
adc
rcrb
iret
jmp
aad
push
enter
dec
aas
test
jnp
cli
pop
cli
je
or
shl
insl
add
call
lret
mov
cmpl
cmp
test
lods
push
inc
lcall
mov
ret
test
rol
stc
testb
std
cmovp
cwtl
aad
add
sbb
mov
push
cmp
mov
xchg
cld
fnstenv
lret
out
xchg
mov
pop
mov
adc
lock
std
aaa
rcrb
xor
aam
and
es
cmp
insl
sub
jmp
sbb
mov
ljmp
popa
adc
cmp
mov
andb
unpckhps
and
mov
hlt
cltd
inc
or
test
mov
pushf
clc
hlt
add
xchg
aaa
sbb
rcrl
sub
mov
xchg
adc
decw
xor
loop
or
mov
mov
mov
cmp
bound
sbb
dec
dec
cwtl
jl
inc
loope
or
lcall
inc
sti
enter
cwtl
add
push
cmp
inc
lods
jns
dec
sbb
movsl
test
xchg
ja
jg
cmp
mov
fs
js
jg
add
mov
mov
mov
stos
mov
jne
mov
mov
fs
fnop
jmp
jmp
sbb
aam
push
fistp
xchg
or
and
stos
outsl
jbe
and
xchg
imul
jnp
push
and
in
lds
iret
or
ret
sbbl
lds
imul
cltd
popf
push
ret
inc
mov
rorb
nop
hlt
adc
push
sub
adc
test
scas
lods
push
fcoml
scas
outsl
adc
and
jb
xor
sar
arpl
push
inc
out
jle
or
loope
int3
aaa
stos
into
sbb
sub
int3
mov
push
pop
inc
pushf
jmp
or
stos
jnp
cmpsl
insl
push
scas
mov
mov
pop
push
mov
out
sub
stc
jge
out
sbb
mov
daa
sbb
jno,pt
sub
jl
mov
cmpsb
jl
push
bound
xor
jecxz
pusha
lahf
lock
test
sub
inc
idivl
pop
jno
enter
pop
or
sbb
loope
inc
subl
fdivrs
movsl
add
and
adc
popl
mov
mov
xor
mov
pop
inc
call
push
pop
add
lcall
xchg
fcompl
sub
push
adc
xchg
push
dec
jg
pop
ja
test
lea
mov
xchg
xchg
and
push
nop
iret
sahf
int
xchg
ljmp
sub
lret
repz
adc
insl
sbbb
int3
cmp
orb
add
in
loop
movsb
mov
imul
fidivl
xchg
cmp
inc
jae
out
rcl
cli
sbb
cli
xor
jae
lcall
into
cmp
cmc
inc
test
adc
pop
cmp
sbb
mov
dec
dec
or
mov
mov
lods
stc
out
mov
fcmovnbe
stc
loope
sub
inc
pop
mov
jbe
jp
sbb
push
gs
mov
dec
mov
fstpl
std
dec
in
call
xchg
lret
sbb
inc
std
jg
pop
pop
ljmp
pushf
daa
jne
jmp
repz
loope
aad
and
nop
in
sahf
cs
and
cmp
dec
jno
xor
dec
jecxz
xchg
mov
jo
clc
lea
mov
cltd
mov
in
dec
mov
or
adc
dec
lods
gs
fcmovnu
lock
pop
pop
ret
push
ds
inc
mov
mov
nop
rolb
push
sub
scas
and
rcll
mov
mov
cwtl
nop
popa
cmpsl
pop
data16
mov
jbe
mov
cld
add
and
pop
push
xchg
mov
sbb
nop
fwait
cltd
pop
add
jo
xor
sub
inc
aam
pop
out
ret
cltd
cld
pop
sbb
adc
pushf
dec
push
jno
xchg
sub
ljmp
in
xor
mov
cmp
bound
sbbb
je
movb
popf
rcrb
cmp
mov
push
adc
andl
das
js
xchg
push
xor
out
cli
mov
mov
out
pop
xchg
mov
pop
and
push
test
jae
jmp
or
or
xorl
repnz
xchg
sub
test
push
mov
jle
cmp
xor
xlat
ds
lods
pop
push
call
js
add
mov
push
xor
or
in
add
decl
mov
pop
sbb
ja
jp
and
mov
push
jae
scas
sub
dec
lods
loope
jne
fcompl
fcompl
jmp
jecxz
mov
out
ficomp
sub
cmc
sub
push
cltd
test
stos
loop
and
aaa
loopne
sub
inc
jnp
je
jle
push
pop
in
ss
pop
loopne
iret
imul
pop
daa
sbb
ljmp
push
lods
xchg
cmp
cmp
sbb
inc
aas
cld
fiaddl
cmp
sbb
jge
jle
scas
xchg
mov
inc
mov
xchg
xlat
hlt
inc
sub
arpl
insl
inc
repnz
or
pop
into
dec
aaa
imul
and
mov
jbe
fidiv
test
inc
scas
jg
or
pop
push
cmp
mov
loop
mov
loope
jge
dec
xchg
sbb
pop
xor
pop
xchg
cmp
sahf
loopne
js
pop
jl
loop
dec
adc
into
push
jl
adc
rcll
rdseed
push
fidivrl
mov
mulb
inc
popa
rcrb
cmpsb
fnop
pop
in
push
decb
pop
dec
fsubr
push
inc
cmpsb
loope
lods
out
shrb
cmp
bound
int
push
movsl
or
jl
into
icebp
adc
notl
add
xor
jl
arpl
or
pop
call
xchg
lcall
std
faddl
hlt
sub
mov
mov
jg
imul
idiv
dec
and
jns
xchg
mov
mov
idivl
daa
sub
mov
movsl
shll
out
jl
lret
sbb
cmc
test
mov
outsl
xlat
adc
loop
push
mov
fs
adc
fbstp
ss
fwait
pop
fdivr
jecxz
out
mov
cli
dec
push
mov
dec
pop
pop
cmp
dec
lea
push
cmp
cmc
or
std
lahf
pop
ja
sbb
out
xchg
imul
and
movsl
imul
loopne
rorl
nop
bound
pushf
and
cmc
icebp
in
loope
push
sti
leave
mov
jne
fisubl
je
loopne
push
clc
dec
sbb
inc
mov
iret
flds
mov
repz
insb
xchg
fidivl
cmp
and
popf
outsb
sbb
adc
nop
jmp
fildl
cs
aad
push
hlt
nop
enter
ret
nop
in
mov
scas
dec
call
mov
jecxz
xchg
jae
lahf
lea
push
push
mov
or
subl
sub
pop
inc
xchg
in
add
xorb
loopne
mov
and
and
shll
cmpsb
int
aam
pop
pop
enter
push
cmpsl
push
and
arpl
or
das
sbb
lret
int3
roll
mov
movsl
mov
lock
into
pop
pop
mov
sub
nop
xor
fildl
lods
es
bnd
cli
jns
dec
adc
js
fcomp
xchg
popa
inc
xor
pushf
in
cli
mov
pop
or
sbb
mov
rcrl
enter
enter
mov
xor
stc
push
fiadd
clc
push
aad
lods
xchg
stos
lahf
push
pop
fisttpll
stos
mov
es
jae
decl
inc
rorb
out
xor
adc
mov
xchg
sti
jmp
fild
test
fldt
dec
das
lods
stos
inc
outsb
ror
repnz
push
mov
add
outsb
mull
pushf
cld
jns
ss
mov
rol
mov
repz
mov
fcmovbe
ja
jbe
dec
jp
cwtl
jmp
mov
sbb
mov
jne
xchg
sub
push
out
xchg
fcoms
jmp
scas
mov
mul
pop
push
inc
sub
lock
out
push
fcomps
mov
insb
xchg
out
jnp
pop
sub
sbb
pusha
mov
push
inc
ret
xor
inc
cmc
sub
jae
and
push
outsl
cmp
cltd
dec
mov
fwait
pop
xchg
mov
ljmp
jae
adc
adc
adc
mov
lods
repnz
mov
and
push
hlt
aam
arpl
inc
cmc
push
bound
xlat
cmp
aaa
sub
or
add
int3
mov
pop
lahf
adc
ficom
imul
fnstsw
and
xchg
ret
movsb
jle
scas
push
or
jbe
jb
jge
cltd
aam
test
push
sbb
push
inc
loope
dec
repnz
jl
or
dec
test
push
sub
xor
cltd
lret
ss
cs
dec
push
lods
mov
xor
mov
inc
lock
cmpsb
pop
dec
xchg
in
outsb
pop
enter
pop
mov
push
ljmp
sarb
cmp
loope
movsl
adc
aas
popl
dec
mov
sbb
add
mov
sbb
dec
pop
mov
inc
js
cld
inc
pop
jle
in
andl
push
jb
or
mov
pop
sub
sub
adc
dec
inc
data16
icebp
imul
inc
mov
push
push
xchg
sbb
adc
mov
xchg
aaa
sti
div
test
lret
scas
sarl
push
sbb
pop
aaa
sahf
pop
push
jns
fimull
addb
mov
dec
loop
xor
cmpl
popa
ss
sbb
cmp
mov
add
cmc
adc
adc
xchg
cmp
movsl
push
or
or
into
add
fdivl
push
std
cmp
adc
and
imul
cmp
sahf
xchg
push
lods
cli
mov
adc
ja
mov
mov
dec
jb
sti
js
idiv
cwtl
cwtl
dec
gs
cwtl
loopne
or
mov
fnstcw
je
cli
sbb
xchg
push
mov
sbb
mov
gs
jge
jmp
adc
inc
pushf
jge
xchg
jmp
xchg
aad
out
nop
mov
popf
push
jb
repnz
pop
out
je
mov
jecxz
mov
int3
lea
mov
xchg
mov
scas
jns
inc
in
cmpl
or
sub
pushf
inc
sbb
cwtl
inc
jmp
test
mov
call
jb
mov
mov
std
add
xchg
adc
pop
inc
icebp
cmp
xchg
cld
pop
scas
sti
lret
cmp
cmpsb
mov
dec
outsl
mov
in
push
inc
nop
lds
fsts
sub
mov
aam
add
cmp
insl
loope
push
dec
or
ja
cmpsl
arpl
ljmp
push
mov
cmp
shlb
xor
add
out
rorl
cltd
out
in
frstor
fs
mov
jmp
clc
movsl
sbb
xchg
aam
rcrl
xchg
push
stos
xchg
cmp
out
aam
cmp
xchg
ljmp
stc
mov
stc
jmp
xor
sti
andb
adc
dec
inc
inc
xor
push
fucomi
dec
and
adc
data16
fnsave
cltd
fwait
loop
sbb
cs
sub
sahf
in
sbb
rolb
bound
sbb
jns
mov
ds
fs
mov
fmul
mov
xchg
and
addr16
movsl
jp
ret
push
nop
push
inc
mov
negl
dec
jb
and
lods
imul
cmc
hlt
xchg
stos
cli
mov
xchg
jns
int
jnp
inc
out
cmp
sub
jmp
cmp
or
scas
and
lods
insb
add
jnp
add
stos
rcll
pusha
cmp
sub
pop
xchg
pushf
mov
jae
and
popf
mov
lds
loope
fisubrl
pop
xor
jmp
imul
scas
clc
das
push
sbb
je
adc
aas
mov
sub
lods
xchg
hlt
fcmovbe
js
jne
test
test
rolb
push
out
rorb
aas
sahf
popa
add
sub
mov
jbe
fdivp
mov
cmp
clc
adcb
cmp
sub
or
jecxz
xor
jge
lods
sbb
daa
adc
lcall
lock
cmc
dec
repz
pusha
xor
hlt
fnstenv
push
sub
test
mov
inc
jg
daa
cmpsb
loopne
pop
in
aam
inc
enter
pop
jle
push
inc
or
gs
stos
sub
push
cmp
sbb
ds
cmpsl
movsl
sbb
mov
add
inc
popa
mov
out
cmp
add
mov
xor
cmp
add
pop
mov
ret
js
loop
pop
std
jp
lcall
daa
fcompl
adc
outsb
xcrypt-cfb
adc
daa
cmc
adc
shrl
fcmove
mov
pushf
mov
iret
out
cltd
mov
inc
int
mov
xchg
divl
xor
rcll
mov
mov
sahf
incl
xchg
xchg
cmpb
dec
jl
push
xlat
push
or
cmp
mov
sub
mov
xchg
jb
xlat
out
clc
call
xor
mov
xlat
or
movsb
cmpsl
into
jecxz
aam
fwait
and
xor
fnsave
adc
push
aam
fbstp
add
mov
lods
scas
and
mov
rcl
mov
add
mov
mov
cmp
mov
out
loopne
fnop
dec
fsts
cmp
adc
xor
repz
or
repnz
rol
cld
mov
adc
cmp
jmp
divb
mov
cmp
push
nop
jle
mov
add
lods
dec
pop
jbe
xorb
jns
mov
jae
test
addps
aam
mov
inc
sbb
insl
sbb
rcrl
mov
rolb
or
mov
lahf
jo
and
sbb
incl
fdivrp
stos
je
cwtl
rcrl
adc
lahf
mov
adc
cld
test
mov
loop
mov
push
je
mov
sub
shr
cltd
sub
aam
ret
inc
ds
mov
and
xchg
out
adc
mov
repnz
jb
in
mov
jae
movsb
outsb
push
and
push
fdivr
setno
add
mov
leave
test
push
push
mov
sbb
push
fs
dec
fnop
dec
sbb
loopne
mov
sbb
mov
mov
xor
cli
out
inc
and
xchg
cs
push
push
adc
dec
les
dec
jnp
or
sub
mov
lcall
test
stos
int3
ja
and
adc
das
rorb
mov
cli
push
sar
push
add
in
sbb
lret
adc
mov
in
jbe
xchg
mov
mov
cmp
pop
push
add
lea
mov
cmpsl
mov
fnstenvs
jne
sub
mov
popa
sbb
xchg
jle
sub
sub
xchg
inc
ss
or
push
out
xchg
cltd
sub
out
push
push
push
add
ret
cmc
in
insl
xor
jle
adcb
cmp
cmpsl
ds
mov
inc
pop
int3
popa
and
imul
mov
mov
adc
push
adc
shl
pop
pop
add
pusha
add
in
es
mov
addb
adc
adc
and
repz
sti
outsb
cmp
int
std
aaa
cmpsb
pop
dec
or
xlat
scas
add
xchg
arpl
pushf
xchg
cltd
psllw
out
out
rclb
pop
scas
sbb
mov
rolb
cmp
popa
xchg
add
jne
push
jge
fimull
daa
adc
arpl
mov
inc
pop
jl
xlat
adc
mov
push
out
stos
int3
xor
dec
cld
je
insb
xor
push
push
push
adc
mov
fldl
cli
stos
cmpsb
arpl
in
mov
fldcw
push
sbb
clc
push
loopne
jl
jmp
cmp
ret
pop
inc
je
lahf
or
pop
cld
sub
sbb
call
cmpsb
lds
xchg
js
pop
aad
jl
ds
leave
fmull
sbb
sub
mov
jb
rclb
add
pop
mov
test
mov
xor
test
je
pushf
xor
int
xchg
fisubrl
mov
mov
shl
inc
mov
mov
jmp
cmpb
outsl
je
xchg
loop
xchg
cltd
stc
or
test
into
adc
test
out
jbe
leave
mov
sub
bound
cli
out
out
xor
insb
mov
or
int
cmc
leave
xor
cmp
aam
mov
push
mov
add
push
data16
dec
jnp
xchg
push
mov
cmc
mov
sub
cld
lea
and
cmp
mov
fdivp
xlat
gs
xor
decb
hlt
arpl
in
adcl
or
fistl
inc
and
cmp
xchg
pop
mov
clc
adc
jo
pushf
sarl
jmp
sub
aad
imul
ret
stos
je
dec
dec
jne
je
sub
adc
jl
jle
fiaddl
aad
test
mov
push
mov
pop
add
fistl
mov
push
and
outsb
cmpsl
das
or
adc
push
cld
ss
adc
notb
stc
loopne
jl
xlat
cmpsl
adc
mov
call
dec
loope
sbb
dec
mov
outsl
aam
xor
jecxz
cld
aam
pop
jl
sarb
lret
aam
sti
mov
aad
xlat
es
dec
pop
dec
add
scas
xchg
and
sbb
mov
sarb
ror
and
in
jge
stos
and
adc
xor
repz
inc
mov
xchg
adcl
mov
sbb
xchg
pop
cmc
rorl
lahf
pop
fisubr
out
mov
movsl
push
push
lock
in
lahf
arpl
xor
leave
inc
mov
popf
mov
cli
test
out
pop
ja
out
push
dec
or
jo
xor
jp
inc
cli
sbb
je
hlt
add
or
insb
out
jecxz
pop
bound
mov
in
inc
xchg
xchg
add
sti
mov
or
mov
or
jae
bnd
ss
ds
mov
aad
or
cmp
jne
rcpps
arpl
fldl2t
and
xchg
pslld
sbbl
and
loope
clc
push
xchg
sbb
and
ds
fadds
fwait
jnp
mov
push
in
loop
pusha
jae
out
out
je
js
sub
lret
mov
push
cmp
je
jl
mov
mov
xchg
inc
cmp
mov
minps
xor
imul
scas
pushf
aad
push
cmpsl
xchg
ret
adc
jp
mov
xor
inc
hlt
jo
cmp
push
adc
int3
or
dec
add
gs
and
and
jbe
int3
dec
arpl
pop
sub
push
fidivr
sub
insl
xchg
shrb
es
sti
sti
and
cmpl
aas
jne
pop
mov
push
imulb
dec
jbe
fisub
shl
sbb
push
jmp
adc
sti
jno
test
jl
jnp
dec
sarl
push
xor
xor
stos
xor
lahf
mov
jb
es
test
and
sbb
mov
xchg
adcl
xor
mov
xchg
shll
push
iret
ds
mov
and
cmp
sbb
jle
add
xchg
icebp
xor
sub
pop
add
mov
sti
xor
lcall
pusha
fdivl
cli
pop
outsb
aad
adc
fstl
es
stos
mov
int3
push
mov
repnz
push
lahf
out
lods
int
dec
cmp
pop
stos
pushf
divl
mov
xorl
xchg
mov
mov
sbb
setle
add
xchg
mov
loop
adc
stc
mov
lods
int3
adc
inc
cmp
cmp
call
push
scas
cli
sbb
mov
mov
or
shll
xor
cld
pop
repz
adc
dec
imul
roll
fcoms
lods
jl
ret
adc
xlat
xor
cmp
push
sub
mov
test
incb
push
dec
gs
call
lods
dec
xchg
aam
inc
add
ja
push
cmp
iret
repz
xchg
sbb
push
add
cwtl
adc
scas
pushf
jle
imul
ret
cs
inc
rcl
lret
nop
xor
scas
aas
aas
fisttpl
std
xor
les
stos
je
decb
jecxz
add
jg
bound
add
scas
insb
mov
push
mov
dec
inc
mov
fwait
pop
mov
inc
mov
icebp
inc
cmp
nop
das
jmp
adc
or
pop
mov
popf
fist
fld
adc
stc
popa
pop
cwtl
aaa
xchg
loopne
adc
mov
mov
pop
xor
mov
mov
lock
sti
dec
mov
pop
fdivrs
rcll
sub
jmp
pop
jbe
ret
adc
es
xchg
insl
xchg
pop
cmp
xchg
fs
xor
movsb
sbb
les
fsts
and
xchg
in
dec
or
jbe
mov
lods
test
lods
fbstp
ljmp
clc
push
imul
jbe
mov
pop
mov
stos
pop
cmpsl
add
push
in
pop
xchg
mov
xchg
incl
cli
bnd
or
ror
xor
scas
mov
mov
pop
sbb
test
leave
and
xchg
ds
dec
sti
inc
movb
cmpsl
or
inc
sbb
pop
aaa
inc
add
and
out
ret
ret
fwait
shrl
out
or
lret
mov
movb
jp
jge
mov
pop
mov
mov
dec
sbb
jne
push
fdivs
aaa
fstl
sbb
xchg
fiaddl
lcall
test
sub
fdivr
int3
push
aam
inc
stos
and
mov
insb
inc
adc
jnp
cwtl
movsl
jle
mov
in
inc
jno
push
xchg
or
inc
mov
mov
xor
inc
and
xchg
jae
mov
push
jnp
daa
popf
add
inc
mov
pop
push
xchg
sbb
pop
sbb
call
sub
out
test
mov
mov
repnz
xor
ljmp
hlt
mov
sti
jge
add
cs
and
inc
or
gs
add
rclb
cmp
leave
pop
pop
xor
pushf
scas
rorb
scas
fidivrl
sub
neg
cmpb
rcll
test
inc
mov
mov
stos
push
sbb
inc
xchg
cmp
fistl
stos
sub
pop
dec
inc
scas
test
mov
jns
pop
xor
jge
lahf
stos
out
push
stc
mov
ficom
push
cmpsb
imul
aam
cli
out
pop
test
aaa
push
mov
sub
jnp
cmp
inc
lea
jl
push
movsl
sub
jnp
jle
and
sub
movsb
xor
push
dec
cmp
pop
sub
js
or
pop
jp
jne
dec
xchg
mov
fcompl
mov
outsb
cmp
aam
pusha
push
push
sarb
dec
ret
mov
loope
mov
in
mov
add
and
push
mov
int
call
push
lret
add
adc
enter
aas
adc
call
sbb
xorb
push
loop
ret
jbe
inc
lods
js
adc
insb
ss
pop
mov
fsubs
ret
dec
and
xor
bound
or
into
mov
lock
lock
jle
push
pop
cltd
imul
movl
stos
aad
lods
arpl
mov
rcl
jae
add
fistl
mov
in
clc
inc
sti
xor
sub
and
int
dec
lcall
loopne
mov
dec
idivb
or
push
pushf
les
jle
rep
icebp
scas
xchg
pop
mov
sbb
mov
or
sbb
mov
les
shr
mov
add
mov
mov
adc
push
aas
fdivp
or
push
or
xchg
dec
je
and
sub
movb
imul
xorb
mov
cltd
lds
cs
out
repnz
pop
xor
inc
cmp
mov
push
jo
das
lret
mov
call
and
add
shr
jae
negb
aam
mov
popl
adc
icebp
xchg
mov
push
lret
not
cld
mov
fsubrl
mov
negb
mov
mov
mov
ret
repz
sub
inc
dec
clc
pushw
xchg
mov
outsl
mov
mov
in
lods
mov
scas
mov
or
cld
push
mov
scas
jb
add
mov
cltd
ret
int
test
pop
mov
inc
out
lods
outsl
or
cmp
push
daa
xchg
scas
mov
pop
xor
xor
dec
push
leave
out
imul
mov
jmp
sarb
cmp
arpl
mov
sub
test
fnsave
adc
out
sub
inc
popa
fs
or
inc
push
sahf
mov
jo
mov
dec
gs
mov
push
dec
jns
mov
lock
mov
add
repz
andl
ret
clc
push
mov
mov
out
incb
jne
add
xor
xchg
negl
inc
xchg
movsl
add
jmp
xlat
jl
push
adc
insl
stos
xchg
add
pushf
notl
insb
scas
in
mov
jle
inc
loopne
push
adc
test
lods
xchg
ret
xchg
pop
jno
fild
sahf
jae
rcll
daa
pop
and
cmp
xchg
fidivl
and
jg
imul
fwait
scas
bound
arpl
jge
movsl
mov
jns
xchg
leave
jbe
pop
hlt
push
adc
arpl
in
or
ds
aaa
jecxz
mov
add
mov
and
pop
mov
js
jnp
xchg
shlb
mov
icebp
cli
cmp
out
movsb
xor
push
fs
adc
mov
push
inc
mov
cmp
jno
es
aas
jmp
push
xchg
sbb
xor
pusha
fistpl
leave
vrsqrtss
ret
xchg
test
mov
test
in
cmpsl
fucomi
jo
aad
cmc
lret
mov
push
mov
push
sub
dec
lret
cmp
cmp
and
data16
frstor
mov
sbb
fadds
out
or
es
aad
push
rcrb
push
xchg
jo
das
inc
sbb
stc
clc
sbb
add
pop
push
and
mov
sub
cmpsb
outsb
fwait
and
adc
xchg
andb
out
dec
xchg
mov
pusha
in
mov
fs
and
adc
push
movsl
rolb
adc
test
divl
add
mov
mov
sbb
loop
test
sub
lret
pop
loop
adc
sub
sub
cltd
lds
enter
scas
dec
ds
pop
lods
scas
out
mov
out
pop
push
sarb
jecxz
or
test
nop
cmc
mov
adc
pop
outsl
pop
xor
adc
in
movsb
imul
mov
add
add
sub
lods
dec
inc
mov
xlat
mov
subl
daa
and
sti
jecxz
test
inc
and
loopne
aam
dec
push
mov
xchg
mov
or
xchg
pop
rcrl
sbb
ficom
xbegin
sub
adc
xchg
pushf
aam
fsubr
mov
out
aad
scas
mov
aas
jge
push
jb
add
cltd
sub
lods
lcall
test
lea
insl
call
ret
mov
out
xor
stos
clc
pop
aam
faddl
fiadd
pop
das
test
icebp
and
and
divb
negb
lock
inc
fistp
cwtl
lods
sbb
movsl
mov
insl
js
cld
xor
lret
ljmpw
mov
mov
insl
lock
xchg
xor
cmovae
popf
addr16
clc
jg
scas
std
xor
fs
fisttpll
adc
push
ljmp
sub
scas
ret
mov
mov
out
prefetch
or
imul
adc
fdivs
jo
je
movsl
push
int3
aad
xchg
pop
insb
sbb
addr16
push
mov
xchg
stos
cmp
push
out
int3
xchg
push
orl
sahf
or
jne
mov
cmpsb
pop
ljmp
cmp
ja
push
dec
loope
mov
clc
mov
and
pop
inc
stos
add
pop
xor
out
sub
bound
mov
in
test
xchg
out
dec
mov
mov
cmp
sahf
addr16
jae
lcall
mov
and
dec
loope
cmpsb
jne
mov
lahf
scas
ffreep
ja
xchg
lret
jmp
jo
cmc
addl
out
mov
mov
nop
rcll
push
aas
stos
pop
pop
or
mov
jo
sbb
sbb
mov
enter
jbe
add
ffree
mov
jg
test
push
inc
aaa
fbstp
adc
add
lret
jl
inc
mov
jb
xchg
jg
sbb
pusha
add
dec
mov
jl
push
pop
out
fdivrs
int3
dec
jno
in
jns
hlt
push
mov
arpl
adc
pop
lahf
pop
or
mov
and
or
ret
icebp
push
push
enter
fucomp
fisub
mov
sarb
scas
cwtl
shrb
cmp
mov
movsb
jo
push
jecxz
mov
pop
iret
jge
or
jle
adc
and
xchg
sub
mov
push
dec
push
loopne
push
jp
xor
mov
test
push
lahf
sti
adc
sbbl
cmpsb
outsl
mov
in
push
enter
inc
inc
pop
add
and
sub
repnz
cmp
test
movsl
cmp
pop
and
aas
in
cmp
adc
xchg
into
add
cwtl
aam
cmc
orl
js
idivl
or
or
jl
fdivl
sub
mov
shrb
sub
mov
ljmp
add
mov
in
movsl
push
test
dec
jl
mov
js
add
jno
mov
pop
jns
roll
mov
jae
sbb
dec
xlat
sahf
fstpt
add
mov
lock
loop
rorl
in
cld
fs
or
ret
ss
cmp
sbb
mov
out
xor
xor
in
and
or
cmpsl
into
push
xchg
jmp
jle
xor
sbbl
mov
imul
cwtl
fiaddl
mov
lods
xor
arpl
icebp
ret
mov
mov
into
movsb
adc
xchg
cwtl
leave
push
scas
gs
pop
sbb
adc
xchg
cs
inc
and
repz
xchg
pop
xchg
loop
int3
sbb
sbb
ja
push
adc
fstps
mov
in
aad
fwait
int3
nop
lds
sub
jmp
ret
je
pushw
jecxz
movsb
lret
mov
jnp
jbe
sbb
jbe
sub
imull
daa
dec
add
xchg
push
inc
xchg
pop
ja
outsb
inc
inc
stos
flds
ret
mov
xchg
mov
push
inc
out
mov
mulb
repz
cwtl
push
into
xor
inc
push
test
pop
jg
lret
aad
mov
into
mov
sub
lock
sti
sub
or
lahf
sub
or
sub
adc
es
out
insl
dec
loop
dec
out
pop
sti
xchg
and
pop
ljmp
in
lods
mov
push
mov
mov
mov
insb
dec
add
pusha
push
inc
cltd
xor
push
test
lods
xchg
mov
or
push
xor
fisttpll
ljmp
aam
shll
ja
sub
mov
das
ret
xchg
adcw
ret
push
sub
jmp
sbb
xor
push
pop
mov
test
idivl
test
int
ja
inc
xchg
pop
cmpsl
inc
cmp
fwait
cld
xchg
push
add
push
add
out
pop
cmp
bound
mov
rcll
xchg
rcrl
pop
negl
lock
subl
mov
movsb
push
mov
xchg
mov
dec
les
cmpsl
jne
out
mov
and
popf
repnz
popf
daa
add
std
adcl
sub
or
cmp
xchg
lcall
lret
insb
test
xchg
jnp
adc
jl
mov
pusha
fild
ret
and
xlat
lcall
test
push
les
popf
jne
pop
mov
aaa
lock
fcmovu
mov
xchg
sbb
pop
xlat
imul
out
sub
mov
ret
mov
adc
xchg
adc
pop
adc
leave
fs
fs
pushf
lods
pop
arpl
test
or
xor
aaa
popa
and
or
jg
add
out
pop
call
jne
lds
ret
cld
scas
ja
movsl
and
push
pop
movsb
dec
fs
push
xor
dec
jge
xchg
sahf
sbb
xchg
daa
prefetchw
mov
xchg
sbb
inc
dec
lea
fidiv
push
aam
lahf
pop
nop
notl
addr16
pop
sub
inc
fnstenv
int3
cmpsb
repnz
in
jne,pt
enter
pop
inc
rclb
aaa
jecxz,pn
out
adc
fidivrl
notb
ds
sub
cmpsb
mov
gs
imul
mov
les
xchg
and
pop
lahf
xor
js
imul
iret
xor
je
fcompl
mov
and
or
dec
mov
mov
mov
jecxz
dec
daa
sbb
repz
push
push
stos
int
sbb
repz
sub
xor
inc
rcr
mov
pop
sub
sahf
rol
popa
test
dec
outsl
iret
and
loop
push
push
stc
fwait
ret
dec
fs
mov
ss
test
aas
out
xor
out
mov
push
out
cmp
bound
or
inc
dec
xor
and
pop
outsl
xchg
mov
xchg
rcll
into
ljmp
xchg
lods
sbb
xlat
xor
enter
je
cmp
ja
inc
cmp
decb
pushf
mov
lods
dec
je
adc
inc
dec
add
cli
xchg
mov
repz
dec
jnp
movsl
jo
sbb
push
lret
mulb
mov
adc
lahf
pushf
sub
sub
jle
enter
icebp
aad
in
xchg
nop
mov
imul
nop
jge
inc
xchg
jecxz
mov
popf
frstor
call
inc
xchg
pop
mov
inc
and
pusha
dec
movsl
dec
out
in
fstpt
push
inc
int
sbb
mov
or
js
jp
jmp
fxch
dec
mul
in
std
xchg
in
ficomp
push
lods
icebp
mov
sbb
cld
xchg
mov
inc
lea
dec
mov
ljmp
pop
gs
stos
aam
test
mov
mov
xchg
adcl
jo
leave
popa
sti
enter
xlat
jb
int
cld
mov
and
mov
lret
mov
xlat
cltd
push
push
mov
push
testb
mov
pop
clc
inc
xchg
sub
inc
cmc
fst
dec
and
xchg
stos
sbb
addr16
xchg
icebp
hlt
xchg
fcoms
push
aaa
ficompl
xor
stc
sub
sahf
aad
xor
mov
mov
lods
jae
dec
pop
xor
ja
movsl
xor
sbb
inc
fnsave
fwait
sub
add
ss
ds
fldenv
sub
jns
mov
xchg
jmp
mov
in
mov
mov
lcall
mov
xchg
mov
add
aaa
dec
cmpsl
into
xchg
jne
pop
in
mov
mov
arpl
hlt
mov
inc
andl
je
imulb
enter
shrb
xor
loope
cmp
jnp
pop
or
in
ret
adc
jp
or
ret
ret
cmpsl
pop
push
jne
inc
dec
in
jae
push
xchg
inc
mov
mov
mov
mov
xchg
je
pop
sbb
daa
nop
imul
mov
push
or
adc
mov
jb
push
leave
fistl
hlt
out
jae
fidivr
dec
inc
or
cmp
aaa
and
pop
add
ror
fsts
fisubr
pop
lds
daa
mov
mov
adc
inc
jae
cmp
adc
adc
jge
sbb
scas
sahf
cmp
mov
jno
test
jb
cld
and
push
inc
and
jnp
sub
lahf
es
push
inc
pop
xor
push
sbb
bound
jne
cmpsb
jne
imul
and
repnz
addb
loope
sub
xor
or
movsl
dec
cmp
cli
je
jl
stc
sbb
cmp
mov
push
xor
add
js
pop
nop
pop
jbe
jg
sbb
push
sub
repnz
mov
popf
outsb
les
shlb
inc
jg
fimul
out
and
pop
push
mov
and
fdivl
dec
inc
out
outsb
mov
pop
lret
int
jno
fwait
mov
fs
je
int
adc
daa
sbbb
outsl
scas
ja
loop
nop
jp
push
das
fs
add
mov
cli
ss
ja
mov
loopne
fdivp
out
mov
cli
sbb
push
or
cmp
sbb
pop
cmc
or
ljmp
ds
adc
adc
sbb
adc
pop
aas
add
cwtl
lods
pushl
dec
xlat
outsl
in
sub
push
mov
movsb
push
int3
sti
lock
cli
imul
inc
mov
add
or
les
push
repz
popa
xchg
push
or
loope
jne
das
pop
call
loop
pushf
aad
fldpi
insl
jbe
cs
mov
sbb
pop
xchg
mov
pushf
fcoml
dec
pop
lret
je
sti
data16
adc
lea
call
call
mov
mov
dec
fcmovb
xchg
scas
mov
addr16
push
lods
or
fs
pop
sbb
mov
iret
shrl
insl
sub
sub
std
cmp
push
cwtl
fidivr
cmp
or
pop
test
repnz
mov
lret
mov
mov
shll
or
pop
ss
shrb
cmc
push
ret
das
into
cmc
es
mov
xchg
dec
in
push
xchg
lahf
lea
ljmp
ret
lods
pop
cmpxchg
cltd
das
aaa
and
mov
pop
cvtpi2ps
rolb
int3
xor
xor
loop
push
mov
les
mov
adc
cmc
leave
adc
pop
loopne
sahf
stos
or
xchg
xchg
pop
lahf
sub
and
and
sbb
xchg
sbb
or
adc
ja
scas
sub
dec
jle
scas
test
mov
ja
mov
dec
mov
mov
js
pop
gs
inc
je
add
stos
push
jnp
sbb
inc
insl
jns
sbb
in
add
mov
outsb
sarb
push
sbb
mov
loopne
mov
outsl
fwait
pushf
dec
mov
mov
fistp
orl
sarl
xor
insb
out
lds
jae
or
push
and
clc
inc
lea
call
jle
in
pop
in
sbb
pusha
adc
outsb
lret
inc
inc
pop
dec
mov
inc
pop
xor
imul
ret
dec
idivb
xor
sbb
leave
add
ljmp
adc
push
repnz
ror
fcomp
hlt
xor
jp
adc
popa
push
fbld
pop
add
mov
int3
iret
mov
je
push
mov
lds
jns
scas
xor
pop
xchg
cld
in
movsb
popa
inc
aas
push
rcr
test
jge
dec
sbb
dec
daa
or
lods
jl
fsubp
out
dec
mov
jg
and
xor
int3
sbb
lahf
inc
push
push
sbb
xor
push
in
pop
inc
div
xchg
or
dec
enter
pop
mov
jno
loope
cwtl
lret
fiaddl
cmp
ds
mov
and
stc
fimull
sub
add
mov
bound
sbb
pop
in
imul
mov
lcall
jb
mov
jno
add
outsb
outsb
daa
loop
adc
decl
jg
into
les
sarb
mov
and
cmpsl
ret
aam
int
push
inc
sub
sub
lret
pop
rorl
mov
xchg
fstpl
cltd
insl
dec
xorb
outsl
iret
adc
stc
or
pcmpgtb
adc
adc
dec
pop
xchg
out
mov
daa
xor
mov
into
sti
in
lret
cmc
rcll
pop
pop
lods
out
cltd
adc
sbb
mov
cmp
xchg
inc
add
xlat
scas
mov
mov
ret
sti
lahf
iret
pop
mov
gs
inc
loopne
push
jle
shrl
inc
je
popf
fldcw
add
pop
sbb
std
xchg
sub
ficomp
lret
hlt
mov
fwait
pop
mov
ja
xchg
pushf
subb
pop
push
xchg
mov
mov
sarb
ret
out
and
mov
sbb
jecxz
lods
xchg
lea
mov
mov
lcall
mov
dec
lds
fcmovnu
mov
sub
fildl
ficom
das
and
ret
fs
cmpsl
adc
ja
pop
imulb
test
cwtl
cltd
sbb
cmpsl
or
ret
mov
leave
lret
sbb
fstl
xor
mov
xchg
or
pop
push
inc
rolb
fistp
aam
cmp
mov
mov
jecxz
fistp
lcall
outsl
mov
lret
mov
mov
mov
sub
mov
cltd
xchg
test
mov
xor
fldl
inc
xchg
mov
and
test
pop
shrl
aas
stos
clc
xor
out
pop
sub
xchg
push
sub
in
jnp
inc
addr16
xor
insl
scas
or
or
xchg
push
call
ja
icebp
jno
lods
aas
lds
mov
or
mov
fstps
jmp
push
inc
add
mov
bound
adc
dec
xor
sub
and
mov
push
mov
sub
mov
jp
in
or
pop
xor
mov
fidiv
dec
insl
inc
or
xor
mov
and
cmp
test
loop
jmp
addl
loopne
pop
nop
or
push
add
shrl
mov
pcmpeqd
insb
lds
stc
jle
cmp
in
pusha
mov
inc
iret
subb
std
pop
sub
test
leave
jae
add
push
or
test
mov
mov
mov
xchg
and
jo
aam
in
scas
push
pusha
or
cwtl
insl
rcll
cmc
scas
mov
sbb
cli
hlt
jge
out
cld
jae
inc
adc
jl
pop
push
test
pop
sub
sahf
das
stos
or
out
movb
in
int3
mov
pop
and
mov
jbe
push
push
sti
shr
inc
scas
adc
shlb
js
cmp
mov
jbe
or
mov
cld
sbb
inc
xchg
daa
or
jle
push
pop
xorb
xchg
jl
sub
dec
fidivl
push
push
xchg
lahf
xor
daa
fild
push
jmp
push
test
scas
adc
inc
xchg
enter
scas
enter
pop
jno
push
and
sub
mov
add
ds
arpl
ja
dec
mov
dec
hlt
sbb
in
add
mov
fstpl
xor
js
dec
pop
je
push
lcall
neg
pusha
cmp
cmp
repz
adc
fidivl
jmp
lea
mov
dec
mov
inc
sbb
and
ror
dec
cmc
sub
imull
xor
es
and
lahf
cs
sbb
inc
hlt
test
adc
adcb
outsl
insb
sub
lods
das
psubw
pop
pop
fs
daa
pop
adc
xchg
ss
shr
cmp
add
inc
fwait
cli
jg
fidivl
mov
and
push
imul
lcall
pop
int3
mov
cmc
imul
push
frstor
dec
fsubrs
cmp
sub
in
adc
sub
jp
in
jp
or
dec
mov
xor
mov
aam
xor
inc
xchg
ret
insb
jl
test
xchg
out
inc
sbbl
int3
mov
pop
dec
out
push
adc
rclb
sub
jmp
pop
adc
add
hlt
nop
xor
aas
cwtl
imull
jb
lahf
lods
dec
add
loopne
jecxz
mov
xchg
pop
lock
push
ret
mov
mov
ds
andl
dec
jl
add
arpl
inc
leave
inc
stc
push
cmp
add
xchg
mov
push
push
and
scas
in
rol
adc
std
mov
popf
cwtl
push
mov
cmpsl
or
mov
mov
lock
mov
es
mov
jnp
lock
pop
pop
je
push
rclb
sub
iret
ret
dec
pop
outsl
es
mov
dec
fisubrl
xchg
sbb
sbb
lods
xor
test
call
mov
call
adc
cltd
or
inc
pushf
mov
enter
scas
inc
frstor
mov
push
xchg
fcmovnbe
add
sub
mov
addr16
lcall
jecxz
aaa
testb
push
and
mov
mov
dec
dec
cmp
sub
int
out
mov
cltd
add
mov
fwait
mov
add
mov
out
fistpl
pop
jns
push
in
mov
xchg
jp
ljmp
or
imul
pop
ja
imulb
mov
push
lock
mov
out
test
pop
pop
adc
jmp
addr16
adc
das
out
xor
sub
mov
repz
stos
inc
mov
xor
es
shlb
jl
fwait
pusha
dec
aaa
icebp
iret
fbld
ret
mov
and
inc
outsb
shrl
in
cmpsl
sub
shlb
into
popf
adc
sbb
dec
fisubl
and
imull
lods
pusha
scas
mov
je
fistp
adc
xor
imul
leave
inc
dec
inc
hlt
enter
or
fildl
or
fsubrs
and
aaa
pop
cmp
or
cmp
movsl
stos
mov
push
mov
movsl
add
rolb
les
sti
enter
cmp
mov
jbe
cwtl
pop
jge
xchg
leave
sbb
test
bnd
mov
cmp
dec
inc
scas
push
jmp
push
inc
jo
mov
lahf
adcl
push
or
jp
insl
inc
adc
cmpsb
popa
in
ficoml
adc
pop
cmp
test
loope
stos
xchg
sub
cltd
mov
jno,pt
xchg
movsl
pop
cli
ja
adc
sub
test
cmpsb
xor
insb
ja
mov
sub
js
lods
les
rep
mov
xor
xchg
push
das
xor
fmull
cmp
sub
shr
in
clc
and
mov
cmp
mov
mov
mov
pushf
push
and
or
int
es
fcomip
adc
lret
push
ss
or
dec
push
test
push
jae
dec
mov
loop
dec
lahf
stc
ja
mov
adc
mov
jle
cmp
rolb
push
movsl
cli
mov
enter
push
cmp
dec
orb
stos
push
cmc
popa
pushf
and
cmp
fstps
pop
ss
xchg
pop
imul
in
mov
pop
cs
mov
mov
hlt
mov
sub
ret
add
in
in
push
sti
std
jb
sbb
inc
adcb
dec
rolb
pop
mov
les
aaa
repz
aam
xchg
mov
sbb
movsl
add
repnz
pop
add
mov
and
cld
sub
cs
aad
sbb
aas
aaa
xor
xchg
dec
loop
jl
mov
xor
xchg
mov
xchg
xlat
dec
lea
pop
call
cmp
js
mov
lret
cmpl
sbbl
lahf
jne
adc
fwait
das
jecxz
and
lds
stos
rcll
dec
test
xor
lock
or
mov
ja
arpl
xor
sub
mov
leave
sti
lock
call
enter
test
mov
or
ret
faddl
mov
rcrb
into
in
dec
aad
insb
xchg
pop
jg
ljmp
fldcw
mov
mov
loop
fbld
inc
test
add
notl
test
push
mov
mov
dec
call
adc
push
or
pop
ror
pop
loope
or
push
aaa
imul
push
push
xor
pop
mov
mov
lods
rolb
mov
xchg
mov
xchg
xor
inc
lret
clc
or
adcb
out
pop
push
das
cmp
add
sti
je,pn
mov
iret
jge
push
xchg
push
xchg
leave
pop
mov
sti
int3
sbb
sahf
lods
jns
push
inc
jp
push
mov
int
and
mov
dec
xor
push
fistpll
cmp
rorb
xchg
xor
andl
mov
sub
decb
mov
xor
stos
mov
ds
fwait
and
jnp
pusha
jle
mov
in
jg
pusha
out
fwait
iret
imul
inc
jns
imul
sub
xchg
xor
cmp
jb
mov
mov
xchg
shl
test
imul
push
push
xor
adc
jae
push
out
out
mov
cli
daa
hlt
adc
arpl
mov
inc
or
fwait
jbe
sbb
dec
or
mov
int3
nop
in
push
pop
ss
imull
jo
and
je
shl
push
and
fnop
movsb
add
dec
push
mov
lcall
insl
dec
fbld
or
cmp
fs
leave
test
push
int3
rorl
xor
fstpl
lds
mov
test
inc
dec
loope
movsb
pop
push
cmpsb
andl
enter
pop
jl
mov
jbe
and
jmp
into
cmp
ds
push
mulb
lods
push
in
enter
loopne
pop
add
js
xor
data16
arpl
jl
loopne
js
out
xor
lcall
lret
push
push
sub
lods
jp
push
repnz
cwtl
rclb
mov
mov
in
mov
dec
add
mov
daa
int
jecxz
sub
dec
imul
cmc
mov
or
push
ror
jnp
imul
dec
jb
add
cmp
mov
outsl
sub
loop
sahf
dec
stc
cs
pop
fs
repnz
cmp
jnp
and
loop
cli
in
and
cmp
test
fwait
orl
lods
into
movsb
fcoms
sub
and
pop
loopne
cmpsb
xchg
dec
imul
cld
add
int
retw
lods
fwait
inc
outsl
mov
dec
js
imul
jae
mov
push
cmpsl
push
sti
lods
ljmp
xchg
sbb
mov
xchg
dec
out
imul
xor
push
mov
xchg
je
fstps
jnp
pop
jno
es
mov
out
adc
pushf
addl
aad
pop
repnz
out
hlt
aas
insb
or
xor
repz
xchg
adc
mov
add
loopne
inc
call
sti
xchg
adcl
movsl
fldt
imul
jecxz
jo
xchg
inc
das
cltd
add
ret
mov
jl
jno
dec
shll
divb
pop
std
fsubs
mov
cmpsl
or
bound
dec
test
pop
and
mov
jp
lock
mov
sar
pop
dec
sub
mov
ret
imul
es
rorl
insl
mov
cmp
xchg
fwait
cmp
scas
dec
sub
lods
or
jecxz
and
mov
sub
push
cltd
jnp
jl
popa
mov
mov
mov
lods
fnsave
pushf
clc
imul
push
mov
and
xchg
stos
lds
out
subl
and
add
lcall
mov
dec
xor
pop
mov
mov
mov
mov
inc
das
dec
xchg
inc
or
and
fwait
push
push
xchg
push
shlb
add
push
lahf
ret
bound
jns
mov
in
bound
and
jb
pop
pop
jmp
imul
movsb
pop
test
mov
cltd
dec
dec
push
and
jne
addr16
mov
int3
mov
xchg
movsb
xchg
jmp
std
push
mov
out
insb
inc
sub
scas
dec
lret
mov
mov
insb
push
mov
lcall
push
out
iret
popf
outsl
ds
push
inc
test
outsb
jae
mov
push
popf
pop
jg
mov
xor
mov
daa
lret
xlat
xchg
movsb
imul
push
insl
cmpsl
adc
push
or
pop
repnz
cs
sbb
pop
push
xchg
arpl
xor
gs
push
jne
aaa
fndisi(8087
cmp
mov
push
fwait
int3
jnp
add
leave
loope
lcall
sarb
scas
mov
int
and
out
fsubs
movsb
std
repnz
or
mov
push
movlps
outsl
or
sub
cmp
or
jecxz
cmp
sub
push
scas
loop
xor
cmp
push
fs
test
adc
fldl
stos
inc
cmpsb
add
in
test
cltd
enter
pop
mov
mov
dec
adc
cmp
adc
test
dec
pusha
mov
fucomi
pushf
sbb
jno
add
outsb
cmc
xor
je,pn
mov
js
icebp
mov
lcall
cli
fsubl
mov
mov
fistpll
iret
shrb
les
mov
mov
out
dec
mov
int
dec
jnp
push
mov
test
imull
bound
mov
xchg
cs
sahf
mov
dec
faddl
or
loop
and
stc
in
inc
fs
insl
sahf
adc
pop
ss
cs
cmp
ss
call
jae
xor
mov
cmp
mov
sub
xchg
out
xor
xor
adc
adc
clc
imul
cmc
testb
mov
inc
and
lods
inc
mov
xlat
stos
cmp
out
stc
mov
mov
mov
mov
loopne
mov
dec
je
inc
sarb
flds
les
das
dec
xchg
aaa
sub
sbb
mov
jbe
lock
pop
pop
addr16
and
pushf
sub
fucomi
sbb
das
cs
test
nop
or
jne
fwait
jb
dec
adc
push
inc
je
sub
outsl
popf
mov
mov
mov
fstl
xor
dec
jno
rcr
fldt
pop
in
data16
mov
das
mov
aad
mov
jb
mov
aaa
divb
or
jg
add
or
mov
cld
mov
lret
fidivr
add
in
sbb
ror
pop
adc
aam
dec
out
cli
sub
es
insl
pushf
out
inc
dec
lret
pop
fistl
and
xchg
imul
out
jmp
and
xchg
ret
mov
add
cmpl
insb
sub
mov
push
mov
mov
fstpl
xchg
sub
rorl
lods
test
jp
mov
push
out
in
jg
add
push
pop
scas
pop
cmp
divl
xor
mov
xor
mov
mov
mov
dec
repz
adc
ja
mov
roll
lcall
inc
negl
jne
enter
mov
out
js
mov
jns
je
in
int
xchg
addr16
fdivs
dec
cld
cmp
adc
pop
addr16
icebp
gs
jmp
mov
lcall
jne
xchg
sub
sbb
je
mov
out
xchg
jmp
enter
mov
aaa
out
div
or
loopne
stos
lahf
cmp
mov
jnp
dec
ret
jle
or
xchg
mov
pusha
sbb
lcall
js
pop
pusha
cwtl
xchg
inc
mov
jae
xor
push
sbb
xchg
mov
and
shr
xchg
jle
add
pop
sub
out
scas
fnstsw
xor
jle
xor
test
fs
leave
movsl
inc
test
test
adc
inc
pop
mov
push
push
lcall
add
out
cmp
pop
and
lds
fs
rclb
scas
nop
mov
and
jl
sbb
cld
jbe
clc
inc
jge
xor
jecxz
stc
daa
or
cmp
adc
jno
sbb
pop
xor
dec
xchg
inc
das
push
xchg
in
xor
xchg
mov
lahf
loopne
sub
or
push
fcmovne
adc
xorb
pop
cwtl
enter
pop
cli
jle
push
out
loope
rcll
sub
in
mov
ficoml
je
jae
loop
jecxz
push
xor
fild
dec
adc
xor
mov
jmp
cli
mov
pop
jo
setp
loop
xor
out
fmull
lds
lods
into
jecxz
push
shll
inc
or
jg
mov
imul
cmpsb
and
push
rcr
int
or
sub
aas
imull
adc
sar
out
mov
sbb
ret
lock
cmpb
xchg
loop
frstor
sbb
jmp
cmp
icebp
faddp
out
xchg
in
dec
sbb
xor
stos
popa
cmp
mov
or
add
into
push
loopne
mov
nop
xor
xor
fwait
lcall
mov
push
add
enterw
imul
pop
sub
inc
mov
es
and
or
fdivr
and
xchg
popa
jb
jmp
orb
sarl
fnstcw
sub
xchg
lock
repz
xchg
cli
pop
sbbl
outsl
jge
pop
sbb
mov
sub
xlat
pcmpgtd
pop
push
in
addr16
xlat
adc
mov
adc
xlat
jb
xchg
jo
loope
cmp
push
mov
cmpsl
out
dec
push
and
adc
andl
scas
pop
mov
out
inc
sub
jge
push
mov
pop
pop
dec
roll
idivb
test
cmpsw
pop
ss
mov
cld
pop
pusha
cld
mov
xor
dec
cmp
mov
or
pop
lock
shlb
or
jns
mov
stos
insl
or
dec
movb
sbb
mov
test
lods
loope
xchg
mov
imul
and
xor
pcmpgtb
clc
push
mov
ja
pop
mov
ret
stos
push
dec
cmp
adc
xchg
mov
rcrl
pop
loop
stos
mov
in
sub
xor
push
fcmovnu
or
sbbl
or
ret
xor
xchg
push
popa
dec
call
dec
pop
ja
mov
dec
insb
out
inc
inc
cmp
fwait
je
cmpsb
push
sbb
push
add
out
push
cmp
bound
leave
jns
flds
in
mov
mov
and
mov
iret
and
addr16
jp,pn
hlt
cmp
pop
mov
movsb
dec
fcompl
sub
lcall
pop
mov
mov
xchg
xchg
xchg
push
mov
out
ja
sub
movsl
dec
fist
mov
js
insb
fcoml
jnp
scas
lret
pop
push
in
data16
pusha
mov
push
iret
pop
mov
pop
push
gs
xchg
mov
inc
lcall
push
fsubl
lea
push
push
mov
fidivl
push
xchg
aad
mov
imul
scas
inc
adc
adc
and
repnz
xchg
leave
sbb
fcomi
hlt
adc
cmpsb
incb
cld
or
or
mov
or
std
push
int3
push
scas
mov
pusha
cmp
cmp
jb
jge
outsl
shlb
adc
cmp
test
push
stos
adc
jbe
push
xchg
jge
fsubs
sahf
mov
daa
pop
test
push
inc
iret
jno
sub
dec
add
fmull
in
lods
popf
jo
lahf
lcall
push
or
das
test
cmpsb
wrmsr
inc
push
fwait
dec
cmpsb
or
in
jbe
push
enter
pop
cmp
jecxz
iret
sbb
sub
pop
add
outsb
jbe
ds
popa
icebp
movsl
jp
dec
and
loope
xchg
or
add
or
test
add
push
xor
xor
lods
sar
pop
xlat
pop
xchg
js
sub
mov
add
mov
sbb
mov
cmp
fwait
add
pop
adc
and
dec
jg
sar
sub
cld
mov
push
jl
imul
push
ret
or
int
je
sub
jnp
imull
and
lret
aad
xchg
mov
mov
sbbl
fsubp
sahf
jmp
sbb
sbb
jno
xor
loop
lret
mov
cmpsb
ljmp
dec
scas
bound
lods
adc
out
and
jle
mov
mov
jnp
or
dec
into
dec
pop
xchg
cmc
jge
xchg
xor
arpl
imul
inc
mov
lods
push
jmp
mov
les
sub
mov
xchg
push
push
sti
mov
stos
shlb
jne
test
xor
inc
out
and
les
fwait
sbb
inc
sbb
sub
lods
out
sub
adc
adc
jmp
jns
cs
aad
xchg
sub
jb
adc
je
pop
cmp
into
call
jns
adc
cmp
cmp
mov
sbbl
std
pop
fcomi
movntq
push
mov
inc
adcb
mov
mov
cltd
cmp
push
pop
idiv
out
mov
int
scas
cwtl
sti
jb
cmpsl
push
xor
cmpsb
icebp
roll
ror
cli
or
dec
call
mov
jae
test
iret
mov
mov
dec
ret
sbb
es
cli
in
insl
push
pop
dec
mov
xchg
pop
movsb
xchg
ljmp
pop
lods
dec
ret
pop
mov
mov
mov
ret
aad
add
mov
and
test
lods
cmp
sbbl
ljmp
xchg
sbb
dec
adc
pop
xor
or
out
stos
mov
xor
inc
in
jp
aaa
xor
stos
adc
push
cltd
cltd
xor
push
into
mov
jmp
dec
dec
push
mov
or
stos
ja
xor
dec
pop
mov
inc
fdivrp
insb
or
add
fwait
mov
sahf
icebp
add
addr16
out
lods
cmp
aad
and
das
loop
in
sahf
scas
xchg
add
xlat
push
mov
mov
loop
rolw
cwtl
stos
mov
mov
js
push
dec
mov
pop
dec
mov
xor
fcomip
test
xchg
or
dec
jmp
pop
push
loopne
fdivl
add
mov
mov
xor
cltd
jle
insb
inc
or
mov
in
jnp
pusha
push
cwtl
mov
ret
out
into
outsb
mov
movsl
pushf
test
loopne
push
lahf
push
inc
popf
aam
mov
scas
push
jp
es
jg
sub
mov
imul
scas
mov
outsl
adc
fsubrs
add
leave
xchg
and
arpl
push
or
xchg
mov
or
add
pop
jp
cmp
sbb
pop
push
fiadd
inc
loop
lea
scas
dec
cltd
sbb
fisubl
cmp
int
movsb
cs
repz
daa
aaa
jge
arpl
daa
push
inc
cmp
pop
inc
jl
sub
inc
push
pop
jae
mov
xchg
jo
adc
push
fstl
test
jno
in
loopne
sti
cmpsb
icebp
shr
popf
aas
enter
pop
js
ret
push
add
sub
hlt
push
cmp
movsb
sub
and
mov
push
adc
xor
mov
dec
dec
xor
cli
loopne
outsl
push
out
pop
movsb
js
mov
sti
lcall
in
bound
hlt
outsb
fcompl
adc
cld
mov
jg
lret
jo
jg
xor
adc
mov
push
shll
movsb
pushw
test
cmp
inc
rdrand
out
into
lret
fld
sub
push
mov
jg
sbb
std
pop
test
enter
pushf
outsl
cmpsb
cmpsb
movsb
loop
in
test
xor
movsl
ss
popf
mov
fsubs
adc
in
or
mov
insb
xor
sbb
or
ror
inc
adcb
xchg
leave
adc
lea
test
add
jbe
add
clc
data16
lods
aaa
xchg
rorb
addr16
xchg
sub
lahf
cmp
cld
cmp
sti
push
sub
mov
dec
push
dec
inc
stc
lcall
stos
sub
repz
mov
xchg
andb
sbb
imul
insl
pop
push
pop
adcb
adc
add
pushf
sub
gs
push
add
aad
pop
inc
nop
push
mov
jb
lahf
dec
iret
sbb
data16
pusha
inc
cmpsb
cmp
call
idiv
cmp
scas
mov
inc
push
les
inc
outsb
inc
mov
inc
fwait
or
jl
mov
in
and
sub
testb
std
je
fistpl
add
fwait
jae
stos
movl
dec
cmp
push
sub
pop
cs
inc
rolb
mov
xchg
adc
cmpsl
bound
es
inc
mov
dec
mov
mov
ljmp
data16
mov
dec
mov
mov
mov
mov
and
add
lds
cltd
push
sub
test
fadds
sarl
fstl
sahf
cmp
lods
push
ficompl
lea
pop
pop
cmp
sbb
andl
stos
xchg
push
and
sbb
imul
int
push
xor
xor
jno
xchg
inc
sub
pop
and
xorl
inc
aaa
insb
dec
push
jecxz
inc
jne
popa
or
repnz
fwait
sarb
push
pop
cltd
sbb
daa
cmp
adc
jno
jns
mov
testb
push
pop
or
ds
into
pop
inc
scas
cltd
addr16
int
add
mov
out
cli
dec
mov
jp
mov
jp
fist
pop
jmpw
pusha
xchg
sub
fs
push
fildll
fwait
xchg
ret
jno
stos
clc
sub
and
sarb
in
hlt
inc
pusha
in
sbb
ret
pop
add
lea
push
bound
popf
sti
out
dec
mov
sub
cmp
xchg
add
sbb
cmpsb
mov
scas
push
lahf
and
insb
adc
inc
pop
mov
pop
hlt
add
or
hlt
mov
arpl
mov
or
add
fidivl
xlat
pop
add
add
or
pop
mov
mov
repz
sti
and
sbb
mov
or
mov
fwait
xorl
rcrb
adc
jae
add
mov
lea
aad
jecxz
cmp
fidivl
pop
sub
cmp
leave
subl
jecxz
outsl
pushf
mov
in
inc
xor
enter
pop
mov
fwait
push
pushf
sub
aad
xor
out
ds
ficompl
mov
mov
mov
mov
push
aaa
hlt
daa
repz
sbb
shrl
adc
mov
xor
pop
and
in
pop
in
repnz
cmp
fmull
mov
inc
adc
xlat
mov
loopne
rcrb
inc
mov
movsb
in
mov
xchg
jmp
ss
cmpsb
sub
lret
gs
push
mov
pop
out
sbb
rcr
das
jb
test
jno
orb
shrb
push
xor
mov
mov
fs
lahf
outsl
ss
jo
xchg
and
and
test
in
stos
xor
cmp
mov
pop
cmp
adc
cmc
or
pop
pop
movsl
incl
lds
xchg
adc
hlt
stos
add
icebp
jne
push
and
movsb
pop
xlat
cmpsb
cld
cmpsb
sub
stos
into
in
addr16
mov
jmp
gs
mov
loopne
inc
push
dec
leave
mov
mov
les
pop
add
incb
in
adc
pop
xor
int3
pushf
fcoms
sub
mov
xchg
ss
cs
aas
icebp
xlat
out
jb
scas
rorb
shrl
in
sbb
test
cli
sbb
mov
pusha
sub
inc
jnp
dec
sbb
push
ss
js
sti
inc
adc
inc
inc
mov
mov
sbb
sub
mov
call
gs
daa
push
testb
xlat
cwtl
jno
sub
add
dec
mov
xorl
int3
lret
lcall
mov
iret
aas
lock
into
pop
pop
dec
pop
rcrb
pop
push
sub
adc
and
inc
rolb
dec
insl
cmp
push
xchg
dec
inc
ljmp
shrl
mov
and
add
clc
add
out
sbb
cwtl
icebp
mov
push
xchg
push
fnstsw
cmp
clc
nop
lock
xchg
sbbl
adc
jecxz
inc
stos
jo
add
jo
loop
sahf
repz
push
lds
mov
mov
pusha
js
inc
xor
lods
inc
mov
lret
dec
sbb
popa
jle
push
mov
fldl
jmp
push
fwait
add
push
add
sub
popf
sti
sbb
hlt
fwait
shll
pusha
pop
jns
fildll
xchg
mov
pushf
cld
mov
add
mov
sbb
ljmp
hlt
mov
jge
test
jne
cmp
mov
test
xchg
scas
and
hlt
push
arpl
xchg
in
test
xchg
cwtl
cltd
push
inc
test
or
testb
outsl
insb
jns
std
repnz
in
jbe
mov
leave
ret
ficomp
aad
inc
mov
mov
xlat
popf
and
mov
lods
sarl
mov
adcb
mov
dec
scas
imul
adc
out
mov
aaa
leave
orl
repz
sub
sbb
aaa
xchg
add
lret
add
mov
adc
jnp
in
pop
repnz
imul
rol
out
scas
or
dec
and
lods
cmp
and
lds
movsl
and
es
push
movsl
daa
add
cli
cmp
or
jno
xor
pop
dec
push
push
or
push
jns
xor
inc
adc
xorl
clc
popa
dec
push
pop
lret
incb
jmp
sub
xchg
pop
lret
pop
push
in
cwtl
loope
push
ret
dec
cmp
popf
ds
movsl
pop
mov
dec
bound
mov
lds
sub
add
sub
xor
lods
sbb
fucomip
js
mov
inc
lcall
sub
mov
inc
sub
into
rclb
mov
test
out
aas
mov
cs
mov
sahf
iret
mov
dec
xchg
and
inc
insl
int
or
sub
mull
popa
lret
test
mov
or
sbb
fmuls
test
cli
subb
les
lcall
js
loope
inc
sbb
adc
pop
ret
std
cmp
fstpl
fsubp
jecxz
xchg
pop
leave
jb
inc
ljmp
mov
imulb
cmc
sar
dec
xor
shr
adc
cli
and
pop
jp
inc
pop
cmp
aam
xchg
lods
add
jb
xlat
in
lahf
sub
mov
sarb
sti
int3
xchg
push
add
and
push
fs
dec
sub
jae
pop
xchg
push
adc
repz
mov
sbb
fstl
mov
adc
push
out
jmp
mov
sbb
aad
xor
aas
nop
sub
jb
leave
push
dec
mov
xchg
jecxz
sbb
lods
lea
mov
cmp
mov
dec
jg
pop
es
fstpl
dec
or
pushf
fildl
jns
lcall
das
cld
mov
mov
mov
sarl
je
test
aam
ret
cwtl
sub
shlb
test
mov
pop
shll
pusha
xchg
movsl
lret
or
xchg
movsb
lock
cmp
shr
fcomps
sub
aam
pop
sub
lds
fsubs
push
ss
sbb
mov
adc
mov
popa
clc
push
loop
lds
push
aas
sarl
adc
das
mov
loopne
fwait
add
cltd
lds
mov
lods
push
push
or
fstpl
popa
clc
lret
hlt
int3
xchg
out
sarl
xchg
xor
shl
push
xchg
in
sub
mov
sbb
mov
jle
mov
int
add
mov
jns
fs
lret
cmp
inc
or
push
test
xor
addb
jecxz
out
rcrl
std
bound
aam
in
into
push
xchg
repnz
mov
lods
jp
mov
mov
xchg
arpl
sub
or
rorb
insl
jne
pop
es
dec
fist
dec
xchg
xorl
xchg
mov
je
out
std
and
xchg
xor
push
test
stos
fisub
insb
insb
mov
es
ficomp
and
jmp
mov
out
and
xlat
jmp
mov
jae
add
imul
call
adcb
jl
inc
sub
mov
xor
rcrl
movsl
pop
imul
jmp
push
pop
cmpsl
mov
ja
sub
add
pop
leave
clc
mov
hlt
and
mov
inc
cs
out
inc
scas
push
push
xor
add
icebp
rcrl
dec
or
rcr
daa
scas
jmp
and
cmp
push
out
jb
call
pop
push
mov
cmp
or
jl
pop
xor
roll
add
xor
pop
cmp
lahf
jnp
jmp
test
rcrb
inc
lea
jo
adc
jae
scas
add
imulb
out
or
add
sahf
cmp
imul
and
shll
dec
lods
les
popa
ret
sub
xor
js
mov
mov
rclb
out
jbe
jmp
es
test
arpl
mov
push
mov
outsb
add
push
rorb
push
jle
js
mov
mov
inc
xchg
cmpsl
xor
push
iret
ds
int
add
mull
xor
shr
dec
mov
mov
dec
mov
sahf
jne
push
test
pop
jbe
inc
jg
outsl
inc
sbb
xlat
mov
das
int3
ret
fs
test
sbb
ss
and
loopne
xchg
cwtl
sbb
cli
dec
div
xor
xchg
movsb
cmp
call
mov
fldcw
in
adc
cmp
stos
mov
imul
lea
adc
in
push
add
lcall
in
ljmp
and
insb
sub
popl
in
cmp
mov
lock
cwtl
das
dec
xchg
jp
xor
divl
lret
mov
ret
sbb
sbb
insb
ljmp
adc
add
cs
jmp
shll
jle
nop
aad
xor
nop
in
dec
aas
das
test
jb
sbb
xor
push
je
mov
scas
scas
out
lea
xchg
ds
mov
int3
xorl
mov
inc
and
das
fisttpl
mov
pop
or
mov
adc
add
or
xchg
std
imul
cmpsl
add
mov
das
je
cld
mov
mov
mov
sahf
push
mov
inc
aam
pop
mov
pop
sarb
aas
and
mov
ffree
push
cld
lret
es
arpl
insb
iret
dec
lods
pop
pop
xchg
push
or
aam
and
push
cmp
inc
mov
and
aaa
jno
inc
push
add
cs
cld
sub
mov
mul
push
sbb
pop
fldl
lea
sub
sbb
popf
pop
pop
cmp
inc
out
ss
das
xchg
sub
xor
push
fcos
divb
pop
or
pop
jge
stc
mov
cmc
xchg
pop
or
jae
test
add
dec
sub
add
push
add
inc
inc
pop
add
rcr
cmp
bound
jns
insl
dec
in
xor
xchg
inc
repz
xor
mov
jbe
shll
jns
jp
nop
mov
mov
xor
loop
dec
int
jne
loop
mov
into
pop
fbstp
fcoms
mov
xlat
sbbl
in
out
sub
pusha
dec
in
or
jge
push
jo
and
call
jnp
adc
jle
test
add
mov
or
ret
mov
stos
lret
call
jae
jo
push
stos
sbb
popf
jo
mov
stos
ds
aad
xchg
mov
push
sbb
arpl
imul
sub
pop
fiaddl
mov
push
xchg
xchg
leave
outsl
xchg
arpl
pop
pop
or
jae
mov
or
popa
add
ror
aam
pop
dec
cmp
lds
sar
imul
mov
and
ret
frndint
inc
movsb
pop
sahf
xchg
out
jbe
hlt
mov
sbb
ss
add
cmp
pop
jno
fwait
xor
les
idiv
push
in
lcall
ret
lcall
test
popf
aas
outsl
inc
sbb
xchg
cmpsb
cltd
mov
jne
stos
xchg
aam
je
pop
push
cmpsl
scas
loope
repnz
sub
repnz
cmp
iret
daa
lods
xor
movsl
popf
pop
mov
test
outsb
adc
fwait
sbb
pop
cltd
xor
jnp
jmp
js
sarb
or
jg
inc
push
ds
inc
fmull
je
sub
or
or
push
shrb
sahf
jg
and
mov
imul
push
xchg
and
lods
mov
push
fild
xor
dec
lret
sbb
test
sub
ja
add
in
andb
outsl
and
sahf
stc
out
je
pop
loope
adc
ss
ficom
cmp
push
scas
lods
out
add
cli
jge
arpl
icebp
popa
sub
aad
or
into
mov
or
pop
add
or
jo
adc
gs
add
sbb
fimull
lods
shll
mov
lret
arpl
std
sub
stc
mov
test
mov
push
scas
lahf
gs
loope
dec
out
push
inc
inc
inc
lahf
fld
scas
inc
mov
repz
sbb
push
adc
push
mov
adc
stos
pushf
fsts
dec
loope,pn
stos
aad
cltd
pop
nop
mov
loope
jb
pushf
sbb
lret
scas
je
pop
pop
jecxz
jmp
cmp
sbb
call
rep
push
mov
xchg
orl
mov
fnclex
clc
push
inc
test
dec
inc
pop
ret
mov
push
mov
mov
fdivs
dec
mov
std
adc
aam
add
int3
mov
push
dec
mov
mov
jno
out
mov
aad
stos
mov
sbb
pop
stos
daa
fcmovnbe
xchg
clc
dec
sub
adc
roll
jecxz
adc
pop
dec
insl
in
sahf
mov
test
xchg
xchg
sub
ljmp
xor
or
mov
and
or
sahf
call
mov
xor
test
xor
push
xor
xchg
lcall
in
cs
cmp
adc
popf
push
push
mov
call
jne
or
sbb
add
push
inc
mov
ja
outsb
xchg
dec
push
dec
inc
rcr
mov
cmp
adc
ljmp
add
out
in
xchg
and
bound
sub
xchg
nop
pop
mov
fisubrl
lea
in
cmpsb
jp
lret
mov
push
les
push
movsb
dec
ljmp
inc
int
mov
addr16
xchg
daa
stos
ja
jg
push
xchg
push
inc
test
sbb
sub
xchg
push
add
stos
out
fsubl
or
data16
pop
push
imul
jb
in
sarb
pop
in
into
iret
xchg
xor
ret
pop
pop
loope
roll
jae
mov
popa
popf
xchg
mov
sbb
fisubl
cld
dec
sbb
cmc
sbb
in
scas
xchg
sub
push
movsl
jno
adc
xor
repnz
stc
mov
arpl
in
or
out
fadds
aaa
rcll
ja
cmp
jno
rorl
and
mov
out
sub
adc
push
scas
test
sbb
cmp
sub
push
test
adc
or
jge
je
sbb
and
daa
add
adc
jno
xorl
jle
lahf
insb
mov
xor
adc
lahf
mov
mov
sub
outsb
inc
stos
into
loopne
sbb
dec
in
loopne
aad
movsl
mov
jb
adcl
and
add
cmp
cmp
movsl
movsb
cmp
and
in
push
int
mov
sbb
push
add
xor
sub
ds
in
shll
inc
sub
lcall
rcr
mov
arpl
lret
lcall
inc
cs
jg
inc
push
mov
xchg
xchg
mov
mov
cmp
and
jecxz
push
aad
and
test
add
mov
ret
sbb
out
scas
adc
sahf
mov
shll
lahf
fisubrl
es
mov
fs
and
fist
sti
cmp
push
fsubrs
cmp
cli
mov
in
xor
push
cs
xchg
fs
inc
repnz
lahf
adc
daa
sub
xor
sti
outsl
pop
and
adc
lcall
mov
pop
pop
pop
decl
lods
mov
push
leave
xlat
mov
push
mov
adc
out
rcll
mov
dec
jmp
es
dec
inc
inc
sbb
frndint
repnz
loope
pushf
repz
fstps
mov
push
pop
incl
insb
pushf
test
jl
inc
sub
aad
bound
aas
insl
inc
bnd
push
mov
and
dec
je
mov
ret
repz
lea
call
mov
sub
mov
push
repnz
or
jns
das
xlat
sub
mov
shlb
adc
shrl
icebp
mov
std
mov
pushf
cwtl
pop
cltd
nop
cmpsl
add
mov
sbb
inc
xchg
cld
loope
ret
xchg
and
mov
dec
lock
enter
push
sbb
pop
iret
aaa
aam
xor
ret
jb
popf
fiadd
sub
movsl
inc
xchg
rcl
lahf
ljmp
inc
lods
into
cmp
mov
sub
add
std
xchg
add
outsl
cltd
push
push
test
stc
cld
mov
mov
push
mov
xchg
mov
jl
lods
xchg
cmc
js
or
scas
rol
mov
pop
sub
enter
in
mov
xor
lahf
xor
cmp
or
adc
xor
ljmp
int
dec
mov
out
dec
ja
push
ja
adc
jecxz
push
sbb
push
lret
mov
nop
add
adc
out
jo
inc
bound
and
mov
in
icebp
sub
adcb
pop
in
and
pusha
in
jp
mov
xchg
mov
adc
push
dec
adc
mov
fbstp
xchg
jmp
and
mov
out
jecxz
sub
jo
push
inc
mov
stos
aaa
and
and
xchg
push
insb
leave
inc
mov
lret
sbb
das
inc
in
sub
add
hlt
pop
out
ret
jecxz
sbb
inc
out
dec
jae
dec
fs
xor
rcrb
stos
jo
inc
test
adc
pop
insl
push
ss
xchg
xchg
cmc
lods
xchg
push
in
insb
stos
adc
mov
cld
add
leave
pop
adc
hlt
add
arpl
fistp
push
xchg
shlb
add
ror
push
mov
ficom
jno
jb
jecxz
das
mov
shll
cmpsl
lcall
or
rcll
jg
mov
push
jge
push
pusha
sbb
mov
pop
jno
nop
dec
jl
add
push
cmpsl
lahf
push
stos
dec
jbe
pop
dec
arpl
adc
cli
fcoml
sbb
test
xor
out
lahf
fdivr
in
jbe
enter
pop
repnz
xor
loope
sbb
sub
jmp
pushf
ds
movsl
stos
add
mov
push
arpl
push
xchg
test
fnstenv
xor
into
pop
add
fstps
add
pop
push
rorb
push
in
adc
fsubl
sub
push
outsb
cs
adc
push
cmp
test
mov
outsl
movsb
mov
enter
xor
fsub
push
int
inc
mov
sub
push
lret
cmpsb
mov
ja
cltd
adc
pop
add
mov
xchg
dec
cwtl
outsl
loopne
mov
stc
push
js
fs
cmp
pop
lock
and
ret
xchg
std
out
bnd
jecxz
mov
cmp
sub
xor
cmc
out
test
xor
mov
pop
inc
dec
or
imul
in
jle
sbb
and
lods
mov
jno
xlat
loope
cs
pop
pop
mov
jle
movsl
sti
mov
lcall
loopne
scas
xchg
dec
movsb
jae
inc
imul
fnstenv
ficoml
in
mov
inc
xchg
adc
push
iret
enter
mov
mov
sub
loop
int3
pushf
das
pop
inc
jmp
add
aad
nop
adc
or
inc
jb
aas
bound
cli
pushf
je
lret
push
jecxz
vshufps
stos
call
jno
push
cmpl
lret
repz
negl
mov
fldl
xchg
in
js
mov
mov
js
sarl
test
rol
mov
pop
pop
xor
lcall
push
mov
ret
lds
sub
lock
sarb
call
std
aam
jmp
ret
add
pop
es
mov
insl
mov
sub
xchg
adc
xor
sub
pop
fsubrs
ljmp
das
test
adc
add
in
jo
iret
out
mov
jns
push
arpl
pusha
test
clc
mov
movb
aas
test
pop
cmp
lahf
out
pop
sbb
xchg
add
jo
or
outsl
call
cwtl
lods
xor
xor
xchg
data16
fimull
cmpsb
mov
fmuls
mov
ja
and
add
push
inc
pushl
or
add
push
xor
add
and
int3
out
dec
cmp
ficompl
xchg
cmovbe
cmp
xchg
cs
outsl
mov
jne
mov
cmpsl
sub
jp
pop
inc
mov
inc
adc
stos
dec
hlt
ds
jne
into
pop
mov
nop
pop
pop
xchg
int
cmp
insl
mov
xor
and
push
sub
jge
inc
push
cmpl
and
cltd
and
jnp
dec
fnstcw
loopne
in
dec
pusha
into
ror
mov
hlt
jb
pop
dec
mov
inc
repnz
data16
and
pusha
popf
in
sbb
out
mov
daa
fadds
fimull
mov
sbb
xchg
daa
imul
clc
scas
pop
and
fcoml
jecxz
mov
sbb
dec
or
hlt
dec
mov
arpl
dec
or
in
adc
push
or
flds
add
jne
pop
fcomps
mov
rorb
scas
addr16
repnz
sbb
movsb
sti
cmp
push
and
jbe
xor
loopne
jbe
shlb
cld
pop
cmp
adc
mov
ss
jge
ljmp
sbb
jo
fpatan
lahf
mull
mov
mov
dec
push
in
inc
leave
call
in
scas
arpl
fwait
sarl
nop
push
add
cmpsl
sub
mov
pop
ds
sub
mov
jle
cltd
xchg
mov
cmp
pop
xor
negb
xchg
push
out
dec
pop
out
adc
inc
ljmp
adc
outsb
xchg
xchg
daa
adc
stc
jmp
jg
in
mov
andl
and
movsl
lock
fildll
mov
mov
push
rorl
mov
mov
sti
fdivl
xorb
shl
and
mov
adc
sub
gs
jbe
jl
xchg
fadds
sub
push
mov
xor
cmpb
xchg
into
gs
add
xor
jge
pop
xor
adc
outsl
lods
adc
lret
mov
data16
or
xlat
and
call
in
jmp
xchg
cmpsb
mov
in
xchg
loopne
xor
dec
add
fldcw
sbb
repz
ljmp
jns
inc
cmp
xchg
out
xor
aaa
mov
pushf
fiaddl
add
outsb
dec
test
aad
and
nop
push
imul
jns
push
dec
adc
cmp
inc
sbb
mov
lods
call
xor
and
dec
lahf
adc
fldt
xchg
pop
dec
mov
rolb
fwait
cld
das
push
ss
test
adc
inc
push
pop
ror
in
ret
notb
xchg
aaa
cwtl
lock
cmpsl
mov
lret
icebp
mov
scas
lret
xor
ja
jle
insl
mov
out
lock
je
pop
pop
stc
rorb
scas
or
aam
cmc
jae
nop
cmp
in
mov
mov
aas
lea
mov
mov
sarl
xor
inc
mov
mov
sub
fsubs
inc
test
jne
mov
mov
add
clc
repnz
xchg
mov
jb
dec
shrl
dec
pop
in
mov
out
ret
xchg
dec
adc
inc
pushl
push
xor
test
push
pop
pop
xor
xorl
xchg
arpl
xchg
mov
ja
rorl
xchg
push
in
or
mov
xchg
push
shll
sbb
mov
cwtl
insb
out
cs
and
inc
lods
jns
aaa
pop
in
add
mov
lret
iret
pop
sub
lds
pop
popa
sarl
mov
mov
lea
mov
cld
push
jne
in
mov
stos
pop
fucomip
mov
jmp
mov
xchg
adcl
movsb
push
insl
sub
js
jle
ror
stos
sbb
mov
ss
xchg
in
iret
test
pusha
sub
mov
ret
repnz
xchg
inc
std
push
sbb
aas
test
mov
cmp
and
pop
inc
cmpsb
push
push
xchg
in
insl
sbb
mov
clflush
loop
mov
in
repnz
sub
hlt
xchg
cmp
inc
cmp
movsb
sub
or
aaa
adc
ret
mov
sti
int3
xchg
test
pop
pop
cltd
test
fwait
jae
lds
movb
rorb
jb
push
cmp
les
push
cmp
add
fxch
push
sbb
and
ffree
cmp
push
jl
ds
dec
in
addr16
jo
xorl
push
dec
aam
jne
pop
test
leave
sbb
pop
jle
cmpsb
movsl
xchg
xor
enter
pop
jo
je
fimull
sub
das
nop
cmp
add
cmp
icebp
sub
lods
mov
sbb
add
test
push
xchg
xor
and
pop
mov
dec
xchg
and
jecxz
fdivrl
push
jno
in
dec
mov
jg
mov
rorb
dec
sbb
and
insb
imul
mov
jnp
neg
aaa
lret
rol
loope
dec
mov
std
sbb
ja
sahf
movsb
push
sub
or
inc
outsl
sahf
aad
loop
dec
es
ret
mov
adc
pop
push
and
push
out
repnz
cli
dec
fs
xor
lods
cmp
sarl
into
dec
dec
aas
cmc
jl
iret
xor
pop
insl
pop
jle
or
mov
pusha
or
adc
xchg
aam
pushf
add
outsl
hlt
jae
cmc
imul
xlat
xchg
mov
push
sbb
sti
loopne
je
loopne
mov
shll
dec
fcoms
fldenv
xor
and
adc
mov
cmc
add
pop
sbb
sub
jmp
push
mov
insl
andl
push
cmp
dec
jl
jb
mov
dec
xchg
cli
jecxz
mov
mov
xchg
push
sbb
xorl
fcompl
scas
in
dec
mov
out
fistpl
xorb
jae
pop
das
ss
pusha
mov
adc
pop
and
xchg
rcrl
shlb
pop
movsl
xchg
lods
mov
cwtl
mov
cmpsl
std
pop
cmpsb
mov
bound
int3
cld
test
mov
inc
mov
dec
pop
lock
push
call
fisub
sub
scas
push
jp
pop
imull
es
jp
xchg
ljmp
adc
cmp
pop
mov
leave
xchg
lret
lds
mov
sbb
in
cltd
psubd
test
mov
mov
iret
xchg
push
jmp
ja
clc
sub
addl
lds
pop
nop
aaa
into
stos
stc
sahf
and
and
mov
push
call
lock
sarl
xor
dec
shll
pop
push
jmp
dec
ljmp
or
push
push
fwait
dec
cwtl
js
jbe
jmp
inc
dec
cmpsb
add
mov
bound
sahf
ret
add
in
or
mov
xchg
xchg
sbb
in
jp
rolb
mov
add
pop
adc
mov
pusha
or
mov
jmp
sbbl
sub
daa
sub
jae
pop
push
jmp
mull
push
or
xor
push
and
fmulp
adc
lcall
ret
test
jmp
adc
push
jp
xchg
popf
xor
test
jge
fidivl
lods
xchg
cmp
sbb
or
aad
jae
push
repnz
mov
adc
aam
repnz
scas
iret
leave
ret
hlt
loop
add
notb
inc
test
les
iret
adc
add
mov
pusha
pop
ss
hlt
fidivr
lret
jno
pop
test
scas
and
test
cmp
movsb
adc
push
jp
addr16
push
inc
sbb
test
std
inc
dec
cmp
fwait
jno
mov
dec
pop
out
and
push
in
lock
jl
xor
dec
mov
sbb
xchg
mov
mov
in
jl
ror
pop
daa
pop
scas
sub
push
enter
jmp
jnp
inc
dec
in
ds
fcmovne
movsl
shrb
addl
imul
dec
xor
pop
cmp
lret
out
pop
in
mov
incb
inc
push
icebp
add
fsubl
sub
inc
test
push
pop
cs
scas
stc
cmpl
inc
push
mov
stos
mov
push
ret
and
js
push
loope
je
and
and
lret
pop
sarl
mov
clc
sbb
or
or
and
xchg
outsl
jge
int
dec
aas
daa
stc
jns
push
fs
inc
adc
jmp
insb
cmp
cli
inc
jae
fdivrl
in
jl
fnstenv
and
sbb
jecxz
or
dec
mov
inc
xorl
push
jecxz
popf
adc
adc
scas
imul
loop
sub
imul
mov
repz
sahf
sub
dec
mov
jne
mov
stos
clc
incb
xchg
loop
shl
xchg
js
dec
rcll
inc
movsb
cmpsl
je
fsubs
les
movsl
xchg
xchg
pop
mov
cmp
into
in
lahf
pop
lret
mov
or
jmp
and
nop
aad
outsl
into
nop
push
sub
jb
cmp
je
call
push
sarl
sbb
call
scas
es
mov
sbb
decb
inc
fcmovne
add
pop
inc
dec
fldl
mov
scas
das
adc
mov
and
or
pop
negb
mov
cwtl
dec
cwtl
mov
mov
cmp
out
adc
fdivs
sub
pop
inc
jne
mov
popa
sub
pop
mov
es
dec
mov
into
cwtl
pop
ljmp
push
lods
jp
inc
mov
in
loope
and
fldz
fisttpll
jns
xor
cltd
inc
jbe
test
inc
or
lods
sub
clc
push
mov
vucomiss
rcrl
jl
call
inc
xchg
popf
leave
pushl
push
iret
or
xor
or
loop
cmpsb
dec
push
lods
mov
decb
inc
les
or
mov
fwait
jns
sub
sbb
add
jne
jbe
in
cli
adc
jns
jne
in
arpl
mov
into
and
fdivs
fwait
jp
jg
mov
xchg
fidivr
jmp
dec
popf
inc
mov
aas
popf
mov
xchg
mov
sub
bound
push
or
xorl
out
sbb
or
xchg
push
ds
jmp
add
aam
jg
cmp
jne
or
imul
pusha
pusha
ss
jo
push
ret
pop
pop
hlt
push
movsb
inc
adc
or
aas
in
cmp
pop
into
mov
movsb
adc
loopne
xchg
mov
cmp
imul
adc
addl
adc
mov
dec
push
xchg
leave
cmp
jg
sub
je
inc
inc
dec
lcall
popa
mov
mov
dec
or
sbb
repz
push
negl
loope
fsubp
push
cmp
mov
popf
rcrb
push
and
sti
in
movsb
pushf
iret
ret
push
push
data16
aas
xchg
jge
lret
cmpsl
pop
fsubs
cld
sub
cmp
sub
jl
lret
mov
lret
push
ss
cmp
jns
or
movsb
daa
lahf
push
scas
iret
push
sbb
inc
test
pop
xor
jbe
stos
imul
xchg
mov
add
out
and
sbb
movsb
and
repz
dec
jle,pt
into
movsl
movl
xchg
rcrb
lcall
leave
xor
add
or
push
scas
pop
sub
lcall
imul
loopne
mov
test
int3
rorb
sbb
mov
lock
mov
push
cmpsl
and
movl
mov
adc
negl
xor
push
pop
push
rorl
dec
mov
outsb
sbb
outsl
repnz
into
sbb
loop
push
or
adc
add
fsubrs
mov
es
add
cli
scas
loop
xor
sub
dec
enter
inc
sbb
push
cmp
xor
add
adc
mov
push
adc
and
add
inc
test
mov
mov
xlat
fstp
add
mov
sub
and
mov
gs
cmp
and
inc
mov
jecxz
pandn
sbb
push
repz
mov
sbb
mov
sahf
arpl
mov
ds
dec
pushf
fninit
push
xor
aad
sub
mov
jb
hlt
movsl
je
inc
jecxz
lods
push
mov
imul
insl
xor
repz
lahf
dec
pusha
out
in
push
pop
xor
int
rcrb
cmpsb
inc
test
add
mov
jle
or
loop
pop
mov
pushf
neg
push
in
std
cli
cwtl
inc
cwtl
add
or
sbb
mov
cld
mov
mov
fdivl
xor
test
pop
sub
sub
cwtl
ret
cmp
sbb
dec
mov
xchg
or
push
mov
mov
and
aam
mov
dec
jno
mov
fcomps
add
subl
sti
and
sbb
outsl
push
fstl
out
xchg
cli
cs
jae
add
jae
xlat
in
out
jmp
xchg
js
pop
decl
and
or
dec
xor
fnstenv
xchg
stos
out
mov
jecxz
ja
mov
jb
pop
xchg
dec
or
icebp
scas
fwait
test
lahf
push
mov
psrad
nop
hlt
aas
out
lret
cwtl
xor
icebp
jns
mov
in
adc
xchg
push
cli
mov
jle
mov
xchg
or
add
mov
dec
bound
mov
dec
subb
jne
xor
fisttp
ret
cmp
xchg
pop
std
and
sub
xor
push
jge
je
jbe
and
insb
loopne
pushf
jnp
sti
inc
jle
sub
mov
adc
iret
insb
scas
ret
lods
pop
sub
push
jae
and
push
add
jo
rclb
loop
xlat
xor
xchg
ret
jl
mov
in
in
push
push
dec
xor
dec
movl
leave
mov
add
js
xor
inc
inc
lea
push
dec
sub
or
ljmp
push
cmp
pop
xchg
sub
test
lds
icebp
dec
scas
jecxz
fisubl
sub
cmp
cmp
daa
push
aaa
push
pop
ss
jbe
or
les
bound
daa
sti
cwtl
pop
cmp
in
cmpsb
jl
dec
loope
cmp
push
sbb
xchg
xor
xor
xchg
jnp
test
sub
int
cs
dec
decl
xchg
mov
xor
loope
jnp
sub
repz
arpl
and
push
adc
in
xlat
sbb
and
push
nop
xor
clc
ss
mov
pop
stos
jnp
js
xor
pop
jecxz
ja
fs
stos
push
lahf
cmpsl
and
mov
push
pop
outsb
sbb
mov
lea
push
dec
mov
rcll
mov
out
mov
icebp
dec
and
pop
mov
out
add
out
sub
inc
jp
dec
xchg
inc
shll
adc
rcrb
lea
pop
lahf
popa
sbbb
and
movb
imul
cmp
jo
sbb
ficoml
cli
loop
xor
bnd
jns
push
into
icebp
push
std
cmc
rorl
cmp
pop
imul
ret
mov
adc
ljmp
outsl
lods
and
out
dec
xlat
sbb
sub
sub
sarb
xchg
fwait
sti
sti
in
int
decb
pop
gs
loopne
or
and
lret
flds
jne
and
test
inc
jno
xchg
loope
xchg
lock
loop
sbb
push
jnp
xchg
xchg
xchg
cmp
sub
mov
xchg
outsb
stos
aad
dec
xor
daa
fiaddl
dec
in
and
xor
adc
mov
rorb
or
mov
jae
out
mov
dec
dec
andb
sub
xor
mov
ljmp
shll
inc
mov
insl
adc
roll
pop
ds
mov
jg
cli
pusha
cmp
out
nop
cld
jecxz
ljmp
notb
mov
lds
fisttp
sub
push
int
sub
fistp
ret
int3
lock
lock
aad
ds
test
xchg
dec
xchg
ds
fildll
stc
adc
and
femms
cmp
aaa
ficom
out
mov
cltd
mov
test
mov
dec
movsb
push
xor
repz
push
push
xchg
mov
sbb
sub
lret
pop
xchg
mov
stos
sub
jb
cmpsb
ret
push
push
cmp
xor
sahf
xor
sahf
jns
es
lret
dec
and
mov
ja
push
add
add
or
call
push
pop
inc
call
add
cmp
jns
inc
xlat
in
adc
xchg
mov
mov
loop
dec
clc
push
addr16
mov
sbb
cmp
in
pusha
mov
jne
sub
leave
inc
fildll
mov
jmp
loop
adc
out
in
test
mov
jmp
mov
xchg
push
ljmp
out
shll
fisttp
ret
movsb
pop
bound
inc
sub
fwait
push
ret
jmp
test
sub
mov
adc
sbb
and
mov
lret
fistl
test
mov
out
cs
leave
daa
adc
hlt
ret
lods
fisubl
cmp
push
or
dec
or
aaa
or
cmp
loopne
or
int3
inc
mov
push
fisub
mov
rcl
jo
ret
and
sbb
movsb
mov
sbb
or
jne
out
sbb
mov
cmp
scas
fs
xor
jns
pop
dec
test
mov
xor
in
lahf
xchg
and
shrl
test
cmc
xor
out
mov
add
xor
enter
pop
insb
movsb
sbb
mov
loope
cli
jne
xchg
jle
les
pop
and
jo
data16
push
jp
add
cmp
xor
cmpsb
je
jb
js
mov
pop
bound
dec
push
divb
ret
mov
sub
adc
inc
and
jg
nop
mov
jmp
loope
jbe
pop
and
xor
ljmp
sub
adc
mov
cmp
or
cmp
jbe
sbb
fcmovnb
sahf
xor
test
push
mov
loop
pop
inc
stc
sahf
sbb
fs
dec
adc
inc
test
mov
test
fsubrs
and
jl
adc
loopne
cmp
push
pop
or
add
into
aam
ss
cwtl
loope
xor
pop
cli
clc
gs
call
imul
cmpsl
add
out
repnz
or
mov
dec
je
pop
cltd
lods
sub
or
in
add
sti
pushf
test
insb
js
notl
loopne
divb
dec
xlat
inc
fstl
fnstcw
mov
cs
repz
or
sub
adc
popa
hlt
ss
in
cmp
pushf
xor
push
cs
movsb
cmc
aad
rcr
nop
xchg
cmp
aas
push
dec
jb
pop
je
arpl
mov
jecxz
mov
fisttp
or
mov
xor
ret
or
ss
add
pop
or
inc
loopne
fiadd
ljmp
xchg
mov
clc
xchg
dec
rcll
mulb
std
dec
push
and
stc
adc
icebp
mov
jecxz
lret
pop
insb
mov
dec
push
mov
mov
lock
aad
mov
xchg
pop
sub
cmc
pop
aam
pop
mov
pop
and
insl
and
pop
push
xchg
mov
inc
ljmp
ret
lods
mov
loop
mov
pop
lods
cmp
xchg
mov
fistpl
adc
jl
cmpsb
stos
out
push
cmc
dec
dec
fucom
ret
pop
clc
sbb
or
icebp
shll
add
stos
mov
mov
xchg
stos
les
push
cs
decl
dec
lcall
mov
mov
jmp
orl
cmpsb
test
ljmp
mov
rolb
icebp
or
loope
fwait
push
test
add
movb
mov
pop
bound
jns
lahf
scas
in
imul
or
mov
mov
or
addr16
sbb
pop
mov
and
mov
adc
dec
inc
fsubrp
jne
xor
mov
add
mov
xor
aaa
sbb
xchg
lods
xor
pop
nop
out
test
sub
pop
in
add
sbb
xor
les
jl
hlt
push
jle
or
pusha
xor
iret
cmc
nop
ret
jae
cltd
push
jo
xor
lea
mov
mov
dec
in
inc
and
adc
cmp
das
test
push
les
fs
scas
stos
sti
ds
fnstsw
rcll
imul
mov
repnz
insb
sub
sahf
movsl
dec
hlt
push
sbb
call
push
lret
dec
push
or
mov
adc
sub
jnp
repnz
lds
add
scas
mov
das
cmpsb
cmp
cld
movsb
cmp
push
test
add
jge
jp
sbb
or
push
cmp
scas
jno
fisubrl
movsb
rcr
dec
pop
mov
push
fbstp
xor
call
pusha
sbb
setno
rorb
inc
and
dec
cmpsb
xor
or
enter
pop
stos
sub
loope
popf
jbe
icebp
pop
cmpl
loopne
ds
insl
movsl
fcompl
and
jns
pop
xchg
or
flds
outsl
dec
xor
or
dec
out
mov
sub
lcall
mov
adc
cmp
outsb
jecxz
push
adc
sbb
adc
mov
insb
mov
fdivs
dec
jo
in
clc
jge
mov
sub
lret
xchg
rcl
mov
sbb
pop
repnz
roll
test
inc
outsl
stc
hlt
imul
sbb
das
fs
push
dec
adc
out
xchg
ss
les
out
out
js
cli
dec
data16
xor
cmp
outsl
mov
into
mov
push
xor
stc
fcoml
test
mov
add
mov
lods
repnz
sbb
lcall
mov
imul
dec
add
decb
xor
loopne
repnz
sbb
fnstenv
mov
xchg
addr16
sbb
push
adc
loopne
and
adc
mov
fdivrl
jmp
or
std
aad
mov
xchg
aas
xlat
or
pop
loope
fimull
mov
jecxz
movsl
data16
int
cmc
lea
insl
fbstp
int3
push
lcall
cs
mov
and
and
cli
imul
sbb
and
shll
leave
adc
out
sahf
out
cwtl
xor
dec
enter
loope
xchg
sub
cld
cmp
lret
into
in
mov
xchg
popf
mov
or
fstps
shll
std
xchg
sub
adc
aas
ret
ljmp
insl
or
mov
in
xchg
xchg
lret
ljmp
cmp
es
mov
js
in
and
inc
jge
pmaddwd
adc
iret
dec
test
into
mov
dec
jmp
mov
adc
push
dec
movl
js
inc
pop
out
in
stos
movsb
or
xchg
repnz
cld
push
or
mov
xor
dec
or
xchg
std
xor
and
mov
out
add
lea
cli
push
scas
dec
test
push
scas
or
xchg
test
xor
bsf
loope
out
out
push
jae
jns
mov
inc
xchg
push
fdivl
inc
iret
mov
les
xchg
jp
test
jmp
lret
scas
fwait
mov
movsb
in
jne
mov
nop
fildll
cmp
jmp
js
rolb
sub
pop
loopne
push
cmp
and
xchg
xor
jnp
dec
and
in
cmpsb
lods
pusha
int3
fdivs
ret
dec
pop
rorb
xchg
inc
aas
cmpsl
cmp
push
dec
add
popf
test
mov
mov
ljmp
xor
imul
js
and
icebp
adc
fidivl
repnz
fnstsw
hlt
pop
pop
stos
arpl
adc
mov
inc
add
aaa
mov
push
or
mov
es
sbb
push
xor
mov
pop
stos
sbb
rolb
ljmp
in
dec
cmp
leave
adc
jns
jbe
sub
jge
jl
sbb
imull
cmp
stc
jno
pop
mov
iret
roll
xchg
add
ret
xor
inc
jbe
lahf
shlb
push
test
mov
dec
inc
mov
in
cmpsb
mov
cs
dec
out
js
scas
pop
ljmp
loope
les
in
cmp
push
lret
movsl
jecxz
add
xchg
lds
and
jp
push
mov
sbb
stc
mov
sbb
jmp
and
int
pusha
ss
push
movsb
scas
imul
jp
sub
sbb
idiv
out
jl
enter
push
xchg
fsubl
mov
mov
lock
lock
dec
int
cmpl
negl
mov
and
shrl
mov
loope
sbb
sub
lods
lret
outsb
mov
mov
stc
or
add
dec
adc
cmp
fistpll
mov
push
jl
jnp
pop
xor
je
cli
movsb
out
or
xlat
jb
lcall
xor
cmp
rclb
adc
or
xor
data16
mov
insb
mov
xor
fldcw
sub
add
in
mov
mov
adc
jb
loopne
add
dec
pushf
data16
and
fldpi
and
repz
xchg
xchg
sub
sbb
mov
inc
fcomps
repz
stos
pop
jmp
mov
cs
or
dec
sbb
aas
add
jbe
mov
push
out
std
fninit
scas
aad
rclb
addr16
imul
dec
or
sbb
mov
mov
inc
out
out
movsb
inc
adc
pushf
push
mov
pop
pop
scas
and
xchg
or
repnz
repz
xchg
adc
cmpsl
testl
mov
fs
lret
cmp
rcr
mov
pop
lock
loopne
movsl
rcl
xor
or
push
ret
jns
std
es
xor
dec
jbe
mov
or
int3
ljmp
mov
mov
fwait
mov
sub
push
cmp
cltd
pop
jg
test
pop
mov
xor
fnsave
inc
sbb
xchg
cmc
jg
iret
movsl
arpl
out
xchg
mov
nop
xchg
cmp
int3
dec
push
push
xor
or
xor
out
mov
icebp
mov
dec
pop
pop
enter
xchg
ja
dec
pushf
xchg
or
and
push
dec
bound
add
cld
fsub
out
inc
cmp
pop
xchg
jns
inc
xor
nop
adc
xchg
cmpsb
jmp
cli
mov
jg
test
push
rcll
xchg
cli
mov
nop
push
mov
stc
cmpsb
cmp
pop
sub
mov
mov
ffreep
loopne
xchg
gs
imul
inc
mov
cmpl
fisubrl
push
push
cmc
stos
inc
mov
insb
mov
inc
jnp
ljmp
or
js
dec
mov
mov
or
push
jae
fs
or
push
popf
sbb
adcl
jne
mov
in
sbb
xor
imul
scas
jo
mov
imul
adc
mov
jbe
mov
aaa
arpl
out
inc
push
or
gs
dec
xorl
fild
mov
cmp
out
ficom
fucom
lds
lcall
pop
xor
and
dec
cmp
test
sbb
or
idivb
arpl
sbb
std
daa
divl
in
jno
pop
cmpl
dec
cmc
sub
movsl
ljmp
sahf
lahf
out
ljmp
sbb
push
push
mov
mov
cmp
xchg
in
out
add
jae
sbb
sub
pop
push
lock
loope
push
iret
sub
cmp
mov
movsl
ljmp
popl
sbb
sbb
xchg
xchg
add
xlat
xor
adc
inc
mov
js
mov
pop
ffreep
push
lcall
push
fsubl
fisubr
mov
adc
roll
movsl
jg
pop
lcall
and
and
mov
int
sub
negl
pop
mov
roll
fimul
mov
sahf
sbb
adc
orb
psrad
adc
fs
adc
adc
or
ss
daa
cmp
pop
cmp
out
mov
cli
scas
in
xor
lahf
cmp
scas
repz
addr16
into
jge
je
in
ret
inc
xor
es
push
add
pushf
imul
dec
ret
sbb
jbe
shrb
rolb
or
cld
jno
mov
inc
test
std
lcall
sub
inc
push
aam
fldenv
iret
cwtl
les
repz
or
in
xor
cld
dec
cmp
xchg
fidiv
ds
std
and
adc
cmpsl
test
sbb
and
or
mov
mov
mov
test
cmp
shl
mov
pop
lea
and
sub
push
mov
movl
out
jbe
bound
inc
jne
jne
xor
mov
adc
cltd
adc
roll
lcall
insb
jns
stos
outsb
fisubl
sbb
push
cld
and
lods
and
mov
in
lock
xlat
mov
out
ljmp
push
xchg
cmp
ret
or
es
add
insl
ficoml
push
xchg
dec
mov
repnz
and
cwtl
mov
mov
cmc
mov
btr
mov
cmp
adc
xor
mov
fstpl
dec
clc
lret
xchg
faddl
shll
lods
jb
cmp
stc
sbb
ficoml
xchg
xorb
mov
pop
sub
push
adc
xor
sti
daa
mov
hlt
fstpt
mov
dec
cmp
dec
dec
xor
push
jg
fwait
xchg
cmp
jmp
addl
leave
pop
out
es
lahf
lea
cmc
cmp
mov
mov
inc
pop
cmp
addr16
icebp
mov
mov
cld
jl
cmp
push
mov
imul
fnsave
stos
into
mov
es
out
and
sbb
les
lods
mov
mov
and
push
mov
lds
or
cmp
jne
add
jle
xlat
in
in
jl
add
clc
iret
stos
loopne
ret
lret
bound
push
or
jb
iret
rorb
inc
adc
stc
xor
inc
sahf
jl
ficoml
push
xchg
pushf
je
sbb
fisttp
scas
roll
mov
outsb
adc
lret
cmp
add
jb
out
pop
lds
std
xchg
inc
push
pop
or
aaa
dec
loope
or
lods
ja
add
int3
in
prefetch
sbb
fidiv
jnp
sarb
jne
or
cmp
hlt
movsb
fnop
mov
jbe
fildl
adc
xor
or
pop
daa
divb
cmp
int
jl
push
sub
push
mov
sub
push
lcall
or
lods
popa
push
and
sahf
cmpsb
mov
lret
dec
enter
pop
push
sbb
loope
pop
pop
sub
imul
push
data16
leave
cwtl
xchg
loop
in
inc
mov
sbb
stos
add
or
xor
push
lahf
in
add
outsb
aaa
pushf
js
sbbl
xchg
lcall
in
adc
jp
rep
or
mov
lods
pop
add
movsl
jnp
scas
dec
cli
mov
in
and
mov
int
mov
sub
out
not
and
or
rcrl
fcompl
stos
xorb
cmpsl
cmp
movsb
data16
xchg
add
loop
cmpsb
out
stc
jp
cmc
fs
ljmp
and
cmp
pop
mov
aad
push
cli
loope
dec
xor
mov
mov
fisubr
xor
adc
imul
mov
add
xchg
lods
cmpsl
push
mov
push
dec
lock
mov
lods
ljmp
clc
mov
or
iret
pusha
test
or
inc
sub
les
jnp
dec
xchg
enter
dec
sbb
pop
jg
pop
cmpsb
inc
pop
mov
sub
pushf
fldl
adc
test
push
aad
inc
nop
add
aas
inc
jno
jb
pushf
push
dec
aas
push
sahf
je
push
and
int
mov
in
movsl
call
out
jle
movsl
sbbl
loop
nop
fistl
jae
pop
add
mov
inc
dec
pop
lret
add
mov
enter
and
and
nop
test
divb
xchg
std
in
adc
cbtw
andb
push
push
icebp
sbb
cld
mov
out
mov
sub
cmpsb
pop
out
pop
push
mov
stos
sub
mov
aam
sbb
ret
xchg
mov
es
stc
insl
sarl
insb
adc
xchg
xchg
cltd
ljmp
xchg
sub
mov
jne
pop
mov
adc
testl
lret
inc
test
lds
add
fldl
in
xchg
stos
je
jge
fstpl
mov
jno
jno
cmp
and
cmc
decl
in
dec
xor
or
fs
mov
divl
es
test
call
jb
add
in
fisttpl
mov
push
mov
cli
add
xor
or
add
lret
push
jp
in
or
xor
scas
imul
cmp
jp
imul
mov
xlat
dec
mov
lods
sub
cwtl
inc
fnsave
add
adc
je
flds
push
sub
dec
xor
push
not
shrb
push
insb
bound
jnp
jns
jle
cmp
in
movsl
cmp
in
iret
or
inc
ret
pop
jne
mov
pusha
jp,pt
mov
sub
xchg
imul
xor
push
inc
sbb
hlt
mov
repz
sbb
popa
or
scas
ss
pop
push
stc
add
adc
dec
repnz
leave
jp
sub
cmp
add
inc
pop
test
push
enter
jl
add
aas
dec
int3
xlat
mov
pop
scas
cld
std
ficom
lds
rcll
pop
fs
sbb
sbb
cmp
mov
push
cmp
fs
pusha
mov
fs
cmp
loopne
jno
data16
push
int3
mov
mov
push
imul
ljmp
lahf
sub
cmpsb
inc
test
in
mov
cmpsb
inc
fdivp
in
mov
xor
imul
stc
loope
xchg
fsubrl
mov
jae,pt
std
movsl
clc
dec
adc
and
popl
jb
arpl
jecxz
lret
bound
push
pop
xchg
mov
stos
pop
lcall
mov
mov
into
out
outsb
outsl
xchg
xchg
adc
xchg
jg
cmc
pop
mov
gs
clc
xchg
xorb
jmp
int
sub
notl
mov
xor
mov
adc
pop
pop
nop
test
test
mov
mov
cli
stc
xor
hlt
fs
pusha
lock
ss
add
add
out
clc
movsl
cli
adc
mov
fsubl
loop
psrld
cmc
jnp
jnp
or
adc
cmp
adc
jno
add
test
ds
jecxz
xlat
xchg
or
loop
icebp
mov
pop
notb
sti
pop
cwtl
dec
sbb
sbb
ret
dec
mov
fcoms
fsts
push
pop
repz
pusha
push
sbb
push
or
fcompl
adc
icebp
in
jmp
xor
cs
dec
jg
fdivrp
add
loope
push
jb
ret
sub
mov
xchg
jg
fdivr
mov
lea
cwtl
call
cmpsb
in
pop
mov
movsb
stos
dec
int
push
pop
test
push
inc
subl
das
or
icebp
mov
jg
out
scas
or
divb
leave
jle
and
cmpsl
hlt
dec
js
adcl
cld
in
mov
mov
mov
mov
dec
outsl
lock
lcall
xchg
jp
in
incb
shrl
ret
es
add
dec
addr16
hlt
xchg
loop
ljmp
mov
rcrb
mov
jl
mov
jno
jae
popa
pop
mov
test
inc
mov
jbe
push
out
xchg
xchg
xchg
xor
jo
sub
aam
adc
stos
pusha
lret
dec
cmpsl
xchg
push
cmp
jne
insl
ljmp
inc
mov
mov
int
adc
mov
cli
orl
test
sbb
ja
pop
cmpsb
dec
jne
inc
jl
add
fwait
icebp
cmpsb
popf
push
xor
mov
add
cwtl
out
in
cli
loope
or
or
xchg
xchg
test
in
push
lds
pop
mov
lcall
leave
stos
mov
inc
pop
mov
inc
inc
mov
inc
dec
jne
inc
xchg
mov
dec
dec
fbld
xor
or
push
ljmp
sub
inc
js
push
ss
adc
aaa
clc
inc
insb
int
out
pop
mov
gs
sbb
mov
ffree
lds
test
inc
imul
jae
fstl
popf
xchg
enter
inc
cltd
inc
pushf
imul
xchg
dec
add
sbb
mov
imul
scas
cltd
cmp
inc
lods
std
adc
mov
loopne
or
and
hlt
test
lds
out
je
pop
sub
push
xchg
lcall
xor
frstor
jne
push
jae
xchg
scas
cld
pop
in
xor
pop
cmp
fsubs
hlt
sbb
push
xchg
jge
outsl
movsb
sbb
xor
hlt
add
jno
and
jnp
add
sbb
push
dec
inc
push
xor
scas
xchg
lahf
dec
fsub
push
mov
insb
test
mov
sub
or
ret
xchg
dec
in
fwait
pop
daa
enter
pop
out
lock
addl
or
cmp
mov
movsl
incl
and
mov
popa
push
mov
add
imul
pop
mov
jecxz
pop
pop
test
lcall
mov
push
xchg
arpl
test
adc
bound
sub
outsl
lea
iret
cs
cld
push
pop
int
jle
sub
dec
ja
push
mov
lret
jg
hlt
decb
imul
add
mov
fimull
add
loop
testl
ss
fnop
cmp
lea
jle
inc
cld
test
cmp
shrl
jle
inc
into
or
inc
sub
xor
or
xor
adc
push
adc
add
xor
sbb
mov
icebp
dec
xlat
aad
lea
push
lret
lock
rolb
out
ds
mov
and
loopne
push
hlt
dec
sbb
xchg
sub
test
les
repz
pop
aam
movsl
movsb
sbb
lea
xchg
pop
pop
add
adc
cli
pop
pushf
xor
imul
out
xlat
aad
daa
and
aas
adcb
dec
sub
notl
fsubrl
lea
pop
inc
mov
pop
adc
mov
repz
out
je
and
xchg
pop
inc
or
lea
in
ja
mov
ss
and
adcl
cs
cltd
div
inc
mov
cwtl
fsubl
sarb
enter
adc
cmp
mov
dec
lea
pop
mov
xor
sbb
inc
sub
in
mov
ret
mov
sbb
test
mov
jmp
dec
bound
add
out
fsubs
add
mov
daa
xchg
scas
and
dec
jno
xchg
pop
add
cltd
xor
push
mov
push
xchg
rcr
out
mov
xchg
xor
ds
out
dec
pushf
push
out
add
cmp
push
mov
addr16
lods
lahf
or
cmp
xor
xor
xchg
add
test
fild
ja
cmpsb
cmp
dec
mov
or
xchg
stos
fwait
and
push
aam
add
push
pop
out
mov
aas
in
push
int3
xchg
loop
sbb
cld
add
addr16
imul
push
sbb
mov
mov
pop
dec
cwtl
int
jne
test
mov
arpl
inc
and
mov
jmpw
sub
outsl
stos
push
cmpl
out
xchg
lcall
push
test
dec
ds
push
lods
or
dec
stos
mov
jnp
sbb
jle
xchg
pusha
shll
sbb
fadds
jae
jecxz
testb
jae
jecxz
push
sbb
hlt
popf
mov
mov
inc
sbb
lods
xchg
mov
loopne
imul
dec
scas
cld
and
adc
fidivr
xor
leave
push
aam
arpl
sbb
int
or
test
mov
inc
push
mov
test
arpl
lods
cmpb
pushf
mov
mov
scas
fistl
cmp
ret
inc
mov
xchg
mov
push
cmp
jbe
icebp
jge
out
sbb
or
daa
pause
daa
cmp
out
mov
ret
inc
inc
dec
mov
les
xor
xor
or
ret
lahf
imul
push
xchg
mov
inc
jge
push
cmpsb
inc
ret
movsb
in
negb
pop
and
adc
jae
push
sub
jmp
cmp
mov
ds
fwait
dec
and
xchg
jge
mov
roll
les
push
in
pop
jecxz
pop
js
jb
pop
stos
lcall
lret
fcoml
mov
inc
sbb
xor
push
add
cmp
mov
adc
sbbl
push
decl
stc
sub
fcomip
adc
pusha
lret
cmpsb
rcrl
mov
xchg
test
and
outsl
xor
jle
pop
add
stc
lahf
push
das
fs
std
fcoms
or
mov
push
aaa
fmuls
dec
out
push
int
jp
pop
xor
sbb
or
dec
sbb
or
cs
push
lea
dec
push
imul
call
inc
xchg
lods
pop
imul
xlat
adc
and
enter
f2xm1
mov
sti
gs
test
popa
mov
sub
lds
and
inc
bound
les
insb
repz
pop
push
cmp
faddl
pop
leave
jnp
adc
lods
pushf
fiadd
mov
roll
stos
push
add
pop
das
push
pop
scas
decl
and
cli
rcrl
and
call
and
bound
in
outsb
dec
mov
mov
out
out
mov
les
inc
pushf
or
lret
cmp
mov
mov
lds
sarl
insb
idivb
jmp
jg
xchg
cmpsl
repnz
sub
lahf
repz
cmp
lret
push
dec
sbb
fildl
lock
or
jnp
cmp
out
lret
xor
fstpt
aam
orps
inc
in
es
mov
dec
pop
imul
inc
sbb
sbb
lods
test
dec
mov
dec
outsl
mov
mov
jo
out
xor
add
mov
out
cmpsl
mov
movsb
notb
push
test
clc
mov
out
sbb
sbb
add
roll
lret
ds
xor
sub
xchg
jmp
insl
aas
xor
pop
or
cwtl
cmp
add
push
pop
dec
sub
je
sbb
add
inc
stos
mov
ret
fwait
dec
fldl
ja
out
add
addl
mov
cmc
xchg
sbb
inc
stc
imul
adc
pop
pop
es
mull
cltd
sti
jp
mov
fdivrl
xchg
dec
jnp
mov
mov
ret
mov
xchg
test
adc
clc
add
xchg
cmp
imul
shr
xor
cmp
lret
push
mov
aaa
stos
xorl
add
mov
in
sub
pusha
outsb
movsb
icebp
iret
es
call
pop
sbb
call
push
frstpm(287
add
loopne
add
inc
lcall
xchg
clc
sbb
out
imul
ljmp
cs
adc
push
pushf
mov
xchg
and
fistp
aad
std
cs
popa
pop
es
and
sub
add
and
js
cmpsb
add
mov
dec
fidivr
ja
lret
stos
xchg
scas
mov
stos
pop
cmp
fsubs
sub
test
jge
inc
lock
aaa
push
daa
repnz
sbb
or
jl
cmp
dec
and
mov
aas
add
jo
or
mov
cwtl
test
dec
sub
inc
or
or
imul
pop
fs
push
mov
imul
cltd
cmp
pop
xchg
fdiv
inc
movsl
or
das
adc
nop
sub
or
add
sbb
xor
lcall
or
js
xchg
stc
pop
pop
inc
ljmp
mov
mov
arpl
cwtl
inc
inc
adc
sbb
jg
cld
push
mov
jmp
mov
scas
mov
sub
and
ds
mov
xchg
sub
cld
pop
not
dec
lret
in
cmc
pop
pop
mov
call
sahf
dec
xor
adcb
jae
adc
add
lcall
fs
repnz
ss
fdivrl
add
cmp
popa
pop
or
inc
rorl
pop
mov
into
in
add
in
xor
and
adc
mov
hlt
pop
or
add
xor
or
call
mov
cmp
loopne
mov
pop
shl
sti
adc
out
test
gs
and
loopne
or
dec
test
fnstenv
lahf
xchg
mov
rcrb
add
pop
cwtl
nop
pop
jl
sub
movsb
cmp
jmp
pushf
pop
adc
jbe
outsl
cltd
fnstsw
mov
jno
dec
sbb
mov
jecxz
mov
loop
pop
lea
test
jecxz
repz
sbb
mov
fcmovnbe
sbb
pop
xchg
cmp
inc
sbb
dec
inc
mov
lods
das
stos
std
call
mov
push
jb
ror
cmp
xchg
std
addb
cmpsl
icebp
cmp
mov
jbe
push
cld
les
xlat
lahf
sub
mov
xor
iret
rol
xor
adc
xor
ret
xor
loop
pop
in
push
dec
pop
push
mov
ja
and
inc
popf
lods
adc
mov
insl
cmp
xchg
cmp
jle
xchg
rcrl
imul
adc
call
adc
icebp
sbb
xchg
test
fldln2
jecxz
xchg
out
stos
sub
jmp
xchg
jecxz
loop
push
cltd
cmpsb
incl
sbb
or
sub
mov
xchg
popa
jle
ret
test
es
ja
lret
dec
push
inc
inc
push
or
rorb
sbb
add
sahf
xchg
js
sbbl
fsub
shr
jl
or
mov
dec
push
mov
loope
mov
jp
push
xchg
mov
xor
mov
mov
divl
sbbl
jmp
add
sub
out
nop
mov
mov
fimul
aaa
mov
in
stos
hlt
jne
and
insb
push
mov
adc
xchg
movsb
call
pusha
or
cmp
jae
pop
push
lock
inc
mov
jae
mov
rcrl
and
xor
stos
lods
fcmovbe
mov
fildll
adc
adc
sbb
mov
fldenv
hlt
sbb
xchg
addr16
inc
fs
or
sahf
mov
rorb
imul
int3
sbbl
fsubp
ds
lds
pop
rol
dec
scas
cltd
mov
jns
add
outsl
movsb
xchg
cmpsl
push
je
pop
jbe
std
sbb
sbb
ss
mov
cltd
jno
xor
jl
add
dec
repz
push
divl
iret
xor
shl
lahf
test
jle
test
sbb
mov
push
fdivrl
pop
mov
imul
sub
mov
xlat
ds
cmp
movsl
adc
mov
mov
enter
push
add
out
mov
push
cmp
outsb
js
pop
xor
js
dec
roll
fld1
sbbl
imul
cld
outsb
sti
adc
adc
repz
aad
xchg
mov
int
aam
mov
and
popa
mov
cmc
pop
sub
mov
lret
imul
pop
and
or
jmp
rolb
loope
outsl
icebp
ret
dec
loop
lcall
cwtl
ljmp
pmullw
cmp
mov
mov
movsl
xor
xchg
mov
daa
dec
xchg
or
xlat
push
into
iret
jno
cmc
xchg
adc
xor
test
mov
imul
mov
add
mov
lea
add
xchg
orl
in
ret
pop
mov
ret
outsb
sbb
gs
xor
push
rcr
insb
inc
test
xchg
lret
pop
pop
fs
jg
or
cmp
fcmovb
fcomps
mov
sti
xchg
add
pushf
push
aad
pop
add
pop
insb
loop
add
dec
xchg
mov
je
in
jecxz
xchg
pop
in
lock
out
push
jae
pop
and
mov
scas
mov
fs
adcl
add
out
xor
or
outsl
fldl
xor
das
mov
stos
mov
pop
scas
push
and
out
rcrl
xchg
out
idivb
xor
cwtl
or
xchg
inc
mov
dec
adc
lret
inc
cmp
call
lret
lcall
cli
fcmovbe
xchg
rorl
leave
mov
aam
add
es
push
sahf
insl
inc
inc
pop
dec
push
xor
jo
ljmp
lods
jle
push
mov
nop
sti
test
cwtl
adc
mov
in
inc
push
add
inc
mov
mov
loope
push
shlb
fdivrp
sub
xchg
cmp
ds
xor
stos
pop
aas
fdivs
and
sub
es
sub
push
loope
lahf
jmp
cli
or
pop
sub
push
ds
test
cmpsl
hlt
ja
mov
enter
mov
push
rcrb
push
xchg
add
mov
imul
jns
mov
in
cmp
mov
stc
pop
mov
pushf
out
jne
push
test
jp
dec
or
cmp
push
mov
aad
dec
inc
and
mov
mov
fbld
jecxz
jmp
rclb
andl
aad
into
cmp
sahf
movsl
mov
push
xor
stos
addr16
pop
insb
jns
inc
jnp
fistpll
mov
lods
pusha
movsb
frstor
adc
jnp
mov
dec
inc
xchg
pop
pop
jae
mov
push
popa
daa
mov
pop
fs
inc
cwtl
jae
fimull
lret
mov
imul
mov
push
pop
inc
push
adc
pop
mov
leave
int
pop
hlt
mov
lret
arpl
pop
push
or
sbb
cmpsb
aaa
jl
or
mov
int3
outsb
gs
pop
cltd
jecxz
fiadd
clc
xadd
jmp
fsubl
jl
inc
cmp
mov
mov
loope
inc
jge
mov
dec
daa
lock
cwtl
cmp
movsl
cwtl
jno
jle
jl
movsl
stos
dec
insl
push
push
ficompl
or
sbb
sbbl
inc
sbb
inc
sub
cmpsb
iret
add
enter
pop
loop
ljmp
lods
mov
fbld
and
movsl
sbb
xchg
and
or
mov
jo
jbe
loopne
cli
sbb
xor
sbb
pop
pop
push
cli
js
xchg
pop
pop
pop
adc
adc
dec
aaa
fcoml
cmp
adc
mov
adc
into
jo
jg
mov
mov
mov
inc
clc
and
xor
push
or
and
pop
mov
pop
notl
stc
lret
imul
dec
mov
sbb
outsl
test
mov
icebp
test
outsb
dec
addb
outsl
rorb
dec
stc
lods
fs
stos
adc
ss
mov
or
out
mov
cli
adc
mov
cmp
push
or
ret
cwtl
into
mov
scas
cmc
pop
aad
xor
enter
scas
mov
adc
inc
imul
adc
sbb
sbb
popa
mov
dec
cmp
mov
xor
jb
cmp
lret
gs
pop
loopne
xchg
pop
lods
inc
fwait
jo
fldenv
dec
or
sub
xchg
inc
inc
dec
sbb
jns
cltd
push
sub
loop
ljmp
mull
xlat
xor
nop
and
adc
push
xchg
in
dec
or
cmc
jecxz
out
call
mov
call
popa
ljmp
test
mov
sbb
inc
es
inc
inc
in
cmpsl
das
push
ljmp
data16
shrl
jle
add
add
out
insl
mov
and
sub
mov
xchg
pop
mov
pop
xorl
fcomp
dec
shrb
aam
rorb
enter
icebp
mov
pop
insl
sub
dec
dec
clc
fs
add
mov
pop
pushf
push
popa
les
out
jmp
adc
mov
lahf
dec
xchg
mov
dec
xor
pop
cltd
adc
xor
out
push
xchg
xlat
inc
idiv
addr16
xchg
stos
adc
shrb
ljmp
out
outsb
jg
jno
ret
ret
ret
adc
xor
aas
or
scas
cwtl
xor
rolb
and
nop
and
test
mov
repnz
xor
mov
outsl
fmuls
inc
add
fsubr
add
add
aam
ret
aaa
shlb
hlt
jmp
in
fdivs
mov
sbb
mov
push
fisubl
inc
jbe
sub
fbld
mov
jo
and
test
mov
mov
fistpll
inc
cmpsl
jmp
fwait
loop
xorl
repnz
sub
bound
fimull
in
stos
fcmovb
insb
in
addr16
xchg
jle
xchg
jge
inc
das
enter
je
inc
xchg
cs
add
ds
mov
mov
pop
popf
push
adc
mov
pop
rol
cmp
enter
jecxz
xor
imul
mov
push
mov
dec
outsb
mov
jg
mov
hlt
cld
mov
arpl
int
or
xchg
add
aaa
inc
stc
cwtl
or
roll
jne
or
pop
add
pop
enter
sub
or
cli
cmpsb
popf
scas
push
cmp
and
adc
cmp
xchg
lcall
mov
aas
dec
daa
out
in
lock
mov
jno
out
bound
clc
dec
insl
lods
fimull
mov
imul
jo
fisttp
out
insb
push
shlb
pop
test
scas
xchg
mov
mov
std
or
push
push
bswap
dec
xor
push
fcompl
loope
mov
cs
out
ds
movsl
mov
and
mov
jnp
fwait
leave
mov
fwait
add
cwtl
xor
ds
jg
mov
pop
xlat
mov
adc
pop
sbb
dec
add
add
popf
outsb
roll
shrb
daa
or
ret
mov
shlb
and
not
push
or
push
int
test
sub
cmp
adc
xadd
lds
lcall
imul
popa
shr
outsl
scas
pop
int
push
add
jnp
shll
pop
adc
ss
adc
mov
xor
jb
into
xor
inc
es
cmp
push
or
and
add
sub
sahf
adc
add
imul
enter
or
xchg
mulb
test
mov
lcall
xor
and
in
cmpsb
and
cmp
push
dec
repz
les
les
cmp
repz
xchg
cmp
sub
xchg
adc
test
fldt
cs
pop
aad
push
or
add
adc
fwait
mov
jg
cmpb
mov
jp
jmp
cmp
push
push
sahf
mov
test
fiaddl
dec
inc
dec
fistpl
mov
fisttpll
lods
stos
lock
or
pushf
mov
leave
mov
sarl
push
cmpsb
std
jne
je
sub
cmpsl
out
int3
in
mov
sti
hlt
js
out
test
mov
loop
lock
jl
enter
stos
inc
sub
inc
add
cmpb
insl
adc
add
ljmp
inc
lods
push
test
mov
push
jge
cmpsb
in
mov
stos
es
rcr
push
cltd
dec
test
test
das
push
push
push
std
push
fstl
f2xm1
xchg
call
jne
fdivp
lahf
pop
xchg
xor
mov
repnz
push
push
xchg
jne
jmp
les
sahf
ret
adc
jle
cltd
xor
jne
mov
or
lea
ffreep
test
data16
ja
daa
fcmovu
inc
push
push
inc
or
ds
or
push
add
sub
out
stc
adc
push
or
pop
mov
in
lret
aaa
xchg
insl
push
cmp
aas
xchg
sbb
adc
jp
enter
imul
xchg
sub
mov
xor
pop
lret
cwtl
jne
jb
mov
mov
loope
rcl
add
aam
aas
xchg
retw
inc
test
push
sub
sub
stos
dec
jmp
je
dec
sub
or
mov
pusha
fisubl
iret
mov
mov
dec
inc
lods
pop
cld
int
out
sbbl
xchg
nop
sbb
out
dec
test
loopne
lahf
imul
inc
scas
jmp
ljmp
test
mov
jbe
leave
mov
orb
mov
out
orl
add
xchg
or
add
pop
int3
inc
ja
pop
negl
fwait
rclb
and
cmpsl
out
fnsave
push
popa
pushf
cli
jbe
mov
jge
xchg
sbb
loope
xchg
daa
out
or
jno
sbbl
fsubrl
xchg
xor
sar
jge
push
pop
and
inc
mov
xor
push
jns
out
inc
dec
xchg
cmpsb
aad
push
in
add
push
pop
pop
pusha
jmp
push
movsb
loope
out
sub
cmpsb
add
test
sbb
mov
and
sbb
jl
add
push
xor
jmp
pop
cmpsb
addb
in
pop
push
icebp
mov
jnp
lea
cltd
repz
pop
sub
ss
outsb
and
and
test
idivb
xchg
and
cmp
mov
scas
add
loop
popa
push
push
mov
sub
adc
into
push
out
iret
mov
mov
push
push
sbb
pop
lods
mov
and
addb
out
outsl
mov
in
loop
add
stc
xor
loope
xchg
cmpsl
or
fsub
sarb
out
mov
out
xor
cli
jns
inc
xor
inc
mov
sbb
das
into
js
sbb
in
sbb
mov
and
adc
sti
ljmp
sbb
lods
fbstp
or
dec
insb
push
sub
jp
mov
add
cmp
rcr
out
adc
push
gs
fs
cmc
pop
dec
push
sub
dec
jge
adc
xchg
movb
xchg
enter
adc
cmp
or
pop
dec
mov
dec
pushf
xor
xor
cs
mov
aad
mov
sub
aas
cmp
jb
xchg
je
push
outsb
out
lret
push
lea
int3
outsb
fwait
mov
jmp
mov
cwtl
mov
fisttpl
sti
icebp
inc
xor
dec
inc
and
ljmp
cmp
subb
jl
fcmovbe
or
ljmp
sahf
cwtl
ds
cmpsl
in
scas
mov
rcrb
push
lret
xchg
cltd
mov
mov
test
pop
push
mov
rorb
in
sub
loope
ret
mov
es
xor
dec
inc
cmp
jg
pop
ljmp
add
mov
stc
repz
and
out
negb
add
scas
fstps
xchg
adc
mov
mov
dec
fnstsw
xchg
sub
push
mov
lods
pop
inc
mov
xor
push
rcr
jmp
fcos
add
fbstp
icebp
arpl
and
mov
jge
pop
test
movsb
lahf
ja
inc
out
sbb
jnp
popf
xchg
inc
or
adc
push
cmpsb
or
mov
inc
add
lcall
xor
dec
jns
lock
adc
xchg
mov
mov
mov
int
pop
addr16
inc
jp
adc
sub
pop
mov
dec
mov
jne
sub
mov
lret
std
stc
mov
mov
pop
pushf
xchg
xor
jge
rcrl
out
not
sub
and
stos
ja
and
lret
mov
push
cmp
push
fsubp
dec
jge
pusha
jne
insl
iret
add
ret
cmc
pop
sub
xchg
mov
cs
mov
dec
cmp
fisubl
mov
xchg
add
scas
dec
cwtl
mov
xor
adc
scas
mov
and
xchg
hlt
xchg
sahf
popf
arpl
mov
inc
jo
das
or
mov
mov
aaa
hlt
add
mov
cmp
outsb
in
lds
in
xor
scas
adc
scas
lahf
cmp
fsubrl
sar
push
mov
outsb
jbe
ficoml
lock
inc
sbb
push
cmp
cmp
jl
jge
dec
dec
jne
push
cmpl
and
lcall
mov
push
js
mov
push
inc
repz
xlat
mov
pop
push
shr
push
sbb
pop
lahf
mov
push
loope
cmp
sub
inc
lret
sbb
ds
jmp
xor
leave
and
lahf
out
dec
inc
sbb
out
add
nop
mov
inc
pop
dec
jp
rcrb
inc
js
jmp
pop
aad
or
popa
div
fcoml
push
cmpsb
outsb
xchg
jge
mov
cmpsl
in
push
add
mov
jecxz
and
dec
cwtl
push
adc
int
call
mov
xchg
xchg
adc
call
imul
sahf
ja
inc
test
iret
adcb
mov
jns
sbb
jmp
mov
adc
jle
sbb
cmp
stos
outsb
jmp
cli
lods
mov
es
xchg
lods
or
test
and
jecxz
jge
lea
enter
movsb
imul
das
xchg
add
insl
adc
add
pusha
mov
ret
jp
in
mov
outsl
jns
sti
jg
push
xor
gs
out
shl
loop
dec
mov
movl
mov
xchg
ret
mov
or
aaa
xchg
int3
cmp
xor
aam
or
adc
stos
pushf
loopne
sub
cmp
mov
add
aad
and
nop
mov
and
fsts
push
jb
dec
sub
je
or
push
icebp
sbb
call
sahf
mov
mov
stos
xchg
subl
jle
mov
or
inc
mov
ja
das
add
push
adc
pop
push
leave
rcll
cmpsb
lret
pop
hlt
std
ret
fisub
stc
adc
in
push
and
test
sbb
add
mov
mov
mov
xchg
shl
push
mov
aam
aam
ret
sahf
les
sbb
xor
xchg
aas
mov
stc
ljmp
pushf
lods
sub
and
sbb
lods
and
mov
mov
stc
mov
cltd
mov
ret
test
lea
fsubl
clc
sbb
movsb
xchg
ficompl
or
add
jmp
mov
mov
ficoml
jmp
cmp
insb
cmp
push
mov
adc
push
dec
lds
push
xchg
ja
sub
or
decl
xorb
push
dec
xlat
xor
and
mov
push
jns
mov
test
mov
mov
fisubl
lea
mov
out
pop
mov
mov
inc
pop
jne
dec
and
sbb
inc
xchg
jbe
adc
ret
xchg
cld
jge
andl
out
jno
sub
push
push
push
stos
xor
mov
aaa
jnp
fs
jle
push
adc
push
mov
clc
iret
pusha
hlt
push
pop
fs
sbb
jae
jnp
push
insl
sbb
lret
mov
xchg
mov
daa
xchg
add
or
xor
imul
push
js
jmp
mov
js
std
leave
test
adc
arpl
jne
inc
jae
sub
aas
pop
mov
aaa
jle
insb
or
dec
add
ja
int3
sbb
int
push
fs
inc
mov
scas
hlt
mov
add
xchg
mov
movsb
dec
push
scas
jbe
jae
jge
adc
sbb
lods
daa
in
jno
sbb
shrl
dec
mov
cs
jmp
push
lahf
inc
add
test
paddsw
data16
in
xor
cmp
mov
fcompp
imul
pop
loope
mov
sub
mov
mov
scas
out
movsl
aaa
add
and
push
xor
push
cmc
push
add
or
adc
cmp
jp
js
test
pop
push
loopne
lcall
add
rcl
sub
cmp
adc
cmp
mov
jne
mov
pop
lret
push
and
fsubs
adc
popf
int
cmp
sub
cmc
xchg
dec
mov
sarl
mov
clc
fwait
sbb
lcall
mov
and
out
loop
mov
pusha
fs
stc
cmp
xor
loope
loope
push
fsubs
and
cli
fist
jmp
or
sbb
fldenv
jp
test
outsb
or
callw
cmpsl
xor
mov
or
stos
add
data16
out
lods
lods
jb
mov
pushf
xor
mov
out
sti
cs
outsb
push
mov
inc
loopne
loop
dec
adc
xchg
inc
out
popa
fnstcw
sbb
enter
fs
jl
dec
sbb
sbb
gs
push
jnp
pop
scas
and
outsb
pushf
mov
jmp
sbb
arpl
adc
js
out
mov
mov
stc
jecxz
into
shufps
push
repnz
mov
std
dec
mov
fstpl
add
cld
fucomi
nop
gs
arpl
sub
icebp
out
pop
cli
xor
in
test
mov
xchg
pop
sbb
push
sub
std
push
enter
loop
jmp
inc
mov
adcb
push
scas
jno
push
add
xor
and
push
pushf
std
mov
jmp
aam
sbb
es
loop
insl
push
sub
int3
repz
std
cmpsl
hlt
ljmp
js
xchg
daa
gs
aas
or
and
and
xor
enter
or
sbbb
push
dec
mov
mov
rcr
pop
or
clc
push
lret
xchg
dec
xor
shl
inc
sbb
nop
stos
push
repz
sbb
gs
lea
push
sub
and
aas
shrl
xchg
inc
ret
pop
sti
xor
jmp
xchg
push
test
fldt
lods
xchg
xchg
dec
add
mov
fwait
cwtl
mov
sbb
inc
push
sti
out
mov
lret
jl
cs
fwait
scas
xchg
pop
inc
dec
mov
and
inc
sbb
addr16
pop
dec
jp
lds
out
mov
sub
insb
out
pop
into
pop
mov
pop
lods
fistpll
bound
lds
jmp
pop
cltd
xor
ret
popa
loope
and
and
mov
sbb
push
dec
aad
nop
dec
out
xchg
and
push
pop
fisub
lret
mov
movsb
add
inc
into
xor
jae
mov
xchg
popf
icebp
and
lret
adc
fiaddl
jno
xchg
pop
lock
sbb
std
aad
mov
mov
push
mov
movsb
aas
mov
lret
sbb
and
data16
sub
sbb
ja
inc
jbe
test
push
cmp
pop
jecxz
rorl
int3
add
out
inc
fidiv
sub
data16
scas
rcrl
add
dec
xor
movsb
xlat
sub
dec
cmp
ds
mov
daa
jmp
push
cmp
xchg
jno
sbb
xor
sub
push
dec
aad
xor
loop
jae
arpl
push
push
fstps
push
ficompl
inc
cmc
pop
scas
cmpsb
pop
ja
in
mov
sub
xchg
push
xor
loope
dec
xor
push
std
cmp
in
movsl
jnp,pt
and
notl
arpl
mov
int
loopne
cmp
add
and
into
ss
mov
pop
rcrl
js
nopl
imul
mov
in
adc
adc
in
sub
sahf
dec
pop
mov
inc
nop
and
stos
rolb
mov
int
xchg
pop
sub
and
out
jns
repnz
mov
sbb
popf
test
mov
cld
loop
aas
sahf
stc
push
popf
bound
jo
stc
add
mov
les
pushf
mov
cli
adc
lea
inc
mov
cmp
mov
or
xor
and
aam
inc
jne
xor
sahf
movsl
adc
lock
imul
loopne
data16
in
lods
xchg
sub
mov
sti
sub
xchg
mov
inc
and
sub
gs
xor
loopne
divl
outsl
mov
inc
cli
sbb
fnstenv
mov
repz
push
xchg
adc
test
leave
cmp
cltd
negl
jmp
add
mov
cs
xor
aad
aaa
nop
insb
in
pop
test
cmc
js
dec
pop
sbb
mov
jb
nop
notl
cmpsb
lea
pop
call
sbb
repnz
les
pushf
sbb
push
fistpl
jge
pop
push
or
inc
leave
sar
inc
je
ja
ret
iret
ja
and
pop
mov
sbb
cmp
notb
insb
std
adc
cwtl
outsl
mov
mov
push
push
cltd
lret
loopne
cmpsl
mov
movsb
and
xor
pop
jae
rolb
push
aam
mov
ret
mov
imul
dec
xor
cmpsl
inc
ljmp
or
fs
bound
push
mov
daa
adc
add
lds
mov
outsb
mov
cli
fsts
sbb
int
clc
mov
xchg
into
jg
outsb
mov
pop
inc
loopne
stos
mov
out
out
jle
jo
aam
xor
add
cld
fmulp
mov
or
pop
xor
xchg
xchg
mov
sbb
out
xchg
mov
test
aam
ja
test
inc
bound
sbb
jle
fwait
push
icebp
push
push
xor
pop
repnz
lcall
jns
out
jmp
xchg
test
xchg
fildl
pop
incb
addr16
test
in
lods
add
mov
jne
and
mov
cmp
mov
inc
xchg
xchg
mov
addl
int3
sub
adc
push
lods
pop
inc
stos
sbb
and
jo
jnp
int3
aaa
jle
xchg
jne
arpl
pusha
inc
imul
pop
sarb
inc
inc
flds
adc
or
repz
les
mov
cli
in
mov
xor
xchg
and
pop
push
push
fisubrl
mov
push
fs
leave
xchg
sub
hlt
jae
fs
mov
aam
or
xchg
xorl
and
or
sbb
int3
lock
ficom
lds
xchg
rolb
or
out
pop
iret
cmp
push
pop
movsb
bound
push
popf
dec
push
jbe
add
jge
and
sbb
ljmp
jno
aas
jl
lret
cwtl
pusha
mov
xor
cmp
repz
enter
xchg
mov
inc
test
cld
cmpsb
loope
in
mov
sahf
mov
pop
fdivr
push
leave
loope
or
sub
and
cmp
aas
ds
xlat
or
push
and
sbb
std
in
add
cli
lds
scas
add
pop
inc
add
das
pop
push
lcall
fstp
push
movsb
and
scas
dec
pop
outsb
mov
sbb
js
mov
lock
jb
cs
mov
jne
and
ret
sbb
loope
rclb
mov
insl
insb
ljmp
mov
xchg
ss
out
sahf
pusha
pop
pushf
test
adc
outsl
or
outsb
stc
push
call
cmp
ss
lods
cmp
fistl
adc
leave
out
inc
in
xor
fiadd
push
addl
into
add
push
cmc
or
xchg
adc
insl
xchg
imul
jns
and
shrl
xchg
dec
add
dec
push
or
in
mov
stos
sti
mov
push
pushf
or
addr16
jecxz
into
aaa
outsb
inc
or
int3
push
fisub
jge
add
mov
lods
mov
cmp
sub
lret
pop
adc
inc
adc
pushf
loope
xor
or
sub
sub
mov
mov
dec
rcrl
lcall
pop
mov
ret
mov
call
fistpl
pop
mov
pop
mov
dec
out
xor
dec
sub
out
push
adc
inc
cmp
das
mov
xchg
add
test
mov
inc
jo
notb
test
jmp
loopne
icebp
cs
jne
mov
rcll
sbb
repz
ljmp
rcrb
movsl
sub
movsb
faddp
dec
dec
shlb
mov
xchg
out
xor
int
ud1
dec
popa
dec
fnstcw
mov
test
leave
and
pop
xor
push
add
or
test
dec
push
xchg
xchg
enter
pop
fstl
push
clc
leave
dec
xchg
and
fcmovnbe
xchg
fdivs
pop
in
pushf
xor
loope
xchg
xchg
sbb
stos
push
ficomp
jge
push
xor
nop
ljmp
inc
xor
sbb
push
dec
cli
in
test
popa
sub
sub
jge
out
add
stc
adc
or
mov
inc
push
xor
mov
add
jmp
bound
jns
mov
xchg
clc
xchg
mov
pop
xchg
mov
mov
jge
jp
dec
jp
test
mov
or
in
in
lcall
and
sub
jns
test
cmpsl
sub
pop
or
shl
arpl
or
mov
push
jmp
mov
and
push
insb
insw
add
and
add
push
mov
iret
jge
out
xchg
push
mov
or
add
mov
xor
aas
add
mov
adc
fisubrl
aam
pop
xchg
or
or
int3
scas
fisubl
rcll
mov
mov
bnd
cli
leave
push
std
and
mov
dec
rolb
gs
je
cli
push
mov
nop
jb
jmp
int3
leave
pop
loop
or
cli
lret
push
rcrb
and
sbb
in
mov
mov
mov
daa
jmp
fldt
jno
mov
jl
lods
dec
pop
aaa
mov
xor
cwtl
test
ss
in
jp
add
cmp
cmpsb
fs
stos
in
mov
pusha
enter
pop
fwait
popf
cmpsb
push
adc
sti
sub
adc
es
mov
xchg
test
cmp
cmp
push
sbb
idiv
add
jo
xor
push
xchg
out
imul
sbb
lcall
xchg
fadd
lret
popf
jns
outsb
adc
pop
adc
lret
mov
jg
call
mov
mov
clc
lcall
leave
lret
int
repnz
mov
mov
pop
loope
roll
mov
jge
push
mov
sahf
add
test
xchg
outsl
jmp
push
xchg
fs
push
ss
mov
cmp
xchg
sbb
out
clc
pop
cli
js
test
lock
mov
or
jmp
cmc
iret
or
mov
mov
fstps
scas
adc
out
sub
push
arpl
movsl
xchg
xchg
lods
bound
mov
fildll
inc
mov
mov
sbb
inc
sti
cmp
std
mov
add
scas
pop
iret
dec
sub
add
fldenv
stos
jmp
imul
sbb
push
test
jb
mov
pushf
mov
or
mov
push
nop
and
jl
fwait
jae
dec
dec
into
je
jbe
jecxz
xchg
lea
mov
mov
cmc
outsl
mov
lods
mov
lret
dec
rcr
inc
fstpt
fstpl
fldt
inc
stos
sti
lds
sbbl
sub
fs
rcll
pop
mov
pop
leave
rcrl
ficompl
mov
add
jnp
lret
mov
ret
mov
xor
shrb
outsb
cmp
push
out
ret
call
insl
jl
lods
dec
sub
xchg
mov
popa
gs
or
jns
mov
rol
sbb
in
xchg
add
pop
cltd
xchg
mov
test
push
mov
js
push
call
add
clc
add
jmp
adc
sbb
ror
shr
xlat
pop
pop
xchg
sub
lret
out
inc
add
mov
lret
nop
xchg
xor
dec
lahf
sbb
cltd
out
xor
incb
popa
clc
or
ljmp
inc
nop
or
int3
fwait
and
cltd
mov
add
dec
aad
prefetchw
mov
pop
jno
inc
xchg
push
mov
stos
lea
je
enter
loop
xchg
pop
inc
mov
cmpsb
iret
mov
jp
ljmp
scas
add
cwtl
pushf
inc
xchg
ret
jmp
sub
push
sbbl
pop
sub
or
ljmp
lret
xchg
dec
cltd
shrb
int3
jnp
inc
dec
jle
fisubl
jno
add
loop
iret
faddl
jnp
inc
jg
inc
out
xchg
movsl
jae
stos
leave
push
jns
adc
xor
inc
nop
inc
xor
and
push
xchg
pop
sbb
fsubrs
and
xchg
sub
adc
add
repnz
add
arpl
push
fadds
aas
sti
or
icebp
or
or
mov
and
mov
pop
adc
add
aad
mov
repz
jo
sub
adc
nop
cmp
dec
movsb
js
scas
push
cmp
insb
jbe
pusha
jge,pn
enter
pop
daa
call
xlat
in
icebp
hlt
sbb
add
push
repnz
repz
lahf
cmc
adcb
ret
test
cmp
imul
sub
pop
jne
mov
negb
cmp
cwtl
push
movsl
push
inc
test
inc
pop
inc
adc
sbb
cs
lret
add
cmp
xor
daa
dec
pop
nop
pop
mov
mov
pop
push
out
call
push
adc
or
insb
vmovntpd
test
cmpsb
out
jg
insb
divb
add
mov
iret
std
and
bound
and
ror
xchg
divl
sub
pop
push
ja
rcr
lret
addb
cmp
inc
daa
test
fadds
enter
pop
push
sbb
jl
jmp
arpl
outsl
scas
sub
push
mov
jge
enter
jl
adc
xor
movsl
stos
cmp
xchg
jb
mov
scas
into
lret
cmc
xchg
jmp
xor
pop
jmp
lods
add
imul
or
data16
iret
mov
sub
aaa
mov
xchg
out
sti
ljmp
gs
push
loopne
lods
in
dec
mov
xor
popa
fstps
aam
hlt
adc
repz
ss
cli
inc
cmp
push
mov
fstpl
insb
or
pushf
aaa
inc
and
out
jbe
out
jae
aad
xor
hlt
lds
jb
test
or
mov
movb
std
lea
movsl
in
mov
push
sub
popa
js
dec
mov
fyl2xp1
pop
out
mov
inc
pop
mov
das
pusha
mov
mov
mov
movsb
adc
sbb
xchg
std
push
jle
cwtl
mov
aad
mov
fdivrl
cld
adc
lret
lret
sub
ds
cmpl
scas
pop
rcrb
sub
addr16
jle
ret
imul
xor
dec
es
xchg
stc
mov
sbb
out
lods
inc
in
sbb
jbe
in
mov
xlat
sbb
nop
dec
jbe
inc
xor
add
xchg
cltd
leave
mov
mov
xor
lods
push
stos
mov
frstor
and
fs
sbb
sti
test
cmp
cmpsl
cltd
jmp
test
mov
xor
imul
xor
lcall
and
dec
enter
in
cmp
imul
int3
and
pusha
outsl
fwait
push
movb
loopne
mov
lods
fs
aaa
ss
bound
mov
in
popf
mov
mov
insb
mov
pop
das
cmp
addr16
mov
jp
lcall
mov
popf
xchg
dec
cmp
and
sar
xlat
data16
mov
imul
repz
sbb
out
cmpsl
addr16
add
push
lret
xchg
stos
and
sti
insb
cmp
add
and
in
lret
mov
sbb
mov
sbb
cli
pusha
mov
or
pop
push
cmp
mov
outsb
mov
inc
neg
rcrl
sahf
xchg
mov
lods
sbb
insb
lods
imul
scas
mov
ljmp
ret
dec
add
pop
js
leave
cld
hlt
push
cmp
inc
lea
inc
imul
aaa
cmp
or
xchg
mov
sub
lret
outsl
pop
inc
mov
out
mov
pop
xor
cmpsl
gs
es
int
add
mov
jge
in
lods
sbb
insb
shlb
fs
cmp
test
jl
mov
in
cmp
aad
cmc
xor
dec
loop
lahf
fistpll
push
fldt
push
imul
in
push
leave
xchg
enter
pop
sbb
loope
and
sub
je
cmp
out
pop
data16
pop
dec
sbb
jae
sub
gs
add
pop
mov
or
mov
add
js
xor
pop
iret
mov
daa
push
imul
fcoml
xchg
push
sub
sub
jl
dec
push
rolb
hlt
cmp
jp
mov
pop
sti
fisub
dec
lahf
inc
push
and
ret
sub
stos
stc
or
lret
push
jb
adc
test
mov
mov
outsl
cmpsl
outsb
or
jmp
push
stc
xor
sbb
mov
aaa
popa
cmp
or
mov
cli
ficomp
xor
loopne
or
jle
into
lods
adc
cmc
pop
xor
add
cmpsl
jl
jg
imul
mulb
lods
xor
cltd
mov
pushf
and
sub
dec
mov
icebp
arpl
cltd
lahf
jns
add
gs
in
jmp
jmp
lock
inc
mov
fsts
test
outsl
aad
xchg
sbb
fisttp
cmp
sti
pop
sub
lods
das
pushf
loop
push
jmp
mov
cs
xor
out
sub
xchg
mov
inc
ds
mov
pop
movb
mov
sub
jne
sbb
ja
loop
sbb
cmpsl
pop
fcomp
xlat
aad
pop
xchg
jp
inc
in
inc
inc
loopne
mov
aas
jnp
mov
adcl
jp
pop
sbb
std
lods
push
sub
out
fistpll
mov
sub
aas
movsb
mov
pushf
dec
mov
scas
add
das
loope
lock
jl
pop
out
mov
cmc
sub
and
ret
clc
xor
sub
sub
movsl
cmp
xlat
cwtl
xchg
cmp
push
ljmp
and
lahf
cmpl
sub
bt
add
daa
cltd
add
xor
push
push
outsb
jnp
leave
test
jp
jle
push
hlt
les
cmp
pop
in
lret
jb
outsb
out
or
jge
lock
push
outsl
fdivl
pop
fldenv
xor
jbe
or
test
xor
lock
push
or
xchg
ja
das
lret
shrl
imul
mov
insb
pop
or
push
fwait
xorl
sbb
sbb
sub
bound
cmp
lret
das
setae
outsl
mov
dec
mov
test
addr16
adc
jp
shrl
or
mov
pop
dec
inc
dec
pop
mov
inc
cmp
sub
xchg
push
shlb
mov
movsl
mov
sub
add
sbb
add
stos
in
jbe
jns
clc
insb
cmpsl
pop
push
jnp
lret
pop
icebp
pop
in
pop
jg
mov
inc
iret
lcall
pop
scas
push
jge
add
pop
mov
popf
mov
idivl
mov
xchg
or
mov
cmp
imul
scas
add
rclb
inc
adc
mov
push
leave
jae
stc
hlt
lahf
mov
incl
dec
pop
or
out
xchg
aaa
clc
outsl
or
or
les
rcrb
sbb
ret
mov
shr
pusha
scas
cs
cmp
inc
movsb
mov
pop
push
fnstcw
je
jg
sarb
mov
daa
out
fidivrl
in
or
cmp
jb
dec
push
push
popf
push
mov
cmc
and
pushf
sbbl
ljmp
inc
rorb
cmpsb
in
inc
xchg
in
cmp
sub
pop
add
stos
loope
jo
sub
loope
cmp
loop
subb
movsl
popa
mov
popa
rorb
je
sbb
pushf
mov
xchg
jmp
push
iret
mov
js
inc
enter
mov
adc
or
ret
sub
mov
cmp
xor
rcrb
jg
jg
mov
dec
hlt
mov
mov
mov
jp
and
push
push
es
bound
sbb
pop
aaa
lret
dec
rorl
mov
ja
jns
fwait
xchg
mov
test
movsb
lds
xchg
loop
pop
imul
xchg
js
adc
movsl
outsl
cmp
stos
jmp
cli
adc
loope
jne
xchg
cmp
mov
into
nop
cld
xor
pusha
mov
pop
adc
scas
imul
es
data16
pop
adc
mov
mov
inc
mov
sub
xor
sti
dec
cmpsl
sub
sub
subl
dec
jno
inc
pop
fnstsw
xor
repz
xchg
loopne
or
cmp
xchg
jae
dec
out
mov
adc
and
lds
jae
mov
hlt
aad
inc
lods
nop
mov
cmpl
pop
adc
jno
dec
scas
mov
inc
aaa
ss
mov
pushf
lea
call
xlat
xchg
inc
mov
shr
orl
xchg
inc
pop
xor
or
inc
sti
mov
das
push
jo
mov
cmp
in
sub
mulb
xchg
xor
in
mov
icebp
mov
xlat
cld
push
mov
or
mov
mov
mov
shlb
xor
aam
cmpsl
xor
es
aad
insl
xor
jecxz
sbb
insl
xchg
ja
inc
ljmp
int3
lods
pop
enter
xlat
sbb
in
mov
mov
lar
add
add
in
ret
mov
push
xor
scas
clc
mov
or
lea
int
in
xchg
aas
shr
lods
sbbl
stos
popa
add
ljmp
inc
ret
out
xor
mov
mov
daa
movsl
adc
xchg
mov
ja
out
cld
dec
mov
mov
sarb
in
outsl
xor
mov
cmpsb
rolb
loop
in
out
cmc
sbb
add
gs
push
push
adc
xchg
dec
leave
mov
movsl
lds
inc
cmc
and
mov
sbb
fisttpll
insb
and
adc
cmc
cli
mov
jmp
mov
dec
ja
out
jecxz
mov
inc
or
rcll
stos
pop
cmp
and
cmpsl
push
mov
push
in
push
xchg
pusha
dec
scas
aas
iret
stc
mov
loop
in
mov
jae
sbb
push
ret
popf
in
adc
sbb
cmp
jo
jecxz
imul
loopne
imul
add
mov
mov
hlt
ljmp
inc
mov
push
push
mov
cli
or
imul
xchg
aad
sahf
aas
movsb
fiadd
cmp
scas
or
inc
cmp
rclb
mov
push
xor
sbb
daa
in
add
sbb
jno
adc
dec
ret
cmp
xor
add
pop
lahf
sbb
test
push
pushf
out
inc
dec
cs
cmpsb
jo
jmp
and
or
xchg
fidivl
push
dec
jg
mov
stos
sub
and
cmp
xchg
movsl
push
cmp
xor
xchg
push
add
nop
pusha
xor
std
xchg
pop
add
in
inc
pop
int
xchg
sbb
outsl
fsubrl
push
sub
into
outsb
lahf
or
adc
aaa
push
jg
pand
push
dec
fsubl
imul
imul
and
testl
mov
mov
rcrb
lret
sahf
popl
test
xor
gs
test
adc
das
fs
dec
adc
xor
fadds
js
cli
inc
ss
dec
fistpll
sub
sub
into
jae
jb
jmp
pop
xor
inc
jbe
and
xchg
notl
in
pop
add
popa
shrl
js
and
xchg
sub
jbe
mov
cld
cmp
divl
decb
call
loopne
pop
dec
dec
test
cmp
les
push
mov
sbb
add
int3
and
pop
xchg
inc
mov
setbe
pushf
cmp
mov
loop
sbb
aad
sub
shrl
push
jb
fdivrs
je
pop
mov
int3
fiadd
or
addr16
ret
xchg
call
xchg
js
mov
icebp
or
es
in
jge
mov
xor
jmp
pop
inc
push
mov
std
push
mov
and
add
ror
jno
mul
mov
or
in
sub
popa
int
cld
xchg
sbb
lret
jp
cmp
mov
mov
enter
sbb
pop
sub
adc
sub
push
aam
cmp
xor
dec
pop
subl
ljmp
int3
lods
repz
mov
in
jns
mov
popa
jo
add
dec
jo
clc
xor
mov
mov
or
clc
lock
pop
xchg
sbb
cmp
fs
push
es
out
shlb
xchg
jle
call
lcall
sub
or
xor
xchg
frstor
sub
je
std
sub
popf
ja
negb
inc
in
pop
push
or
mov
fwait
loope
adc
add
std
mov
jmp
jns
ss
in
push
jb
sbbl
aam
aas
mov
pusha
push
adc
pop
and
inc
ja
mov
pop
dec
in
mov
mov
ret
adc
xchg
xchg
push
mov
test
mov
out
popf
mov
jb
fwait
or
push
fistl
icebp
mov
and
std
jnp
bound
pop
xlat
jecxz
lea
push
iret
pop
push
cmc
ret
test
sbb
xchg
inc
sbb
push
test
jg
add
mov
mov
pminub
add
xchg
mov
mov
imul
push
mov
in
adc
lcall
mov
adc
leave
popa
mov
adc
neg
inc
mov
rorl
in
stc
aaa
jbe
out
or
fs
int3
jb
sub
and
cmpsb
lds
and
shlb
dec
scas
in
andl
jg
cmp
inc
movsb
movsb
mov
push
ja
in
jbe
mov
mov
dec
daa
in
mov
dec
shrb
dec
adc
sub
push
push
jle
xchg
xor
pop
dec
xchg
jecxz
out
fsubs
sub
inc
ficom
in
or
aam
adc
movsl
pop
xor
push
sbb
loope
jp
sub
cmp
pop
fsubrl
mov
and
jle
lcall
add
stos
fdivl
mov
push
in
pop
sub
inc
js
daa
push
pop
dec
cmp
lcall
pop
fcompl
clc
and
outsb
add
scas
adc
adc
sbb
fucomip
out
mov
je
and
icebp
push
sub
mov
sub
imul
xlat
or
aaa
into
mov
and
stc
std
sbbb
mov
leave
outsl
inc
push
jecxz
movsb
ds
pop
sbb
cmpsl
in
push
adc
fisub
sbb
fdivrs
mov
xchg
xor
in
cmp
mov
or
jne
push
test
cmc
mov
jbe
push
jns
pop
movsb
xchg
mov
imul
bound
and
data16
sbb
in
je
jae
xlat
sub
into
icebp
in
xor
or
cmpsb
add
outsb
sub
gs
data16
mov
or
or
push
fnstenv
cmp
les
pop
repz
xchg
negb
cmp
fucomip
pop
inc
repz
adc
mov
inc
xchg
jnp
and
rcrl
sbb
jo
cli
jb
je
dec
popf
fwait
pushf
je
pop
repnz
pop
push
lea
xchg
popa
call
push
jecxz
mov
xor
pop
jnp
xor
inc
xor
popf
das
fsubl
mov
cmpsb
mov
and
mov
mulb
push
loop
mov
arpl
mov
cmp
std
cld
rclb
lret
jmp
mov
in
or
pop
pop
dec
aad
rorb
sub
aam
and
movsl
andl
dec
adc
ljmp
xchg
lods
in
repnz
xor
mov
cld
push
xadd
pop
cltd
movsl
lret
lods
test
into
mov
fmul
push
mov
cld
fnstsw
and
clc
sub
sbb
std
rcrl
insb
outsl
stos
aas
or
xor
add
dec
pushl
push
das
xor
jno
fwait
subl
jg
xrelease
mov
test
ss
xchg
dec
cwtl
in
lret
or
fwait
adc
fistpl
add
jae
cld
sub
add
daa
add
mov
aad
out
ss
jns
stos
inc
in
xchg
sarb
mov
sbb
cmpl
mov
mov
movsl
sti
mov
jne
hlt
clc
mov
mov
fbstp
mov
sti
jmp
pop
or
subl
out
sub
rorb
icebp
outsl
test
gs
xchg
and
mov
push
jle
cmp
in
jae
pusha
sub
iret
mov
lock
gs
push
in
inc
es
jae
pusha
push
push
dec
jg
popf
sub
push
inc
or
pop
xchg
adc
aam
cmp
shrb
jmp
scas
sub
inc
push
iret
mov
mov
arpl
div
sbb
arpl
xchg
dec
stc
or
pop
xlat
mov
xor
adc
add
pop
cld
iret
jle
int3
cmp
pop
ds
scas
lret
and
fwait
cmp
xor
movsb
das
sbb
cmp
data16
jo
sbb
arpl
daa
jecxz
fidivr
jle
ljmp
and
dec
mov
pop
inc
xor
mov
shl
mov
and
xor
cmpsb
jbe
dec
in
repnz
enter
pop
adc
popf
into
loope
xor
mov
or
gs
pop
cmp
dec
add
repz
lods
iret
ficomp
inc
dec
jae
mov
lods
xor
xchg
sbb
pop
push
ja
js
cmc
mov
lret
sbb
push
push
aaa
fadd
push
pop
sub
cmpsl
pop
outsb
gs
int
imul
cmp
push
add
xor
adc
xchg
push
push
das
fistp
pop
jno
testl
sub
into
or
and
sub
sahf
aad
fiaddl
movsl
add
loop
jl
stc
pavgw
xor
pop
adc
cmp
mov
push
jmp
clc
jno
out
push
and
stos
fsubrl
cli
push
inc
cmp
dec
adc
frstor
into
cmp
jns
fnsave
jno
repz
ret
out
and
lret
xchg
imul
nop
add
cmpb
out
mov
cmpsl
xlat
add
pop
sub
mov
pushf
in
popf
in
sti
push
push
inc
xchg
add
gs
fsts
dec
addr16
daa
inc
xchg
lea
outsb
mov
les
cltd
mov
xchg
sub
bound
js
sub
lret
pop
stc
push
repnz
pop
pop
jmp
call
ficom
loopne
inc
and
std
jb
inc
aam
adc
xchg
je
in
xchg
jecxz
and
movaps
lea
fs
mov
shlb
mov
mov
fcmovnu
xchg
outsb
ficomp
sub
inc
add
rolb
pop
das
mov
fwait
pop
mov
jne
push
shrl
pop
imulb
out
std
dec
popa
out
inc
mov
loop
jl
pop
adc
icebp
orps
jmp
add
pop
repnz
mov
and
lock
lahf
pop
imul
rcrb
leave
xchg
sub
mov
pop
pop
and
xor
add
cmp
push
insl
out
lahf
dec
or
xor
xor
ret
add
loope
dec
mov
cli
lods
mov
pop
scas
push
add
out
xchg
test
mov
push
dec
push
jp
insb
frstor
cwtl
clc
data16
xchg
pop
add
push
lods
cmpsl
repnz
adc
cltd
cmc
repnz
cs
out
xchg
scas
sub
fucomi
callw
daa
divl
scas
adc
xor
lea
mov
mov
xor
aas
dec
lret
and
push
jo
ja
xchg
fmull
loope
inc
sbb
push
or
mov
rcrl
cmpsl
push
mov
addl
xchg
pop
xchg
bound
ret
jo
test
jnp
pop
stc
fidivr
imul
mov
icebp
scas
mov
adc
scas
dec
stos
leave
sub
pop
sti
xor
push
jge
xchg
mov
push
xchg
ljmp
out
xor
mov
in
sbb
stos
mov
fsubs
aad
insb
push
test
lods
or
mov
cwtl
push
pusha
push
cs
push
cwtl
add
mov
add
xor
adc
ljmp
push
mov
mov
ficoml
pop
xchg
push
pop
jg
or
push
push
sbbl
fsubp
cmp
mov
ljmp
xchg
mov
jle
inc
xchg
fbld
inc
divl
push
inc
aaa
hlt
cmp
or
sub
jge
sub
xlat
fisubr
lods
lds
rcrb
scas
stos
sub
cmp
iret
lret
jo
jbe
pop
jge
or
sbb
jb
mov
xchg
jne
jl
pop
adc
test
push
inc
xchg
mov
jo
dec
jne
jp
test
xchg
sbb
std
sbb
cld
sub
mov
fldenv
pop
push
jb
push
aad
loope
adc
sub
fildll
mov
mov
bound
in
pop
dec
cmc
sarb
js
testb
jle
daa
addr16
fistl
ret
pop
jp
cmpl
jnp
lcall
jns
outsb
or
sub
xor
adc
enter
es
es
icebp
sub
jle
mov
push
xor
mov
dec
push
sub
mov
lret
shll
mov
and
sbb
sub
inc
jbe
add
bound
pop
jecxz
lret
stc
dec
les
mov
dec
inc
xor
cmp
mov
shl
roll
xor
pop
or
lods
mov
inc
into
sbb
jne
inc
add
int3
subl
dec
xchg
adc
dec
mov
add
nop
data16
push
lods
mov
and
inc
jg
sub
mov
or
insl
mov
and
mov
loopne
xor
dec
ljmp
movsl
and
repz
jecxz
in
divb
cmp
loopne
pop
lods
outsb
test
adc
hlt
pushf
cmp
sbb
cmpl
aad
cmc
nop
pop
push
out
scas
mov
jb
inc
aam
mov
gs
rclb
stc
sub
adc
clc
pop
pop
call
roll
mov
fmull
xchg
mov
ret
pop
mov
inc
mov
inc
addr16
das
lcall
mov
add
imul
mov
es
lock
int3
cwtl
add
cmpsl
loope
aas
mov
out
sbb
push
xchg
lret
movl
dec
mov
xchg
push
lock
pop
mov
bnd
sub
mov
loop
xchg
ret
ret
pop
mov
mov
cmp
dec
or
xchg
jae
ret
ljmp
sub
bound
popf
popf
pop
and
xor
movd
pop
add
andl
sbb
mov
push
orps
iret
aam
mov
jge
sbb
ret
xchg
pop
inc
push
lahf
stos
sbb
rcr
push
lret
mov
cmpsb
js
jne
xchg
aad
stos
or
xchg
mov
xor
cmp
iret
popf
ja
es
jle
or
rcrb
cltd
jg
fwait
outsb
push
jmp
add
dec
xor
out
jno
pop
bound
std
jns
andb
clc
rclb
jno
mov
xchg
enter
lods
xchg
jp
jno
mov
push
mov
inc
imul
pop
mov
rcr
fbstp
setb
xor
xchg
out
test
sub
out
lea
xor
std
scas
and
cmp
mov
xorl
mov
addb
jne
xchg
ret
test
and
cmp
clc
jae
mov
push
into
pop
mov
ja
mov
inc
or
jg
add
pop
sbb
push
imul
cmc
scas
bnd
push
test
dec
mov
or
leave
test
hlt
push
mov
add
in
or
dec
push
lods
or
imul
pop
jo
ficom
pop
mov
lret
aaa
jp
je
pop
scas
mov
inc
and
insl
push
cmp
push
movsb
inc
fcmovne
push
fs
jbe
icebp
loopne
les
push
daa
loope
pusha
cmp
insb
jae
rcr
jnp
lods
addr16
push
daa
pop
xor
jo
fwait
lahf
cltd
sti
cmpsb
push
pop
pop
add
enter
mov
cmpsb
jl
test
rorb
add
push
dec
push
shl
adc
sub
stc
jo
cmp
es
aas
shll
andb
lods
call
std
sbb
lock
testb
sahf
push
int
mov
dec
or
lcall
fcompl
rcrb
sub
xchg
adc
mov
jne
mov
sbb
mov
mov
loop
and
xor
sub
popa
sbb
testl
mov
rcr
sbb
mov
add
loope
mov
pop
xchg
sbb
jge
mov
aad
cwtl
dec
leave
ss
cltd
sarb
outsb
das
mov
cli
adc
xor
sti
xchg
or
iret
and
xor
cmpsl
lods
pop
add
imul
sub
iret
mov
lods
lcall
xlat
add
push
mov
jae
dec
sti
mov
xlat
xchg
imul
adc
dec
and
mov
cltd
xlat
les
mov
dec
js
xchg
scas
xlat
mov
or
cmp
push
push
enter
pop
cmp
pushf
in
or
jo
sbb
movsb
mov
nop
cli
pushf
jle
dec
xchg
jb
jle
dec
add
ja
mov
ja
adc
sbb
call
xchg
cmp
mov
adc
dec
fcomi
rolb
cmp
inc
les
das
jns
cltd
mov
lret
dec
stos
and
loopne
rorl
cmp
out
daa
mov
cwtl
mov
and
in
icebp
mov
std
lret
fist
pop
outsb
mov
inc
lock
sub
rol
push
mov
cmp
aam
int
ret
push
xor
mov
je
add
in
mov
ljmp
loopne
cs
push
mov
or
mov
roll
dec
cltd
dec
and
test
inc
mov
push
add
mov
out
clc
fadd
cmc
xchg
and
adc
out
and
or
add
pop
leave
pop
xchg
lcall
call
int3
xor
add
or
and
mov
ss
pop
dec
cltd
mov
xor
cmp
popa
inc
dec
ljmp
popf
xchg
adc
in
fdivp
add
imul
pop
bound
loope
in
orl
loopne
pop
mov
dec
mov
sbb
sub
sub
in
sub
mov
mov
dec
jno
sbb
xor
mov
add
fist
xor
push
ss
xchg
xorb
push
mov
sub
loop
add
stos
xchg
scas
dec
and
lcall
or
addr16
adc
pusha
push
out
iret
aam
sbb
inc
sti
inc
pop
clc
cmp
adc
jae
leave
bound
xchg
jae
popf
sahf
mov
inc
mov
cmpsb
fidivrl
jo
sbb
push
or
add
scas
push
jns
push
int3
adc
mov
repnz
insl
sti
leave
cmp
add
arpl
pop
jle
adc
leave
push
repz
jb
lods
or
into
int3
push
mov
pop
mov
fidiv
mov
rorb
sti
and
movsb
sarb
adc
mov
xor
sti
mov
imul
sbb
outsl
mov
loopne
xchg
cmp
or
jno
imul
xlat
inc
adc
push
or
xchg
xor
lret
sahf
lret
lahf
mov
push
or
push
xchg
fiadd
xlat
loope
ljmp
call
enter
pop
rol
and
pusha
mov
sub
cmc
sub
sub
pop
dec
ds
mov
int3
and
dec
mov
out
mov
out
fild
pop
out
xor
push
rcrb
sub
jp
push
dec
lret
inc
imul
les
sub
and
adc
jle
int
sbb
mov
jns
mov
pop
cwtl
and
pusha
int
xor
testl
loopne
xchg
movsb
ja
stc
dec
add
mov
aaa
sahf
mov
mov
xor
daa
outsl
shrb
lock
ss
xor
sti
fs
outsl
adc
cltd
movsl
ss
mov
cmp
sub
mov
sbb
xor
xchg
cmp
adc
or
lcall
into
add
fisub
and
bound
inc
jns
imul
testb
xlat
pop
inc
adc
mov
pop
jno
xlat
rorl
sub
add
mov
inc
sti
jmp
sbb
loopne
add
dec
test
movb
cmp
adc
cmpsb
les
repz
sbb
sub
inc
inc
icebp
xor
mov
sbb
jmp
mov
pusha
aad
js
nop
aad
inc
aas
in
jp
jb
jmp
cmp
pop
xchg
out
pop
pop
adc
sbb
mov
call
push
mov
mov
sub
inc
sub
pop
pop
scas
roll
xor
inc
popf
aaa
jge
pop
andl
and
ljmp
xor
std
xor
cmpsl
fistpll
xor
insb
inc
mov
movsl
jnp
mov
jne
mov
popa
bnd
cs
enter
cwtl
bound
aam
add
ret
loope
lret
sbb
insl
fwait
dec
mov
inc
ja
icebp
cmpsb
ljmpw
xor
sbb
aas
pop
mov
pminsw
push
sub
lock
xchg
test
dec
lahf
mov
push
pop
push
ret
xchg
popf
fstp
or
bound
pop
push
adc
mull
xor
mov
repz
insb
push
add
mov
mov
or
add
jne
mov
cmp
pop
dec
add
loop
mov
cmc
enter
mov
fwait
int3
lahf
cmp
nop
adc
sbb
add
inc
bound
int
jns
out
in
popa
and
and
jo
pop
inc
lods
addr16
and
jp
add
mov
jl
mov
popa
cltd
lods
dec
push
mov
pop
mov
inc
mov
scas
and
iret
dec
jmp
dec
aas
dec
andl
cmp
fstl
data16
or
fbld
sbb
insb
xchg
aad
jnp
ret
or
into
in
pop
es
out
popa
cmp
xor
rcrl
ljmp
pop
cmpsb
push
push
add
popf
mov
pop
test
fisubrl
mov
sbb
or
ljmp
adc
push
adc
cmp
scas
repnz
mov
repz
lcall
push
xor
or
push
sbb
or
int
pop
inc
ret
rol
stos
sbb
aas
mov
mov
push
add
and
sbb
lcall
dec
pop
divl
sbb
jl
cld
dec
pop
mov
push
in
call
add
jo
es
lahf
xlat
inc
sub
test
pop
aas
outsl
inc
test
gs
mov
enter
pop
adc
inc
loope
mov
sub
seta
xor
movsl
xchg
stos
out
and
inc
mov
sbb
sbb
xor
sti
pop
out
sub
js
not
pop
mov
lcall
neg
outsl
sub
push
outsb
icebp
jge
adc
pop
inc
dec
jg
shrl
and
aad
xor
and
inc
std
push
cmp
int
cmp
sub
ja
testl
pusha
add
in
mov
in
cli
sahf
popa
push
out
test
in
movsl
adcb
jb
lahf
jge
loop
jp
stc
jmp
mov
xor
sub
cmp
in
push
mov
cltd
loopne
push
push
xor
mov
into
lds
scas
cmc
xchg
dec
xor
sub
aas
js
adc
xor
dec
into
dec
adc
les
in
loop
retw
cs
lods
push
mov
fildll
les
movsl
lret
dec
cmpsl
cmp
sbb
lea
dec
jecxz
sbb
add
push
in
icebp
repz
mov
xor
rol
cmp
mov
in
add
sbb
sub
dec
xchg
aad
mov
mov
loope
mov
jb
mov
dec
lock
je
jne
jecxz
fcomi
sbb
mov
sub
mov
adc
inc
xorl
inc
ds
stos
pop
repz
sbb
mov
lret
mov
cmp
aaa
shrl
and
cwtl
xor
jge
xor
imul
xchg
gs
adc
xchg
mov
xchg
lock
xchg
pop
out
inc
shrb
mov
daa
outsb
adc
inc
loop
jo
adc
inc
maxps
lods
popa
dec
stc
pop
adc
add
icebp
popa
dec
popf
dec
lods
add
fstpt
push
jp
and
add
hlt
add
mov
mov
mov
mov
fdivrl
push
xchg
out
fldl
cmpl
std
mov
push
add
sbb
dec
rorl
adc
stos
ljmp
xchg
sub
fdivrp
push
mov
xor
sub
or
imul
mov
cmp
aas
dec
addr16
test
sahf
ja
stc
rorl
mov
ret
mov
push
push
xor
sub
lahf
pop
iret
out
push
inc
mov
jns
mov
in
xchg
cmp
xchg
sub
ret
addr16
nop
fstpt
mov
dec
cmp
push
dec
aaa
dec
pop
jne
adc
into
or
jmpw
outsl
xchg
push
pop
xor
out
mov
fmull
outsl
push
mov
xor
insb
in
out
jnp
mov
jle
push
in
adc
pusha
mov
push
iret
xchg
dec
inc
ret
and
dec
inc
pop
ss
push
pop
add
pusha
mov
xchg
push
sbb
xchg
fs
cmp
pop
cmp
mov
add
hlt
test
scas
inc
popf
scas
cltd
or
mov
and
repnz
int3
hlt
inc
and
fdivrp
daa
daa
lds
jg
lds
repz
es
ret
and
xor
xchg
loop
movsb
out
push
push
push
loope
jbe
imul
xchg
pop
imul
jge
out
jno
icebp
jl
test
int3
cmc
lea
rorb
lcall
aas
or
aad
inc
test
sub
mov
cmp
xor
jne
imul
push
pop
subl
ret
stc
scas
sub
sbb
pusha
ds
mov
and
sub
or
push
sbb
add
sub
out
jle
push
adc
lock
pop
inc
sub
push
jp
sub
sbb
sub
add
adc
xor
in
jg
insb
mov
ja
les
stos
inc
outsb
and
mov
int
sub
jle
lods
idivl
stc
rol
adc
popf
es
add
enter
mov
outsl
jle
dec
loop
mov
lods
fs
cld
divb
or
cmp
lahf
mov
xchg
cli
test
cld
mov
or
cmp
out
pop
das
xor
mov
pop
pop
in
adc
push
sub
jmp
adc
push
sti
add
inc
mov
mov
push
imul
aaa
popa
inc
mov
mov
scas
sti
je
incb
test
hlt
inc
loopne
pop
fisttpll
movsb
roll
dec
flds
push
push
repz
dec
xchg
clc
xor
cmp
adc
js
mov
pushf
in
shr
adc
int
je
jge
add
mov
or
sub
jb
pop
mov
sub
jecxz
repz
xchg
mov
inc
mov
aaa
pushf
mov
icebp
addl
aaa
fstpt
lcall
mov
inc
rcrl
das
push
cmpsl
sti
mov
lock
stc
inc
sar
fwait
mov
mov
mov
out
icebp
adc
push
jecxz
icebp
inc
sub
ret
lret
addl
mov
mov
mov
aaa
lock
pop
push
test
sarb
and
sub
je
aam
outsb
repz
decl
es
jns
insl
imul
bound
jae
sbb
bound
xor
sub
and
sahf
jo
psubd
cli
cltd
out
inc
cmp
mov
test
mov
sub
enter
xchg
xchg
mov
movsl
sbb
or
stos
fnstcw
test
inc
push
and
push
jecxz
xor
or
or
addr16
mov
mov
aas
mov
add
mov
popf
mov
dec
xor
or
iret
int
sub
dec
push
push
xchg
add
mov
pop
mov
jns
fildl
scas
sbb
mov
fisubrl
push
mov
inc
addr16
xchg
mov
cmp
mov
add
dec
sbb
xchg
jne
stc
js
add
xchg
shrl
es
loope
mov
out
push
dec
sub
shll
ret
push
stos
lock
movsb
and
int3
insb
push
push
jnp
adc
jle
orl
and
dec
ret
fwait
pop
popf
push
jbe
push
xchg
pop
push
fidivrl
popf
adc
cmp
inc
add
or
xchg
sbb
sbb
stc
sbb
add
jle
mov
fistpll
stc
cs
mov
push
cltd
mov
mov
and
mov
leave
or
aaa
scas
ljmp
adc
mov
out
push
loope
ficomp
jne
shl
jns
add
xlat
jns
dec
pop
rep
jno
cmpsb
push
mov
into
mov
pusha
insb
sub
dec
scas
insl
daa
frstor
push
cmp
ljmp
cmp
mov
xor
fsubrl
notl
jb
test
hlt
cld
mov
cmpsb
mov
je
pop
pop
enter
pop
adc
push
jbe
loope
mov
movsl
in
cmp
sub
mov
sub
in
inc
push
scas
rolb
stos
addl
imul
cmp
out
pop
lds
in
pop
sbb
shr
lock
xor
sub
fs
adc
andnps
inc
sbb
mov
int3
or
cmc
mov
and
sbb
push
inc
inc
lret
sti
xchg
sub
jno
idivl
jle
ret
push
jp
pop
jg
mov
nop
stos
sahf
cmpsl
cmp
jmp
push
dec
outsl
pop
test
inc
stc
pop
dec
fs
notb
aam
dec
ss
ljmp
pop
lcall
fsubrl
push
cmp
dec
arpl
ja
jb
mov
pop
cmc
and
xchg
cld
sub
push
adc
lods
xchg
adc
lods
xchg
add
xor
mov
adc
jle
jl
stos
or
mov
pop
cmpb
pusha
jp
arpl
lcall
dec
jbe
mov
push
fnstcw
pminsw
test
xchg
xchg
mov
hlt
sbb
fiaddl
cli
pop
sub
adc
fsubrs
jns
jmp
arpl
aad
fsubs
nop
data16
aas
leave
inc
or
jg
aad
fidivr
je
xor
and
call
mov
xor
fsubp
mov
aad
mov
lods
lret
or
cwtl
inc
sub
rolb
out
das
cmc
mov
mov
cmpsl
nop
imul
inc
xor
sti
in
inc
std
xor
gs
test
cmpsb
xchg
mov
sbb
cld
in
sbb
test
mov
push
xor
mov
rclb
rclb
sub
mov
shlb
dec
pop
rep
push
push
out
out
dec
sbb
out
add
ret
inc
lods
ficompl
sarl
dec
sbb
cmp
mulps
xor
sub
jmp
es
cli
mov
mov
adc
push
sbb
xchg
iret
sbb
aam
sar
pop
fwait
lea
enter
call
push
pop
push
std
fs
nop
adc
lods
or
inc
xor
push
stc
mov
inc
stos
jae
xor
sub
orl
cmp
movsb
mov
sub
jns
roll
aad
sahf
out
int3
jbe
xor
cmc
mov
sti
mov
fdivrs
cmp
addr16
std
jp
movsl
pop
mov
dec
sti
mov
scas
pop
sub
inc
je
pop
pop
pop
mov
jge
fisttp
sub
xor
xchg
adcl
out
lret
stos
jmp
or
inc
push
stos
arpl
add
aad
cmp
pop
pop
jle
nop
jno
lds
repnz
push
mov
pop
pop
aam
cmp
jae
mov
mov
cmp
mov
test
fiaddl
lods
sbb
cs
movsb
xor
scas
loope
dec
push
call
into
movsl
mov
test
xchg
leave
sbb
ja
aad
arpl
jbe
inc
mov
add
test
outsb
xor
or
ret
rcrb
inc
out
fiadd
cltd
lds
or
sti
xchg
scas
in
xchg
and
mov
cmp
jb
movsb
cld
add
push
out
xor
sbb
pop
int
pop
xchg
push
daa
fmull
cmp
pop
sub
dec
stos
decl
xchg
cld
push
xor
aaa
xor
push
jnp
aaa
test
mov
pop
lods
cmpsb
or
or
enter
pop
into
lds
out
loope
inc
mov
cmp
popa
fdivrl
fisubr
fbld
xchg
repz
xor
sbbl
dec
xor
insl
jae
pop
lea
pop
inc
cwtl
cmp
sub
push
sub
xchg
adc
ljmp
mov
sti
mov
jg
and
call
mov
sub
idivl
push
xor
out
mov
popf
sbb
jns
dec
lret
jmp
outsl
cmp
mov
cmp
and
adc
fs
push
adc
outsl
test
cmp
adc
lret
cli
cmovns
cmp
lods
nop
or
out
jne
outsb
ja
cmc
ljmp
pop
pushf
enter
xchg
mov
adc
sahf
rolb
lcall
lods
sbb
mov
xlat
mov
xor
mov
sahf
sti
push
adc
xchg
jb
lea
inc
pop
lcall
js
add
xchg
jle
lret
sbb
adc
inc
scas
pop
faddp
push
adc
and
jmp
ja
cs
cmp
nop
inc
es
int
rcrb
push
je
push
and
out
adc
and
mov
call
dec
leave
stos
mov
clc
xorl
add
pop
xchg
or
inc
mov
mov
int3
int
aam
cmp
pop
cld
mov
rcll
add
fisubrl
cwtl
rorl
rcll
jl
xchg
icebp
lock
sbb
sbb
mov
cmp
pop
inc
push
push
shl
mov
sub
aam
daa
es
sbb
stos
dec
insl
aaa
and
xchg
in
jnp
ljmp
hlt
lods
inc
mov
fnstcw
sub
das
or
add
or
pop
out
mov
push
adcl
inc
fnsave
mov
add
mov
rcll
push
pop
inc
loop
stos
mov
out
dec
cmp
xchg
std
hlt
je
fcoms
mov
gs
or
dec
xor
inc
jno
dec
jecxz
inc
or
dec
pushf
add
ja
jo
dec
xor
push
or
outsl
pop
fwait
mov
sbb
or
lock
lret
xchg
or
jns
pusha
sti
in
and
dec
ss
das
cwtl
mov
repz
cmp
pop
jp
cltd
lret
mov
test
mov
sbb
stos
jne
sbb
sbb
int3
fildll
in
xchg
jns
fldl2t
sub
insb
xchg
ja
arpl
stc
test
leave
call
push
pop
lahf
pusha
stos
mov
and
add
jbe
leave
jle
xchg
cwtl
in
mov
iret
scas
js
ret
xchg
pop
or
xchg
inc
jle
pop
jae
push
and
pusha
lds
popf
popa
out
mov
add
cmpsb
fidivl
lods
jae
leave
aad
sbb
cmp
imul
dec
push
das
pop
mov
mov
sti
pfcmpge
shrl
fcomp
push
arpl
mov
es
xor
mov
or
jnp
inc
xlat
jp
mov
mov
mov
fsubp
mov
vpaddsb
rclb
mov
and
das
je
xchg
jbe
cmc
or
xor
adc
fstpt
cmp
mov
dec
jl
adc
dec
sbb
push
jns
daa
xor
xchg
arpl
dec
ss
xchg
push
push
mov
in
inc
in
shll
sub
pop
enter
pop
or
or
loope
push
cmp
cmp
push
add
movsl
scas
cmp
and
push
mov
inc
fsubs
add
pop
pop
xor
adc
pop
mov
xchg
js
aaa
popf
pop
ret
xchg
xchg
jg
cli
fcompl
fdivrl
outsb
jge
int3
adc
lds
or
push
mov
mov
lcall
inc
pop
xor
sub
mov
fmul
test
sbb
nop
cmp
sahf
in
inc
push
test
scas
mov
sbb
jl
iret
mov
les
sahf
adc
pushl
rorl
cmp
rolb
out
push
pop
cli
inc
xchg
std
xor
out
or
inc
into
push
xor
out
pop
mov
sbb
clc
adc
jecxz
add
mov
dec
lods
add
mov
xlat
cld
stos
sub
cmp
cmc
test
sti
int
sbb
test
add
ret
lea
