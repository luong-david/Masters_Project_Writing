jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
xor
ss
cmp
xor
add
add
and
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
push
mov
push
cmp
jnp
xchg
lea
inc
dec
xchg
xchg
xchg
lea
mov
mov
lea
mov
mov
mov
mov
inc
dec
dec
call
cmp
jge
lea
mov
lea
mov
xchg
xchg
mov
mov
xchg
mov
inc
mov
xchg
lea
mov
xchg
inc
dec
dec
movw
movzwl
push
call
cmp
jl
xchg
mov
mov
xchg
lea
xchg
mov
mov
dec
jne
mov
dec
mov
mov
lea
lea
dec
inc
dec
lea
mov
call
mov
cmp
jp
dec
dec
mov
cmp
je
lea
xchg
xchg
mov
mov
lea
mov
mov
dec
inc
lea
mov
lea
inc
movw
movzwl
push
call
cmp
jo
xchg
xchg
mov
xchg
mov
lea
xchg
xchg
mov
mov
xchg
xchg
dec
inc
call
cmp
jo
xchg
lea
inc
dec
dec
lea
mov
inc
xchg
mov
lea
lea
mov
xchg
xchg
mov
dec
inc
inc
call
cmp
jae
mov
lea
lea
xchg
mov
lea
inc
dec
jne
xchg
dec
inc
lea
lea
inc
mov
lea
lea
mov
pop
pop
ret
mov
push
mov
push
cmp
jo
xchg
xchg
mov
xchg
mov
lea
xchg
xchg
mov
mov
xchg
xchg
dec
inc
movw
movzwl
push
call
cmp
jo
xchg
lea
inc
dec
dec
lea
mov
inc
xchg
mov
lea
lea
mov
xchg
xchg
mov
dec
inc
inc
movw
movzwl
push
call
cmp
jae
mov
lea
lea
xchg
mov
lea
inc
dec
jne
xchg
dec
inc
lea
lea
inc
mov
lea
lea
mov
call
xchg
cmp
jne
lea
lea
mov
lea
mov
xchg
inc
inc
mov
xchg
mov
mov
mov
mov
xchg
xchg
call
cmp
jnp
xchg
lea
inc
dec
xchg
xchg
xchg
lea
mov
mov
lea
mov
mov
mov
mov
inc
dec
dec
pop
pop
ret
mov
push
mov
add
mov
mov
cmp
jge
lea
mov
lea
mov
xchg
xchg
mov
mov
xchg
mov
inc
mov
xchg
lea
mov
xchg
inc
dec
dec
mov
mov
add
mov
mov
mov
mov
cmp
jo
xchg
lea
inc
dec
dec
lea
mov
inc
xchg
mov
lea
lea
mov
xchg
xchg
mov
dec
inc
inc
mov
add
add
mov
mov
mov
mov
xchg
cmp
jne
lea
lea
mov
lea
mov
xchg
inc
inc
mov
xchg
mov
mov
mov
mov
xchg
xchg
mov
add
add
mov
mov
mov
mov
mov
add
add
mov
mov
mov
mov
mov
add
add
mov
mov
mov
mov
mov
add
add
mov
mov
mov
mov
xor
mov
cmpl
jbe
cmp
jl
mov
mov
mov
mov
mov
mov
mov
mov
lea
xchg
dec
inc
dec
lea
lea
xchg
mov
mov
dec
inc
mov
test
jbe
mov
movl
mov
add
mov
dec
shl
add
mov
mov
mov
add
push
mov
push
call
test
jne
cmp
jo
xchg
xchg
mov
xchg
mov
lea
xchg
xchg
mov
mov
xchg
xchg
dec
inc
mov
add
mov
dec
add
add
mov
mov
movzwl
mov
jmp
incl
decl
jne
jmp
mov
sub
mov
mov
add
mov
shl
add
mov
mov
mov
add
mov
mov
mov
pop
ret
push
mov
add
mov
mov
cmp
jge
lea
mov
lea
mov
xchg
xchg
mov
mov
xchg
mov
inc
mov
xchg
lea
mov
xchg
inc
dec
dec
mov
cmp
je
jmp
cmp
jo
xchg
lea
inc
dec
dec
lea
mov
inc
xchg
mov
lea
lea
mov
xchg
xchg
mov
dec
inc
inc
mov
xor
divl
test
jne
cmp
jae
mov
lea
lea
xchg
mov
lea
inc
dec
jne
xchg
dec
inc
lea
lea
inc
mov
lea
lea
mov
mov
mov
jmp
mov
xor
divl
inc
imull
mov
mov
cmp
jp
dec
dec
mov
cmp
je
lea
xchg
xchg
mov
mov
lea
mov
mov
dec
inc
lea
mov
lea
inc
mov
mov
pop
ret
mov
push
mov
add
mov
mov
mov
cmp
jl
xchg
mov
mov
xchg
lea
xchg
mov
mov
dec
jne
mov
dec
mov
mov
lea
lea
dec
inc
dec
lea
mov
mov
cmp
je
jmp
cmp
jnp
xchg
lea
inc
dec
xchg
xchg
xchg
lea
mov
mov
lea
mov
mov
mov
mov
inc
dec
dec
mov
mov
mov
mov
call
mov
mov
movzwl
dec
test
jb
inc
mov
movl
mov
lea
mov
mov
mov
lea
mov
add
cmp
jbe
xor
mov
jmp
mov
lea
mov
cmpl
je
mov
lea
mov
cmpl
je
mov
lea
mov
mov
mov
lea
mov
add
mov
mov
call
mov
jmp
mov
lea
mov
mov
mov
lea
mov
add
mov
mov
call
mov
jmp
mov
lea
mov
mov
mov
lea
mov
cmp
jae
mov
mov
mov
lea
mov
mov
call
add
jmp
mov
mov
mov
lea
mov
mov
call
add
incl
decl
jne
mov
mov
pop
ret
nop
push
mov
add
mov
mov
mov
cmp
jl
mov
mov
mov
mov
mov
mov
mov
mov
lea
xchg
dec
inc
dec
lea
lea
xchg
mov
mov
dec
inc
mov
cmp
je
jmp
cmp
jnp
xchg
lea
inc
dec
xchg
xchg
xchg
lea
mov
mov
lea
mov
mov
mov
mov
inc
dec
dec
mov
push
mov
push
mov
push
mov
push
call
mov
mov
mov
pop
ret
nop
push
mov
add
mov
cmp
je
call
mov
cmp
jp
dec
dec
mov
cmp
je
lea
xchg
xchg
mov
mov
lea
mov
mov
dec
inc
lea
mov
lea
inc
mov
sub
mov
xchg
cmp
jne
lea
lea
mov
lea
mov
xchg
inc
inc
mov
xchg
mov
mov
mov
mov
xchg
xchg
push
mov
mov
xor
call
mov
cmp
jae
mov
lea
lea
xchg
mov
lea
inc
dec
jne
xchg
dec
inc
lea
lea
inc
mov
lea
lea
mov
mov
mov
mov
call
cmp
jl
xchg
mov
mov
xchg
lea
xchg
mov
mov
dec
jne
mov
dec
mov
mov
lea
lea
dec
inc
dec
lea
mov
push
mov
mov
xor
call
mov
cmp
jo
xchg
lea
inc
dec
dec
lea
mov
inc
xchg
mov
lea
lea
mov
xchg
xchg
mov
dec
inc
inc
cmp
jge
lea
mov
lea
mov
xchg
xchg
mov
mov
xchg
mov
inc
mov
xchg
lea
mov
xchg
inc
dec
dec
lea
mov
push
mov
jmp
xchg
cmp
jne
lea
lea
mov
lea
mov
xchg
inc
inc
mov
xchg
mov
mov
mov
mov
xchg
xchg
mov
mov
add
mov
add
mov
call
mov
mov
add
mov
mov
movzwl
mov
add
add
mov
mov
push
mov
mov
mov
call
mov
mov
mov
cmpl
je
push
mov
mov
mov
xor
call
mov
mov
cmp
jnp
xchg
lea
inc
dec
xchg
xchg
xchg
lea
mov
mov
lea
mov
mov
mov
mov
inc
dec
dec
mov
cmpl
je
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
movzwl
dec
test
jl
inc
mov
movl
mov
lea
mov
cmpl
je
mov
lea
mov
mov
cmp
jae
mov
lea
mov
mov
mov
incl
decl
jne
mov
mov
mov
mov
call
mov
mov
add
mov
mov
mov
mov
movzwl
dec
test
jl
inc
mov
movl
mov
lea
mov
cmpl
je
mov
mov
mov
lea
mov
add
mov
cmp
jl
mov
mov
mov
mov
mov
mov
mov
mov
lea
xchg
dec
inc
dec
lea
lea
xchg
mov
mov
dec
inc
mov
lea
mov
cmpl
je
mov
lea
mov
mov
mov
lea
mov
mov
add
mov
call
mov
lea
mov
mov
mov
lea
mov
cmp
jae
mov
mov
mov
lea
mov
mov
call
add
mov
jmp
mov
mov
mov
lea
mov
mov
call
add
mov
jmp
mov
mov
mov
lea
mov
mov
call
add
mov
incl
decl
jne
push
push
mov
call
push
mov
call
cmp
jo
xchg
xchg
mov
xchg
mov
lea
xchg
xchg
mov
mov
xchg
xchg
dec
inc
mov
mov
mov
mov
mov
add
mov
mov
mov
cmp
jo
xchg
lea
inc
dec
dec
lea
mov
inc
xchg
mov
lea
lea
mov
xchg
xchg
mov
dec
inc
inc
mov
sub
add
add
mov
cmp
jge
lea
mov
lea
mov
xchg
xchg
mov
mov
xchg
mov
inc
mov
xchg
lea
mov
xchg
inc
dec
dec
lea
pushl
call
mov
pop
ret
lea
push
mov
add
mov
mov
mov
call
push
call
mov
cmp
jl
xchg
mov
mov
xchg
lea
xchg
mov
mov
dec
jne
mov
dec
mov
mov
lea
lea
dec
inc
dec
lea
mov
mov
mov
call
mov
mov
mov
cmp
jae
mov
lea
lea
xchg
mov
lea
inc
dec
jne
xchg
dec
inc
lea
lea
inc
mov
lea
lea
mov
mov
call
push
mov
push
mov
mov
call
mov
mov
mov
xchg
cmp
jne
lea
lea
mov
lea
mov
xchg
inc
inc
mov
xchg
mov
mov
mov
mov
xchg
xchg
mov
mov
movl
cmp
jo
xchg
xchg
mov
xchg
mov
lea
xchg
xchg
mov
mov
xchg
xchg
dec
inc
mov
call
push
mov
push
mov
mov
call
mov
mov
mov
cmp
jo
xchg
lea
inc
dec
dec
lea
mov
inc
xchg
mov
lea
lea
mov
xchg
xchg
mov
dec
inc
inc
mov
call
push
mov
push
mov
mov
call
mov
mov
mov
cmp
jo
xchg
xchg
mov
xchg
mov
lea
xchg
xchg
mov
mov
xchg
xchg
dec
inc
mov
call
push
mov
push
mov
mov
call
mov
mov
mov
mov
cmp
jp
dec
dec
mov
cmp
je
lea
xchg
xchg
mov
mov
lea
mov
mov
dec
inc
lea
mov
lea
inc
mov
pop
ret
add
je
jb
arpl
fs
jae
add
push
cmp
testb
mov
shll
ljmp
stos
mov
mov
mov
mov
int3
int3
mov
stos
test
mov
ror
mov
stos
test
mov
shrb
scas
cmpsl
test
int3
xchg
scas
rcrb
mov
int3
movsl
scas
mov
ljmp
int3
movsl
int3
scas
int3
mov
int3
test
std
int3
dec
ljmp
int3
int3
int3
int3
int3
lahf
inc
sub
xor
cmp
or
cmp
mov
lock
outsb
out
mov
loop
mov
adc
mov
sbb
mov
push
out
mov
xor
mov
sub
mov
xor
mov
into
repnz
enter
imul
int3
inc
xor
test
cwtl
int3
inc
xor
mov
cwtl
int3
inc
xor
add
cwtl
int3
inc
xor
out
nop
cwtl
int3
inc
xor
in
imul
and
int3
inc
xor
leave
imul
and
xor
xor
xchg
xchg
or
inc
add
inc
adc
or
mov
or
inc
sub
add
pop
inc
popl
sbb
inc
mov
pushf
inc
popl
popl
pushf
mov
add
mov
inc
vpmacssdqh
sub
add
mov
pushf
inc
popl
pushf
inc
popl
pushf
xchg
inc
vpmacssdqh
sub
cmp
int3
int3
inc
xchg
inc
test
inc
clc
int
sub
cmp
cmp
dec
int3
int3
int3
inc
adc
adc
mov
int3
leave
push
sbb
adc
int3
int
sub
and
int3
int3
int3
cmpsb
int3
cmpsb
int3
inc
and
enter
pushf
inc
popl
pushf
add
and
mov
cmp
push
pop
int3
int3
int3
inc
and
int3
rcl
and
int
sub
xor
and
fmul
vpmacssdqh
sub
sub
movsb
inc
and
fmul
vpmacssdqh
sub
xor
and
fmul
vpmacssdqh
sub
sub
mov
xor
int
rcr
xor
out
cmp
int3
int3
pushf
inc
and
inc
popl
pushf
hlt
inc
lahf
sub
into
and
inc
lahf
xor
into
inc
sbb
sbb
or
pushf
inc
and
inc
popl
pushf
hlt
inc
lahf
sub
into
dec
sub
dec
xor
inc
xor
int3
mov
loopne
and
enter
idivl
cmp
inc
cmp
mov
int
sub
xor
popl
inc
adc
int3
cmpsb
faddl
add
or
pushf
inc
pushf
inc
popl
pushf
xchg
movsb
int3
dec
int3
int3
cmpsb
int3
inc
popl
popl
pushf
mov
int3
cmpsb
int3
inc
pop
pushf
inc
popl
pushf
mov
scas
inc
inc
push
lock
cmp
cmp
ss
sub
cmp
cmp
or
cs
das
xchg
push
ror
or
inc
sub
enter
sti
adc
cmpsl
int3
int3
int3
mov
mov
int3
int3
mov
xchg
int3
int3
int3
mov
jl
and
int3
int3
int3
fmull
and
int3
int3
jecxz
mov
int3
int3
and
rolb
test
sub
push
int3
int3
mov
int3
mov
mov
ror
mov
and
lret
mov
cmp
int3
push
mov
fcompl
or
sub
cmp
fildl
and
cmp
cmp
push
int3
inc
mov
inc
ss
adc
cmp
cmp
or
push
cmp
cmp
jecxz
inc
and
dec
adc
cmp
inc
cmp
iret
les
ret
lods
int3
int3
adc
inc
xor
pop
enter
cmp
int3
mov
int3
inc
cmp
cmp
cmp
xor
leave
push
inc
int3
int3
int3
adc
inc
ss
lahf
cmp
into
std
push
inc
lahf
xor
cmp
cmp
ss
ss
xor
int3
cmp
int3
mov
int3
adc
inc
ss
push
inc
lahf
xor
xor
cmp
int
std
push
inc
lahf
xor
lods
int3
int
out
cmp
int3
int3
inc
ss
or
xor
int3
inc
xor
or
ss
lahf
xor
lods
int3
cmp
int3
mov
or
inc
sub
or
les
int3
int3
int3
outsb
les
ret
lods
int3
std
push
inc
ffreep
lods
int3
leave
pop
enter
int
out
cmp
int3
int3
outsb
ret
lods
int3
std
or
les
lods
int3
inc
aaa
std
or
ret
lods
int3
inc
dec
enter
std
push
inc
ffreep
lods
int3
inc
dec
enter
std
or
ret
lods
int3
inc
lahf
aaa
inc
pop
enter
std
or
les
enter
std
push
inc
ffreep
lods
int3
leave
pop
enter
int
out
cmp
int3
int3
inc
aaa
std
or
aaa
inc
dec
enter
decb
inc
cmp
xor
add
lea
push
mov
add
mov
mov
cmp
je
jmp
movb
mov
cmp
ja
mov
mov
mov
cmpl
je
mov
mov
mov
cmp
ja
mov
mov
mov
cmp
jne
mov
mov
movb
jmp
incl
cmpl
jne
mov
mov
pop
ret
nop
push
mov
add
mov
xor
mov
xor
mov
mov
cmp
je
jmp
mov
mov
call
cmpl
ja
incl
mov
mov
cmpb
jne
mov
call
test
je
mov
mov
movb
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
incl
cmpl
jbe
mov
pop
ret
nop
push
mov
add
mov
mov
mov
push
mov
push
call
mov
mov
mov
pop
ret
nop
push
mov
add
cmp
jl
mov
mov
mov
mov
mov
mov
mov
mov
lea
xchg
dec
inc
dec
lea
lea
xchg
mov
mov
dec
inc
movl
xchg
cmp
jne
lea
lea
mov
lea
mov
xchg
inc
inc
mov
xchg
mov
mov
mov
mov
xchg
xchg
movl
lea
push
push
mov
sub
push
mov
push
push
call
mov
mov
call
mov
cmpl
je
mov
cmp
jp
dec
dec
mov
cmp
je
lea
xchg
xchg
mov
mov
lea
mov
mov
dec
inc
lea
mov
lea
inc
mov
mov
call
mov
cmpl
je
cmp
jo
xchg
xchg
mov
xchg
mov
lea
xchg
xchg
mov
mov
xchg
xchg
dec
inc
mov
cmp
je
mov
subb
cmp
jo
xchg
lea
inc
dec
dec
lea
mov
inc
xchg
mov
lea
lea
mov
xchg
xchg
mov
dec
inc
inc
mov
xorb
mov
cmp
jp
dec
dec
mov
cmp
je
lea
xchg
xchg
mov
mov
lea
mov
mov
dec
inc
lea
mov
lea
inc
incl
mov
cmp
jne
cmp
jnp
xchg
lea
inc
dec
xchg
xchg
xchg
lea
mov
mov
lea
mov
mov
mov
mov
inc
dec
dec
mov
call
cmp
jo
xchg
xchg
mov
xchg
mov
lea
xchg
xchg
mov
mov
xchg
xchg
dec
inc
mov
push
mov
push
call
cmpl
je
mov
push
call
cmp
jo
xchg
xchg
mov
xchg
mov
lea
xchg
xchg
mov
mov
xchg
xchg
dec
inc
cmp
jo
xchg
lea
inc
dec
dec
lea
mov
inc
xchg
mov
lea
lea
mov
xchg
xchg
mov
dec
inc
inc
cmp
jge
lea
mov
lea
mov
xchg
xchg
mov
mov
xchg
mov
inc
mov
xchg
lea
mov
xchg
inc
dec
dec
push
mov
push
call
mov
pop
ret
nop
push
mov
add
cmp
jge
lea
mov
lea
mov
xchg
xchg
mov
mov
xchg
mov
inc
mov
xchg
lea
mov
xchg
inc
dec
dec
mov
mov
mov
xor
add
mov
cmp
jne
call
add
cmp
jne
cmp
jae
mov
lea
lea
xchg
mov
lea
inc
dec
jne
xchg
dec
inc
lea
lea
inc
mov
lea
lea
mov
movb
cmp
jo
xchg
lea
inc
dec
dec
lea
mov
inc
xchg
mov
lea
lea
mov
xchg
xchg
mov
dec
inc
inc
mov
mov
pop
ret
lea
push
mov
add
cmp
jo
xchg
xchg
mov
xchg
mov
lea
xchg
xchg
mov
mov
xchg
xchg
dec
inc
call
call
call
test
jne
mov
jmp
movw
cmp
jl
xchg
mov
mov
xchg
lea
xchg
mov
mov
dec
jne
mov
dec
mov
mov
lea
lea
dec
inc
dec
lea
mov
call
lea
mov
pop
ret
mov
push
mov
add
cmp
jo
xchg
xchg
mov
xchg
mov
lea
xchg
xchg
mov
mov
xchg
xchg
dec
inc
cmp
jae
mov
lea
lea
xchg
mov
lea
inc
dec
jne
xchg
dec
inc
lea
lea
inc
mov
lea
lea
mov
push
call
mov
call
xchg
cmp
jne
lea
lea
mov
lea
mov
xchg
inc
inc
mov
xchg
mov
mov
mov
mov
xchg
xchg
mov
pop
ret
add
add
cs
jae
jae
gs
xor
pop
jne
je
jae
fs
insb
and
add
add
jae
mov
call
cmp
jo
xchg
lea
inc
dec
dec
lea
mov
inc
xchg
mov
lea
lea
mov
xchg
xchg
mov
dec
inc
inc
call
cmp
jae
mov
lea
lea
xchg
mov
lea
inc
dec
jne
xchg
dec
inc
lea
lea
inc
mov
lea
lea
mov
movw
movzwl
push
call
xchg
cmp
jne
lea
lea
mov
lea
mov
xchg
inc
inc
mov
xchg
mov
mov
mov
mov
xchg
xchg
call
cmp
jnp
xchg
lea
inc
dec
xchg
xchg
xchg
lea
mov
mov
lea
mov
mov
mov
mov
inc
dec
dec
call
cmp
jge
lea
mov
lea
mov
xchg
xchg
mov
mov
xchg
mov
inc
mov
xchg
lea
mov
xchg
inc
dec
dec
movw
movzwl
push
call
cmp
jl
xchg
mov
mov
xchg
lea
xchg
mov
mov
dec
jne
mov
dec
mov
mov
lea
lea
dec
inc
dec
lea
mov
call
mov
cmp
jp
dec
dec
mov
cmp
je
lea
xchg
xchg
mov
mov
lea
mov
mov
dec
inc
lea
mov
lea
inc
call
cmp
jl
mov
mov
mov
mov
mov
mov
mov
mov
lea
xchg
dec
inc
dec
lea
lea
xchg
mov
mov
dec
inc
call
cmp
jo
xchg
lea
inc
dec
dec
lea
mov
inc
xchg
mov
lea
lea
mov
xchg
xchg
mov
dec
inc
inc
movw
movzwl
push
call
cmp
jae
mov
lea
lea
xchg
mov
lea
inc
dec
jne
xchg
dec
inc
lea
lea
inc
mov
lea
lea
mov
call
xchg
cmp
jne
lea
lea
mov
lea
mov
xchg
inc
inc
mov
xchg
mov
mov
mov
mov
xchg
xchg
call
cmp
jnp
xchg
lea
inc
dec
xchg
xchg
xchg
lea
mov
mov
lea
mov
mov
mov
mov
inc
dec
dec
call
cmp
jge
lea
mov
lea
mov
xchg
xchg
mov
mov
xchg
mov
inc
mov
xchg
lea
mov
xchg
inc
dec
dec
movw
movzwl
push
call
cmp
jl
xchg
mov
mov
xchg
lea
xchg
mov
mov
dec
jne
mov
dec
mov
mov
lea
lea
dec
inc
dec
lea
mov
call
mov
cmp
jp
dec
dec
mov
cmp
je
lea
xchg
xchg
mov
mov
lea
mov
mov
dec
inc
lea
mov
lea
inc
call
cmp
jl
mov
mov
mov
mov
mov
mov
mov
mov
lea
xchg
dec
inc
dec
lea
lea
xchg
mov
mov
dec
inc
call
cmp
jo
xchg
lea
inc
dec
dec
lea
mov
inc
xchg
mov
lea
lea
mov
xchg
xchg
mov
dec
inc
inc
movw
movzwl
push
call
cmp
jae
mov
lea
lea
xchg
mov
lea
inc
dec
jne
xchg
dec
inc
lea
lea
inc
mov
lea
lea
mov
call
xchg
cmp
jne
lea
lea
mov
lea
mov
xchg
inc
inc
mov
xchg
mov
mov
mov
mov
xchg
xchg
movw
movzwl
push
call
cmp
jnp
xchg
lea
inc
dec
xchg
xchg
xchg
lea
mov
mov
lea
mov
mov
mov
mov
inc
dec
dec
movw
movzwl
push
call
cmp
jge
lea
mov
lea
mov
xchg
xchg
mov
mov
xchg
mov
inc
mov
xchg
lea
mov
xchg
inc
dec
dec
movw
movzwl
push
call
cmp
jl
xchg
mov
mov
xchg
lea
xchg
mov
mov
dec
jne
mov
dec
mov
mov
lea
lea
dec
inc
dec
lea
mov
movw
movzwl
push
call
mov
cmp
jp
dec
dec
mov
cmp
je
lea
xchg
xchg
mov
mov
lea
mov
mov
dec
inc
lea
mov
lea
inc
movw
movzwl
push
call
cmp
jl
mov
mov
mov
mov
mov
mov
mov
mov
lea
xchg
dec
inc
dec
lea
lea
xchg
mov
mov
dec
inc
call
cmp
jo
xchg
lea
inc
dec
dec
lea
mov
inc
xchg
mov
lea
lea
mov
xchg
xchg
mov
dec
inc
inc
call
cmp
jae
mov
lea
lea
xchg
mov
lea
inc
dec
jne
xchg
dec
inc
lea
lea
inc
mov
lea
lea
mov
movw
movzwl
push
call
xchg
cmp
jne
lea
lea
mov
lea
mov
xchg
inc
inc
mov
xchg
mov
mov
mov
mov
xchg
xchg
call
cmp
jnp
xchg
lea
inc
dec
xchg
xchg
xchg
lea
mov
mov
lea
mov
mov
mov
mov
inc
dec
dec
call
cmp
jge
lea
mov
lea
mov
xchg
xchg
mov
mov
xchg
mov
inc
mov
xchg
lea
mov
xchg
inc
dec
dec
call
cmp
jl
xchg
mov
mov
xchg
lea
xchg
mov
mov
dec
jne
mov
dec
mov
mov
lea
lea
dec
inc
dec
lea
mov
mov
mov
mov
lea
call
mov
cmp
jp
dec
dec
mov
cmp
je
lea
xchg
xchg
mov
mov
lea
mov
mov
dec
inc
lea
mov
lea
inc
ret
mov
ret
lea
jbe
arpl
add
add
movsl
xchg
add
sbb
cmp
rorl
push
aad
sub
jne
push
testb
int
add
add
jl
pop
or
add
add
mov
mov
push
mov
dec
std
cmovbe
xlat
add
mov
add
cmp
jecxz
jbe
dec
rorl
lahf
jmp
pushf
incb
add
add
xchg
mov
sbb
cmp
outsl
loop
ds
xchg
sub
xor
stos
adc
add
cmc
pop
imul
add
es
add
xchg
fldenv
cmp
jbe
mov
rcll
add
or
add
push
add
std
or
jg
add
adc
add
pop
mov
stc
pop
add
lods
add
add
sub
jmp
add
js
push
add
and
add
add
je
shr
xchg
adc
das
jns
lret
add
mov
sbb
stos
lcall
jge
sbb
mov
mov
mov
sbb
add
add
inc
dec
xchg
loop
xor
push
inc
add
xor
add
mov
add
jns
int3
xchg
adc
lods
dec
push
sbb
xor
and
add
dec
lea
push
jl
and
jns
xchg
rolb
add
add
add
pop
faddl
inc
mov
lods
xchg
cltd
mov
mov
add
iret
and
and
add
inc
sub
push
out
pop
dec
lods
iret
cmpl
ret
add
add
cmp
mov
sub
add
aam
or
lods
add
xchg
rorl
out
add
lods
xor
in
mov
add
add
gs
xor
les
sub
nop
repz
and
cmp
xor
inc
mov
cmp
in
lldt
stos
mov
mov
xor
jg
push
ret
pop
sbb
negb
fcomps
adc
push
movsb
add
cmp
dec
cmp
mov
jb
mov
mov
aam
add
lret
add
mov
mov
sub
dec
add
rorl
add
mov
cli
mov
and
jbe
mov
dec
sub
add
add
and
test
push
add
loopne
mov
push
add
add
add
add
add
add
xor
hlt
xchg
sbb
sbb
lcall
sarb
pop
aad
jne
leave
das
add
enter
sub
adc
in
lahf
mov
call
mov
add
or
daa
xor
scas
pop
push
add
pop
in
add
add
push
inc
lcall
daa
inc
push
add
sbb
adc
jecxz
add
add
repnz
sub
push
push
add
add
jne
imul
out
dec
incb
lret
xchg
xchg
pop
sub
ds
and
jo
cmc
add
add
add
jns
mov
lods
dec
add
test
mov
add
lea
add
fs
push
mov
push
loope
add
add
inc
push
mov
fiadd
add
adc
push
sub
add
xchg
scas
fistp
cltd
xor
data16
addb
pop
ds
insb
call
pop
add
jle
xchg
stos
ret
or
test
or
jle
or
js
test
std
shrl
pop
mov
sbbl
dec
jge
cld
adcl
mov
iret
mov
jg
test
repz
xchg
lcall
scas
data16
ret
in
or
insl
pop
jns
dec
and
pop
ss
pop
roll
lods
lock
mov
shrb
and
scas
inc
adc
mov
xchg
arpl
inc
push
add
push
push
rclb
inc
clc
jle
ret
movb
xor
inc
ficomp
xchg
out
das
lods
xchg
test
sahf
xorps
add
mov
mov
mov
add
push
subb
and
sbb
repz
shr
invd
or
cmp
mov
push
incl
mov
sti
jns
add
add
push
fdivrs
xor
jecxz
or
mov
fimull
mov
leave
cmp
mov
jbe
out
cmpsl
mov
dec
arpl
or
dec
dec
add
mov
adc
out
lret
bound
push
jns
sahf
or
pop
sbb
push
imul
add
push
addr16
mov
mov
mov
jns
gs
jle
or
in
push
dec
pusha
ss
fisttp
jg
jmp
leave
xchg
lret
mov
popf
enter
lods
rcrl
push
fmull
stos
mov
int
jmp
imul
loope
out
push
mov
cmp
lret
iret
dec
push
movsl
ret
in
xchg
gs
arpl
test
cmpsb
loopne
jmp
mov
push
ret
fisubrl
cmp
xchg
pusha
xchg
dec
int3
loopne
sub
ds
movsb
pop
lds
adc
repnz
gs
inc
push
js
push
push
fcoml
sub
jge
sub
sbb
jl
or
jg
sbb
mov
enter
pushf
xchg
push
xor
sub
adc
and
push
cmp
repz
stc
cmpsl
cmpsb
push
out
int3
in
push
cmpsb
push
daa
sbb
cmp
dec
and
ja
cmp
cmp
movsl
cmc
lcall
mov
stos
push
popa
mov
test
sub
fidivl
ffreep
repnz
xor
mov
repnz
js
repnz
mov
mov
faddl
cmp
sub
test
outsb
and
adc
loopne
movsl
popl
fldl
jo
lahf
mov
into
mov
dec
jp
push
mov
int
adc
sub
rorb
mov
pop
push
push
cltd
bound
shl
rcl
insb
test
sub
pop
push
pop
mov
push
mov
fs
fwait
add
add
ss
pop
adc
fmul
xchg
dec
idiv
xchg
xchg
lret
inc
rcrl
cmp
mov
inc
into
je
cmpsl
cmc
mov
ficom
cmp
loop
fs
mov
and
xchg
enter
sub
mov
mov
mov
leave
cmp
sti
mov
mov
dec
loopne
dec
lret
pop
sbb
outsb
adc
adc
cld
repnz
into
int3
sub
xor
mov
sbb
lret
mov
inc
sub
movsl
mov
shll
jmp
cmp
fldcw
nop
aaa
cmpsb
ret
add
inc
jge
out
fstps
inc
xchg
jecxz
loop
push
lea
test
push
pop
test
sti
adc
int3
dec
inc
imul
sbb
inc
add
mov
aas
out
push
jb
fwait
and
jmp
and
jnp
je
stos
testb
std
push
cmp
mov
push
sbb
jns
mov
jecxz
scas
cld
scas
aam
lret
jg
stos
mov
inc
push
lock
das
shl
cli
mov
or
push
aam
xchg
mov
adc
imul
js
and
in
icebp
fimul
lods
pop
aad
mov
cmc
adc
and
dec
outsl
test
ret
ror
test
sti
fs
xchg
inc
and
add
ljmp
jg
sti
popa
xlat
push
pop
fcoml
stos
aad
shr
push
jecxz
xchg
lret
ds
into
fisttpll
movzbl
loop
or
and
mov
adc
cli
test
add
sbb
sub
xor
or
mov
push
xchg
data16
ljmp
cmp
or
mov
xchg
sub
int3
mov
loope
mov
test
mov
lds
mov
out
jne
popf
cs
aaa
out
test
loopne
jns
jnp
xchg
dec
push
add
roll
xchg
or
xor
jns
cmp
in
cmpsl
mov
cmp
xlat
jnp
sbb
push
mulb
sbb
cli
pusha
shll
fildll
push
pop
jmp
aam
scas
jae
in
and
es
repz
sbb
or
in
aas
sbb
aam
imul
dec
push
std
xchg
fist
movsl
xchg
mov
lods
in
ret
push
pop
mov
call
mov
or
data16
inc
inc
ret
fisttpll
xchg
mov
clc
int3
lret
sub
pop
adc
jb
inc
aad
rorb
repnz
cmp
mov
sti
push
push
sbb
repz
or
enter
popf
mov
jmp
pusha
or
jo
scas
pop
mov
dec
aaa
in
inc
push
jg
sbb
mov
scas
sarl
and
pop
lods
cmp
xchg
push
pusha
dec
out
inc
dec
js
aam
in
in
cmp
enter
daa
sbb
test
jno
rol
sub
test
cmp
aad
xchg
adc
cld
sbb
and
mul
push
xor
fisubrl
aaa
inc
or
scas
ret
add
test
pop
sbb
pop
lret
pushf
add
out
pop
loope
mov
int
loopne
cmp
adc
mov
push
mov
sbb
xchg
adc
pop
adc
jne
fnsave
sub
fmuls
push
insl
movb
mov
dec
sahf
jae
mov
inc
or
xor
xor
std
aad
mov
call
or
adc
arpl
xchg
pop
es
xchg
and
mov
add
hlt
repnz
outsl
xorl
push
adc
pushf
xor
mov
repnz
stos
adc
jne
jb
mov
lsl
lcall
jl
clc
xchg
mov
call
lret
or
ss
das
push
mov
push
aad
loopne
out
cmp
adc
ljmp
dec
movsb
mov
xchg
pop
in
pop
sbb
push
jne
xlat
mov
cmc
mov
pushf
jl
data16
lcall
and
xchg
nop
adc
inc
nop
fdivl
je
pop
mov
insl
mov
xlat
add
adc
pop
aaa
lcall
roll
fldt
jnp
inc
xchg
sarb
test
int
cli
shrb
and
rcl
rol
movsb
lahf
testb
std
shrd
mov
sub
mov
cmpl
xchg
lret
out
loope
mov
mov
push
pop
jge
xor
push
andb
pop
xor
inc
sbb
or
and
add
cmpsl
sbb
mov
mov
test
mov
sbb
out
in
in
loope
adc
xor
xor
sbb
push
pop
pop
loope
hlt
lret
ljmp
popa
adc
and
stos
les
out
mov
or
test
cld
lea
mov
push
cltd
inc
cmp
xor
push
jp
fs
xchg
sbb
bound
xchg
push
sbb
rcrl
je
push
cltd
push
inc
lret
or
decl
xor
and
or
sti
shl
movsl
fldt
mov
outsb
imul
cmp
sbb
fisttpll
div
inc
inc
hlt
bound
and
mov
jne
mov
out
mov
and
cld
out
xchg
sbb
testb
push
sub
cli
cmpsl
mov
jp
std
jb
or
dec
insb
roll
jnp
fucomp
jle
sar
in
or
fnop
xchg
fcoms
dec
adc
inc
fistp
push
jmp
cmpsb
pop
mov
pop
xchg
mov
outsl
push
sub
sti
daa
xchg
pop
inc
imul
or
adc
scas
cmpsb
ret
lds
push
add
arpl
addl
push
and
ficoml
add
int3
mov
push
pop
inc
cmpsl
cmp
or
outsb
xor
cmpsl
xchg
cmpsl
mov
xor
push
leave
xor
sti
cwtl
push
imul
jge
dec
cltd
sbb
aad
aaa
stos
test
xor
inc
loopne
jl
add
mov
xor
jecxz
stc
scas
mov
or
cmp
push
or
sub
cmp
loop
cmpsb
push
dec
and
pop
adc
enter
daa
sbb
in
jno
jg
sub
lods
jnp
iret
arpl
stos
and
movsl
add
int3
and
mov
adc
test
inc
dec
sbb
mov
lret
les
mov
pop
or
int3
push
cs
fcompl
sub
mov
rclb
mov
ja
fidivr
push
insb
hlt
stc
push
nop
jle
int
mov
sub
popa
nop
lcall
imul
ret
sahf
push
xchg
movsb
test
cld
mov
pushf
cltd
std
mov
out
mov
lock
adc
pop
ss
inc
mov
dec
lret
push
mov
or
je
into
cmp
cmc
inc
imul
clc
pop
mov
enter
sub
and
add
sub
cbtw
fbld
lods
stc
mov
mov
sbb
imul
jp
sbb
lods
in
jbe
pop
sti
sbb
or
xchg
fneni(8087
cmp
pop
pop
hlt
mov
sbb
fldcw
inc
fwait
in
sub
rclb
jmp
stos
adc
inc
iret
xlat
stc
cmp
sub
and
daa
insb
inc
jmp
mov
or
movsb
adc
mov
fsubl
xor
lahf
dec
in
iret
inc
jo
and
les
sahf
mov
jg
pop
ljmp
dec
lods
pushf
aam
fdivr
test
inc
push
add
aas
and
call
dec
jno
sbb
scas
jp
rcll
mov
xchg
std
mov
cwtl
nop
test
mov
and
pop
mov
mov
lret
pop
sahf
pop
mov
mov
sbb
lock
add
nop
cmp
mov
adc
pop
cltd
out
sbb
cs
push
clc
je
pop
andl
mov
xchg
mov
cmp
and
addb
pop
add
popa
jo
jns
sub
inc
test
adc
mov
adcl
fstl
sub
das
aas
fcoml
gs
sub
pushw
leave
cmpsb
stos
mov
push
out
pop
ficoml
test
fimull
je
lds
enter
jns
push
xor
xchg
cli
mov
xchg
add
or
mov
cmp
jp
pop
fildl
push
call
cmp
pushf
rcrb
push
cmp
out
push
in
pop
pop
xchg
stos
dec
mov
outsb
mov
pop
pusha
add
fnstenv
lods
inc
xlat
push
and
add
dec
lods
lock
fisttp
lods
scas
out
addr16
bound
aam
jns
and
xchg
jecxz
cmpsl
sbbl
out
or
inc
or
scas
mov
jp
shlb
sub
jno
jb
fidivrl
movsb
cwtl
in
jns
pusha
pop
xchg
xchg
add
fiaddl
ljmp
push
lods
push
popf
cmp
jecxz
push
cltd
add
and
lret
jge
push
imul
rclb
xor
adc
movsl
iret
imul
sub
jo
daa
xor
push
shrb
repnz
push
push
aas
xchg
neg
inc
lea
gs
cmc
int3
mov
add
lds
sbb
ret
mov
xchg
dec
lods
jl
movsb
repz
pop
push
mov
rclb
sbb
mov
pop
or
push
add
xchg
jl
pop
ret
dec
adc
jo
cmp
scas
jg
inc
and
jmp
inc
push
idiv
jne
popa
mov
mov
enter
daa
pop
mov
cmp
cmp
shrb
cmpl
mov
ds
sub
into
cwtl
inc
lahf
jb
das
test
dec
lods
ret
xor
jl
insl
pop
addr16
fnstsw
jo
pop
dec
xor
loope
inc
add
pop
jmp
sub
das
adc
jno
arpl
idivb
mov
adc
jnp
outsl
push
xchg
imul
sub
jmp
pop
ljmp
lcall
add
sbb
test
xchg
cmp
mov
sbb
mov
vpcmpgtb
sbb
sbb
sbb
cld
sub
cmp
mov
mov
and
and
pop
or
movsl
into
sbb
out
sub
cmc
fs
outsl
xlat
cmp
pop
jbe
jecxz
jbe
dec
out
add
cltd
push
lods
loopne
mov
lret
idiv
dec
movsl
jnp
dec
pop
enter
xchg
sti
leave
sbb
jne
jne
sub
jl
aam
arpl
jl
adc
push
shrb
fildl
out
jmp
adc
rcrl
cmp
xlat
cmp
sub
pushf
add
pushf
shrb
xor
cs
aad
aad
nop
enter
sbb
inc
mov
pop
flds
jp
ljmp
jae
mov
sbb
mov
into
adc
jo
dec
xchg
add
push
add
gs
shlb
and
mov
lods
and
js
shll
test
int
sub
pop
jp
cwtl
dec
mov
mov
test
jb
das
xchg
ds
int3
push
push
mov
mov
mov
out
pop
lock
cmp
outsl
insb
js
loopne
mov
aam
sbb
ret
sub
pushf
and
insl
cli
sbb
dec
adc
mov
mov
xchg
mov
pop
ss
sbb
pop
pop
inc
sbb
inc
icebp
sub
and
rcrb
and
push
fdivp
inc
fnstsw
scas
clc
push
mov
ljmp
jmp
fldl
stos
mov
mov
xchg
mov
pop
xchg
psrlq
xor
sbb
and
xchg
subl
stos
mov
cmp
mov
cs
mov
add
mov
cwtl
decl
test
or
test
mov
jl
mov
loop
mov
ficompl
mov
repnz
or
inc
outsb
roll
mov
push
xorl
mov
fsubl
sbb
mov
push
lds
pop
sbbl
addr16
xchg
jp
aaa
popa
mov
xchg
or
jle
imul
mov
mov
push
jmp
cmc
add
pop
dec
mov
popf
fs
fstpt
fdiv
jg
push
push
and
nop
test
imul
scas
jae
int
rclb
adc
lret
ret
sbbl
jmp
arpl
push
inc
cmc
mov
sahf
push
mov
mov
sub
mov
jns
push
sti
push
std
rcr
xor
repnz
push
leave
and
jle
dec
push
or
jecxz
out
popa
jge
cld
fcompl
test
out
or
add
jl
cmp
push
sub
pop
jo
xor
and
inc
lods
push
rorl
lock
pop
js
in
in
adc
enter
daa
push
xor
jno
inc
imulb
xor
cmp
xor
movsl
adc
and
push
lahf
cs
add
lods
ja
test
pop
pop
lods
xor
pop
hlt
aas
and
pop
mov
imul
pop
pop
mov
lcall
iret
lret
fdivl
cld
test
lods
mov
jno
dec
sub
in
mov
mov
roll
mov
push
xchg
enter
out
or
xchg
ds
pop
jle
mov
addl
jb
inc
mov
push
sbb
test
fimull
insl
jg
sub
mov
jg
mov
xchg
adc
or
cmp
mov
dec
div
sbbl
mov
dec
cmp
sbb
or
push
lret
mov
cmc
aam
aaa
xor
pop
outsl
mov
loop
mov
stc
lcall
add
fldenv
or
mov
sbb
cmc
sub
aaa
xor
sub
js
adc
cwtl
out
xor
inc
loopne
mov
pop
xchg
or
ret
imul
lock
add
pop
sbb
mov
lcall
xchg
stc
mov
jge
fucomip
cmc
push
sbb
and
push
nop
mov
cmp
js
fnstcw
add
loopne
in
sub
jbe
orb
xchg
daa
jge
jge
push
adc
adc
lahf
cmp
pop
movsl
cwtl
fs
sbb
jo
jmp
xor
jb
xor
dec
pop
pop
push
and
leave
dec
mov
push
notb
xchg
and
add
mov
pop
mov
inc
inc
cmpl
and
push
mov
pop
xchg
mov
lock
inc
notl
das
dec
mov
loop
call
cwtl
fs
mov
jmp
pop
sub
insl
loope
lret
dec
or
cmpsl
adc
mov
icebp
cmp
fnstcw
orl
mov
ds
popf
rclb
or
sub
test
repnz
pop
adc
outsl
repz
jecxz
xchg
cmpsl
mov
ret
popa
pop
test
mov
hlt
out
fnstsw
movsl
xchg
out
ficoml
add
rdmsr
lock
out
sar
cltd
out
sahf
xor
adc
mov
xchg
ret
inc
dec
inc
push
test
js
mov
repz
popf
add
push
fwait
loop
adc
cs
add
add
lods
vmovaps
xor
add
dec
in
push
jbe
fs
mov
into
flds
ja
mov
dec
and
xchg
inc
add
pop
lret
mov
stos
mov
jb
push
jne
mov
mov
stos
pop
out
and
xchg
xor
xchg
jns
incl
fildll
sub
jmp
icebp
addr16
add
in
nop
movsb
std
insb
add
jae
rorb
xchg
in
xchg
fbld
mov
les
jae
dec
adcl
sarb
mov
sub
push
adc
inc
jp
sbb
loop
imul
scas
xchg
adc
into
addr16
sub
das
ret
sub
iret
xchg
fucompp
out
arpl
cs
clc
xor
shlb
inc
cmp
pushf
fist
ja
mov
into
orl
pop
xchg
dec
sar
xchg
mov
sub
pop
mov
push
pop
roll
xor
jge
sub
aaa
out
fmuls
aas
std
arpl
or
jl
jge
dec
repz
mov
or
es
hlt
inc
cmc
scas
cmp
inc
mov
push
mov
inc
jg
push
loopne
sub
aam
xor
daa
adc
cmp
jno
pop
xchg
sub
mov
cmp
cmpsl
fidivrl
adc
cmp
add
ds
dec
sbb
push
subb
add
mov
ljmp
pop
mov
fidivr
test
jle
test
loope
xor
pop
test
sub
ss
adc
daa
fdivl
popa
pushf
int
mull
sbb
out
and
fwait
mov
jns
sub
es
pop
std
adc
inc
push
leave
jecxz
mov
xchg
sbb
js
sahf
call
test
sbbb
jg
cld
stos
mov
sbb
fs
adc
cmp
and
dec
fdivs
xor
mov
rcll
cmp
dec
fisttp
das
out
push
into
jecxz
imul
and
outsl
xchg
sti
mov
stc
push
mov
add
jns
and
lods
scas
push
mov
cmp
hlt
adc
cli
mov
dec
xor
jns
in
mov
or
daa
insl
xchg
mov
sub
pop
mov
and
imul
dec
cld
repz
ja
sbb
repnz
mov
hlt
sub
pop
lods
pushf
sub
imul
in
dec
mov
repz
fs
nop
jle
int
fsts
popl
adc
fnstenv
enter
cmpsb
std
jns
sub
maxps
cld
daa
mov
adc
push
and
gs
enter
cmpsb
inc
mov
xor
jb
fmuls
dec
into
jp
dec
outsl
dec
sar
sub
mov
cwtl
shll
mov
mov
js
test
xor
insl
push
mov
das
sub
ficomp
and
jno
addr16
inc
sub
mov
mov
cmpsl
adc
lret
imul
mov
movsb
mov
dec
mov
pop
in
shr
pop
cmp
or
daa
or
fs
rcr
sub
clc
loopne
insl
xchg
out
or
mov
leave
adc
inc
stos
andb
mov
xchg
cs
push
adc
dec
cmp
add
xor
dec
inc
mov
lcall
test
mov
xchg
ret
sbb
fcoml
or
lock
fwait
adc
inc
push
ror
outsb
add
in
inc
dec
test
dec
mov
mov
xchg
mov
lret
mov
daa
push
mov
push
dec
jmp
push
jecxz
adc
inc
idivl
and
dec
push
push
jnp
jg
fnsave
add
fldenv
inc
xchg
jns
addr16
xchg
inc
int
orl
clc
out
les
and
or
aas
jae
je
std
jp
inc
pop
mov
fcoms
jnp
cld
inc
jle
iret
push
in
and
pusha
fmuls
fild
xchg
jle
push
jmp
or
notb
cmc
dec
xchg
popf
mov
sarb
push
pusha
cmp
push
mov
sbb
mov
pop
scas
cmp
and
xchg
iret
mov
fcmovb
gs
fwait
pop
int3
xchg
mov
arpl
adc
int
out
mov
xor
int3
lret
xor
std
cmpsl
sub
cltd
ficomp
jbe
adc
xor
cmpb
adc
movsb
xchg
inc
jb
cmpsl
stos
push
jne
push
jge
cmp
and
or
ss
mov
dec
gs
fprem
push
out
mov
dec
jo
arpl
and
ret
sti
adc
push
push
hlt
jnp
push
in
cmpsb
arpl
in
mov
pusha
jecxz
adc
sbb
mov
lcall
mov
ds
pop
sub
lahf
scas
stos
lahf
insb
out
notb
adc
test
outsb
mov
xchg
pop
fsubrl
mov
push
xor
jl
mov
sub
dec
outsb
jb
bound
add
mov
or
mov
mov
dec
xchg
and
loop
int
mov
sub
xor
push
and
insl
mov
push
stos
sahf
mov
scas
enter
cli
jg
shrb
mov
out
mov
mov
adc
xor
cmp
sub
adc
cmp
shl
cwtl
cmp
push
repnz
fmull
xor
lahf
aaa
insl
loop
adc
stc
or
adc
mov
fsubl
jge
lods
xchg
stc
das
mov
or
repz
cli
out
out
xor
mov
cmpsb
sti
cmp
fiadd
gs
js
loopne
popa
push
pop
aam
adc
push
jle
les
sti
mov
xchg
cmp
sub
or
cmc
mov
jb
jmp
cmc
scas
cs
push
aad
sarl
and
out
dec
inc
out
in
mov
je
inc
add
jl
mov
call
jnp
pop
mov
mov
dec
pop
cmp
xchg
test
jmp
flds
pop
loope
and
jb
mov
dec
dec
call
sub
dec
cmp
xchg
mov
std
push
pop
lret
cwtl
jl
xorb
mov
subl
push
lret
sbb
bound
xor
xor
cmp
das
or
shlb
push
scas
loop
cmp
mov
es
icebp
mov
cmpsl
adc
in
icebp
call
in
mov
and
and
in
and
pop
jl
mov
sub
lcall
mov
fstp
out
insb
or
xchg
and
pop
inc
popa
mov
xchg
pop
fisub
shr
mov
sub
lock
lock
jb
adc
sub
loopne
mov
popf
push
cmp
adc
int
mov
js
rorl
pop
or
dec
inc
fwait
inc
add
push
add
or
jns
fildl
xor
and
in
pushf
adc
add
mov
sbb
dec
pop
or
push
ja
leave
mov
inc
xor
in
pop
gs
mov
popa
cmp
pusha
loopne
inc
adc
xor
pop
out
jecxz
mov
jns
sbb
xchg
jns
mov
in
sub
loope
js
jae
jbe
add
repnz
xor
fdivrs
or
jo
in
and
jo
arpl
repnz
push
mov
jnp
push
adc
jae
adc
push
mov
mov
ret
push
xchg
fsubr
stos
scas
jge
and
pop
sbb
bound
dec
cmp
push
cmpsl
adc
jp
out
sub
js
add
incb
arpl
jnp
or
dec
pop
popl
jno
fimull
jl
xchg
roll
pop
sub
add
cmp
pushf
lds
in
shrb
in
mov
je
leave
mov
movsb
pop
in
push
neg
adc
int
jge
xor
sbb
xchg
aaa
and
and
cmp
lock
roll
adc
stos
cltd
aas
scas
sti
jbe
and
in
cmp
inc
cmp
iret
push
cmpsb
out
push
in
mov
sbb
daa
adc
push
cmp
add
mov
cmp
test
movsl
es
js
cmp
dec
lahf
mov
jmp
test
jns
fidiv
mov
mov
xor
xor
pop
inc
nop
lock
mull
loope
push
xchg
fdivl
lds
aad
call
rcr
jns
pop
push
mov
sbb
mov
mov
or
mov
loopne
lahf
popf
jnp
inc
outsb
xchg
sub
mov
pop
sti
int3
xor
ja
cmp
jmp
sahf
inc
pushf
xchg
xchg
in
jg
cmpsl
nop
mov
ljmp
and
pop
adc
lock
sub
std
cmp
call
and
adcl
jl
or
loopne
cmc
sub
mov
popa
fiaddl
loop
repz
adc
xchg
loope
mov
lods
jl
pop
mov
xor
repnz
stos
sub
in
lea
sti
test
incb
pop
clc
gs
sub
loopne
push
test
adc
mov
rol
sbb
repz
aaa
xchg
cltd
je
sbb
push
int3
push
sub
adc
jle
sub
ret
cs
aam
aad
out
xor
nop
dec
xchg
iret
test
add
adc
push
jo
je
adc
cmp
jg
bound
add
mov
pop
adc
adc
inc
icebp
leave
fcmovnb
sarb
pop
mov
inc
mov
es
cmp
leave
aas
aas
push
fidiv
ret
les
mov
neg
scas
jbe
stc
les
cwtl
aaa
fucomp
mov
mov
addl
stc
lret
mov
xchg
mov
call
mov
dec
lock
jl
das
jmp
popa
mov
or
or
jmp
test
push
insl
xchg
add
cmpsl
adc
xchg
icebp
mov
stc
add
ljmp
mov
fwait
xchg
cmp
nop
jmp
sti
repnz
incb
cmp
fstl
xchg
out
push
xor
xchg
fs
dec
ljmp
dec
pop
mov
pop
jb
out
push
jnp
xchg
mov
insl
or
dec
or
add
sub
cltd
mov
xorl
lret
fisubr
xchg
rol
inc
sar
xchg
lods
mov
jbe
inc
shll
js
fwait
outsl
add
pop
push
jmp
add
movsl
pusha
incl
xor
xchg
or
inc
and
xchg
push
imul
pop
int
ja
sbb
dec
sti
mov
xor
xchg
and
pop
jne
or
aas
sub
icebp
inc
cmc
jns
je
xchg
ficompl
mov
sub
faddl
pop
jp
sbb
mov
lods
cli
insb
inc
jnp,pt
and
push
push
in
mov
fild
out
jmp
and
cmpsl
push
jnp
xchg
popf
add
mov
aam
push
and
fist
cmp
xlat
scas
inc
xchg
push
out
or
iret
inc
rorl
mov
xchg
pop
cmp
aam
mov
data16
or
ret
lds
mov
jns
xchg
sbb
loop
pop
inc
lret
xchg
push
sbb
mov
es
loopne
jmp
into
movsb
stos
fmull
jbe
sarl
push
negl
xchg
inc
in
aaa
and
mov
sbb
fldl
shl
sub
dec
inc
cli
sbb
mov
or
add
mov
insl
cmp
andps
jmp
and
in
mov
mulb
adc
cmp
jp
jno
subb
jle
add
jmp
mov
sub
and
lahf
stos
mov
push
test
test
xor
lcall
cli
hlt
js
sarl
pop
test
pop
push
outsb
loope,pn
jae
fcompl
xchg
sub
popf
outsb
cmp
adc
mov
mov
sbb
push
loop
mov
push
mov
or
pop
jp
xchg
lcall
mov
incl
sbb
lods
inc
test
fist
jg
add
fwait
and
jge
and
cltd
adc
mov
cmp
mov
mov
lret
pop
adc
fldcw
jl
lret
into
mov
inc
cmc
lock
sbb
mov
mov
stc
jbe
test
add
jl
stos
add
lods
arpl
adc
icebp
fst
cli
dec
ret
xchg
xor
cli
sbb
xor
xchg
and
mov
loopne
pop
lea
popa
das
adc
sbb
imul
sbb
stos
sbb
xchg
pop
and
cmp
push
das
sub
lock
sub
jmp
test
not
adc
int3
dec
divb
fsts
mov
jecxz
mov
movb
call
jns
push
pop
sbb
push
adc
adcl
jle
fcomi
loopne
pop
xor
rolb
cli
pop
inc
push
xchg
sbb
jb
push
dec
cmp
push
lock
popa
shr
push
dec
negb
cld
std
mov
mov
add
mov
clc
aad
fwait
mov
mov
mov
fcomip
lock
fsubrs
lret
mov
les
adc
repz
push
es
mov
dec
clc
in
cmc
cmpsl
adc
ja
xchg
adc
mov
or
aas
jmp
and
shlb
mov
repnz
test
xor
mov
jb
push
lods
fmulp
fnstsw
sbb
xchg
mov
dec
es
mov
cmpsl
pop
xor
imulb
imul
xchg
push
cmpsb
fs
xrstor
add
scas
les
xchg
jmp
xchg
dec
lcall
adc
sub
sub
stc
adc
jle
sahf
ret
sub
mov
dec
nop
add
jne
jmp
prefetchw
cmp
aaa
in
xor
dec
mov
hlt
test
pop
subl
out
mov
popa
ja
mov
mov
mov
jne
add
mov
cwtl
call
bound
out
movsl
cld
ret
movsl
jge
jmp
or
xlat
add
addr16
mov
mov
dec
mov
jnp
fnstsw
jle
icebp
in
push
or
lret
mov
pop
inc
jmp
sub
lret
in
lds
mov
nop
mov
adc
stos
xchg
inc
jae
pushf
mov
imul
fwait
scas
bound
imul
pop
adc
pop
iret
movsl
cmpsl
jb
sahf
lock
jno
xchg
hlt
push
sub
arpl
xchg
xchg
or
sbb
cmp
fidivl
push
outsl
push
int3
and
fiadd
xchg
jns
test
mov
jns
vpcmpeqd
mov
xchg
add
jbe
add
jge
int
sbb
inc
aaa
jecxz
stc
or
sbb
add
pushf
jl
mov
dec
scas
xor
push
xchg
sub
xor
pusha
inc
xor
mov
cmp
lcall
mov
mov
enter
daa
adc
cmp
jno
sub
sub
add
cmp
xchg
xor
bound
jo
icebp
lahf
leave
xorb
xor
insl
and
pop
aas
xor
dec
cmp
pop
push
jne
js
or
pop
ret
push
test
lcall
or
cmp
mov
adc
xchg
addr16
frstor
jecxz
inc
movsl
mov
pop
ret
mov
jge
push
movsl
outsl
pop
int
in
std
mov
pop
stc
xchg
push
lcall
imul
mov
test
lods
or
sub
bound
mov
rcl
fs
sahf
adc
cmp
ss
cmp
cmp
pop
repz
mov
add
bound
shrl
or
hlt
push
into
outsl
les
cmc
mov
mov
pop
lea
int
cli
stc
sub
dec
mov
out
pop
sub
lods
dec
out
mov
out
roll
sbbb
xor
jbe
arpl
dec
sti
jecxz
inc
incb
mov
loopne
jnp
pop
xor
inc
adc
stos
imul
les
add
jns
scas
xchg
pop
inc
sub
cmp
push
xlat
mov
shrb
or
daa
mov
pushf
aam
push
jmp
sub
adc
xor
pop
xor
nop
ljmp
inc
sub
inc
je
mov
jecxz
aas
push
movb
in
call
clc
sub
iret
inc
enter
enter
xchg
mov
pop
aam
testl
ss
jb
jge
dec
mov
add
dec
adc
cmp
sahf
negb
fdivr
inc
inc
out
lods
mov
add
sti
xorl
insb
or
xor
mov
sub
or
in
mov
jnp
pop
aam
jne
jecxz
es
sub
insl
fs
repz
test
adc
push
insl
lret
imul
push
mov
mov
lea
xor
add
test
pop
mov
mov
push
jo
clc
frstor
clc
int3
pushf
cmpsl
xchg
loop
xchg
ljmp
sbb
imull
int3
adc
inc
push
subl
add
rcrl
fisttp
xchg
ret
xlat
test
aas
roll
faddl
or
push
fcomps
pop
add
pop
pop
mov
inc
hlt
jmp
cwtl
xchg
mov
mov
push
xchg
out
imull
mov
and
pop
cmp
or
adc
dec
loope
inc
inc
clc
sarb
mov
mov
dec
loope
out
jne
adc
out
subb
pop
or
mov
or
sub
rclb
jle
jo
xor
insb
mov
jbe
jnp
pop
jle
or
in
xor
inc
jno
ffreep
xor
xchg
lret
jmp
aaa
adc
push
push
add
test
sti
inc
dec
push
push
imul
sbb
push
push
imul
fisubr
jl
xchg
adc
je
add
dec
ret
jecxz
test
mov
arpl
jle
inc
pop
dec
dec
or
mov
mov
push
xchg
push
int3
push
decl
pop
mov
adc
jno
jg
lret
add
and
movsb
rol
push
jecxz
int3
jbe
dec
popf
jge
jo
sbb
arpl
or
and
add
add
jl
xor
push
sub
push
jp
lock
mov
dec
in
and
rclb
inc
inc
dec
daa
mov
outsl
fistp
push
imul
lret
inc
daa
adc
sub
xchg
jno
imul
sub
test
in
ret
movsl
cmp
and
out
lahf
call
mov
xchg
add
outsl
sub
shll
jae
js
js
aam
pop
add
push
push
jns
loope
sbb
inc
sub
adc
hlt
inc
adc
outsb
jl
cmp
call
sbb
xor
push
test
sbb
jl
mov
pop
js
push
lcall
mov
jmp
push
sbb
test
jl
out
cltd
jg
inc
push
mov
sub
imul
ret
fs
repnz
sbb
sbb
divl
cmpsl
lret
roll
cmp
scas
ret
pusha
cli
into
push
movsb
cmc
jle
jecxz
jb
mov
lock
xor
pusha
inc
pusha
stc
in
lret
das
push
add
pop
jno
xor
mov
out
dec
hlt
cli
mov
lahf
xor
aas
add
into
pop
adc
xchg
and
push
and
loopne
lods
or
movsl
inc
adc
popf
les
or
dec
ror
loop
mov
cmp
push
pop
xlat
icebp
push
imull
rcl
mov
jg
fsubr
insl
sbb
ja
lahf
push
scas
nop
lds
dec
mov
roll
dec
fld
jns
je
jge
jecxz
jb
lea
mov
jbe
push
ja
jne
pop
out
adc
fimull
cmp
push
dec
xor
mov
inc
inc
insl
push
jmp
jne
imulb
add
mov
and
xchg
insb
rorl
fldl
out
push
add
subl
add
pop
testb
imul
mov
das
xchg
lock
xor
mov
push
cmp
es
rep
dec
test
cmpsl
psubsw
mov
inc
stos
imul
cld
mov
mov
andl
test
or
add
test
test
mov
aaa
mov
fisttpll
mov
xchg
and
repnz
in
adc
subl
xchg
jmp
dec
inc
mov
cltd
xor
inc
xor
outsb
loopne
jmp
sbb
dec
mov
jmp
xchg
repz
cmpsl
clc
add
cli
inc
fwait
cld
xchg
fcomps
add
dec
add
jmp
pop
pushf
xor
dec
mov
daa
xchg
sub
mov
loope
movsl
mov
sarb
gs
and
inc
dec
xlat
mov
xchg
mov
jne
test
out
pop
mov
bound
push
xchg
xchg
cmp
cs
insl
out
pop
je
movsl
mov
jno
outsl
pushf
add
sub
lcall
jnp
pushf
daa
jle
jge
in
adc
pusha
fildll
cmp
xchg
popf
out
jmp
inc
mov
cmp
int3
popf
jne
mov
ss
push
xchg
cmc
or
lret
sbb
push
lret
cmp
push
ret
cmp
xor
iret
arpl
or
or
arpl
lock
or
xor
scas
inc
aaa
mov
fldt
xor
stc
sbb
push
fmulp
inc
stos
lds
ljmp
pop
push
das
leave
fs
lea
cmp
jbe
or
jge
notb
into
pop
aaa
popa
cld
dec
or
fidiv
jl
lret
jmp
cmp
mov
xor
scas
ja
jnp
scas
cmp
fcoml
addl
pop
ret
in
sbb
jmp
pop
daa
movaps
mov
out
sub
and
in
push
movsl
inc
lods
icebp
and
dec
mov
test
movsl
insl
cs
push
jb
xchg
xchg
dec
pop
lahf
pop
xlat
js
xor
pop
inc
sub
pop
loope
test
fcompl
xchg
sub
mov
outsb
popa
sub
adc
dec
movsl
mov
imul
mov
ds
and
mov
movsl
int
cmp
imull
lcall
scas
mov
fistpl
adc
adc
mov
je
add
jg
mov
loop
xor
lds
xchg
xchg
ss
or
fcom
addb
andb
add
rcr
mov
or
movsl
into
xor
and
xor
iret
outsl
iret
sahf
xchg
loop
out
stc
fwait
jbe
adc
xchg
sbb
mov
lods
sbb
mov
sub
out
dec
fdivr
out
lds
push
cmp
in
cmp
sbb
inc
dec
decb
fild
pop
outsl
dec
push
adc
mov
les
push
repz
js
xchg
movsl
fisttp
or
xlat
xor
shrl
push
inc
mov
sub
lcall
outsl
jmp
dec
adc
inc
dec
add
je
sahf
lods
jecxz
and
fisttpll
ret
test
pop
xor
jb
dec
out
sbb
fstpt
push
pop
sbb
xchg
cmp
inc
test
and
jb
or
dec
mov
xor
rcr
jae
mul
aam
std
xchg
dec
lea
inc
insb
call
andl
loop
inc
mov
mov
dec
mov
in
in
lock
inc
comiss
ljmp
add
pop
ret
mov
and
mov
cmpsl
push
enter
pop
icebp
sbb
ds
jbe
lea
repz
pop
pop
and
rcr
outsl
hlt
sub
mov
dec
mov
add
push
divb
fnsave
pop
xor
pusha
cmc
popa
ljmp
cld
pop
xor
mov
jge
fcom
cmc
push
aaa
roll
lret
mov
add
bound
jne
test
xchg
ds
fild
inc
adc
sar
lahf
loop
dec
js
fwait
sub
mov
add
ret
jecxz
cmp
sahf
dec
ljmp
xchg
and
pop
or
ja
addb
jp
inc
lock
adc
dec
cmpsl
sub
cli
sbb
out
or
cmp
aas
jae
push
and
mov
outsl
sub
enter
outsb
pop
jp
inc
xchg
out
xor
jle
loop
in
push
and
sbb
hlt
lods
mov
pop
jae
lods
jne
xchg
out
pushf
fisttp
push
rolb
mov
loope
pusha
sbb
push
daa
imul
pushf
scas
mov
and
push
xor
ret
ret
adc
test
hlt
out
out
fisub
and
scas
xchg
inc
mov
pop
fimull
data16
in
cmp
mov
and
mov
dec
mov
jb
adc
fildl
test
cmpl
jg
or
or
in
jns
sub
imul
dec
cld
imul
inc
das
add
jo
aad
scas
push
in
sbb
inc
repnz
inc
jecxz
push
sbb
fadds
pusha
repz
jne
and
and
jns
daa
push
leave
lret
cmp
push
mov
cld
ret
jo
cmp
xchg
sbb
dec
jnp
and
movsb
lahf
es
inc
popa
test
mov
repnz
jb
pop
ds
js
and
pop
sbb
push
push
adc
push
pop
loope
or
outsb
les
adc
and
mov
jl
inc
sbb
cmp
lcall
push
scas
adc
outsb
stos
dec
pop
jbe
out
lcall
into
mov
outsl
imul
repnz
rcrb
pop
mov
add
adc
lret
mov
test
and
and
inc
loopne
jno
xchg
cmp
xor
cmp
int3
cmc
or
in
sub
ret
repnz
xchg
fdivr
push
mov
adc
out
incb
lods
rclb
lods
fadds
mov
outsb
out
int
cli
sbb
xor
push
stos
in
movsb
or
sti
lock
mov
cli
imul
pop
mov
adc
pop
imul
stc
repz
jp
push
in
mov
xlat
outsl
aas
adc
cmpsl
mov
mov
aad
inc
jmp
inc
icebp
cs
and
jb
jb
arpl
or
je
adc
gs
mov
cmp
insb
es
jne
arpl
mov
sahf
dec
fldt
aad
inc
push
jo
inc
ret
mov
pop
int
jb
sbb
dec
pop
cmc
mov
shrl
sbb
sub
std
cmp
negl
ljmp
cmpsl
mov
jmp
xor
xchg
lret
mov
mov
mov
push
fdivp
push
ljmp
or
ret
mov
pop
das
mov
mov
dec
in
mov
xchg
repnz
mov
cltd
jle
and
mov
je
scas
sub
sub
call
mov
jp
fcoml
lea
clc
jge
jle
lahf
call
and
adc
lock
or
out
cmc
mov
rclb
or
add
mov
xor
sub
mov
scas
fistpl
jne
test
mov
or
cmc
call
sahf
or
lret
pop
jo
push
inc
inc
jge
and
add
xor
or
push
setae
lret
adc
mov
insl
scas
out
dec
fs
dec
mov
mov
mov
outsl
out
dec
mov
push
mov
xchg
out
sbb
ret
mov
int3
cltd
xchg
rcl
dec
xor
div
subl
lret
jecxz
insl
mov
fbstp
pop
pop
cmpl
cmp
outsb
pop
push
pusha
adc
mov
xchg
inc
inc
pushf
jmp
pop
or
jae
lret
in
push
dec
mov
mov
setp
and
sbb
rcrb
in
imull
push
movsl
sbb
jmp
imul
pop
dec
jmp
push
arpl
mov
mov
push
xor
cli
jg
lret
jecxz
int3
iret
xlat
sub
and
push
or
xchg
iret
pop
rcl
pusha
mov
lds
leave
push
dec
cmpsl
movsb
popa
sahf
pop
push
rolb
or
mov
sbb
jge
fild
jge
ret
stc
jl
das
pop
dec
imul
xor
int3
adcl
xor
fiaddl
cmp
cwtl
jge
in
clc
inc
mul
push
clc
mov
in
or
fmul
loope
fisub
or
dec
push
jno
xor
sub
xchg
ret
or
push
movsl
push
lods
cmpsb
and
mov
push
push
sbb
int3
add
sub
bound
sbb
cmp
dec
es
stos
inc
pop
mov
push
out
sbb
or
outsb
daa
jno
adc
pushl
jae
pop
out
cmp
cli
and
adc
push
mov
fmulp
mov
push
sub
xor
cmc
push
push
push
sbb
rcrl
jb
pop
sahf
pop
dec
or
aaa
mov
jg
or
mov
lods
outsl
fs
mov
mov
aaa
nop
fmuls
pop
imull
jb
rorl
mov
jae
or
sti
cmc
rcrl
cmp
dec
stc
loop
lds
or
imul
cmpsb
repnz
lods
out
std
mov
sub
cli
dec
jne
xor
scas
sti
lahf
pop
push
roll
lds
xchg
add
loop
rcrl
test
mov
les
mov
mov
ljmp
mov
cmp
push
mov
scas
adc
adc
andb
pop
rorl
aad
ds
nop
push
push
dec
shll
inc
je
dec
fldcw
loope
fcomp
mov
je
test
stos
mov
xchg
hlt
imul
fwait
jle
adc
xor
fcmovnu
lods
add
addr16
inc
fildl
or
aas
stc
std
pushl
sti
dec
mov
xor
imulb
movsl
std
jecxz
scas
cwtl
cltd
arpl
mov
jne
mov
ljmp
fisttpll
mov
ret
mov
xchg
f2xm1
jns
pop
das
and
inc
cmpsl
mov
leave
rorl
es
push
icebp
dec
fbld
mov
mov
leave
push
mov
mov
mov
lret
push
mov
push
aaa
rolb
rcl
test
call
push
jl
cmp
add
or
push
jno
popa
sub
je
mov
out
pop
mov
inc
push
in
bound
jns
push
push
cltd
lds
mov
mov
aaa
dec
in
je
es
mov
test
not
lods
pop
cmpsb
or
lock
mov
push
add
lds
divl
in
rorl
mov
mov
mov
pop
popa
mov
sub
mov
push
int3
test
lods
sahf
push
push
lahf
mov
mov
fimull
push
bound
xor
lock
cld
mov
bound
mov
in
jbe
pushf
dec
js
jp
loope
pop
xor
insb
push
stos
mov
xchg
insb
lds
jnp
stc
scas
jle
mov
pusha
mov
add
xchg
push
mov
adc
test
push
or
adc
aaa
push
dec
mov
stos
rorl
aaa
and
or
imul
xchg
scas
push
out
insl
push
cwtl
lock
fcmovne
andb
std
push
mov
hlt
jge
mov
inc
adc
dec
push
mov
xchg
das
stos
xchg
and
mov
imul
push
sbb
shr
inc
mov
sbb
sub
leave
mov
movsb
in
lea
cli
push
jge
loop
sbb
mov
aaa
sahf
or
lret
add
out
jae
mov
fidivrl
xor
daa
inc
leave
scas
adc
push
and
inc
cmp
stos
popl
test
jp
repz
enter
daa
or
sarl
push
negl
mov
xor
xchg
cmp
int3
das
ds
mov
movsl
push
inc
out
ja
dec
lahf
fs
push
jmp
dec
test
pop
test
xor
es
fisttpll
push
js
dec
loop
nop
decl
xor
mov
pusha
xor
sub
gs
mov
jge
ficoml
push
mov
and
xor
and
and
mov
in
int
jo
sub
pop
je
jmp
push
fcomp
cmp
cltd
sbb
mov
shll
jg
std
popa
mov
stos
dec
mov
mov
adc
fidivl
inc
mov
fadds
icebp
jb
es
xchg
cmp
dec
add
push
mov
into
fisubr
mov
outsl
insb
cmpsb
xlat
loop
scas
je
rclb
adc
jl
lret
mov
lods
int
sbb
out
pop
xor
xor
or
std
lret
jns
dec
loopne
ss
int3
pop
inc
adc
mov
fidiv
outsb
repz
add
jle
sti
cmp
outsl
std
sub
or
pop
jmp
and
cwtl
aad
mov
outsb
dec
xor
inc
xchg
push
je
divl
xor
xchg
into
dec
lea
sub
jae
mov
adc
movsl
and
stos
fisttpl
addr16
add
rolb
add
inc
stc
jge
aas
cwtl
xor
jb
fidiv
and
add
imulb
xchg
daa
cwtl
push
aad
mov
inc
in
mov
popf
insb
andl
sub
mov
xor
dec
lock
cwtl
das
add
repnz
push
sbb
pop
ret
dec
inc
adc
cmp
pop
std
dec
fidivl
xchg
mov
mov
mov
mov
fist
repnz
je
and
push
cmp
sub
xchg
mov
repz
sbb
aas
clc
repz
mov
leave
cli
cmp
pop
ss
stos
out
mov
mov
ljmp
call
adc
xor
cmp
mov
mov
test
pusha
xor
xchg
scas
jl
add
or
ljmp
mov
pushf
add
loopne
vmaxsd
movsb
xor
xor
mov
mov
ret
add
mov
jecxz
out
ja
mov
dec
mov
lods
cld
mov
dec
fldl
push
incl
mov
push
pop
out
fistl
jns,pn
sarl
addr16
lcall
pop
mov
or
mov
jp
mov
stos
insb
xor
pop
jnp
dec
xor
lret
jl
or
ficomp
xchg
jmp
and
jb
in
rclb
rorb
fwait
mov
lea
stos
inc
xor
sbb
jg
imul
pop
scas
mov
sbb
lahf
cltd
adc
popa
xor
adc
sbbl
in
arpl
popa
int3
inc
push
mov
xchg
push
xor
lods
fisubl
clc
adc
movsl
loope
pop
movsb
jae
ficom
lds
cmpsl
stos
mov
imul
inc
mov
out
outsb
fdivrl
jbe
xchg
jge
stc
dec
sbb
pop
out
mov
dec
mov
dec
dec
mov
xor
sbb
scas
repz
enter
and
push
jp
dec
inc
adc
aad
in
fidivl
pop
daa
or
push
cmp
adc
sub
push
enter
lea
jno
shlb
adc
lahf
orl
push
mov
lds
add
lods
mov
add
push
pop
cmp
js
jae
pop
cmp
arpl
fmull
xor
mov
in
xchg
adc
mov
inc
pop
loop
mov
push
sbb
mov
and
je
push
mov
test
jg
jo
pop
pop
repz
popa
lcall
data16
push
push
sahf
pop
mov
cmpsl
fstps
jg
hlt
jnp
loopne
movsl
mov
xchg
rcll
jp
ss
insl
cmp
rorb
lret
sti
ss
cmp
lds
or
dec
pop
cmc
popa
lahf
jnp
cmp
adc
aas
int3
mov
ja
ficom
sbb
data16
mov
xlat
mov
jnp
out
imul
fucomi
xor
xor
in
mov
std
std
es
sbb
mov
sbb
addr16
jmp
repz
push
xor
aad
test
out
repz
ljmp
sbb
inc
data16
sub
jp
add
mov
repz
jmp
cmp
cmp
add
jle
lock
lcall
je
addr16
sbb
lea
dec
call
repnz
pop
add
adc
mov
pop
cmpsb
data16
inc
jmp
xchg
repz
aaa
imul
lea
mov
in
adc
cmp
std
xor
into
cwtl
pand
mov
es
xor
cmp
xor
scas
lock
dec
sub
jecxz
adc
lds
pop
mov
ret
fdiv
std
rolb
dec
aad
pop
cmpsl
or
pop
or
lods
mov
sbb
and
pop
jnp
pop
xchg
in
sub
daa
popl
test
jno
out
jl
add
mov
xchg
pop
fidivrl
cmp
popa
push
cmp
pop
loope
dec
stos
dec
mov
xchg
hlt
fs
cmova
xchg
mov
pop
mov
dec
mov
cli
test
insb
pushf
xchg
cmp
push
lahf
outsb
rcrl
pop
or
mov
fwait
out
in
push
das
or
imul
add
push
test
xchg
cmpsl
xor
mov
xchg
leave
add
mov
lods
test
sahf
repz
ja
daa
mov
xchg
lcall
xchg
xor
mov
popf
pop
jne
lahf
jns
data16
bound
dec
adc
andl
cmp
mov
cmp
test
int3
movsl
pop
mov
lcall
push
popa
mov
in
ret
out
sub
jp
inc
xchg
mov
inc
mov
xchg
jae
mov
add
pop
inc
and
stos
mov
rcll
sub
dec
imul
cmp
mov
adc
addr16
ds
and
pop
repnz
adc
arpl
daa
mov
sbb
leave
or
fwait
mov
mov
mov
pop
mov
xchg
sarb
xchg
pop
roll
fdivp
jle
lds
jle
and
mov
mov
insl
push
movsb
add
push
mov
mov
insl
xchg
ds
sbb
das
or
enter
sti
lock
mov
loop
xor
fldl
pop
scas
shlb
and
xchg
push
push
inc
loopne
inc
movsb
add
adcl
mov
or
cmp
mov
sub
in
jnp
popa
xchg
mov
xchg
mov
and
or
xchg
dec
jbe
cs
std
add
dec
gs
xchg
rcl
arpl
pop
icebp
js
mov
pop
jl
jge
jbe
psraw
daa
fdivl
ja
outsb
push
xor
rclb
cmp
loopne
xor
or
push
mov
push
and
pop
inc
clc
pop
jb
rcrl
dec
jbe
imul
sahf
add
call
jg
lock
xor
call
fs
popf
cld
test
inc
fdivrs
js
jmp
pop
lret
movsb
inc
cmp
adc
into
movsb
out
cmc
sub
xchg
xor
sahf
loop
sbb
push
adc
pop
dec
add
mov
dec
lods
fwait
call
cs
std
push
cli
in
dec
xor
ss
in
push
pop
sub
lods
jne
cmp
out
xchg
ss
jae
pop
or
xor
cmpsb
push
test
les
and
loope
je
dec
sbb
jnp
inc
xlat
imul
mov
cmpl
cs
sub
mov
out
testw
sub
lcall
call
jno
stos
pop
mov
adc
dec
xchg
pop
dec
aam
inc
jo
fiadd
rolb
cmpsl
int
call
and
dec
xor
shll
divb
adc
sti
popa
jnp
test
xor
cld
pop
xchg
adc
outsl
push
mov
mov
jge
lock
das
ret
mov
jl
and
ret
imul
es
add
dec
rclb
imul
or
mov
and
iret
aam
cli
call
cmp
cli
sbb
sub
pusha
es
call
mov
jne
sub
imul
ljmp
inc
pop
mov
or
cmpl
out
sub
shlb
je
jnp
cmpsb
xor
cltd
mov
inc
push
xor
mov
test
jns
xchg
inc
std
mov
out
loope
clc
fwait
push
pop
jp
xor
jb
push
mov
popf
pslld
fucom
decb
icebp
je
in
mov
loope
and
aad
pop
pop
xor
dec
sbb
inc
sbb
mov
sub
ret
das
adc
push
mov
xor
out
cltd
fstpl
bound
aad
or
xchg
std
ljmp
add
in
scas
xor
fsubrs
incl
mov
pop
aad
push
push
hlt
jnp
cmp
dec
sub
in
stos
jb
subl
jg
arpl
jmp
test
notl
push
sub
mov
or
jno
sub
dec
and
sbb
mov
mov
in
push
insl
sub
push
hlt
or
popf
push
ret
push
hlt
pop
insl
mov
inc
sbb
stos
or
push
jl
inc
xor
xchg
fimull
popf
jne
jnp
ficomp
aam
ficomp
dec
test
std
mov
movsl
out
repnz
loopne
cs
mov
lea
or
jbe
cmp
lods
je
sub
aaa
fstpt
add
addr16
jl
out
dec
daa
je
push
scas
icebp
xor
cmp
sbb
and
push
push
adc
inc
xor
loop
test
cld
enter
daa
or
into
jno
addb
pop
in
adc
dec
movsl
insb
pop
andl
rorl
push
fs
fwait
test
out
dec
xor
popf
ss
mov
js
mov
pop
mov
inc
dec
loope
fisttp
fsubl
sub
outsb
stc
adc
imul
aad
push
fucomi
jge
pop
movsb
fidiv
out
push
mov
test
sub
pop
fiaddl
icebp
dec
clc
lcall
fimull
pop
sub
mov
cld
andb
mov
lods
movl
sbb
ja
ss
imull
rcll
mov
cmp
xor
or
lret
into
xchg
cmc
out
xor
xor
ja
outsl
or
data16
mov
cld
adc
mov
ja
cli
inc
push
mov
mov
mov
cli
sbb
aas
xor
or
in
mov
mov
pop
fdivrs
mov
inc
pop
sub
fisubrl
jl
les
pop
mov
repz
cmp
xchg
xor
out
lea
sub
js
sbb
push
aad
mov
dec
dec
outsl
cli
inc
sarb
je
inc
stc
jecxz
das
repnz
popf
push
cmp
call
lock
cmc
pop
addr16
adc
rcrl
dec
jno
out
fistpl
xor
push
inc
dec
incl
call
cmpsb
dec
push
mov
mov
scas
divb
adc
cwtl
test
push
mov
mov
mov
xor
fimul
fwait
mov
xchg
out
lock
add
mov
push
dec
mov
cmc
in
ret
cli
pop
inc
es
lock
xchg
and
cmpsl
or
adc
icebp
and
inc
aad
out
sbb
lock
clc
mov
shr
aas
ror
pop
sub
add
test
push
mov
jle
pushf
add
clc
movsb
outsb
cwtl
xchg
fisubl
and
sbb
test
and
add
in
lahf
xchg
test
push
pop
xchg
lret
mov
add
sbbb
push
xor
cmc
mov
mov
outsb
dec
test
sbb
fistp
je
pop
rorl
cmpb
iret
xor
jne
adc
add
dec
or
xor
push
aad
push
and
xchg
rolb
mov
rolb
pop
adc
jmp
or
mov
lods
loope
xor
fmull
stc
mov
jne
cwtl
and
out
js
mov
jns
daa
into
xchg
enter
mov
data16
sub
stos
xchg
addr16
nop
adc
jno
sub
fmul
jle
inc
jle
xchg
clc
andl
lock
scas
mov
inc
lea
push
sbb
popf
xchg
mov
dec
cmp
lahf
sbb
and
sbb
push
cltd
imul
mov
adc
and
iret
cld
je
ret
iret
pop
pusha
lret
lahf
hlt
test
jg
inc
pop
outsb
lcall
add
inc
mov
inc
fcmovb
push
xchg
jle
mov
es
sub
lds
daa
mov
push
mov
inc
stos
es
movsl
mov
std
push
pop
pop
fidiv
out
jge
xchg
mov
aaa
lcall
add
test
dec
xchg
mov
xor
xchg
pop
push
scas
nop
xor
and
cmp
inc
ret
cmpsb
xchg
in
pop
out
enter
daa
or
cmp
mov
jno
insl
fisubr
movsb
mov
mov
bound
jae
and
adc
push
aaa
leave
popa
test
repnz
adc
insl
push
addr16
jmp
frstor
js
neg
pop
cli
fsqrt
push
lds
fmull
sbb
outsb
push
push
fs
inc
repz
out
loopne
sbb
dec
mov
mov
and
rorb
sub
mov
jo
negl
xor
add
push
test
inc
mov
inc
cmpb
arpl
and
lea
mov
or
cmp
icebp
and
cmpsb
lret
ffreep
sti
xchg
sbb
or
dec
in
into
push
jmp
mov
inc
xor
subl
pop
sbb
pushf
test
adc
push
in
add
les
enter
imul
xor
out
into
cli
dec
mov
fucomi
incl
or
jmp
movsb
je
jmp
push
adc
dec
out
imul
out
cltd
xchg
cli
int3
js
sbb
mov
xlat
jmp
mov
mov
xlat
push
cmpsl
jmp
sbb
das
aad
cwtl
arpl
lods
jnp
inc
sarl
fnstcw
mov
inc
jecxz
pop
mov
mov
lret
dec
pop
insb
outsl
sbb
sbb
adc
aaa
outsl
dec
pop
mov
pop
mov
inc
jle
pop
inc
gs
mov
adc
ret
jb
roll
and
mov
roll
xchg
inc
xchg
std
es
cwtl
inc
fs
mov
mov
push
lret
dec
test
mov
or
lods
das
subb
mov
ljmp
ret
mov
into
insl
subl
aad
pop
push
cmpl
mov
lods
loope
fnstcw
imul
and
xor
sub
lock
xor
mov
add
ja
loop
push
out
icebp
push
dec
lods
add
ret
repnz
clc
fbld
ret
jo
ljmp
add
xchg
stos
mov
jl
xchg
leave
sub
push
xor
mov
add
or
pusha
xor
dec
pop
mov
mov
dec
call
push
addb
test
xchg
or
sbb
fwait
je
ss
sbb
add
dec
loop
fistl
sbb
sbbl
fbstp
mov
mov
adc
pop
iret
imul
insb
inc
rolb
push
mov
or
rorl
fnstenv
sub
mov
bound
push
mov
bound
add
mov
xchg
xchg
out
lret
xchg
adc
or
rorb
movsl
iret
packuswb
mov
mov
inc
out
fmul
enter
and
in
test
mov
xlat
sbb
xor
imul
jae
adc
fcoml
adc
push
pop
xchg
push
mov
mov
and
out
ja
jg
scas
inc
mov
or
or
iret
pop
adcl
push
insl
pop
xchg
in
hlt
hlt
inc
jg
inc
adc
inc
and
or
or
mov
fidivl
lds
push
in
pop
pusha
inc
mov
loopne
ja
shll
mov
xchg
mov
in
leave
sbb
fisub
mov
inc
jge
cmp
aaa
pop
jb
or
adc
cmp
dec
add
jmp
xor
out
cmp
and
jle
inc
dec
pop
push
cmpsb
cmpsb
mov
cmpsb
or
mov
daa
pop
mov
jno
jge
sub
mov
dec
ds
mov
movsl
jp
cmpsl
and
push
lahf
call
fwait
push
or
imull
std
sub
loope
lods
inc
dec
pop
xlat
inc
or
hlt
inc
pop
cmp
out
iret
clc
daa
loope
adc
fdivl
sarb
jns
popa
adc
and
add
icebp
sbb
push
lods
push
ret
mov
cli
sub
cs
out
lods
lcall
pusha
mov
push
sbb
mov
sbb
mov
mov
fdivp
mov
inc
push
adc
lahf
fnsave
dec
sahf
add
fsubrs
ror
in
nop
rcll
or
xchg
into
dec
loopw
jge
mov
outsl
lods
jno
mov
stc
push
cmp
adc
jecxz
add
shr
lods
push
mov
out
lret
and
jle
mov
in
xchg
or
jno
movsl
cli
fwait
gs
pop
in
loopne
in
pop
addr16
cwtl
adc
xorb
mov
nop
les
call
inc
std
cmp
mov
sub
test
imul
enter
or
js
xchg
dec
or
fnstenv
jo
jecxz
push
scas
mov
lods
inc
call
out
mov
int
dec
adc
xor
fcomi
sbb
xor
gs
add
mov
jb,pn
push
sub
jg
and
lock
rcll
push
idiv
fimul
int
std
cwtl
sti
mov
in
test
sbbl
adc
data16
pushl
fwait
cwtl
data16
pop
lcall
mov
push
ret
sbb
es
sub
insl
push
and
ds
push
push
mov
icebp
rcl
push
lods
dec
jp
mov
mov
mov
mov
psubw
jae
pop
jge
cmp
mov
xlat
push
push
push
repnz
fucomp
popa
clc
sbb
xchg
pop
lcall
popa
mov
push
pop
lea
xchg
adc
and
push
movaps
ret
rorb
add
iret
pop
cltd
and
xchg
mov
les
hlt
test
sbb
xchg
pop
dec
sbb
imul
fwait
mov
insl
movb
mov
jp
ljmp
imul
xchg
add
fdivrs
mov
ja
push
mov
inc
fimul
mov
js
leave
dec
mov
and
mov
xchg
pop
out
ss
bound
xor
jns
xchg
and
sahf
mov
sub
mov
in
lret
jp
dec
pop
mov
jb
insb
inc
les
jle
pop
inc
in
mov
mulb
xchg
or
ja
lods
adc
inc
movsl
jae
jae
or
popf
aam
jns
dec
test
enter
test
and
pop
mov
scas
mov
call
mov
mov
pop
jb
into
mov
mov
out
inc
and
adc
push
scas
out
fisubl
ss
xchg
sub
lods
int3
cmp
in
and
lds
rol
xchg
and
or
leave
xchg
xchg
inc
movsb
cvtps2pd
pop
jge
pop
push
lods
jge
ficompl
pop
pushf
push
aaa
sbb
decl
jl
loop
in
les
icebp
dec
je
lret
push
pop
xor
jo
js
scas
dec
adc
and
out
cmp
xorb
jno
jl
loopne
stos
cmpsb
lea
or
pop
inc
jg
mov
popa
dec
cmp
mov
sub
stos
inc
cmp
repz
and
data16
fstl
test
or
or
outsl
sar
incb
loopne
js
fldcw
loopne
loope
loopne
fsubl
pop
sub
out
pop
adc
cld
cwtl
cmpsl
repnz
mov
addr16
jp
jo
pop
inc
int
in
sub
add
outsb
cmp
lcall
pusha
mov
mov
sbb
int3
push
test
inc
xor
scas
jg
push
pop
mov
test
fs
pop
adc
mov
cmp
sbb
mov
cltd
shrl
movsl
cmp
or
iret
pusha
cmc
inc
subl
add
icebp
outsl
cmpsb
and
or
fild
and
sbb
into
ds
aaa
cmp
mov
insl
sbb
mov
movsb
xor
out
pop
sti
push
jns
mov
fidiv
pop
xchg
imul
test
cmp
repz
loop
xchg
adcb
cmp
mov
sub
jle
mov
sub
xor
cs
outsl
aad
fildll
push
dec
inc
stc
cltd
lcall
test
cmpsb
ljmp
inc
mov
sub
xor
dec
xor
cmpsl
pop
aad
jbe
mov
inc
fwait
xor
aas
push
ret
xor
mov
and
movsb
shll
ljmp
mov
movsb
mov
aam
mov
dec
subl
lret
dec
inc
mov
push
sub
loop
sqrtps
pop
xchg
inc
aam
and
ret
es
je
insl
push
into
add
dec
sub
push
cmp
icebp
stos
sbb
push
fstpt
mov
push
and
addr16
pop
xchg
xchg
mov
mov
add
push
shrl
loop
push
inc
in
xchg
xchg
adc
popa
lret
pop
cmp
lea
or
movsb
loop
ljmp
add
les
push
pop
mov
mov
repz
dec
mov
pop
test
ja
xchg
ficom
rorl
sub
fwait
rorb
xor
dec
sar
mov
or
xchg
in
pop
std
xchg
push
push
mov
xor
popf
mov
inc
cmc
push
ja
adc
dec
push
inc
popf
inc
jne
xchg
mov
out
rorb
popa
jne
jge
mov
loope
out
adc
lock
inc
cmp
subl
out
cmpl
gs
xchg
jp
mov
mov
ret
mov
add
rorb
ficoml
cmpsb
aaa
push
fist
adc
inc
mov
bound
dec
out
int3
pop
popf
sti
shlb
mov
pop
int3
add
clc
or
sbb
popf
adc
rolb
cs
push
mov
stc
adc
sub
iret
sbb
pop
add
outsb
dec
arpl
test
sub
or
add
lahf
inc
sub
push
dec
xchg
adcl
pop
mov
lea
inc
shrb
out
repnz
xor
or
movsb
mov
inc
fbstp
pop
xchg
jge
xor
aaa
xlat
aaa
dec
or
addl
dec
mov
les
jne
push
cmp
mov
mov
sub
outsl
mov
push
cmp
sahf
inc
outsl
xchg
adc
sti
enter
daa
add
pop
xor
or
cmp
jb
ds
sub
movsl
mov
and
cmp
mov
push
test
adc
xor
jae
xor
js
lods
push
mov
push
jnp
loope
neg
or
mov
aas
lods
rclb
xlat
mov
daa
repnz
repz
jle
cmp
cli
pop
push
leave
imul
jmp
cmp
add
cmp
jne
add
mov
test
xor
orb
leave
jg
push
arpl
mov
adc
mov
dec
ss
fwait
cmp
and
pop
mull
push
sub
rclb
or
xchg
adc
xchg
cmc
or
or
outsl
test
mov
adc
mov
push
and
mov
sub
out
xchg
stos
cli
in
in
insb
mov
in
cmpsb
enter
jmp
in
stos
stc
mov
pop
movsl
mov
mov
les
inc
mov
loope
cmp
push
sub
ds
pushf
fmuls
inc
cs
sbb
cs
sahf
inc
or
je
and
je
xor
in
in
xchg
test
sbb
push
in
scas
and
lods
adc
pop
or
fcmovu
push
pop
insl
pop
js
inc
inc
adc
roll
ret
cmp
icebp
adc
dec
inc
inc
icebp
and
addr16
out
rcrb
std
sbb
push
cwtl
jno
mov
mov
jge
push
mov
lret
lcall
mov
shrb
das
sbb
cmpsl
ds
and
rol
xchg
mov
xor
dec
mov
push
cmpsl
add
mov
push
sub
icebp
addl
inc
mov
or
mov
add
movsl
pop
dec
pop
fcom
sbb
push
test
je
push
xchg
fxch
fnstsw
push
cmp
mov
xchg
test
sbb
cmp
pop
jecxz
pop
stos
jo
scas
out
jo
adc
lds
push
jno
in
int
mov
push
mov
lret
dec
sbb
push
das
sbb
test
fs
or
out
mov
push
add
add
popf
and
xor
or
in
push
pop
xchg
mov
mov
mov
add
test
push
lcall
or
ds
push
fistl
jne
cmp
mov
ds
out
hlt
push
pop
sti
fbld
jns
xchg
xchg
hlt
jmp
leave
out
sbb
sub
xchg
pop
mulb
cmp
jp
aam
mov
xor
add
iret
jle
inc
xchg
in
adc
pusha
mov
fbstp
push
xchg
scas
loope
jmp
mov
lret
mov
popf
and
lea
inc
add
stos
imul
mov
dec
bound
rcrb
adc
sub
xchg
pop
jb
cmp
xor
add
je
mov
sub
or
jge
out
lods
pop
mov
mov
mov
adc
lea
sub
fmulp
cmp
rol
adc
mov
sbb
cmp
sub
jo
jbe
adc
jge
xchg
iret
xchg
pop
aaa
xchg
loopne
or
adc
adc
dec
push
mov
mov
jo
sub
or
jle
add
cmp
mov
pop
popa
mov
cmpsb
xchg
popf
mov
enter
daa
add
out
cmp
test
jno
mov
sub
add
push
mov
and
xor
xorl
test
push
add
xor
sbb
js
addr16
pop
mulb
fwait
push
lret
aas
loope
ljmp
push
pop
mov
mov
leave
mov
mov
sub
cmp
cwtl
sub
int3
repnz
push
sub
pop
insb
addr16
sbb
push
nop
cli
push
mov
inc
sbbl
shrb
pop
subb
lahf
jg
sub
and
adc
fs
jae
adc
add
in
cmp
frstor
mull
inc
lret
jno
push
cs
cmp
inc
ret
or
jp
cmc
rolb
int
mov
jp
fs
push
stc
js
and
pop
mov
data16
adc
mov
stc
or
jecxz
sar
push
jge
xor
push
mov
push
push
repz
repnz
or
les
imul
repz
in
xchg
push
sub
sbb
fstpl
in
loop
and
push
inc
pushf
orl
cs
cmpsb
aad
mov
nop
or
dec
sub
popf
inc
pop
xchg
je
test
xchg
lods
ds
call
imul
pop
out
adc
daa
add
test
mov
inc
lcall
aas
nop
addr16
fimull
jle
mov
mov
dec
test
mov
ret
cwtl
sub
mov
mov
das
sbb
or
lret
or
fisttp
movsb
fdivl
cld
add
mov
mov
ret
lds
sbb
push
gs
insl
pop
mov
mov
sbb
mov
pop
adc
lods
lea
push
lret
testl
push
mov
insb
lods
int3
shr
xchg
mov
je
add
sub
push
jnp
fstpl
stos
clc
lret
mov
aaa
ljmp
je
mov
mov
jno
xchg
in
pop
push
mov
pushf
sub
inc
dec
out
cltd
lds
xor
int
scas
dec
test
sbb
repz
sarl
mov
movsb
cmp
add
mov
push
add
iret
enter
cmp
or
xchg
bnd
mov
fwait
dec
mov
mov
movsl
dec
dec
cmp
stc
inc
mov
clc
test
push
pop
arpl
rcll
jns
xchg
orl
or
xchg
mov
arpl
xor
les
daa
jnp
imul
in
push
repz
and
or
push
pop
pop
xchg
xorl
fild
ret
xchg
xor
call
arpl
cli
inc
mov
test
sbb
fdivrp
lret
sbb
pushf
ret
mov
rclb
sub
iret
xlat
in
ret
int3
pop
jae
xchg
hlt
and
mov
inc
cs
ret
or
clc
dec
test
sub
fidivrl
mov
xchg
xor
pop
int3
std
sub
fisubr
push
rcr
sub
repnz
leave
clc
sub
movsb
iret
mov
ja
call
mov
aaa
push
or
mov
jl
aam
dec
rorl
xor
pop
lahf
cmp
and
out
call
jp
lea
push
in
adc
aas
daa
add
jno
sub
cmp
hlt
mov
movsl
xchg
sbb
mov
push
push
or
test
sub
pop
xor
mov
mov
mov
js
mov
pop
xor
into
mov
add
cld
fsubl
sbb
push
push
sbb
add
adc
lea
adc
popa
cmc
adc
pushf
outsl
push
iret
in
insb
int
and
sub
les
int3
adc
pushf
mov
lds
sahf
jne
sbb
inc
cmpsb
fistpll
inc
sub
jbe
sub
jp
sbb
sub
loopne
test
cwtl
popa
mull
mov
cmp
pop
cmp
std
orb
mov
adc
add
xchg
scas
loop
or
das
jg
adc
subl
test
push
aas
pop
lods
in
int
push
pop
insb
out
imul
xchg
cmp
sbb
and
cmp
sub
xor
lahf
loopne
aas
imul
or
imul
int
xchg
leave
mov
push
cmp
rorb
and
ret
sub
and
pushf
cs
push
jmp
mov
jle,pn
not
cmp
jno
xchg
cmp
lret
mov
je
mov
sub
scas
xchg
pop
lea
fwait
jge
ljmp
adc
rorb
sub
and
inc
in
sbb
test
dec
xor
add
scas
cs
or
ss
imul
mov
xchg
lahf
mov
sbb
mov
lret
js
into
mov
lods
ss
dec
sub
pop
and
das
fildl
cwtl
mov
mov
jb
push
out
fmuls
pop
insl
push
pcmpgtw
loop
cmpsl
add
mov
or
das
movl
add
jecxz
sbb
mov
mov
sarb
xor
test
and
sbb
sar
push
push
sbb
aam
shlb
mov
pop
cmp
cwtl
out
ss
xchg
sub
rcll
cmp
jp,pt
push
fucomi
cltd
cld
pop
xor
mov
gs
mov
dec
jmp
sub
hlt
pop
mov
sbb
jo
or
divl
push
inc
adc
roll
outsl
push
out
jg
and
or
into
push
in
xchg
xchg
inc
sahf
out
mov
pop
xchg
mov
jbe
mov
dec
sub
loopne
ss
mov
mov
jne
in
mov
xor
je
and
jns
and
sbbl
jbe
cwtl
scas
xchg
sub
mov
cmpsb
bound
fs
mov
mov
insb
repz
daa
jnp
sahf
lret
jle
clc
lock
cli
test
shll
jb
jg
push
mov
jmp
shrl
pop
jae
fwait
cmp
stos
mov
mov
les
fildll
cmc
xchg
jl
test
imul
adc
das
daa
bound
pop
test
push
out
iret
ss
fadd
mov
sub
imul
arpl
push
add
jae
xchg
inc
stos
xchg
mov
adc
call
inc
push
fimul
insb
stc
lds
sar
cli
mov
push
sarl
outsl
stc
movsb
pop
cmc
repnz
xor
jecxz
jge
fldcw
aaa
adc
jbe
dec
jae
add
fstpt
lahf
dec
xor
push
in
insl
xor
mov
stos
scas
lret
and
inc
jg
fldcw
xchg
inc
sbb
xchg
cmpsb
cltd
ljmp
stos
sbb
jne
push
pop
fs
out
sub
test
sti
lods
xor
popf
fwait
push
and
jae
push
sub
test
xor
ljmp
inc
or
mov
js
xchg
push
push
xchg
sbb
sub
mov
pushf
outsb
adc
push
adc
sbb
lods
dec
and
pop
pop
int
add
pop
push
int
jg
mov
test
sub
ja
loopne
sbb
test
adc
jg
pop
leave
mov
and
outsl
fs
cmp
adc
dec
ss
int
cmp
push
test
jecxz
push
lret
call
cmp
dec
fmuls
insb
movsb
test
cmc
pusha
push
test
insb
mov
push
push
sub
out
sbb
cld
mov
pusha
inc
nop
data16
rol
mov
out
sbb
stos
xor
mov
in
test
mov
and
into
push
dec
gs
mov
pop
add
adc
mov
gs
lcall
sbb
push
xlat
push
sub
fdivs
orb
fs
push
aad
sbb
nop
mov
sbb
inc
inc
std
fld
loop
je
push
adc
sbb
mov
inc
lea
jne
call
imul
xchg
xor
test
add
loop
pushf
pop
popa
xchg
and
push
ss
pop
jmp
sub
sbb
dec
stos
ds
mov
xorl
adc
push
cwtl
mov
xchg
or
push
lret
out
mov
aad
push
mov
sbb
lock
inc
mov
xor
or
push
sti
es
es
insl
in
inc
cmp
test
cmpsl
add
je
ljmp
lods
arpl
add
mov
loope
cmp
pusha
pop
mov
stos
loop
rclb
sub
mov
pop
cltd
push
fstpl
insb
and
xchg
xchg
ljmp
sub
stos
cmp
movsb
mov
push
push
jb
setle
roll
push
lock
xor
mov
rcr
lcall
mov
xchg
mov
mov
fwait
mov
cld
push
ljmp
add
push
cli
call
mov
or
ds
xchg
nop
add
mov
xor
xlat
ja
dec
movsb
dec
push
stos
push
inc
lock
popa
shrb
lahf
mov
jne
rcrb
mov
into
fsubr
xchg
pushf
iret
bound
cs
push
flds
out
cmpsl
jnp
inc
sbb
xchg
xchg
jp
push
mov
imul
jle
sarl
ret
pusha
pop
xchg
pusha
fist
push
jmp
fdivl
jae
jmp
rcrb
jo
push
push
add
pusha
stos
int
and
cs
in
add
sbb
sbb
hlt
rcll
sub
sub
daa
pop
loope
mov
arpl
xchg
popf
or
out
fist
sub
or
movsl
out
xchg
inc
int3
rol
inc
pop
jp
fidiv
or
jbe
mov
test
insb
clc
movsb
in
push
test
sbb
xlat
and
add
aaa
repnz
or
or
add
imul
lahf
mov
push
mov
jno
adc
jb
test
cltd
sarb
nop
adc
mov
cmpsb
sbb
push
enter
daa
add
inc
cmp
dec
sub
mov
je
iret
mov
movsl
movsb
jge
and
xchg
jmp
push
cld
pop
adc
aas
sub
push
push
arpl
ds
pop
roll
fisttp
in
push
icebp
data16
or
sub
sub
adc
inc
adc
cmp
iret
test
mov
push
lock
dec
push
int
ret
push
sub
or
push
xchg
ss
mov
rcr
mov
xchg
and
jnp
popa
jg
jl
mov
shrb
fs
iret
scas
ss
xor
fmuls
pop
jmp
lret
ja
sbb
cmp
or
xor
lahf
and
daa
sub
outsl
add
lods
stc
popf
clc
mov
add
dec
addr16
fildll
add
add
loopne
jg
mov
cmp
enter
adc
cmp
ja
std
gs
lea
loopne
in
pop
and
adc
pop
pop
imul
sbb
imul
sbb
mov
xlat
mov
xor
mov
test
cs
mov
dec
nop
lcall
inc
pop
out
jae
cld
and
jne
sub
in
mov
sahf
lea
mov
call
mov
js
leave
lea
adc
adc
inc
das
lcall
insl
jge
jb
xchg
dec
and
shrl
pushf
out
ljmp
loopne
mov
dec
mov
lds
loope
adc
push
fdivrl
mov
push
push
lock
xchg
js
cmp
aam
lret
in
jb
pop
fidiv
dec
mov
push
insb
mov
fstpl
jns
pop
and
mov
sub
test
leave
addl
gs
bound
fist
push
mov
jp
clc
jl
cs
shrb
and
mov
mov
pop
and
stos
sub
out
cld
sub
push
xor
and
jge
xor
popl
adc
jl
dec
mov
imulb
xchg
nop
jbe
or
jl
rorb
fwait
mov
cltd
nop
add
or
sub
xor
mov
or
xchg
lods
dec
push
xchg
fildll
mov
in
push
ja
loope
dec
adc
into
mov
adc
dec
adc
jne
pop
push
mov
jnp
out
jo
loope
inc
cmpsb
idivb
cmp
loop
test
sahf
adc
sub
mul
addr16
add
lret
mov
insl
xchg
insb
leave
cli
jne
sub
jle
jle
in
jo
pusha
hlt
jp
fbstp
push
sbb
jbe
out
inc
out
fnstenv
jp
push
xor
popf
mov
aaa
je
inc
or
jns
and
push
sbb
push
adc
scas
cmc
cmp
push
in
out
adc
or
iret
hlt
push
sahf
ret
xchg
test
arpl
mov
or
imul
xlat
ficompl
clc
xchg
ss
push
int3
mov
imul
add
das
fistp
cmp
mov
leave
pop
test
push
rol
add
sbbl
mov
stos
rorl
cs
cmp
outsb
dec
inc
jl
jns
dec
push
repnz
xor
imul
mov
inc
and
cmp
push
push
xor
cmpsb
lahf
pop
loop
sbb
enter
daa
add
adc
sub
mov
sbb
repnz
stos
ret
dec
and
mov
push
iret
xlat
xchg
test
dec
mov
xor
stc
aam
add
pop
call
sbb
pop
repnz
push
adc
loope
scas
push
fsubl
sub
aaa
outsb
cs
add
push
push
sub
roll
les
mov
fbld
aam
xor
fcoms
sub
scas
jne
push
icebp
pop
push
in
out
mov
out
sahf
pop
aam
test
adcb
cmp
fstpt
mov
adc
fwait
push
and
rcr
fcmovnu
mull
inc
lret
jge
mov
inc
cmp
mov
ror
inc
cmc
out
stos
cmp
and
aad
loopne
or
nop
jns
stc
push
sub
adc
in
pushf
add
xor
lods
mov
clc
cwtl
out
or
rdtsc
lahf
mov
in
ds
lcall
loopne
push
jle
inc
pop
es
pop
lcall
push
repz
push
push
mov
cmp
mov
shrl
cmp
mov
das
push
cmpsb
jmp
int3
pop
cmpsl
cmp
aad
adc
nop
jne
or
outsb
adc
into
or
xor
push
jecxz
xor
mov
int
call
addr16
jae
mov
cmp
loop
or
fildl
rcrb
mov
inc
mov
scas
inc
cmp
loop
jb
jle
dec
cltd
insl
gs
iret
clc
outsl
not
mov
std
pop
shrl
inc
mov
stc
sbb
cmpl
cmp
mov
jmp
lock
cmp
js
fsubs
mov
faddp
add
jmp
popa
mov
insl
mov
scas
frstor
push
jae
icebp
mov
in
lods
cmp
sub
push
jne
mov
das
in
aad
or
pop
call
cmpsl
inc
sub
faddl
movsb
mov
mov
xchg
adc
ljmp
cmp
stos
sbb
out
pop
cmpsl
mov
push
or
subps
pop
add
and
mov
mov
mov
dec
cs
cmp
push
xor
cmp
aad
and
test
xor
jno
or
cmpsl
out
cs
sub
pop
cmpsl
jno
ja
cld
mov
add
sub
mov
xor
jnp
rcl
addr16
cmp
cwtl
ficompl
scas
xchg
jmp
jl
lds
out
repnz
jge
xchg
addr16
jl
jp
cld
adc
insb
xor
and
xlat
sarl
das
cli
in
inc
stos
pusha
jne
fcmovb
xchg
int
add
insl
mov
inc
repnz
sbb
push
cli
push
hlt
pop
pop
popf
in
mov
out
mov
sbb
pop
and
sub
sbb
mov
divl
mov
adc
push
jne
push
xchg
pop
dec
mov
out
mov
cld
mov
lcall
inc
daa
jae
fimull
out
xchg
lea
test
movsl
ss
fidivr
stc
pusha
mov
dec
pop
pop
mov
dec
inc
aaa
leave
aam
fisub
inc
cmp
hlt
jle
jge
adc
aaa
push
call
xor
add
lods
sti
dec
jge
mov
xor
movb
addr16
and
out
cmp
int3
or
fadds
ljmp
scas
push
pop
enter
daa
call
mov
ljmp
sub
pop
push
cmp
xlat
ds
insl
mov
push
incl
neg
mov
mov
cmp
add
out
xor
pusha
pop
punpckhdq
mov
pop
xor
xor
in
loope
jp
fmull
mov
push
outsb
xchg
and
movsl
jbe
sar
shrb
mov
daa
cltd
nop
mov
mov
xchg
int3
and
adc
push
int
repnz
sub
bound
push
inc
mov
mov
sahf
add
lds
mov
sarb
enter
rol
push
pusha
jo
push
adc
ss
jl
sbb
sub
mull
jl
lret
sub
dec
push
jbe
int
jnp
mov
push
je
mov
in
jge
shrb
mov
enter
adc
bound
data16
cmp
mov
mov
cli
stos
dec
out
dec
lret
push
popa
xor
into
in
jmp
and
mov
das
test
pop
pop
out
push
adc
enter
rclb
jns
aad
add
xlat
and
push
sub
mov
pop
jmp
adc
or
nop
push
push
or
add
out
fldcw
je
inc
pop
jecxz
test
mov
shlb
out
xchg
pop
gs
int
cmp
dec
lahf
dec
movsb
fldt
lds
jb
inc
cmp
ret
stos
dec
aad
jns
or
adc
lea
lods
dec
ror
cwtl
xor
jmp
and
mov
js
mov
mov
adc
xlat
dec
lret
xor
jae
jle
lods
mov
jmp
inc
das
push
mov
mov
pop
and
aam
mov
es
mov
dec
cltd
call
mov
mov
or
movsb
gs
mov
test
ss
ja
mov
rorb
or
sub
data16
dec
sbb
fwait
lods
imul
out
frstor
adcl
xchg
push
or
ljmp
stc
pop
in
cmpsl
stos
or
out
ret
xchg
dec
cwtl
sub
mov
btc
push
cltd
fcoms
and
dec
out
fcoml
rorb
sub
test
xor
xlat
sbb
and
outsb
xor
xchg
fwait
sbb
adc
aas
mov
xchg
xor
fisttp
push
rol
in
pop
sti
xchg
jge
out
push
mov
push
pop
bound
dec
negl
inc
xchg
sub
mov
inc
jp
xlat
pop
das
jne
call
cmpsl
out
cs
out
insl
roll
mov
add
movsb
inc
es
js
xor
jl
jp
push
xlat
mov
loopne
insb
lahf
push
imul
xor
iret
aam
in
jbe
pusha
sub
xchg
mov
jl
inc
std
sub
jae
push
push
mov
clc
popf
or
popf
mov
shrb
stos
sbb
push
stos
sbb
cltd
test
loope
scas
mov
adc
adc
mov
sahf
pop
xchg
arpl
daa
mov
fimul
push
cmpsb
add
fidivrl
mov
int3
xchg
fild
ficomp
and
gs
sarl
cmpb
dec
lahf
loop
xchg
popa
push
jno
fs
lock
sub
sbb
push
aaa
adc
aaa
add
cli
dec
in
mov
push
jo
arpl
and
scas
inc
cmp
cmp
mov
inc
pop
imul
in
xchg
xlat
push
daa
clc
xor
sbb
imul
cmp
push
sbb
icebp
rclb
lahf
push
or
jne
test
pusha
cmp
orl
xchg
lcall
call
sub
imul
mov
xor
in
ror
rcl
dec
mov
ljmp
sbb
mov
xor
repnz
adc
fisub
jmp
pop
push
or
lcall
sbb
lret
and
mov
js
ret
mov
pop
outsb
mov
sub
mov
ds
icebp
cmp
aas
adc
neg
pop
nop
lret
mov
loope
cmpb
xchg
or
ficoml
into
dec
pop
repnz
jl
or
fadd
cmpsb
outsl
sahf
push
and
mov
ret
stc
ret
adc
sub
add
push
lods
outsl
xchg
adc
fisttpll
pop
xor
das
in
push
rcrl
sti
loopne
insb
loopne
leave
fistl
xor
divl
pop
jle
dec
adc
ljmp
add
cs
push
outsb
xchg
cwtl
enter
push
fdivrs
aas
mov
insb
sub
jno
mov
test
jmp
and
cs
adc
sub
dec
sub
mov
idivl
jecxz
sbb
mov
mov
call
gs
jo
nop
cli
aad
mov
fistpl
dec
fiaddl
enter
fldl
dec
mov
jb
lock
xchg
and
fnop
rcrl
jge
negb
std
lods
push
cwtl
mov
xor
or
ret
bound
lret
mov
mov
cmc
lock
iret
das
ss
aad
cmp
mov
scas
jmp
ret
pop
loop
sbb
mov
rorl
jno
cmpsl
std
jp
mov
bound
lods
paddusw
mov
leave
loopne
and
ds
pop
es
rcr
inc
sub
push
mov
push
jmp
pop
mov
xchg
cmp
ljmp
sbb
nop
cs
stos
stc
imul
es
ret
bndldx
cmp
jo
into
mov
fisttp
push
dec
out
mov
pop
xor
xchg
aam
rol
inc
dec
or
mov
fwait
dec
mov
and
inc
or
call
sub
sar
or
pusha
inc
xchg
int3
inc
pop
mov
sub
pop
sbb
rolb
ljmp
mov
pop
pop
scas
dec
mov
arpl
mov
cld
pop
out
or
sbb
mov
or
out
or
pushf
or
ja
pop
add
pop
or
cld
jnp
daa
sarl
insl
test
fimul
pusha
lds
xor
pop
jmp
inc
or
jb
jp
adc
pop
pop
dec
push
std
test
push
jp
imul
add
sarl
adc
out
xchg
sbb
mov
mov
xor
arpl
popa
fiadd
xor
or
test
fidivl
inc
xchg
cmp
int3
jg
in
pop
ss
ds
adcb
repnz
in
dec
leave
ret
movsb
adc
sub
jbe
aad
jge
mov
xor
or
fs
xor
in
clc
xchg
in
pop
cmp
xor
jl
scas
and
add
cmp
push
xchg
cmp
out
fbld
jl
xchg
enter
daa
std
pop
lret
cmp
mov
dec
loop
sub
dec
jge
inc
fsubs
sub
and
imul
dec
cmp
xor
xchg
dec
mov
pusha
js
scas
cmp
scas
xchg
loope
jl
fsubl
sub
icebp
adc
outsb
push
out
adc
scas
loopne
mov
push
fidiv
jecxz
push
loope
sbb
and
jecxz
in
jns
and
mov
sbb
mov
or
ljmp
and
mov
xorl
adc
in
adc
xchg
pop
ss
mov
lret
fdivr
mov
sahf
ret
cs
inc
sarl
cmp
pop
inc
or
pop
test
inc
xchg
xor
mov
lock
mov
jg
out
push
add
dec
imul
and
out
push
stos
cli
jl
xor
in
mov
xor
ret
gs
into
loopne
pop
sti
pop
popf
lret
add
pop
movsb
shrb
sbb
or
rol
xchg
pop
stc
push
sbb
jp
xlat
sahf
cltd
clc
sub
mov
xor
out
shrb
in
dec
nop
push
push
sub
cmpsb
data16
lcall
fs
fadd
shrl
lea
sub
in
daa
pop
lret
fsts
mov
es
adc
pop
nop
and
dec
mov
cmpb
daa
in
jb
js
dec
incb
or
fs
shll
negb
pop
and
mov
add
add
cmp
out
mov
mov
adc
lock
into
das
adc
or
mov
jns
or
es
dec
mov
cmpsl
cld
mov
xchg
icebp
cmp
inc
lods
jp
cwtl
mov
in
xor
inc
sub
mov
inc
xor
sub
sbb
mov
mov
push
lods
xchg
jle
jo
std
clc
push
repz
xchg
popa
cltd
jae
pop
cmp
mov
call
rcl
xchg
sbb
vmwrite
add
test
inc
test
cmp
loop
scas
dec
push
iret
push
test
les
and
mov
fcomps
or
out
sbbb
sbb
add
jne
pushl
xchg
xor
cld
test
in
mov
arpl
sbb
std
mov
dec
enter
nop
mov
into
ss
dec
popf
push
daa
jne
inc
push
mov
stc
out
in
jne
bound
sub
dec
clc
xchg
xorl
out
dec
sub
outsb
packuswb
jp
push
push
mov
in
insb
jne
mov
hlt
mov
in
or
pusha
pusha
fstl
fildll
mov
push
in
inc
adc
jl
cmp
ljmp
ds
lds
jg
or
xor
les
js
or
bound
je
add
jo
push
ret
adc
inc
pop
hlt
sub
fist
or
push
push
mov
and
jle
xchg
add
pop
gs
jno
loope
mov
roll
rcrb
lret
repnz
fwait
leave
cmp
movsb
pushf
or
push
cmp
cs
daa
sub
scas
aaa
mov
and
lret
jl
inc
imul
outsl
cmpsb
xor
xlat
or
and
scas
push
push
pop
pop
testb
push
cmpsb
stos
mov
in
arpl
fsubs
cld
inc
insb
cmp
jg
sub
jge
cmp
adc
jle
add
mov
pop
lahf
push
push
push
sbb
jle
jbe
stc
xor
sub
aad
test
js
or
pop
out
xorb
movsb
mov
fcoml
jg
sub
mov
outsb
mov
mov
rorb
cmp
rcrb
jne
loopne
push
adc
cwtl
push
in
pusha
int
out
sub
repnz
in
mov
dec
sbb
ds
test
cmc
sbb
push
or
mov
in
lahf
addr16
adc
mov
cs
mov
fdivs
lods
mov
push
mov
rorl
out
dec
aas
cmp
push
std
into
push
dec
cmc
or
nop
outsl
pop
test
loop
out
stc
xor
adc
mov
xlat
data16
jno
lods
cmp
cmp
out
sbb
pop
xor
jnp
in
sub
ds
es
gs
loopne
pop
mov
jns
imul
xchg
je
mov
sbb
mov
sti
xlat
fnsave
jmp
mov
fcmovnu
pop
jmp
test
aad
mov
nop
loope
pop
dec
and
inc
mov
pop
adc
je
pop
push
jecxz
sbb
lea
cmp
arpl
pop
jle
test
dec
pusha
push
dec
clc
cmp
out
inc
rcr
inc
inc
test
pushf
loope
jb
dec
jne
cmp
mov
fdiv
fiadd
std
cli
sti
or
insl
or
mov
insb
fild
mov
adc
mov
cmp
das
hlt
jnp
mov
jle
xchg
aam
movsl
sub
cmp
dec
in
push
daa
jecxz
mov
fstpt
adc
and
pcmpeqw
mov
fs
rolb
roll
pusha
push
push
outsl
fldenv
xchg
mov
pop
xchg
or
xor
mov
push
pop
out
dec
stos
xlat
scas
dec
out
jmp
sbb
sbb
pop
mov
fcoms
or
faddl
xchg
xor
lock
in
mov
mov
ljmp
mov
adc
jae
sahf
or
sub
fwait
test
pop
push
mov
rcrb
add
xchg
and
or
shl
imul
mov
insl
add
les
pop
xchg
push
pushl
xchg
pop
dec
rcrb
inc
pop
cmpsb
mov
aam
dec
cmpb
mov
or
es
jns
cmp
cld
addl
sub
sub
aad
or
stos
addr16
xchg
imul
pushf
data16
loopne
mov
jle
jl
in
insl
aaa
pusha
sti
daa
mov
xchg
sbb
xchg
dec
mov
inc
push
jae
dec
movsb
push
add
popf
addl
jge
bound
xchg
pushf
lock
mov
sbb
dec
mov
adc
ror
iret
addr16
ret
in
sub
cwtl
hlt
js
push
arpl
mov
popf
or
jb
inc
and
or
xlat
push
mov
int3
push
jo
pop
xchg
ss
fiadd
lret
sbb
push
clc
out
repnz
fs
leave
mov
jne
daa
stos
lahf
push
pop
loope
jbe
cld
add
into
orl
dec
add
or
dec
imul
dec
cmp
xchg
out
push
sbb
inc
xor
xor
add
jecxz
inc
and
icebp
jge
aas
push
sub
inc
add
ds
in
dec
mov
or
sti
mov
cmp
aas
mov
cmp
mov
movsl
into
std
sbb
lahf
jae
ficom
cmp
add
fnsave
lock
shlb
lahf
js
divl
sub
cmp
loope
push
pop
fdivrl
sbb
sbb
aas
adc
gs
popl
clc
cmp
sbb
xchg
jl
sub
xor
pop
lds
int
decl
sub
inc
arpl
lahf
jp
mov
mov
sbb
daa
sahf
lea
mov
sbbb
xchg
mov
adc
mov
pop
xor
xchg
xchg
ss
cs
jo
out
negl
bswap
dec
icebp
xor
cmpsb
cli
and
clc
sub
jne
and
icebp
sub
aam
jmp
and
loop
inc
scas
stc
out
aaa
adc
addl
outsw
fisttpl
mov
cmp
out
imul
rolb
in
xchg
push
outsb
sti
in
pop
dec
fsubrs
lock
loopne
mov
pop
mov
les
mov
repz
pushf
dec
xchg
loope
jb
adc
cmp
xlat
sbb
sub
pop
and
xchg
into
jmp
fsubr
cs
std
xor
jb
xchg
nop
mov
mov
flds
pushl
in
jl
mov
and
lea
js
loop
int3
pop
xor
movsb
dec
dec
mov
fldt
movsl
pop
pop
mov
sbb
aas
daa
adc
xor
cwtl
push
and
imul
ret
and
std
mov
in
mov
fwait
lea
sub
stos
cld
jecxz
adc
lock
or
cmp
fcomip
loop
rcrl
mov
xor
add
ret
int3
fistl
ds
add
ljmp
dec
dec
and
out
mov
mov
xor
ljmp
sahf
lret
rclb
shrl
and
add
js
push
xor
sbb
xchg
dec
out
cmp
insb
scas
xor
sub
xchg
lods
loopne
xabort
out
dec
pop
dec
xchg
sub
push
push
and
aaa
add
mov
cltd
mov
sbb
mov
call
add
int3
mov
xchg
sbb
dec
dec
ror
cmp
or
ss
push
pop
adc
test
stos
mov
out
dec
sbb
mov
adc
out
imul
mov
xchg
inc
mov
dec
aas
pop
ja
inc
enter
out
inc
repnz
fs
lods
xor
pop
jne
sub
out
stos
mov
bound
cmc
ret
xchg
loop
adc
mov
dec
sub
fs
addr16
movsb
aam
cld
mov
clc
insb
dec
add
fmull
in
xor
pusha
xchg
xchg
push
call
inc
adc
inc
sub
jae
jns
push
ret
outsb
das
popf
test
test
mov
repnz
and
pop
xor
inc
pop
add
adc
notb
iret
cs
inc
ret
pusha
pop
bound
hlt
ret
ret
sbb
or
adc
push
mov
xor
int3
inc
repz
ret
inc
jns
daa
pop
test
pushf
adc
rcl
jp
div
in
out
insl
mov
movsb
mov
movsb
push
lods
mov
jbe
cmp
sahf
sbb
aam
or
lret
clc
xchg
loope
jns
add
sbb
cld
xor
xor
lea
ret
and
int
push
cmc
int3
pop
inc
xchg
or
in
xor
sub
jne
daa
cli
movsb
mov
jmp
and
sub
fs
cmp
repnz
aad
xchg
and
jbe
xchg
fdivrl
push
shr
test
mov
inc
xor
adc
xchg
js
jns
pop
insb
lcall
push
xchg
sbb
rorb
sahf
sub
mov
adc
inc
or
clc
jg
sbb
fs
mull
cs
inc
push
ljmp
sub
sbb
pop
bound
lcall
scas
mov
lods
mov
out
out
sahf
xor
test
sub
outsb
mov
sub
movsl
mov
fs
arpl
loope
mov
mov
inc
cmp
sub
fisttpl
lret
test
movsb
test
into
aam
cli
cmc
cwtl
in
xor
outsl
sbb
mov
add
out
stc
sahf
iret
rcll
fwait
ss
rcl
repnz
or
push
fnstcw
mov
in
add
ja
insb
jae
negl
jno
cli
mov
adc
mov
or
cs
fdivp
adc
gs
movsb
inc
mov
cmp
loope
xlat
pop
hlt
mov
mov
fwait
loopne
xor
shrl
stc
xor
aad
push
mov
xchg
and
dec
fmulp
leave
inc
fstl
fnstcw
enter
adc
xchg
and
lret
lea
xor
or
popa
sti
pop
in
gs
imul
ss
fistpl
push
jns
mov
inc
fist
aas
xchg
dec
jb
inc
ret
pop
mov
rcll
mulb
std
dec
jno
cwtl
jp
movsb
mov
lods
pop
mov
outsb
rolb
push
pop
pop
mov
mov
pop
stos
mov
mov
sbb
mov
pop
mov
in
mov
pop
pop
or
es
les
jmp
mov
mov
mov
add
mov
push
fldenv
pop
lock
stos
in
mov
push
sbb
sbb
jne
adc
pushl
cmc
mov
fdivr
sbb
push
ljmp
pop
pop
cmp
sbb
out
mov
xchg
xchg
stos
inc
ljmp
sahf
das
add
sbb
cltd
jmp
aas
xor
into
mov
xchg
ja
dec
mov
dec
test
icebp
lods
xchg
cs
shll
lahf
or
sbb
fwait
push
nop
mov
add
roll
addr16
lea
push
xor
cmp
in
ret
or
xor
or
inc
dec
mov
mov
mov
pop
mov
pop
mov
jne
ss
mov
imul
bound
jns
push
dec
xchg
lods
movl
sub
pop
jae
addr16
cmp
mov
js
insb
mov
in
hlt
cmc
jle
pop
cld
in
pop
dec
pusha
xor
movsl
fisttp
jo
jmp
xor
sbb
out
push
xchg
mov
push
sti
jbe
stos
pop
adc
les
imul
lods
push
fnstsw
js
lock
ret
mov
cltd
mov
hlt
push
repnz
arpl
repnz
inc
dec
adc
or
movb
and
adc
int3
sub
pop
repnz
adc
lret
lds
jp
in
out
pop
mov
inc
stos
mov
movsb
cmp
leave
jbe
repnz
jge
fisttpll
aaa
lret
sub
add
dec
js
pop
sti
sub
xor
call
push
aam
push
scas
jbe
dec
push
dec
push
shlb
cmpsb
xor
dec
in
sbb
enter
daa
stc
sbb
cmp
fidivl
sub
adc
ds
jo
fcompl
int
mov
cwtl
push
xchg
into
xchg
test
xchg
inc
fidiv
mov
dec
push
jns
pop
stc
xor
pop
stos
test
push
popf
out
loope
xor
sub
in
adc
sbb
sub
or
sbb
cmp
push
in
cmpsl
xor
mov
das
out
pop
loope
ljmp
mov
mov
jns
sbb
push
sahf
rcll
sbb
push
movsl
jg
or
mov
lahf
fs
insl
mov
xor
pop
cmp
out
pop
negl
addl
push
push
mov
mov
outsl
cmc
pop
and
outsl
stc
outsl
xchg
pushf
js
push
jle
adc
or
add
movsb
data16
jns
repnz
mov
cli
xor
fcoms
fidiv
addb
imul
sti
dec
mov
gs
jne
loopne
cltd
mov
sbb
imul
jns
repz
repz
addr16
pop
sbb
data16
xlat
lcall
mov
fdivl
pop
jmp
fadds
pop
pop
or
nop
jb
lahf
dec
cmp
sahf
dec
fnstenv
xchg
mov
repnz
xorl
jne
pop
xchg
push
sub
inc
mov
mov
mov
pop
sbb
pop
inc
addr16
inc
cli
nop
lret
aas
adc
dec
fidivrl
mov
mov
xchg
cwtl
xor
inc
loop
int3
jge
sbbl
test
mov
mov
lock
jno
das
xchg
push
mov
mov
mov
ret
ljmp
insl
or
cmpsb
dec
jnp
dec
cmpsl
clc
and
xchg
jg
lods
es
xchg
mov
js
adc
inc
and
pop
rcrl
std
push
outsl
sub
mov
jne
jne
popf
push
mov
hlt
lock
push
adc
lret
ljmp
or
mov
movsb
dec
out
adc
daa
xchg
repnz
es
or
mov
add
add
out
lds
out
mov
dec
icebp
les
test
shrb
pop
out
sbb
jp
jl
rcrb
fimul
jmp
sub
ljmp
lds
pusha
jmp
or
or
xchg
push
xchg
mov
ss
mov
rclb
ja
jne,pn
test
test
jbe
mov
sub
sbb
out
push
repnz
jns
push
push
xchg
js
push
subl
cmp
pop
addr16
pop
push
xor
and
jmp
push
and
jnp
shrl
mov
jmp
inc
fildll
sti
mov
cs
inc
aas
jle
jae
cltd
xor
dec
jo
popf
imulb
adcb
ret
stos
iret
jecxz
and
sub
sbb
dec
imul
sub
fnop
adc
mov
in
cmp
jns
or
hlt
pop
je
arpl
cmpb
imul
inc
mov
or
int3
push
jne
pop
and
sub
rolb
sarl
xchg
sbb
leave
adc
sub
push
dec
and
jbe
sbb
xchg
or
aaa
mov
bound
call
cmp
dec
dec
xchg
push
ret
xor
inc
fnstsw
in
sahf
cmp
jl
push
mov
faddl
hlt
xor
pushl
enter
daa
clc
adc
cmp
sub
pop
pusha
sub
fwait
sarl
jns
or
daa
and
pop
out
addr16
test
mov
mov
mov
and
bound
cmp
push
pop
fsub
add
sub
mov
call
sbb
xchg
xor
and
das
push
mov
sbb
rcr
and
push
lock
int
movsb
dec
sub
fistpl
lcall
mov
sbb
push
sahf
jbe
cmpsb
test
fistpll
dec
into
mov
icebp
pop
mov
shll
cmp
cmp
mov
jl
lret
or
imul
cli
sbb
into
lcall
xor
movsb
lods
outsl
fcomps
ss
xchg
jnp
or
mov
fmulp
popa
add
pop
in
data16
iret
mov
xlat
mov
cmpsb
cli
jnp
lret
jnp
in
inc
std
sti
cli
lret
add
mov
ljmp
stos
and
mov
dec
imul
pop
mov
mov
out
sub
inc
cmp
les
mov
mov
pushf
xchg
sub
mov
lea
nop
dec
add
dec
pushf
popa
cmp
add
pushf
fldpi
push
push
je
adc
jecxz
inc
cltd
rolb
lea
sarl
pop
loopne
pop
dec
lock
lcall
fstpt
test
inc
out
mov
inc
adc
xchg
mov
dec
push
leave
dec
and
in
icebp
repnz
imul
sbb
std
xchg
jbe
cwtl
lock
push
imul
xor
pop
sub
cmp
fcomip
mov
leave
stos
lock
das
jo
cmp
mov
jo
js
jns
cs
lcall
xchg
lret
and
mov
insb
mov
cmc
mov
fwait
or
xchg
loopne
add
rolb
loope
daa
aad
mov
pop
adc
push
clc
popl
cmp
or
lds
popa
or
mov
stos
xchg
imul
ja
xor
cmp
mov
push
xor
fcompl
xor
bt
mov
pop
jl
test
dec
cli
xchg
adc
ror
js
or
pop
dec
fwait
fs
test
dec
xor
add
cld
add
dec
nop
pop
xor
jge
in
imul
xchg
leave
mov
mov
mov
jg
fidivl
push
dec
pushf
in
inc
mov
test
mov
icebp
cwtl
dec
or
sbb
js
mov
sbb
bound
or
idivl
xchg
inc
dec
inc
cmpl
out
sub
push
out
cli
addr16
in
push
jp
data16
mov
jecxz
insb
mov
xor
or
in
ficompl
ffreep
fwait
jns
gs
fiadd
sub
xor
or
imul
dec
jae
jns
xor
repnz
sahf
sbb
sub
outsl
ja
scas
jo
lods
push
imul
mov
mov
ret
sahf
pop
pop
cwtl
or
movsb
dec
in
aaa
push
push
inc
push
mov
xor
fs
pop
addr16
fisubl
mov
int3
add
push
pop
adc
adc
shlb
test
out
push
leave
mov
movsb
push
add
push
lcall
jge
stos
sbb
enter
rorl
mov
cltd
add
dec
cmc
jae
push
movsl
stc
out
pop
mov
scas
pop
scas
das
and
and
mov
lahf
push
push
push
and
dec
shlb
out
mov
jae
loop
out
cmp
stos
fs
hlt
cmpl
dec
adc
sub
int
and
int3
js
out
movsl
adc
test
lods
scas
insb
xor
jno
fcompl
js
js
pop
sub
mov
loope
jecxz
fsubl
sbb
mov
outsb
test
dec
sbb
shr
jge
sbbl
sbb
mov
and
das
push
repz
sub
cmc
pop
fistp
lcall
fimul
mov
or
mov
lds
xchg
xor
pop
mov
insb
fs
push
adc
mov
ss
or
pop
xchg
negl
cli
popf
lret
mov
add
cmpl
inc
add
in
test
outsl
mov
stos
loop
ret
daa
stc
ret
xlat
adc
loopne
add
or
lods
rorb
rorb
xor
lret
sar
scas
mov
in
inc
xchg
jo
test
dec
mov
or
mov
pop
push
rorb
lods
imul
mov
repz
xor
mov
jg
fmull
xlat
sbb
dec
sub
push
ja
jge
sbb
xor
jmp
jecxz
and
ds
sub
inc
inc
push
sarl
je
adc
mov
rorl
aaa
lea
sub
fmulp
ds
std
inc
jl
icebp
jp
dec
mull
std
inc
pop
bound
faddl
loope
inc
xor
fwait
aas
mov
call
push
and
imul
imulb
iret
pop
cwtl
stos
mov
mov
inc
mov
fidivl
cld
cwtl
or
lods
insb
jb
xchg
adc
mov
movsb
das
dec
enter
fildll
adc
rcl
mov
ret
or
mov
insl
fidivrl
pusha
dec
jno
shlb
sbb
push
icebp
inc
and
push
les
mov
cmp
jecxz
pop
ljmp
in
sub
add
mov
test
fstpl
clc
clc
lret
xchg
dec
adc
cmp
in
cmp
les
jmp
cmp
push
mov
push
movl
nop
push
fwait
xor
adc
mov
hlt
mov
dec
mov
push
add
sbb
adc
adc
push
mov
fwait
xchg
mov
push
jmp
cwtl
add
pop
lock
push
xor
push
add
xchg
pmulhuw
mov
loope
push
stos
xor
cmp
pushf
dec
dec
inc
jno
cmp
je
push
sbb
jne
scas
out
mov
lea
es
add
inc
jns
push
mov
or
push
out
xor
or
clc
addr16
or
jp
pop
add
imul
leave
jnp
fcmovne
jle
dec
adc
pusha
add
push
and
into
jmp
push
in
jae
enter
inc
sub
mov
mov
movsb
pop
and
xchg
cmp
mov
imul
scas
rcl
gs
mov
pop
adc
fcmovnu
ret
xchg
pop
ds
stc
hlt
out
je
arpl
out
push
ds
or
aaa
push
inc
sahf
pop
cmp
push
mov
xchg
pushf
inc
push
int3
in
inc
push
pop
jg
popa
fidiv
ds
mov
cmp
push
push
jmp
lret
adc
mov
or
iret
or
iret
jl
mov
push
mov
xor
stc
mov
shlb
cmp
pop
push
and
add
in
mov
int
lret
enter
daa
notb
jg
das
and
xor
or
or
mov
movsl
icebp
sti
sbb
leave
aas
cs
push
icebp
adc
test
mov
icebp
sbb
lahf
pop
push
pop
outsb
sbb
push
sub
push
negl
fcoml
arpl
sub
outsb
or
push
adc
lods
push
rorb
mov
sbb
mov
mov
dec
repnz
sub
in
mov
lcall
mov
sbb
jbe
test
lea
mov
mov
fs
adc
adc
pop
aaa
mov
not
sti
cmp
or
and
or
in
xor
das
xorl
loopne
xchg
jg
loop
and
or
je
fiadd
adc
mov
lods
cmpsl
lret
lock
movsb
cli
loope
les
add
mov
sti
pop
xchg
in
clc
or
adc
loopne
pop
push
pop
jbe
jo
and
add
pop
adc
xchg
mov
or
pop
inc
cmp
push
movsl
dec
sub
outsl
mov
cmpsl
jmp
movhps
test
out
nop
add
xor
pop
push
pop
inc
sub
push
je
imul
in
stc
loopne
hlt
loope
pop
inc
pop
pop
mov
adc
jg
loop
in
fistl
jle
pop
add
je
inc
dec
xchg
aas
inc
lods
arpl
and
push
rcll
ds
cwtl
data16
mov
and
mov
mov
cld
mov
xor
mov
iret
mov
imul
das
jge,pn
mov
enter
push
mov
ret
xchg
jbe
es
in
rcrl
insb
cltd
adc
dec
mov
lret
lods
addr16
pop
mov
jne
mov
pop
push
js
jbe
jns
mulb
sti
mov
lock
push
add
jno
xorl
mov
ljmp
icebp
pop
call
loope
out
cmp
test
push
lcall
add
jmp
jg
enter
jno
jb
mull
lret
xchg
jno
xor
cmp
sbb
stos
mov
cmp
mov
push
add
xor
into
decl
sub
xor
or
fcoms
popa
adc
mov
cmc
sbbb
popa
pop
inc
in
dec
mov
xlat
cwtl
dec
sarb
mov
push
or
add
dec
pusha
jns
sub
scas
sbbl
out
cltd
les
dec
mov
cmpsb
jp
or
mov
fucomip
insb
imull
mov
pop
jle
xchg
pusha
popf
mov
fild
aam
jmp
pusha
adc
push
xchg
fsubr
popf
imul
push
imull
es
sub
sbb
pop
test
dec
iret
xor
stc
cmp
jno
ss
or
push
ret
es
jne
push
hlt
cmp
sti
arpl
gs
pop
xor
or
mov
sbb
dec
and
or
outsl
xchg
repz
inc
int3
xlat
in
aas
pop
scas
pop
lret
ficom
nop
lds
test
mov
lea
aad
imul
mov
aas
gs
stos
enter
inc
or
push
or
mov
push
imul
ljmp
scas
sbb
cwtl
push
cmp
mov
inc
pop
rclb
inc
or
cmpsb
enter
daa
cmc
adc
jmp
sub
and
cmp
adc
fs
mov
push
loopne
push
test
ret
data16
lret
bound
push
js
mov
pop
cmpsl
rcll
inc
and
inc
sub
mov
outsl
and
imul
popl
addb
mov
cmc
and
push
push
stc
cmp
sub
push
pop
fldl
lds
into
js
mov
dec
sbb
push
mov
inc
cmp
push
jg
xor
mov
movsb
sub
clc
or
fs
mov
adc
add
mov
rcrb
enter
dec
lret
inc
xor
cmp
mov
or
sbb
mov
jnp
lret
and
outsl
jne
scas
loop
mov
mov
add
fsubrs
mov
outsb
mov
push
out
adc
adc
xor
fdiv
mov
pop
lods
pop
sti
pop
and
sbb
cmp
push
ja
xchg
fmul
adc
cli
aam
addps
les
inc
repz
iret
fcomps
push
rcr
xlat
xchg
fstpt
sub
sub
aaa
pushf
mov
pop
jmp
cld
cs
int
nop
fsubp
popf
dec
mov
xlat
and
je
adc
jecxz
push
scas
lea
call
fdivl
or
adc
mov
fildl
aad
test
fildl
insb
in
inc
push
mov
loope
add
dec
mov
or
pusha
cli
rcr
ja
divb
sub
cwtl
and
test
xorl
mov
mov
add
das
or
jo
mov
roll
ret
es
test
add
mov
addr16
cmpsl
hlt
imul
icebp
icebp
push
imul
add
jl
andl
dec
push
int
in
icebp
fldl
mov
dec
pop
les
push
fs
popa
push
lods
push
pop
xchg
add
stos
pusha
ret
mov
mov
add
jno
scas
add
xchg
cltd
lcall
sbbb
cli
xor
dec
cli
cmp
sbb
push
sbb
daa
rcl
cli
push
or
out
cmp
push
xor
pop
add
dec
add
ljmp
test
or
leave
xchg
xchg
push
arpl
push
sub
ja
xor
fildl
mov
mov
inc
xchg
loop
mov
add
mov
mov
out
in
push
jns
mov
inc
sub
fsubp
ret
sub
inc
decl
push
fcoms
cs
enter
cmpl
and
mov
in
add
or
and
icebp
xchg
fisubr
movsl
jmp
imul
push
push
jecxz
popf
xchg
stos
sub
ss
stos
fwait
xor
lods
sbb
lods
xchg
imul
scas
cltd
enter
das
aad
dec
dec
mov
ret
jge
lods
jnp
hlt
test
ret
pusha
ret
sahf
into
or
sub
add
fidivrl
pop
int3
ret
pop
and
sub
hlt
mov
loopne
cmpsl
leave
icebp
xchg
jle
hlt
jb
push
xchg
int
pop
rclb
jg
daa
aaa
xchg
add
xchg
aam
inc
cmp
nop
xor
scas
out
push
cld
rcll
xor
xor
dec
inc
out
notb
cmpsb
ret
lds
fwait
cld
mov
fs
dec
cmp
or
jno
jne
sub
stc
sub
ds
xchg
or
and
enter
dec
push
mov
add
into
inc
repz
cmp
pop
mov
stos
stc
pop
out
outsb
push
in
loope
jl
fsubrl
sub
pop
pop
jl
rclb
fcoms
bound
mov
xchg
lcall
and
add
int
mov
mov
lcall
aam
popf
loopne
sbb
jbe
sahf
add
or
fidivl
xorl
negl
adc
leave
daa
cmp
int3
and
push
mov
lret
xchg
movl
push
into
es
cmc
inc
sub
sub
repz
je
add
call
sbb
xor
loopne
jne
mov
out
std
clc
cli
inc
fwait
sub
mov
pop
in
ja
sti
mov
mov
ds
and
mov
lock
adc
outsl
imul
sbb
repz
inc
jne
ss
sbb
lock
aad
adc
push
stos
fsubs
xor
sbb
dec
jle
aad
stos
mov
mov
mov
rcr
fstpt
push
inc
jecxz
test
fcompl
lea
push
pop
pop
mov
pop
push
ja
adc
int
dec
mov
lret
dec
fs
inc
cmpl
adc
pop
mov
and
fiaddl
div
xor
std
xor
xchg
cwtl
fsubr
mov
mov
dec
fcoml
adc
lret
stc
add
mov
lock
pop
add
in
repnz
mov
ss
stos
int3
ret
mov
popf
test
mov
jmp
cmpsl
repz
mov
enter
cmp
cmc
movsb
mov
addl
dec
sbb
pop
pop
push
loopne
sbb
sbb
in
or
xchg
repnz
xchg
jns
iret
shrl
clc
jnp
inc
xchg
add
int
popa
push
jns
stos
dec
addr16
out
add
in
xchg
push
xor
push
push
cmpsb
xor
rclb
out
xor
dec
jp
imul
std
mov
dec
hlt
inc
sbb
fwait
jge
sbb
dec
popf
shrl
outsb
or
enter
imul
aam
loope
mov
dec
incl
pop
xor
in
cmpsb
or
scas
push
in
lods
lret
xchg
loop
lods
mov
aas
pop
mov
imul
ja
andl
adc
cld
mov
mov
add
jne
stos
fidivl
ret
xchg
or
fdivrl
jns
repnz
xchg
outsl
inc
dec
cmpl
out
les
or
test
test
jnp
mov
imul
push
movsb
lds
aad
in
xchg
pusha
rorl
inc
fmul
xchg
mov
pop
jmp
jbe
loopne
push
push
movsl
push
sbb
popf
mov
ja
push
jne
lret
stos
push
mov
and
pop
sbb
xlat
icebp
imul
daa
scas
cld
mov
push
xchg
dec
adc
sbb
dec
ret
lret
pop
jecxz
jmp
arpl
in
inc
pop
jl
or
test
push
inc
sbb
fisubrl
outsl
xchg
mov
mov
pop
or
mov
pushf
jb
lds
sbb
mov
mov
xor
leave
push
xchg
jnp
jecxz
jbe
mov
jge
dec
cmp
cmp
aaa
inc
stc
popa
or
pushf
mov
mov
push
xor
xor
or
ds
lds
push
sahf
adc
popa
shlb
cltd
cmc
enter
daa
rep
jo
dec
dec
sub
push
jae
jae
daa
cmp
aas
das
ds
fidiv
lahf
imul
push
xchg
test
fldcw
xor
mov
call
pop
loopne
sbb
xchg
pop
and
movsl
std
loope
mov
adc
scas
outsb
xor
xchg
sub
cmp
insb
jge
lock
cmp
mov
mov
and
cmp
shrl
loopnew
pop
fstpt
push
push
mov
mov
xchg
popa
sahf
movsl
jo
test
cmp
jg
fcmovnb
mov
je
mov
or
ljmp
push
into
cmp
dec
or
xchg
lret
mov
pop
pop
xchg
cmp
xchg
int3
or
xchg
out
into
or
gs
test
loop
xor
lahf
or
aad
mov
xchg
lods
pop
or
mov
imul
or
xor
adc
cmp
gs
lret
loopne
sub
rorl
add
imul
lahf
loop
mov
int3
jae
dec
cmp
enter
adc
mov
mov
fidivr
jmp
sub
pusha
jmp
stos
jmp
nop
xchg
mov
ja
int
bound
scas
je
pop
out
cli
sub
fbstp
insl
call
fidivl
adc
nop
dec
mov
xchg
js
out
mov
int3
inc
pushf
das
adc
pop
push
jb
in
jmp
and
cmpsl
stos
sarl
sbb
cmp
push
fstps
ficomp
and
sbb
jle
and
cmp
xor
push
pop
mov
mov
xchg
lret
mov
mov
in
adc
sub
inc
rcrb
or
insl
jbe
sbb
repnz
cmpsl
repnz
in
icebp
lahf
adc
lods
test
or
dec
mov
adc
out
ljmp
mov
test
es
iret
mov
jbe
clc
mov
loope
inc
js
ljmp
pop
jmp
rcr
out
cmpsw
sub
sub
icebp
comiss
xchg
xor
scas
aam
sahf
shl
add
jl
movsb
aas
flds
pop
add
add
mov
dec
call
adc
subl
out
jae
push
mov
or
push
xchg
xor
in
sub
mov
es
dec
pop
popa
std
inc
stos
mov
mov
and
out
jnp
cld
jne
jno
mov
sub
bound
xchg
jns
lret
cwtl
xchg
cmp
xchg
enter
rorb
addr16
mov
jp
inc
fidivl
mov
sbb
jle
ljmp
outsb
dec
bound
xchg
test
test
jo
and
push
fistl
loopne
mov
mov
fldcw
adc
imul
push
scas
pop
lea
adc
add
mov
jmp
inc
pop
sbb
daa
hlt
sbb
arpl
into
pop
or
and
pop
inc
lcall
xchg
clc
lock
int3
cwtl
ficompl
cmp
fidivr
inc
xchg
mov
mov
xchg
push
leave
fist
inc
movsb
or
stos
push
and
xchg
sub
lods
mov
adc
add
out
js
xor
jl
scas
sbb
mov
adc
ret
add
outsl
fisubr
push
sub
cmp
adc
xor
adc
leave
xchg
shr
imul
inc
daa
repnz
pop
jno
pop
cmpsb
sub
pop
cmpsl
cmp
in
faddl
movsl
or
ss
mov
push
pop
mov
mov
xor
vmovq
pop
js,pt
pop
and
push
popf
inc
loope
xchg
or
mov
cmp
shl
adc
sbb
pop
data16
nop
sub
sbb
outsl
mov
and
in
stc
int
clc
popa
sub
add
pop
fimul
push
scas
pop
xlat
mov
sub
addr16
sahf
dec
add
test
jo
adcb
push
jg
aaa
aad
sti
sub
pop
xchg
or
popf
daa
ss
push
xchg
cmp
add
int3
not
sub
cmc
sub
cmp
mov
dec
into
in
adc
cmc
sarb
movq
ja
loop
mov
stc
push
xor
lret
add
call
lods
inc
xchg
out
pop
and
lods
sub
popa
mov
in
pop
mov
adc
sar
test
xor
cmp
mov
imul
jbe
repz
adcl
add
cmpsl
xlat
push
xchg
daa
sub
mov
or
addr16
adc
test
nop
outsl
andb
jg
inc
jne
or
xor
add
loop
mov
call
pop
xor
pop
jl
jo
movsb
push
xlat
dec
mov
fcmovnbe
imul
stos
jno
mov
dec
aas
mov
mov
dec
sbb
and
leave
adc
int3
call
ds
and
cwtl
push
dec
call
mov
test
jnp
mov
lret
xlat
ljmp
mov
pushf
mov
stos
js
mov
movsb
imul
ret
shll
jmp
insl
pop
nop
rorb
cli
cmpsl
icebp
push
stos
mov
jbe
push
lods
adc
push
mov
insl
mov
xchg
andb
lcall
sub
cmpsl
leave
test
stos
mov
dec
xchg
push
or
add
sbb
ljmp
xlat
pop
xchg
fidivr
stos
sub
jp
xchg
jecxz
cmp
and
mov
add
inc
dec
xor
push
push
xchg
adc
dec
ret
test
sub
jne
mov
or
mull
fwait
jle
xchg
push
sbb
add
xchg
or
mov
les
insl
cmp
mov
loope
inc
ja
movsl
mov
leave
std
inc
inc
push
mov
xchg
push
jp
pop
int3
out
jne
pushf
pop
mov
add
out
sbbl
sbb
xor
xchg
add
pop
push
out
mov
or
inc
mov
jp
mov
mov
jnp
push
cmpsl
jle
repz
xor
fild
ja
jmp
mov
mov
in
push
sahf
mov
ds
repz
and
sbb
cmpsb
into
imul
xchg
scas
ret
push
adc
add
iret
test
or
push
and
data16
arpl
xchg
sbb
sahf
cmpsl
aaa
inc
sbb
fcmovbe
mov
cmc
int3
adc
pop
push
push
fsubp
or
rol
pop
mov
fxam
jl
push
les
movsb
xchg
fnstenv
je
cmc
jbe
in
cmpsl
jge
loop
sbb
pop
test
imul
add
push
jl
jnp
dec
ds
push
testl
jo
dec
scas
cltd
sbb
and
ret
add
pop
inc
fwait
add
in
push
jg
enter
daa
icebp
push
ljmp
test
sub
jno
cmp
aas
decl
hlt
and
lods
cmc
lahf
test
cmp
and
xor
fs
outsb
out
pop
xor
inc
js
adc
mov
dec
in
mov
mov
adc
lahf
fsts
repz
mov
mov
aas
dec
cmp
pop
fs
add
stc
sbb
pop
mov
xor
push
add
test
sbb
test
pop
lahf
add
aad
movsl
mov
adc
or
adcb
mov
pinsrw
mov
lret
jle
mov
cmp
sarb
iret
cmpb
cli
xor
push
outsl
icebp
ds
loop
sbb
adc
inc
adc
fbld
outsl
lods
sub
add
rcl
inc
cli
loopne
xor
cmp
in
ret
into
mov
ret
stc
pop
cmpsl
adc
gs
repnz
dec
dec
pop
adc
adc
test
inc
sub
xchg
mov
adcl
movb
scas
push
jne
pop
js
pushf
xor
and
andb
je
movsl
aad
lcall
xor
dec
repnz
je
sti
sub
in
clc
out
jne
call
fdivrs
push
pop
das
cld
adc
fs
dec
jns
fildl
jnp
pop
xor
cmpsl
inc
lahf
xor
rcrb
aas
pop
cmpsl
sbb
test
dec
xchg
sti
arpl
jo,pt
sbb
idivb
xchg
inc
cwtl
or
mov
adcl
jno
lret
inc
sub
call
into
push
lock
test
das
mov
mov
pop
popa
fwait
aam
xchg
cmpsl
ret
bound
pop
insl
inc
out
dec
push
mov
cmp
dec
data16
jle
and
nop
dec
in
and
sbb
mov
rclb
cmpl
mov
or
push
rclb
clc
sub
dec
xchg
ret
ljmp
out
pop
aas
iret
pop
stos
sbb
inc
out
sub
cmpsl
xchg
sub
clc
push
loope
ret
inc
fiadd
lods
lret
fidivl
xor
jbe
mov
push
in
dec
dec
sub
test
scas
adc
sbb
inc
sbb
test
dec
clc
fwait
lods
test
mov
cld
add
mov
push
lea
nop
mov
in
xchg
sbb
mov
mov
pop
pushf
ss
jl
dec
inc
in
inc
fadds
mov
add
lods
dec
inc
xor
jnp
jg
movsb
icebp
movsb
out
pusha
in
bound
push
jns
push
andl
inc
out
push
sub
xor
loope
push
mov
adc
insb
jns
insl
jnp
push
jle
lock
in
popa
push
pusha
movsb
test
mov
mov
push
inc
xchg
not
jae
mov
push
popa
xchg
lcall
pop
sub
push
xor
and
xchg
sub
imul
mov
pop
notl
mov
sbb
pop
pop
mov
cmp
mov
jne
mov
into
mov
push
cwtl
push
sahf
fimull
popf
or
pop
cltd
out
pop
fiadd
mov
or
sub
and
int
movsb
and
xchg
push
ret
xchg
loope
xchg
jge
add
sbb
aaa
push
xchg
or
cmp
ficom
push
dec
mov
movsb
xor
sbb
scas
js
sahf
and
cmp
or
inc
sub
test
in
aaa
enter
sub
lock
cmp
inc
out
cmp
out
sub
xchg
idivl
daa
jg
ds
clc
movsl
sbb
imul
push
push
sub
cli
lock
xor
pop
pop
stc
pop
js
pop
sti
pop
loop
mov
loope
inc
xchg
fcoml
icebp
sub
and
popa
mov
into
loop
ror
push
out
sbb
sahf
mov
xor
mov
pop
imul
sahf
inc
push
or
jno
fadds
sub
lcall
sub
jp
sahf
mov
mov
addb
jg
cli
and
mov
arpl
adc
outsl
aaa
ss
stos
cmp
jns
clc
notl
push
mov
fdivp
cmp
xchg
mov
into
mov
sbb
pop
fdivr
xor
das
or
or
loop
mov
stc
les
adc
test
jbe
adc
adc
push
mov
int
cli
adc
movsl
in
cs
lret
mov
gs
incl
pop
xor
adc
push
imul
and
repz
xchg
inc
scas
movsl
sbb
jns
cmpsb
xlat
shll
iret
mov
fucomip
inc
jmp
sub
xlat
mov
sbb
xchg
push
addr16
fwait
outsl
sti
fldenv
inc
xor
daa
push
cwtl
call
aam
call
push
negb
cmp
arpl
data16
xchg
cmp
pushf
inc
es
push
inc
in
mov
aas
cld
dec
xor
shll
or
jae
push
test
std
into
sub
cwtl
enter
popa
lds
subl
fild
lret
push
mov
lock
push
imul
icebp
lea
xchg
jg
insl
sub
insl
dec
dec
jg
cmpsl
out
mov
icebp
and
xchg
lods
jmp
lahf
xchg
mov
lahf
mov
pop
fcomps
mov
test
mov
xchg
inc
or
clc
addr16
xchg
add
ljmp
mov
ljmp
std
inc
xchg
jno
add
test
push
add
aaa
cmpsb
cltd
adc
mov
dec
mov
or
pop
dec
nop
inc
sbb
xchg
adc
out
leave
xchg
roll
ja
fdiv
jne
pusha
push
xchg
add
aam
ret
dec
and
dec
xchg
push
or
and
xchg
push
xchg
mov
or
mov
push
jge
ja
fsubrs
xor
int
outsl
inc
cmpl
mov
mov
repnz
bound
jae
jns
sub
sbb
out
mov
sub
sub
pop
lret
shrb
jp
lcall
adc
loope
in
jb
pusha
aas
mov
jb
std
add
inc
mov
int
push
and
cwtl
popf
push
notb
push
jno
sub
fisub
stos
insl
xor
imull
mov
xor
iret
inc
mov
pop
mov
int3
ja
scas
jb
inc
push
and
xchg
or
pop
pop
cmp
lcall
cmp
pop
enter
sub
lds
push
sar
jae
lret
mov
jae
inc
pop
cltd
movsb
stos
insb
test
jbe
repz
sbb
xchg
aaa
inc
aam
or
imul
fdivrp
jl
nop
decl
imul
push
mov
cli
xchg
jo
inc
scas
push
mov
and
nop
ljmp
sub
cmpsb
push
sub
in
push
cmc
cmp
dec
mov
mov
sbb
jno
inc
in
pop
nop
sub
jno
ds
hlt
pusha
movsl
and
frstor
push
cltd
repnz
out
mov
shl
test
add
insl
xchg
hlt
dec
jmp
js
cmp
push
mov
jl
mov
cmpsl
pop
outsb
rcll
adc
test
sub
lods
jmp
mov
push
or
shrl
push
out
pop
xlat
pop
push
lcall
stos
mov
jb
hlt
movsl
jns
xor
test
mov
jg
bound
hlt
test
mov
push
fs
jle
adc
sbb
xchg
add
cmp
xor
div
adc
lret
sub
mov
ds
mov
cmc
and
cmp
outsl
scas
fimull
loop
adc
jnp
adc
pop
cli
add
hlt
pop
xchg
and
test
into
dec
cmp
inc
lds
in
cltd
xlat
int3
sti
and
in
cmc
pop
gs
subb
or
and
xchg
mov
out
and
fsts
xchg
les
mov
xchg
add
shlb
mov
mov
sub
bound
mov
cmp
aad
fsub
nop
add
add
inc
scas
ret
push
imul
mov
in
jmp
leave
lea
sbb
int3
pop
xchg
xor
test
jp
fistpl
negl
lods
jb
lods
insl
jne
or
idivl
fwait
hlt
gs
xor
xor
and
and
xor
jne
mov
mov
test
addl
or
add
scas
out
mov
in
lock
mov
mov
xchg
fldenv
subb
insl
adc
dec
dec
mov
mov
sti
inc
adc
push
cmp
mov
cmpsb
dec
and
push
add
pop
testl
je
mov
mov
pop
push
push
push
insb
fstl
mov
and
shrb
popa
fstpt
sbb
repnz
or
xchg
pop
repz
es
fsubs
cltd
dec
mov
frstor
or
dec
dec
testl
xchg
mov
lret
stos
jne
fwait
or
pop
add
out
and
xor
push
inc
in
and
xchg
insl
add
mov
popf
dec
mov
adc
ja
mov
std
inc
push
arpl
mov
loopne
scas
dec
pop
fucompp
jne
jne
mov
or
out
push
test
popf
fidivrl
xchg
pop
call
out
sbb
xor
sub
ja
pusha
fdivl
test
popf
jnp
cwtl
adc
sbb
inc
out
pusha
fimull
sbb
aam
jg
lods
pushf
fidivl
daa
std
push
out
jle
jl
xchg
mov
mov
int3
stos
dec
enter
rcll
sbb
adc
scas
jmp
inc
push
ljmp
iret
mov
mov
mov
arpl
sahf
jae
jno
pushf
push
xchg
sub
out
outsb
pop
xchg
push
fidivl
pop
mull
loope
lock
inc
rclb
add
mov
leave
mov
xor
push
popa
inc
fs
movsb
mov
testb
add
test
inc
scas
stos
add
cmpl
dec
fdivr
add
mov
push
jo
pusha
jle
mov
mov
pop
lock
jns
in
dec
jb
cmpsb
aad
std
in
add
fldcw
sub
cmp
sub
dec
sub
pop
lahf
cmp
push
or
mov
push
movsl
add
xor
add
inc
pop
xor
dec
mov
sub
arpl
pop
pusha
inc
xor
cmp
out
adc
push
pop
sub
add
adc
test
cmp
in
divl
push
stos
int
push
mov
into
pop
mov
push
mov
push
or
pop
in
sbb
xchg
in
sahf
aam
xlat
test
sbb
jl
pop
jg
int
mov
or
mov
rcl
cmp
cmpsl
adc
rclb
fsubr
cld
and
lret
stos
rcll
cmp
mov
stos
into
js
or
in
test
mov
jecxz
xor
adc
push
mov
lods
fist
mov
dec
cli
cli
jns
fdivs
mov
lcall
adc
gs
cmpsl
mov
cmpsl
pushf
dec
pop
outsb
mov
punpckhwd
out
add
mov
mov
sub
jge
adc
repz
iret
jle
dec
dec
sub
pop
pop
mov
xor
ljmp
aad
push
mov
fisttpl
aam
push
cmp
inc
rorl
adc
divl
data16
mov
movsl
lea
push
push
gs
pop
dec
flds
dec
cmp
mov
pop
sbb
and
and
sub
cmp
add
arpl
xchg
sub
or
mov
std
sbb
jmp
mov
scas
mov
stos
addr16
adc
lret
xchg
in
mov
xchg
jle
js
es
mov
andb
aam
js
ret
ud2
daa
es
pusha
scas
insl
stc
inc
loope
inc
rcrl
xor
icebp
shr
les
or
bound
out
popf
les
push
jno
rorb
movsb
mov
test
out
push
sbb
lcall
pop
pop
xchg
jg
pop
ljmp
subps
mov
out
push
push
sub
jb
test
or
incb
out
push
xor
xchg
ja
jmp
cmp
dec
pop
mov
jmp
xchg
jbe
sbb
pop
xor
inc
lods
fwait
cmp
sbb
cmpsb
xlat
mov
add
sar
add
ret
or
xor
push
call
mov
int
jbe
das
sbb
dec
sbb
inc
popf
test
mov
dec
aam
dec
ljmp
mov
xor
bound
jbe
jns
mov
dec
adc
sbb
sub
and
lahf
addr16
pusha
inc
jp
mov
mov
outsb
sti
insb
mov
loop
jle
mov
mov
mov
xchg
mov
cli
popl
out
jae
lds
stos
fsubp
popf
mov
adc
popa
call
and
pop
rcrb
inc
imul
shrl
xor
daa
adc
jbe
add
ret
gs
sub
mov
arpl
and
inc
jo
in
fadds
push
adc
jo
xchg
stos
scas
daa
int3
das
cmc
xchg
test
mov
xor
repnz
cli
popa
movsb
rorl
mov
lods
jbe
leave
in
jge
les
pushf
sbb
or
push
and
jl
hlt
inc
dec
dec
rolb
mov
jo
scas
scas
adc
sub
es
inc
addr16
inc
xlat
je
cmpsb
pop
subl
enter
daa
in
int
cmp
mov
cmp
loopne
mov
movsl
xor
jmp
cmp
sbbl
push
in
test
sbb
xor
jp
repnz
int
jge
jnp
ret
pop
lahf
sti
test
jge
or
std
int
fcoml
and
outsb
xchg
adc
pop
mov
out
dec
xchg
sbb
sbb
mov
cli
sbb
push
adc
int
out
sub
es
aad
setp
lods
pop
push
popa
leave
xchg
dec
mov
test
lahf
adcb
sbb
mov
or
adc
sub
sbb
xlat
fsubrs
aas
or
xchg
lock
call
or
or
mov
wrmsr
jecxz
fisubrl
xchg
loop
mov
stc
jmp
hlt
add
pop
jmp
lods
movb
mov
ror
cli
lods
pop
xchg
adc
sti
jg
in
xor
add
inc
mov
pop
in
fcoml
lea
imul
xchg
sub
xchg
in
ficom
aaa
jne
cmp
sti
xchg
xlat
mov
lock
loopne
mov
cmp
test
add
push
nop
mov
fimul
mov
inc
aam
mov
dec
out
and
jecxz
flds
icebp
lret
mov
call
aam
rcrl
xor
adc
enter
sahf
fstpt
fildl
inc
ds
push
aas
fsts
jb
lea
dec
outsb
jns
and
pop
cmp
push
dec
dec
lret
inc
jo
ret
inc
jle
stc
pop
xor
xor
cmp
cmp
lea
mov
lea
das
add
aam
mov
sub
ret
sahf
scas
cmpsb
es
add
sub
dec
aas
inc
andb
sar
icebp
test
jg
mov
sbb
add
mov
pop
xor
adc
sub
mov
cmc
push
fcoml
cmp
loopne
mov
xchg
mov
pop
mov
pop
jmp
add
mov
pop
sub
incb
imul
stos
cltd
mov
push
xor
repz
mov
adc
fwait
dec
lds
scas
xchg
sbb
enter
test
fwait
imul
out
add
and
push
push
xor
or
in
add
mov
and
pop
mov
pop
ja
add
dec
or
adc
mov
push
loopne
xchg
dec
leave
mov
outsl
mov
fdivl
dec
lds
xchg
cld
adc
andl
out
mov
xor
push
out
out
addr16
test
jp
mov
mov
inc
imul
jnp
out
push
jle
insl
clc
in
std
in
adc
cmp
xchg
jbe
cmpsl
jmp
ret
xchg
sti
jae
cmpsb
stos
push
insl
mov
popf
lret
mov
cs
jo
xor
lcall
shlb
mov
ja
js
pusha
adc
inc
iret
pusha
out
test
pop
sbb
hlt
frstor
dec
arpl
loopne
inc
jae
cmpsb
or
add
pop
pop
ficoml
xchg
add
aas
pop
push
outsl
inc
ficom
inc
mov
rorb
mov
js
inc
leave
test
mov
jbe
bound
sbb
les
jle
test
sub
jl
in
dec
mov
cmp
and
shrl
and
leave
xchg
xchg
imul
inc
mov
fcmovnu
mov
rcl
dec
enter
daa
in
mov
mov
cmpsl
jno
insb
dec
sub
je
cmp
loope
ds
shll
xlat
lahf
inc
mov
push
test
es
xor
jp
cmp
pop
dec
js
dec
cmpsb
pop
fidiv
push
sub
add
ror
sub
add
ljmp
sarb
jae
cwtl
push
add
dec
sbb
cmp
inc
stc
push
adc
dec
int
pop
mov
pop
push
jnp
lcall
les
mov
ret
test
fs
xorb
mov
mov
int
fs
push
dec
adc
inc
jp
pop
lret
xor
gs
dec
imul
jg
pop
cmp
xor
mulb
into
ds
call
outsl
dec
bound
stc
mov
js
add
push
lods
lods
adc
ds
frstor
xor
adc
ficompl
dec
push
out
or
and
loopne
mov
adc
or
xchg
popf
enter
fs
mov
sbb
gs
pop
sub
frstor
pushf
mov
jmp
jecxz
arpl
aad
movsb
inc
nop
xchg
iret
aam
adc
popf
inc
out
pop
fnstcw
xor
cmp
repnz
aad
push
push
in
scas
inc
adc
or
rcrb
loope
inc
inc
mov
inc
pop
and
aas
js
add
mov
and
jbe
shll
sbb
std
push
rcrb
pop
fcoms
addl
stc
test
mov
idivl
xor
fldt
in
xchg
out
rcrl
hlt
mov
ret
sub
adc
insl
cmc
lods
dec
cmp
cmpsl
jmp
movsb
mov
subb
mov
aas
push
pop
and
and
and
push
push
dec
mov
loopne
pushf
pop
lods
test
int3
and
xchg
test
pop
jmp
clc
push
xchg
enter
sbb
popa
and
ljmp
push
out
sbb
xchg
repz
sub
mov
add
pop
cltd
in
in
mov
mov
adc
lea
add
jle
xchg
jmp
push
shl
sbb
or
addr16
fwait
cwtl
les
push
in
push
out
inc
cmp
stos
xor
rol
in
repnz
pop
in
jle
call
dec
mov
inc
pusha
mov
dec
add
jmp
mov
sub
jnp
jne
sarl
imul
out
mov
dec
fidivrl
test
xchg
lock
icebp
je
out
nop
es
sbb
addr16
je
jp
fs
cmp
nop
incl
xchg
scas
jle
cs
pop
sahf
lret
jno
fistpll
sbb
inc
jmp
into
or
push
xor
cmc
mov
insl
push
push
stos
cmpsb
and
push
ficom
loope
fsubrs
jbe
scas
adc
loop
mov
mov
iret
mov
mov
sbb
sub
js
jmp
cwtl
inc
jbe
out
cmpsb
and
cmpb
fiaddl
nop
dec
xchg
pop
ret
jno
add
stc
pop
fidiv
inc
shlb
mov
lret
pop
sbb
and
movsb
xlat
lods
push
dec
out
jbe
jo
jge
push
cmpsl
sbb
std
pop
aaa
cmp
mov
push
dec
sub
push
xor
loop
and
pop
lcall
jp
cmc
inc
mov
in
mov
mov
daa
jmp
cmp
out
hlt
jno
insl
mov
lret
mov
jno
xor
movsl
ds
sub
push
cwtl
shrl
xor
sbb
add
pop
js
jp
pop
sbb
adc
sub
aas
fsubrl
xchg
sub
je
adc
adc
or
mov
mov
pop
mov
movhps
push
pop
push
int
mov
sub
sub
pop
sarl
jmp
push
je
loopne
cmp
mov
sbb
test
enter
sub
mov
call
lahf
mov
daa
jle
and
mov
or
mov
rcll
int3
cmp
sub
into
and
cmc
inc
js
xor
inc
mov
lahf
mov
xor
add
lret
data16
adc
mov
imul
ret
inc
add
sti
fnsave
mov
loopne
sahf
adc
pop
loop
xor
mov
repz
xor
test
test
or
data16
mov
pushf
ss
aas
cs
aad
add
addr16
outsl
scas
sbb
sbb
je
mov
jecxz
fucomp
test
mov
xor
pop
popa
or
add
in
fistpl
mov
pop
push
fistl
xchg
push
inc
je
dec
aas
pop
mov
sub
and
in
cmc
out
notb
jo
adc
cwtl
outsl
rorb
sbb
dec
mov
and
sbbl
xor
cmp
daa
lock
lcall
and
es
mov
les
and
stos
dec
xor
mov
mov
push
mov
xor
iret
xchg
and
mov
push
jno
xchg
jns
mov
or
push
bound
pop
clc
mov
cmp
ljmp
mov
inc
xlat
dec
stos
mov
and
xchg
aam
mov
add
jbe
daa
setbe
pop
gs
and
push
xor
stos
dec
mov
sbb
cltd
test
fisttpl
adc
sbb
cmp
imul
mov
push
pop
jbe
dec
jae
add
lret
add
pop
or
aam
lahf
xor
xchg
test
jbe
mov
decb
mov
push
clc
inc
bound
mov
pushf
insb
jae
xchg
cltd
jne
mov
int3
out
lcall
jns
mov
jae
loopne
aad
or
mov
addr16
les
mov
push
stc
insb
sti
daa
repz
push
push
jle
jecxz
in
mov
cmpsb
fistp
rclb
fist
fnop
mov
push
repz
popf
sbb
cli
push
lods
mov
stos
sbb
jl
sbb
xchg
inc
imul
ret
pop
scas
adc
adc
iret
push
lock
andl
shrb
hlt
jae
out
cli
sub
inc
jns
or
sti
cwtl
aam
xchg
xchg
pusha
fidivrl
add
int3
lock
mov
loop
push
xor
rolb
outsl
repnz
mov
movsb
bound
push
jbe
icebp
or
mov
aaa
cld
call
or
jp
add
dec
jl
inc
jmp
push
sub
push
jo
xchg
mov
and
sahf
pop
cmp
or
push
movsl
mov
mov
and
xlat
cmp
xor
jno
xchg
pop
sub
fcomi
cmp
repnz
fisubl
or
scas
or
xchg
add
jbe
scas
sub
ret
mov
pop
inc
call
jnp
pop
xor
test
loope
lahf
jmp
sub
in
adc
lock
push
adc
sub
and
mov
mov
push
sub
adc
repz
pop
push
jp
lcall
or
stc
xchg
sahf
pusha
add
call
movsb
cld
mov
sub
mov
adc
inc
lods
ss
cmpl
push
mov
lret
dec
lret
faddp
lods
push
aad
push
clc
cmpsb
or
cmpsb
xchg
add
adc
or
nop
outsl
or
shl
xor
cmp
xlat
je
enter
and
cmp
jnp
test
leave
jge
cli
inc
and
sbb
fsubr
mov
add
mov
hlt
sub
loopne
bound
xchg
rclb
sub
imul
cs
aam
mov
cmp
hlt
mov
sub
xor
pushf
loope
lods
jmp
xlat
add
aad
lret
inc
nop
inc
fild
into
xor
fldln2
lcall
jecxz
vshufps
pop
sarb
push
xlat
iret
pop
adc
test
pop
mov
dec
out
cmp
dec
cmp
inc
push
xlat
push
inc
arpl
mov
int
dec
sbb
rcll
xchg
roll
notb
ja
sub
push
mov
stc
lds
xor
cmp
sbb
lret
dec
push
xor
cs
mov
pop
pop
mov
mov
test
mov
aaa
push
dec
xor
fdivrs
cs
imul
mov
test
ljmp
fdivl
rcrb
movsb
sub
and
push
and
pop
push
xchg
jnp
sbb
popa
dec
insb
lcall
hlt
out
loope
icebp
xchg
sbb
fiadd
in
jbe
or
pop
cltd
jge
dec
add
mov
sbb
dec
test
push
jae
and
add
or
xlat
jno
test
push
xor
sub
rorb
je
jbe
pop
jge
mov
or
add
in
lret
fistl
test
mov
mov
jo
out
ss
stc
cmpsl
mov
or
inc
dec
jbe
mov
add
lahf
es
jns
lock
jns
cmp
movl
out
addr16
movlps
jp
out
mov
xchg
imull
test
jle
mov
loope
fistpll
lahf
xchg
out
jge
jmp
in
lret
jae
in
push
mov
push
popf
aas
out
mov
jmp
cmc
stos
mov
lods
sbb
add
imul
dec
push
dec
push
movsl
adc
jbe
ret
xor
mov
inc
arpl
mov
inc
jl
cmpsb
or
jbe
aas
inc
adc
mov
insl
jg
xchg
pop
push
es
loop
lcall
pushf
loopne
mov
jno
lret
leave
push
jo
movsb
in
add
sub
out
jge
out
sbb
xchg
data16
out
and
jns
jl
lods
mov
push
femms
jmp
jne,pt
jo
adc
scas
xchg
jecxz
and
into
sbb
dec
inc
adc
dec
cmpsb
fs
sub
mov
sub
jmp
jp
jno
cmp
xor
mov
test
arpl
les
sbb
inc
xor
fcmovnbe
xchg
pop
imul
int
fwait
clc
add
hlt
inc
loope
jo
rol
sub
pop
push
adc
lret
cltd
rorb
cmp
mov
imull
add
mov
push
sbb
adc
xchg
pop
sarl
popa
lcall
repnz
mov
mov
addb
jnp
int
test
mov
int
and
xchg
ss
cmpsb
lret
jb
fcoms
incb
roll
jg
jg
inc
out
or
out
xchg
iret
or
les
or
clc
stc
lds
sbb
movsw
ret
cmp
out
adc
xor
test
sbb
ds
cmp
mov
inc
fs
add
pop
or
sbb
sub
fisttpl
leave
push
repz
sbb
push
jo
xlat
mov
inc
mov
mov
mov
nop
and
and
add
and
fdivl
imul
std
xchg
lock
pop
inc
call
sar
mov
stos
cli
adc
adc
fstpt
inc
pop
dec
stos
imul
cmp
and
push
cmp
jb
mov
dec
dec
aaa
ret
and
mov
lcall
sub
cwtl
in
fidiv
cld
or
or
repnz
mov
roll
mov
xchg
push
das
sbbl
push
mov
push
jle
ret
fucompp
test
add
dec
sub
cmpsl
call
and
hlt
and
mov
rolb
pop
mov
enter
cli
sub
inc
fdivs
call
out
clc
add
int
mov
mov
sbb
cmp
inc
int
xchg
bound
in
mov
sbb
inc
cltd
xchg
in
xor
mov
mov
push
and
call
xchg
hlt
sbbb
repnz
call
int
fwait
and
push
add
xchg
or
sbb
nop
shl
or
sti
in
mov
xchg
inc
cmp
mov
lcall
je
ja
lret
fsts
inc
nop
and
xchg
jns
mov
xor
mov
jne
mov
mov
sub
out
pop
ret
push
bound
mov
xchg
sub
sahf
mov
icebp
sub
or
addr16
lock
mov
mov
stc
scas
insb
hlt
sbb
into
sarl
sub
jno
dec
pusha
jl
mov
cwtl
push
repz
ret
jmp
out
outsb
xchg
jae
lock
jns
cmpsb
popf
sub
xor
nop
stos
ljmp
lods
sbb
dec
imul
scas
cmp
scas
movups
add
pop
inc
mov
hlt
or
dec
arpl
add
or
icebp
adc
fisubl
add
cmc
int3
mov
pop
adc
cmc
ficomp
cwtl
mov
add
repnz
roll
leave
test
shll
jmp
pushf
jge
sub
aaa
jp
gs
pop
lcall
in
mov
sbb
push
repnz
or
repz
lea
adc
and
push
cmp
lods
inc
mov
ret
in
outsl
pop
repz
daa
call
jbe
jno
inc
push
sub
xchg
mov
ds
pushf
movsl
push
test
and
dec
lahf
mov
push
xchg
add
add
adc
xor
adc
insl
insl
pop
nop
add
pop
fiaddl
push
repz
loope
mov
mov
aas
outsb
jbe
adc
cmpsb
into
add
dec
orl
mov
daa
inc
push
and
lea
mov
and
push
mov
lods
mov
lahf
mov
inc
mov
test
jmp
push
aaa
out
insb
cmpsl
cmp
cmp
mov
ja
fs
add
outsl
pop
inc
ss
adc
push
std
mov
lret
in
fisttpl
cmp
push
pop
or
das
and
xchg
out
mov
outsl
enter
pop
iret
push
stc
jl
out
adc
xchg
add
cmc
iret
data16
insb
lods
dec
inc
mov
sub
dec
xor
clc
movsb
in
xchg
loop
leave
gs
shl
dec
push
xor
sub
in
lods
ror
lcall
repz
movsl
out
sbb
push
jg
xlat
leave
mov
sub
mov
loop
out
adc
out
add
mov
xor
mov
inc
xor
daa
fstps
mov
jecxz
popa
call
lea
lods
mov
dec
test
pop
jp
jge
or
sbb
mov
in
pop
out
jg
inc
pop
mov
aas
hlt
add
roll
shl
dec
loopne
sbb
out
push
loope
cwtl
mov
sub
mov
andl
and
sub
dec
mov
xchg
mov
add
xchg
mov
and
and
insl
arpl
dec
dec
es
cmpsl
out
push
mov
fmul
xor
mov
mov
xlat
pop
mulb
rclb
rolb
inc
mov
js
and
mov
enter
and
frstor
ljmp
cmc
xchg
xor
jp
pop
inc
mov
stos
sbb
out
cmpsl
sub
xchg
test
jo
cmove
testb
lock
leave
aad
xor
mov
mov
and
mov
adc
test
aas
or
xchg
sarl
into
xor
xchg
imul
sti
jo
loopne
incl
lods
and
movsl
xor
test
or
hlt
outsb
xchg
xchg
mov
or
mov
das
andl
int3
test
inc
daa
and
call
dec
jne
in
xlat
int
out
aaa
mov
bound
arpl
repz
or
out
mov
or
int3
out
jp
cmp
insb
cmp
bnd
mov
jle
mov
xchg
outsb
fbstp
inc
sbb
xchg
mov
inc
cli
aaa
jae
or
push
cmp
jecxz
lea
mov
imul
or
imulb
scas
mov
insl
pop
adc
jb
cmp
add
dec
mov
push
dec
lahf
arpl
xchg
lods
inc
cmp
or
insb
lods
loopne
cmovg
xchg
mov
out
mov
adc
fiadd
or
mov
xchg
mov
pop
mov
leave
cld
add
flds
cmp
add
push
sbb
mov
aaa
cmp
or
hlt
push
sub
add
push
aad
hlt
xor
dec
dec
jp
dec
mov
std
cmp
inc
ret
push
push
add
inc
xor
les
push
insb
pusha
enter
daa
out
test
mov
cmp
fsubr
sub
sub
dec
xchg
xchg
ds
mov
movsl
pop
mov
and
gs
fbstp
xchg
push
push
and
repz
add
das
mov
or
pop
pop
mov
or
sti
mov
sbb
loopne
das
cmpsl
xchg
loope
mov
fcoml
mov
sub
xchg
adc
adc
adcl
mov
popa
sub
sbb
cmp
or
push
and
int
add
sub
mov
pop
iret
push
negl
imul
mov
dec
sahf
dec
and
mov
fscale
jg
das
adc
jp
pop
fs
xchg
fstl
mov
test
or
xor
imul
lret
jb
repz
push
cmc
or
leave
into
lods
and
cmc
pop
xor
xor
jmp
into
stc
xor
adc
fisttpll
jne
jae
stos
inc
lods
xor
stos
out
lret
push
cli
fdivrp
pop
xor
sbb
incb
test
loopne
mov
or
jg
xchg
jmp
pushf
rep
add
sbb
mov
mov
or
test
sub
mov
loop
mov
cmp
push
push
or
jb
nop
fmuls
dec
jmp
fiadd
mov
fsts
mov
mov
add
cmp
sub
movsb
into
cmp
pop
popa
adc
test
iret
fcmovnbe
loopne
pop
xchg
dec
inc
inc
in
imul
leave
dec
jb
jge
dec
cmp
and
loop
xor
negb
out
std
lods
jns
cwtl
pop
mov
mov
or
mov
aam
clc
or
aas
sbb
mov
mov
ret
jecxz
das
aas
divb
mov
jmp
jmp
clc
push
imul
dec
dec
orl
outsl
mov
icebp
mov
lods
lods
daa
adc
out
aaa
push
and
sub
ret
rcl
call
cwtl
test
jge
mov
xor
outsb
ljmp
jp
sub
push
aaa
cwtl
pop
in
roll
jae
out
or
xchg
lock
jnp
mov
xor
add
xor
pop
pop
mov
and
pop
dec
das
out
test
push
sbb
rolb
xchg
adc
negb
sbb
faddl
push
mov
pop
adc
xor
mov
or
sbb
lret
xchg
xchg
in
or
ja
je
ljmp
dec
mov
jg
mov
pop
lcall
inc
cmp
mov
subl
xor
in
je
mov
nop
ja
in
or
sub
add
addr16
sub
jp
jo
mov
sub
out
icebp
push
or
inc
frstpm(287
jg
scas
pusha
mov
jecxz
out
xchg
push
mov
inc
add
test
popf
mov
popa
mov
test
or
jns
cmp
cmp
imul
scas
add
mov
adc
and
lcall
pop
scas
mov
lahf
mov
xchg
inc
test
xor
out
ja
mov
xor
xchg
xchg
or
and
pushf
adc
sti
fsubp
mov
lds
ja
shr
cmp
push
and
jae
das
movsb
mov
push
fldl2t
jge
jg
mov
sbbl
aaa
clc
push
or
test
add
lods
jl
jmp
mov
xor
test
mov
and
mov
sub
faddl
divb
in
cmp
mov
daa
out
daa
cmp
mov
sub
cwtl
cmpsl
cmp
insl
mov
movsl
popa
cld
or
jns
cmp
cmp
cmp
mov
adc
iret
clc
sbb
fisubr
pop
pop
pusha
in
mov
add
push
push
adc
pop
je
rolb
je
push
sbb
leave
and
loope
es
int
rorl
pop
dec
test
lcall
push
mov
imul
sahf
enter
jge
sub
adcb
stos
mov
icebp
mov
and
xchg
iret
adc
or
xchg
push
cmp
repnz
push
mov
or
leave
cmp
jne
or
or
xor
jecxz
xchg
lret
fisub
ljmp
add
outsl
data16
jecxz
pop
mov
mov
jge
cli
adc
cli
in
pop
jge
sti
dec
xor
sub
aas
loopne
xor
adc
pushf
imul
pushf
sbb
dec
inc
push
cmp
pop
push
sub
lds
jmp
out
mov
aad
enter
out
js
dec
insb
testb
dec
fxch
or
mov
stos
adc
movsb
or
dec
mov
pop
loopne
aad
mov
mov
push
mov
jne
insb
int
inc
sti
xlat
inc
aas
xor
fisttp
pushl
aam
push
roll
xchg
pop
std
push
div
cwtl
push
sbb
mov
xor
cld
push
push
lret
or
push
test
das
push
jmp
mov
cmp
aam
ds
xchg
aam
xor
dec
sbb
mov
jle
out
mov
pop
mov
adc
in
cmp
pop
push
push
shlb
daa
or
in
cltd
std
mov
fldl
xor
in
clc
mov
sbb
popa
stos
sbb
cwtl
into
adc
popa
sarb
xchg
aaa
lods
push
push
dec
sub
add
mov
aaa
mov
stos
mov
daa
push
mov
test
data16
in
mov
shr
sbbb
mov
inc
push
mov
imul
stc
and
xor
adc
pop
xchg
xor
mov
aaa
xchg
mov
movsl
or
ja
lret
mov
lret
inc
push
in
mov
mov
add
jne
push
xorl
enter
sbb
mov
add
dec
clc
out
mov
sub
sti
pop
or
adc
jp
pop
out
loopne
xchg
insb
adc
jnp
mov
sbb
xchg
rcr
mov
xchg
cmp
jge
addl
jae
inc
jnp
ret
popf
fistl
mov
out
lret
stos
pop
sbb
and
adc
imul
sahf
push
imul
mov
ret
jb
in
pop
hlt
ljmp
inc
mov
or
bound
push
fidivrl
into
inc
xchg
arpl
int3
xchg
ret
dec
mov
xchg
icebp
lds
jge
mov
mov
and
inc
push
sub
jbe
inc
out
jge
dec
sbb
je
pop
aaa
mov
ret
lret
pop
pop
stos
jl
cmpsb
orl
shr
xor
add
arpl
int
xchg
xchg
dec
aaa
push
pushf
jge
inc
dec
sbb
in
and
xor
sbb
gs
in
arpl
sbb
or
dec
fiaddl
mov
into
lcall
push
jbe
adc
test
jae
lds
mov
insb
jmp
js
mov
pop
xchg
xor
mov
fsubrl
sbb
pop
test
outsb
lahf
cwtl
out
adc
aaa
in
xor
xchg
sbb
jnp
mov
imul
sub
insl
pop
pop
int
sub
sbb
lahf
mov
sbb
jno
sahf
adc
aas
subb
jg
dec
fnsave
push
pusha
push
adc
xor
cmp
dec
enter
push
sub
adc
mov
pushw
or
mov
into
jae
leave
cmc
jmp
in
xor
aad
loop
mov
stc
mov
test
data16
adc
js
dec
out
xchg
lock
inc
aad
xor
in
mov
sti
idiv
cmp
dec
xchg
lret
mov
ds
test
sub
and
xchg
adc
jl
xchg
mov
cmpsb
scas
cmp
and
and
mov
cmp
jmp
push
jl
sbb
xchg
aad
orl
inc
insb
cmp
flds
cwtl
pop
je
ss
int3
dec
xchg
or
addr16
int3
mov
or
punpckhwd
dec
jge
leave
mov
imul
data16
out
fisttpll
xor
rcl
iret
sbb
mul
xchg
imul
push
rcrb
push
pop
mov
push
roll
xchg
xchg
mov
jp
rorb
lret
out
lock
in
std
jecxz
mov
out
cmc
dec
aam
jo
push
fs
xor
insl
sbb
dec
pop
or
mov
popa
and
stos
jae
sbbl
xor
js
in
mov
pop
pop
sub
shlb
pop
mov
test
or
push
hlt
roll
sbb
lret
dec
xchg
mov
xlat
ljmp
stos
pop
inc
scas
cli
stos
push
icebp
xchg
repnz
and
imul
dec
mov
ret
lods
outsb
mov
sub
repz
fsubrs
or
xchg
sbb
adc
fsubr
xchg
fwait
loope
and
popa
imul
jne
repz
in
lcall
imul
in
cmpsl
lea
aam
int3
mov
pusha
scas
fnsave
shr
dec
movsl
or
inc
in
outsb
cmp
dec
repnz
in
mov
mov
sub
aam
mov
pop
adc
jns
jmp
fildl
repnz
pop
sub
neg
mov
inc
js
jp
sti
pop
mov
lock
insb
jge
fidivrl
in
cmp
es
pusha
call
mov
jp
lret
inc
sbb
sbb
test
and
mov
es
js
lret
cld
loope
cmpsl
mov
sbb
test
imul
scas
leave
scas
xor
add
iret
pop
push
aad
cmc
sbb
xor
popa
sbb
ficomp
ja
and
repz
and
mov
mov
pop
int
je
sub
xchg
lds
out
shlb
in
mov
adc
mov
push
ja
sahf
jbe
jge
jge
sbb
sbb
iret
xchg
jbe
lret
or
ret
jecxz
bnd
ss
add
jle
pop
xor
pop
mov
scas
in
mov
xchg
cmp
push
push
cmp
inc
fidivr
cmpsb
repz
imul
stos
jnp
adc
fisubl
in
sub
dec
outsl
ljmp
out
cmpl
sbb
push
movsl
outsl
add
and
in
push
jecxz
mov
add
andl
push
push
out
pop
sub
adc
mov
notl
mov
push
stc
dec
loope
or
lea
dec
stos
mov
adc
adc
nop
jns
lcall
mov
mov
js
and
sub
mov
xor
cmp
pushf
test
pop
dec
xlat
cwtl
lcall
mov
sbb
or
sahf
xor
mov
cmp
and
call
ja
mov
pusha
jnp
cmpsl
inc
dec
adc
int
cmp
cmp
inc
int3
lret
push
aaa
loope
cmp
sub
or
cmp
push
mov
cmc
mov
jns
push
loopne
outsl
inc
sarl
movsb
mov
inc
adc
or
and
data16
pop
lods
in
fmuls
ret
mov
push
xor
cmp
xor
sahf
outsb
js
gs
test
in
movsb
push
pop
adc
pop
pop
imul
jmp
fcompl
jle
xchg
out
idivl
cmp
pop
ret
adc
mov
jecxz
gs
adc
jnp
aad
sahf
jmp
dec
or
sub
aaa
outsl
or
jecxz
leave
mov
or
adc
call
dec
jp
pop
inc
adc
adc
jl
push
insl
in
jnp
inc
inc
jp
dec
inc
xor
mov
jo
mov
cmp
adc
rcrl
jmp
inc
std
mov
stos
out
mov
mov
jge
mov
lea
mov
inc
mov
push
inc
lock
cmp
fsub
sub
mov
dec
mov
data16
ret
insl
lcall
adc
sbb
cmp
aad
in
test
gs
rep
dec
mov
dec
nop
not
dec
adc
test
into
imul
aas
add
clc
sub
stos
ljmp
movsb
pop
out
arpl
out
xor
add
push
add
xadd
adc
xor
call
mov
sub
fmuls
xchg
mov
xor
push
or
push
add
xchg
add
sbb
pushl
dec
rdmsr
das
adc
in
ss
mov
in
mov
sbb
sub
movsl
pop
decb
dec
adc
sbbl
imul
dec
enter
xchg
divl
out
mov
ss
out
mov
jns
pop
pop
xchg
pop
lahf
sub
out
pop
ljmp
imul
addr16
lds
dec
stc
mov
or
jnp
fimul
addb
pusha
adcl
xchg
loope
xor
jno
xchg
inc
movsb
push
jae
mov
dec
out
mov
sub
pop
mov
mov
stos
ds
shll
jle
sbb
adc
imul
nop
scas
sub
mov
push
inc
adc
cli
push
iret
mov
fs
std
pop
push
sbb
arpl
xchg
inc
mov
push
or
pop
ficom
ficompl
mov
int3
pop
inc
mov
cld
fidivl
fmulp
or
lds
ret
in
mov
arpl
fcomp
dec
movsb
das
outsl
xor
call
test
jbe
lret
sbb
stos
xorl
in
or
and
fisttpll
pushf
mov
popa
imul
ljmp
scas
lret
mov
les
add
cmc
push
xor
inc
insl
sub
in
xacquire
shlb
fwait
cmp
insb
jno
test
or
adc
dec
lods
mov
mov
js
iret
adc
add
out
pop
xor
adc
pop
push
pop
or
leave
mov
test
jl
loope
enter
or
pop
outsb
gs
arpl
in
add
out
cwtl
int3
lods
into
push
sbb
scas
mov
pop
pop
and
mov
sub
js
pop
lret
mov
lcall
iret
mov
cmp
sub
aad
sbb
mov
sub
jg
jne
mov
cmp
xor
adc
cs
mov
mov
fdivr
mov
test
adc
ror
into
cmp
les
or
scas
pop
into
cmp
cmc
jns
push
xor
cmp
shll
loop
sti
daa
stc
setbe
add
scas
aas
lods
int3
mov
outsb
ficompl
cli
stos
jnp
xor
popa
inc
in
popf
pushf
xor
push
loope
xchg
push
jle
cwtl
sbb
loopne
adc
pop
ret
stos
add
lret
inc
push
insl
mov
les
jo
rep
pop
jg
sub
int3
sbb
js
dec
xlat
add
xor
clc
addl
mov
dec
jmp
lret
fisub
rcl
sbb
es
inc
or
dec
addr16
gs
xchg
mov
fldcw
mov
test
ljmp
lea
imul
lret
pop
stc
jne
adc
jge
fistl
clc
inc
inc
add
push
aas
unpcklps
lea
ret
and
and
insl
stc
dec
imulb
adc
dec
les
mov
lods
sbb
adcl
lret
pop
cmp
mov
inc
add
insl
pop
das
mov
sbb
pop
xor
pop
repz
xor
xchg
cmp
insl
out
mov
or
xchg
mov
punpckldq
pop
jge
mov
jp
jnp
cli
lock
xchg
mov
pop
imul
sub
roll
jl
push
jp
sub
jmpw
data16
cmp
ljmp
rcrb
shrb
xchg
cmp
xor
fcmovnbe
add
pop
stos
testb
cmp
sub
movsb
push
mov
xor
mov
push
ja
xchg
cmc
push
sbb
lret
in
repnz
aas
fildl
add
xor
call
bound
out
pop
or
fucom
in
sbb
and
and
adc
adc
mov
ja
insl
pop
dec
mov
inc
sbb
movsb
mov
adc
lock
stos
fsubrs
mov
and
xchg
xchg
mov
lea
xchg
ljmp
out
pop
movsl
sub
in
mov
mov
les
mov
inc
insb
push
cmp
lods
xchg
out
mov
fistl
push
aad
fist
add
push
adc
jae
adc
iret
popf
push
xchg
push
movsb
dec
push
stos
mov
push
and
xchg
jmp
imul
fsubrl
ds
lcall
xchg
mov
sbb
hlt
lret
stos
sub
jmp
or
rcrl
mov
mov
xchg
push
test
loopne
outsl
and
lds
rcrb
mov
mov
push
leave
dec
sub
movsb
mov
sbb
jge
outsb
sbb
adc
outsb
add
inc
test
dec
adc
lea
inc
cmpsb
or
adc
mov
aas
cmp
scas
pop
inc
cld
sbb
cmpsb
stc
cmp
enter
daa
loop
and
jno
enter
xchg
mov
mov
or
pushf
jg
in
test
mov
test
xchg
mov
xor
xchg
imul
jg
pop
jp
cmp
pop
jbe
push
int
push
mov
loope
cmpsl
adc
outsb
add
outsb
enter
mov
push
ror
scas
cli
dec
mov
sbb
js
out
jle
and
jge
int
out
adc
xchg
fildl
pop
dec
push
lret
xchg
cmp
adc
mov
pop
cld
sbb
mov
inc
cmp
shrb
jg
adc
mov
xor
mov
sub
sub
dec
repnz
ss
aad
cmp
mov
push
lret
mov
test
lods
xor
into
sbb
cwtl
cmc
inc
addr16
xor
ljmp
lret
stc
movb
adc
jbe
add
test
insl
mov
mov
jp
rcrl
xor
scas
ds
or
sti
add
xchg
mov
shlb
repz
push
pop
adc
inc
sub
xchg
repz
insb
xchg
in
rcrb
jp
inc
fisubrl
imul
pushf
cmp
enter
lock
add
insl
dec
in
inc
movsl
test
movsl
or
jno
mov
stc
xchg
inc
adc
jns
clc
andl
pop
lods
lea
dec
ds
ret
pop
roll
inc
mov
scas
lock
jb
test
and
imul
lods
inc
push
std
lock
add
imul
jp
cld
push
push
lret
push
jmp
mov
xchg
sahf
lock
das
lcall
mov
loop
lret
dec
sbb
mov
fimul
or
pop
cmpsl
loope
mov
jmp
lods
ret
and
mov
popf
in
inc
and
xor
add
mov
repnz
sub
lods
test
push
xorl
xchg
or
lea
pop
xchg
jae
mov
cmpsl
jae
popa
push
add
and
stc
push
pop
xchg
push
dec
and
movd
dec
add
in
adc
fnstenv
popf
frstor
xor
dec
xor
int
mov
push
sbb
xchg
js
cltd
mov
fwait
outsb
pop
icebp
push
dec
outsl
je
or
add
mov
jne
mov
aad
cli
or
dec
dec
xchg
jo
mov
mov
xchg
cmovne
add
dec
jle
pop
inc
mov
fidivr
decb
mov
jne
imul
jno
test
adc
int3
jns
xor
addl
mov
or
loop
addr16
enter
adc
cmp
insb
mov
push
add
and
mov
mov
push
lret
test
inc
cmp
in
loop
jo
into
cmpsb
popf
ja
in
mov
jecxz
imul
popa
insb
imul
mov
repnz
test
ror
cmp
ret
and
hlt
push
mov
mov
or
dec
outsl
stos
inc
or
push
xchg
mov
loopne
pop
pop
jnp
ficom
sub
lret
cli
sbb
je
test
repnz
leave
sbb
movsb
inc
xor
push
fs
insb
jbe
loopne
jge
in
sbb
pusha
push
mov
or
jle
jl
fisub
jg
std
push
daa
aad
xor
jo
das
scas
mov
cmp
jg
enter
mov
cmpsb
jl
and
shr
enter
daa
loope
adc
in
jno
xor
sub
daa
dec
cmp
into
ds
mov
and
mov
push
pop
sbb
pushl
stc
xor
jo
sahf
ret
das
pop
mov
adc
dec
push
lahf
pop
loope
stos
inc
fcompl
outsl
sub
push
loopne
divl
mov
lods
jecxz
rcrl
sbb
stc
xchg
and
loopne
int
xor
pop
leave
sti
insl
lcall
mov
pop
push
sbb
jo
test
cmpsl
inc
sbb
push
jg
mov
mov
pop
leave
mov
fs
ljmp
aas
mov
fsubrs
lahf
testl
or
or
fimul
daa
push
mov
loop
adc
sbb
ds
cli
inc
mov
lods
lcall
out
push
xchg
adc
fnsave
test
mov
sti
mov
or
xlat
in
cmpsb
cs
loopne
mov
or
jno
loopne
pop
jae
les
mov
dec
mov
mov
out
sbb
pusha
push
sub
jle
mov
in
inc
jmp
xchg
movsb
inc
dec
aad
dec
hlt
nop
cli
sub
and
mov
int3
test
mov
loop
adc
cmp
call
enter
pop
pop
and
dec
sub
sbb
icebp
fisttpll
pop
fs
insl
inc
bswap
iret
inc
jmp
aas
dec
rorl
xor
or
aaa
pushf
rorl
out
imul
push
fs
xchg
rol
mov
push
jmp
xchg
aam
addl
sub
mov
push
xor
stos
jns
shll
lret
cld
xor
lods
fs
es
insl
mov
jb
add
loopne
mov
mov
mov
push
mov
or
jl
test
andps
cmp
test
dec
mov
cmp
mov
xchg
clc
faddl
leave
ljmp
mov
dec
stos
or
out
pop
pop
sbb
push
xchg
pop
aad
fnop
sahf
add
sti
mov
out
ljmp
ss
rorl
cmp
dec
xchg
xchg
rcrb
mov
dec
inc
fwait
popf
mov
fild
imul
push
or
xchg
push
in
fidivl
xchg
mov
dec
cmc
mov
dec
add
loop
rorl
mov
dec
std
pop
mov
repnz
lods
dec
jno
and
aaa
or
out
push
mov
dec
jns
xchg
or
jbe
out
ret
push
fisttpll
loop
jno
inc
inc
pushf
jp
cmpb
sub
insb
sub
jnp
dec
mov
bound
pusha
push
mov
nop
clc
test
push
sub
inc
inc
out
jae
hlt
sub
xchg
loop
popf
sahf
outsb
mov
or
push
and
stos
xchg
mov
sbb
inc
pop
imul
or
push
or
push
int3
cwtl
inc
adc
sbb
aam
dec
ret
imul
outsl
hlt
popa
sbb
xchg
push
sub
leave
adc
call
xchg
push
inc
out
push
jmp
pop
mov
fidiv
je
rorb
repnz
lods
outsl
leave
cmp
xchg
dec
push
mov
xor
adc
aas
jge
dec
xor
sbb
mov
fdivrs
mov
push
or
imul
add
std
and
inc
push
xchg
jne
inc
sbb
or
cmpsl
jbe
enter
daa
loopne
pop
cmp
test
jno
mov
ret
mov
ds
or
movsl
mov
shll
sbb
ljmp
adc
test
stos
xor
xor
xchg
xor
pop
enter
jp
sahf
pop
rcrb
xor
aas
jmp
fadd
popa
xchg
add
into
outsb
mov
pop
adc
jle
and
out
mov
out
aaa
mov
jno
and
cmp
int3
push
mov
pop
dec
gs
lcall
sbb
sbb
sub
xor
adc
push
adc
mov
push
sub
ss
scas
test
sub
adc
ljmp
cmp
mov
or
in
into
loop
sub
into
add
xor
call
dec
stc
xor
mov
gs
cli
inc
inc
jmp
mov
sbb
cli
inc
mov
sub
sti
bound
cli
pushf
push
lods
int
loopne
test
cli
adc
imul
repz
sbb
xor
inc
cmp
leave
dec
xlat
shrl
push
or
mov
pushf
mov
pop
mov
cs
inc
adc
out
sti
gs
aad
dec
test
rolb
and
adc
je
lods
sbb
mov
call
inc
mov
pop
adc
in
adc
movsb
fimul
mov
pop
pop
jge
inc
xchg
mulb
popf
pop
and
in
mov
jb
sub
jns
test
inc
je
pop
ret
xor
std
ds
sub
mov
xchg
lea
sbb
cld
insb
mov
cmp
sti
test
fs
js
cwtl
das
pop
cld
jno
jne
out
mov
js
ret
roll
fwait
lock
cmpsl
fistp
mov
xchg
rcrb
cltd
out
or
jecxz
fs
push
or
rcrb
jmp
das
es
jle
push
ret
add
clc
pop
pop
enter
jg
lea
cld
pop
lcall
out
mov
jbe
push
insb
aaa
dec
xlat
add
test
cltd
andl
mov
cmp
xchg
dec
add
mov
xchg
and
pop
xor
lock
mov
fwait
int3
stos
ljmp
test
sub
mov
jmp
or
ss
mov
pop
mov
lods
aas
mov
pop
mov
ja
mov
dec
fs
and
cmp
popa
in
dec
push
lret
mov
in
mov
test
out
das
mov
bound
dec
pop
jns
cltd
rcll
fistpll
andl
out
or
push
xchg
addr16
cmp
jp
mov
adc
and
dec
js
or
daa
in
mov
adc
scas
fisub
xchg
sub
shl
inc
push
push
push
jae
dec
inc
push
push
jno
popf
lds
xchg
push
popa
mov
sbb
sbb
imull
mov
scas
mov
js
adc
jnp
xor
imul
rcrl
lahf
mov
inc
lcall
push
pop
inc
pop
fisubrl
mov
insl
cvtps2pd
or
dec
pop
mov
adc
shrb
es
xor
leave
mov
mull
dec
clc
jbe
addr16
adc
test
xor
push
or
addr16
jl
jae
dec
pop
loopne
in
push
jbe
add
pop
jo
dec
adc
aas
cmp
faddp
push
push
pop
addl
xchg
aaa
in
mov
dec
sti
daa
jb
fcomip
loope
dec
clc
mov
outsl
jle
iret
sarb
mov
aad
xchg
out
push
lahf
xlat
add
test
mov
daa
xor
in
out
push
pop
js
mov
mov
xchg
jl
aas
sbb
jg
repz
in
test
xchg
stc
mov
sbb
cmp
and
mov
push
cmp
insb
int
pop
inc
sub
jle
pop
push
jl
clc
push
cmp
test
mov
sbb
js
sahf
popa
aad
test
mov
adcb
inc
jg
cld
mov
mov
das
xlat
fs
cmpsl
adc
ss
lds
cmp
in
testl
mov
pop
cmp
jno
or
adc
xor
nop
adc
loop
stc
adc
jmp
iret
adc
pop
mov
in
int
retw
pop
das
lods
push
sub
mov
cmp
dec
pop
in
adc
fwait
sbb
rclb
loopne
lods
push
pop
aas
xor
adc
icebp
pop
imul
aaa
repz
mov
sbb
fs
xlat
add
push
sub
dec
jg
movsl
pop
lret
pushf
cmp
dec
cs
jnp
ss
adc
ljmp
dec
aas
cmp
mov
es
cmp
lea
add
mov
or
adc
addl
dec
push
in
pop
stos
out
inc
sbb
in
aas
mov
sbb
jmp
mov
divb
in
add
adc
pop
xorl
daa
adc
ficom
jmp
ss
aaa
or
sarl
inc
es
jo
clc
es
ds
dec
inc
dec
stc
in
cmpsl
fdivp
xchg
mov
imul
mov
push
leave
adc
mov
out
sbb
imul
daa
popa
and
mov
pop
jns
xchg
fldl
add
les
xor
loopne
popa
dec
xor
inc
push
out
ljmp
xchg
sub
mov
setnp
add
mov
mov
xor
xchg
aas
dec
fstps
test
movsl
mov
push
fstpl
rclb
xchg
or
hlt
push
fwait
sti
ja
push
xor
popf
add
lahf
adc
push
icebp
add
into
addr16
out
fisub
and
cs
pop
xor
push
mov
ret
ja
aam
dec
push
sbb
inc
jbe
fistpll
mov
dec
aaa
pop
cwtl
jne
add
mov
decb
out
push
ret
int
daa
jns
inc
jo
push
mulb
xorl
sub
fcomps
movsb
addr16
xchg
mov
fwait
and
mov
jle
mov
pusha
mov
pushf
xchg
add
jmp
pop
or
cmpsb
push
pop
je
popf
in
out
mov
mov
pmullw
xor
sbb
mov
scas
sbb
js
pop
mov
mov
xchg
inc
lahf
ret
dec
pop
data16
imul
scas
sub
inc
popf
pop
lret
or
mov
push
add
push
ljmp
hlt
jl
pop
out
xchg
fdivrp
imulb
lds
mov
add
xor
sub
jo
out
iret
push
push
mov
jge
sarb
mov
aas
or
add
jl
sti
xor
inc
xor
rcrb
cld
xor
andl
in
cmp
mov
inc
cmp
cmpsb
add
xor
enter
daa
ficomp
cmp
test
inc
int3
sub
aam
cmp
add
cwtl
fsubr
movsl
cltd
jl
and
and
imulb
cs
rolb
xor
push
pop
push
idivb
pop
push
jp
push
lcall
sbb
or
loop
xchg
outsb
push
divb
xor
or
or
pusha
sbb
mov
pop
imul
rcrl
jle
xchg
inc
lcall
mov
add
adc
pop
test
aas
subb
jg
cmpsl
mov
adc
mov
adc
test
mov
add
out
mov
pop
pop
rol
leave
cmp
rorl
or
sbb
pop
xor
outsl
jle
pop
loop
cmp
stc
mov
movsl
jp
jl
push
inc
jmp
lods
dec
adc
mov
das
out
enter
pop
xor
pusha
mov
sar
incb
inc
gs
or
pop
lahf
bound
ljmp
les
mov
mov
and
adcb
lahf
jecxz
xlat
aas
or
mov
in
ljmp
push
mov
jge
mov
inc
lahf
jecxz
icebp
insb
aaa
flds
shl
xor
fistpl
xchg
ret
dec
call
inc
lods
cmp
adc
mov
ljmp
pop
dec
inc
int
movsb
jns
inc
roll
imul
fwait
push
and
push
aam
clc
inc
idivb
jmp
cwtl
out
cmp
mov
adc
mov
roll
ret
lret
orl
rcrl
lock
jne
push
and
mov
lock
aam
add
sub
test
insl
imul
push
mov
inc
jl
lods
outsl
or
dec
mov
sbb
mov
push
arpl
sarb
loope
sub
data16
mov
push
dec
inc
inc
mov
rcll
rcrl
xor
pop
lock
out
test
call
and
mov
add
lahf
leave
cltd
out
jae
xor
lret
fsts
xrelease
insb
cld
dec
into
mov
jbe
test
mov
test
sbb
or
add
mov
push
mov
or
add
scas
jno
xchg
lods
sub
mov
jge
pushf
ja
js
dec
dec
nop
out
or
pushf
pop
mov
dec
dec
sbb
push
inc
cld
in
mov
addr16
in
xlat
xchg
bound
call
xchg
loope
iret
add
movsb
out
cmp
mov
addr16
add
mov
jnp
popf
sub
shrb
mov
cmp
fucomip
mov
xchg
shll
jmp
push
ret
and
mov
lock
and
in
cmp
adc
mov
fs
jle
push
mov
adc
mov
jp
dec
pop
popf
cmpl
mov
xor
or
cmp
mov
xchg
sbb
int3
fild
hlt
pop
push
in
in
ficomp
cmp
mov
push
fmuls
movsb
jno
inc
push
mov
mov
mov
dec
cmc
pusha
aaa
scas
lds
addr16
xchg
adc
sub
jne
cmp
push
mov
cs
fcoml
and
mov
push
hlt
xchg
pop
inc
mov
and
pop
imul
cmp
cmp
outsb
cmp
and
mov
outsb
mov
lahf
adc
xor
add
arpl
xor
pop
cmp
mov
pop
outsl
cmp
push
test
insl
pop
fs
sub
sub
das
or
adc
pop
test
xor
mov
cmc
mov
into
sub
push
inc
hlt
lock
push
gs
js
pop
lds
inc
push
sarl
bound
inc
fwait
lods
sahf
cmpsl
or
test
dec
mov
jg
push
pop
mov
or
je
pop
adc
mov
inc
cmp
pop
loope
idivl
imul
scas
ffree
pop
xchg
cmpl
pop
or
or
and
xor
and
loop
mov
stc
pop
mov
adc
inc
aaa
add
mov
leavew
in
out
lods
ss
and
mov
dec
xor
in
pop
aaa
sub
outsl
jmp
arpl
gs
loopne
repnz
adc
lahf
movsl
les
ja
test
aas
xchg
mov
xlat
adc
fimull
xlat
jle
lret
sub
icebp
pushf
pushf
nop
jo
jmp
cs
xor
loop
les
nop
data16
mov
imul
je
dec
lcall
imul
or
mov
pop
sub
leave
dec
aad
jmp
pop
lock
test
shrl
das
aas
aas
leave
jnp
jb
mov
xchg
push
mov
idiv
fildl
std
xor
test
sbb
fdivp
call
lret
repnz
mov
mov
das
cmc
cmp
mov
fnstenv
adc
mov
pop
es
xchg
insl
push
mov
mov
mov
sbb
cmpsb
mov
dec
jne
and
cmp
jb
and
pop
sub
pop
xchg
mov
in
push
or
fstl
sub
enter
scas
sbb
ljmp
les
daa
stos
enter
call
mov
sbb
add
call
adc
sbb
mov
inc
pop
cld
dec
xor
xor
xchg
popf
sbb
repz
cld
lcall
pop
pop
push
jns
into
add
aad
cmpsl
call
pop
nop
or
mov
in
dec
out
xchg
sti
arpl
mov
test
pop
cmp
jp
cmp
lret
scas
mov
scas
movsb
arpl
dec
lea
pop
lock
in
out
int3
icebp
sahf
xor
xor
adcl
out
stc
in
sub
into
into
fs
int
testb
lahf
dec
insb
aad
xor
jle
fist
pusha
lock
or
xchg
cmpsb
mov
xchg
inc
jae
and
jecxz
push
popf
aad
popf
cmp
inc
mov
push
sahf
mov
and
push
sbb
and
adc
call
mov
iret
push
mov
ret
pop
aam
ss
in
and
loope
inc
mov
sub
inc
test
mov
test
inc
xchg
jb
and
lret
pop
inc
repnz
fiadd
cmpsl
lds
repz
nop
mov
test
sbb
sbb
movsb
cld
push
lret
push
out
fmull
jge
ret
pop
outsb
push
test
stos
shrl
addl
push
xchg
or
aaa
xchg
mov
and
xor
cmp
and
mov
cmpsb
or
sub
daa
enter
daa
fsubl
fidivl
pop
mov
imul
in
daa
fidivr
movsl
cmpsl
les
and
push
repnz
jnp
sub
and
xor
movl
xchg
out
pop
into
call
mov
fdivl
mov
rclb
sbb
rcl
ljmp
xor
xchg
sbb
sub
and
push
sahf
push
inc
fwait
movsb
int
ror
sub
pop
inc
xor
push
sub
negl
jno
iret
sahf
dec
xchg
jmp
andb
jg
or
sbb
hlt
sub
mov
ss
sbb
adc
and
cltd
shr
clc
cmp
and
or
cmp
into
outsb
xchg
cmc
ljmp
outsl
cmp
jmp
cmp
inc
stc
adc
mov
adc
ds
lret
push
pushf
mov
xor
mov
call
and
sti
push
fwait
sahf
incb
xor
lea
js
pushf
cmpl
cs
les
mov
push
dec
add
into
aas
mov
xlat
mov
inc
jnp
ljmp
jmp
inc
dec
cs
movl
inc
or
testl
cmp
je
and
fadd
and
aad
bound
call
inc
fmulp
pop
mov
push
testb
sti
or
fdivrl
sub
fldt
or
add
push
fnstsw
and
scas
or
xchg
std
fcmovbe
jge
fs
mov
movsb
xor
jne
data16
sbb
cmc
lret
popa
loopne
mov
mov
lock
sbb
aam
push
mov
pop
scas
aam
mov
test
int
sbb
dec
ljmp
mov
lock
lods
inc
jne
mov
outsl
cmp
and
aam
pusha
pop
inc
leave
in
in
xchg
sub
sub
mov
cmp
push
iret
push
pop
fnsave
sbb
add
xchg
in
pop
ljmp
cmpsb
pop
inc
stos
mov
and
dec
leave
dec
xchg
std
ja
push
fdivrs
add
cltd
pop
adc
mov
inc
mov
shrb
roll
outsb
jae
sbb
cmpsb
push
sbb
dec
add
lock
mov
das
xchg
movsb
adc
in
jp
xchg
dec
loope
mov
mov
mov
repz
popf
dec
cmp
inc
cmp
cmpsl
mov
mov
mov
stos
punpckldq
adc
loope
enter
or
leave
xchg
cmp
sub
sub
insb
inc
out
jnp
cld
xchg
jle
loopne
in
into
shll
inc
fildll
lahf
pop
xchg
jns
xor
sub
or
lret
jae
dec
or
popf
popa
leave
idivl
pop
cli
int
xchg
lret
and
pop
sbb
das
inc
imul
mov
das
fucom
adc
jae
ret
dec
pop
or
hlt
fdiv
icebp
arpl
and
inc
cmpsb
cmp
or
xor
iret
inc
add
xchg
xchg
leave
test
int3
mov
ficomp
mov
pop
rclb
dec
mov
sti
dec
pop
leave
nop
inc
popa
movsb
xchg
push
ds
jbe
in
jge
cwtl
test
aaa
sub
sub
inc
ljmp
sbb
push
xor
xchg
sub
cmp
cmp
mov
push
cmpsb
mov
arpl
sub
enter
daa
fistl
xchg
jno
lcall
das
or
add
andl
stc
xor
dec
cmc
sub
loope
sub
sarb
negb
add
js
inc
pop
or
call
test
sbb
jmp
outsb
jge
adcl
cltd
ss
out
incb
stc
sbb
xchg
and
data16
inc
mov
int
insb
clc
sub
ret
cmp
ret
xor
lcall
xor
int
sahf
in
movzbl
jge
insl
jg
ret
jo
add
mov
adc
jb
fnstenv
sarl
pop
cmp
rorb
in
lret
mov
cmp
pop
cmc
or
clc
into
push
ljmp
dec
xchg
sbb
loop
aaa
xchg
stc
fcmovnbe
adc
jp
add
movsb
fldenv
dec
lods
add
mov
inc
mov
int3
cli
inc
xor
loopne
cmc
pop
mov
int
test
les
loopne
mov
adc
push
les
pop
xchg
inc
sbb
push
loope
xlat
cld
pop
and
nop
push
aad
add
adc
sbb
mov
aad
cmp
dec
pop
aam
inc
sub
repnz
aam
je
push
push
daa
out
leave
dec
dec
call
ret
pop
xchg
jecxz
adc
mov
add
or
pop
ss
out
inc
and
sbb
pop
imul
int3
xchg
shl
or
xorl
cwtl
pop
into
inc
mov
mov
mov
sahf
orl
lret
rclb
mov
divb
aas
inc
nop
das
mov
fsubs
adc
cltd
fadd
lods
lods
mov
push
mov
aaa
dec
in
out
cmpsl
ficompl
push
icebp
or
lods
mov
fnstsw
xchg
icebp
push
and
outsl
sub
pop
arpl
sbb
mov
movaps
push
xchg
test
pop
mov
rcr
push
xchg
xchg
sahf
and
sub
inc
ljmp
ds
icebp
add
out
scas
mov
push
mov
xchg
movhps
add
fistpl
mov
clc
mov
dec
popl
test
adc
sbb
sub
xor
fwait
mov
aaa
push
mov
sbb
dec
mov
jmp
in
std
hlt
xchg
cltd
mov
adc
dec
fist
scas
inc
ja
jnp
dec
and
mov
rorb
in
mov
jne
inc
sub
mov
aad
sbb
or
xorl
out
int3
shrl
xor
in
jp
fildll
sbb
dec
outsb
jnp
shlb
mov
adc
pusha
negb
xchg
and
lret
jae
repz
and
jmp
mov
pushf
fiaddl
dec
cmp
sbb
or
call
push
jbe
popf
adc
ss
loop
pop
inc
pop
push
hlt
and
arpl
test
or
stos
and
inc
mov
and
and
adc
mov
dec
pmaxub
adcl
repnz
fsubrs
movsb
adc
fs
movsl
mov
sbb
xor
or
out
add
and
jl
arpl
push
pop
int
xor
in
xlat
adc
push
mov
jno
ret
cmpsb
ss
je
je
adc
jge
loop
fisub
fiaddl
cmp
jmp
sub
push
out
cmp
ss
and
jp
mov
sub
mov
sbb
and
daa
add
xchg
std
xor
dec
sbbb
mov
add
pop
dec
addr16
rolb
mov
fadd
gs
sub
and
adc
mov
addr16
pop
and
sbb
mov
mov
and
push
dec
inc
fmulp
ss
inc
mov
lcall
mov
or
sahf
nop
add
jle
scas
sbbb
mov
test
and
push
adc
pushf
jmp
adc
cmp
mov
idivl
fnstsw
sbb
imul
into
into
xor
sbb
js
std
xor
repz
dec
cld
stc
jle
inc
adc
adc
add
test
rorb
mov
ss
in
pusha
mov
sti
jl
add
int3
jmp
xlat
mov
addr16
fidivl
adc
cltd
cmpsl
imul
jecxz
repnz
cld
sbb
mov
cmp
add
lods
mov
xchg
lret
out
jmp
mov
cs
inc
dec
aad
aas
xor
negl
inc
cmp
adc
je
jecxz
data16
sub
scas
lea
inc
imul
inc
pop
sub
fwait
lahf
adc
notb
fstpt
pop
mov
inc
adc
das
cmpsb
inc
aas
mov
aas
cmpsb
gs
jb
lock
leave
cltd
and
pop
xchg
xor
jo
les
std
sub
cwtl
fisubl
xchg
mov
inc
mov
cmp
data16
outsb
fucomip
lret
aas
test
mov
xor
das
xchg
popf
and
out
lods
mov
cmp
mov
cmp
es
pop
insl
add
test
fxch
push
mov
sahf
jg
lods
sbb
cs
mov
bound
or
pop
aas
pop
rorb
out
test
scas
mov
scas
inc
push
push
xor
lds
fdivr
jns
push
xchg
imul
ljmp
cli
pop
pushf
loope
xchg
jecxz
out
adc
xchg
mov
push
mov
pcmpeqd
popa
cltd
lret
cmp
xor
aaa
jno
adc
fdivs
push
xor
add
xchg
roll
cmpl
out
push
add
es
sar
insl
std
and
insl
sarl
or
popf
in
rorl
xchg
call
jb
mov
imul
push
dec
push
js
inc
imul
stos
dec
cmpsb
imul
imul
jns
sub
or
in
push
sub
mov
clc
cmp
insb
push
mov
aam
cmp
mov
xor
mov
imul
outsb
inc
xchg
stos
jae
loope
push
out
fs
scas
sub
mov
fstpt
stos
mov
scas
sbb
mov
lock
or
fsts
out
adc
iret
insl
cld
jge
adc
pop
jns
fcomi
outsb
sti
or
jae
inc
lods
adc
or
sarl
bound
xchg
ja
mov
pushf
fisubr
mov
lds
mov
rorb
jne
sbb
mov
sti
movsb
popf
pop
mov
rol
jbe
ficoml
sbb
or
aaa
stos
add
or
fidiv
outsl
adc
add
jae
or
xor
dec
xchg
stos
scas
xorl
cmp
dec
lea
inc
add
cmpsb
xchg
cmpl
and
enter
daa
fyl2xp1
cmp
jno
mov
cmp
add
ds
setl
pop
push
or
push
hlt
mov
test
testl
mov
push
pop
inc
js
xchg
xchg
pop
mov
jns
push
loope
rcrl
jno
inc
sub
rcrl
adc
jnp
movsl
scas
sub
addr16
push
mov
in
and
dec
int
dec
jnp
in
rolb
mov
lcall
xor
data16
decb
dec
sahf
xor
dec
test
ljmp
push
std
icebp
mov
jge
mov
aad
push
push
cmp
inc
mov
jp
mov
sti
mov
sbb
dec
sub
xor
nop
cmc
aas
cli
divl
clc
outsl
fldcw
lods
stc
xor
add
inc
cmpsl
lds
jp
lods
shl
push
out
xchg
mov
xor
jge
lret
fadds
out
dec
lea
push
push
loopne
insl
leave
pop
stc
idivl
adc
mov
les
mov
xchg
pushf
daa
sbb
mov
xlat
jp
mov
jbe
xor
cmp
cmpsl
jmp
adc
pop
aad
test
nop
rolb
ds
push
popa
mov
xchg
negb
jecxz
shlb
sub
pop
int
jecxz
inc
mov
push
jge
and
xor
pop
jl
stos
inc
inc
pop
inc
inc
pop
mov
aas
inc
or
imul
mov
roll
loope
std
iret
push
sahf
cwtl
xchg
adc
test
cmp
leave
cld
cltd
cmc
adc
scas
jge
mov
incl
lock
mov
sub
or
aam
dec
imul
push
mov
insl
in
cmp
dec
fistl
lret
in
icebp
jne
mov
xchg
mov
fdivrs
andl
pop
dec
mov
test
mov
rcrb
sbb
fucomp
fcoms
xchg
stos
and
ljmp
dec
pop
inc
iret
xchg
stos
test
out
je
adc
imul
add
movsb
cltd
add
sahf
xor
and
addl
and
xchg
mov
rcrl
fmull
lret
pop
fwait
adc
repz
inc
out
cmp
or
jbe
mov
or
mov
mov
jl
cltd
mov
and
sub
data16
or
add
xor
mov
push
dec
mov
cmp
dec
andl
jns
stos
inc
xchg
fcomps
shl
outsl
sbb
mov
nop
jp
dec
sub
insb
sbbl
mov
loope
inc
pusha
sub
xor
mov
push
cmp
jae
adc
push
test
scas
gs
sbb
loope
das
jb
and
inc
pushf
imul
scas
insl
jnp
push
add
mov
inc
std
dec
iret
int3
stc
ret
and
hlt
mov
or
or
mov
mov
ficoml
stos
xchg
into
xchg
loope
jbe
fstpl
mov
fmulp
push
mov
mov
shlb
mov
hlt
xchg
cmc
jle
movsb
sub
push
sub
cmpb
jbe
repz
iret
aaa
push
in
or
inc
and
push
push
cmc
jl
nop
popf
dec
data16
push
and
xor
mov
pushf
out
and
cmp
rep
push
jmp
iret
inc
xchg
push
repnz
pop
in
or
dec
enter
daa
fdivs
cmp
xor
push
cmp
sub
repz
lret
lahf
mov
push
and
insb
pop
mov
add
xor
mov
push
shl
lret
push
mov
loopne
sbb
pop
mov
outsb
cmpsb
jb
adc
push
mov
lock
jle
stos
sbb
sti
lcall
mov
scas
sub
xor
lcall
mov
sbb
cmp
aam
into
mov
scas
mov
sti
cmp
sub
mov
lcall
fadds
imul
rorl
cmp
add
or
int
cmc
push
sbb
xor
inc
outsl
mov
or
stc
in
addr16
adc
inc
inc
add
mov
pop
rol
mov
mov
loope
fistl
aaa
jbe
in
ss
icebp
sti
fiaddl
inc
adc
xchg
loopne
std
pop
pop
sbb
fsubrl
sub
pause
add
xlat
sbb
add
push
xlat
mov
mov
rcrb
ret
mov
daa
jbe
nop
lods
jl
dec
jl
out
inc
arpl
fxch
jge
je
ficomp
popl
push
call
aas
jo
pop
stos
mov
jp
test
fistpl
jp
inc
into
bound
aas
in
push
push
xor
cmp
and
pop
hlt
rcl
xor
dec
les
std
jbe
mov
mov
idiv
mov
fucomip
adc
fucomip
lret
sbb
mov
lock
cltd
mov
mov
cmp
mov
shlb
mov
pop
mov
fldcw
jno
ss
xlat
rolb
dec
jnp
icebp
dec
icebp
cmp
mov
inc
std
enter
jp
rol
xor
dec
sub
decb
test
xor
sbb
clc
out
int
xchg
jmp
into
dec
popa
in
sub
stos
jae
jl
xlat
jle
xchg
sbb
fmull
xor
mov
cltd
cmp
push
xor
data16
xor
test
cmp
stos
xchg
fcompl
mov
or
or
aad
fwait
inc
test
test
fildl
pop
inc
jbe
stos
test
xor
into
sbb
das
or
in
jl
xchg
xchg
mov
cmp
fisttp
mov
inc
xchg
aaa
mov
mov
fist
jne
adc
daa
scas
mov
cmp
xchg
mov
mov
sub
mov
lea
lods
pop
jp
or
mov
push
push
insb
in
jg
jnp
jmp
jle
insl
or
call
lods
fbld
aam
jmp
stos
push
mov
popf
std
sbb
push
mov
push
pop
xchg
loopne
mov
iret
pushf
sbb
sahf
loop
dec
jne
scas
rclb
push
push
dec
lahf
adc
add
ret
popf
pop
out
push
hlt
add
lods
arpl
aam
inc
mov
cmp
push
pushl
repnz
jp
xchg
and
xchg
jno
xor
lds
dec
cmpsb
rolb
push
repnz
lods
out
leave
insb
fiaddl
jp
adc
mov
cmp
aaa
sub
scas
or
xor
popf
lods
movsb
jl
in
dec
aad
les
add
inc
and
dec
das
scas
aas
lret
sub
cmp
lods
and
loope
cmpsb
lcall
enter
daa
xlat
outsl
lahf
cmp
leave
test
push
cltd
sub
aam
loop,pt
lea
sub
mov
std
lahf
iret
leave
push
push
lcall
add
mov
xor
pop
cmp
pop
daa
cmp
js
jg
pop
or
mov
loope
test
adc
xor
or
mov
inc
call
xchg
cmp
mov
add
pop
add
push
stos
adc
imul
pop
mov
xchg
enter
inc
mov
xor
pop
bound
test
jne
sub
dec
jg
enter
sub
ja
mov
mov
cmp
mov
icebp
mov
shl
mov
loopne
into
fldl
and
int
mov
outsl
xchg
pop
sub
sbb
enter
sub
data16
lods
mov
mov
cli
push
jb
xor
push
jecxz
mov
test
xor
clc
xchg
loopne
mov
enter
lea
cltd
inc
les
popf
pusha
xchg
dec
cli
cmp
cmp
mov
clc
cli
test
pop
lahf
push
mov
xchg
lcall
sbb
outsb
cmpsl
bound
jns
jbe
in
flds
test
shl
jbe
xor
lea
sub
fprem
rol
fidivr
roll
or
mov
movsb
inc
push
adc
inc
nop
out
test
jb
adc
dec
test
lea
pop
mov
and
lea
insl
std
sbb
lods
jnp
or
add
subl
sub
mov
in
lahf
loopne
lock
mov
das
and
mov
icebp
gs
aam
dec
aaa
ret
call
inc
fwait
insl
mov
insl
push
jg
mov
and
mov
push
pop
xchg
and
fistl
pop
fisttp
scas
rolb
out
sub
sbbb
xchg
sahf
mov
repz
sahf
out
fnstsw
pop
sar
sub
jae
sub
leave
ljmp
outsl
pop
popf
in
mov
out
cmp
push
xchg
pusha
andl
xchg
fwait
setae
add
int
xor
sti
pusha
mov
push
imul
shll
cmpsb
rcrl
push
je
push
stos
jg
mov
test
jae
and
dec
mov
add
ja
xor
xor
add
in
dec
rclb
jle
aas
mov
lcall
dec
out
xchg
mov
dec
rorl
dec
dec
pop
imul
movsb
mov
js
out
push
loope
bound
push
jns
xchg
adc
outsb
les
lods
mov
sbb
dec
sub
mov
cld
addr16
mov
test
jns
mov
jnp
rorb
jle
xor
pusha
faddl
cwtl
inc
sbb
cld
inc
inc
mov
hlt
jae
inc
push
push
das
fisubl
popf
and
stos
mov
cwtl
sub
adc
xchg
pop
sbb
lret
lea
aas
mov
push
xchg
in
adc
sbb
iret
mov
ret
jnp
push
jl
hlt
dec
test
inc
mov
inc
or
xchg
bound
inc
jle
mov
mov
push
xchg
jl
adc
dec
in
pop
pop
sub
adc
cwtl
scas
rcrb
pop
repnz
movsb
ds
jg
leave
cs
scas
xor
jge
and
mov
or
push
jl
or
dec
inc
in
push
call
adc
js
push
and
les
dec
xor
inc
mov
sbb
sbb
lret
bswap
into
pusha
loope
lock
cmp
sti
push
sub
movhps
in
clc
push
ds
stc
movsl
sar
pop
and
repz
lahf
out
xchg
aaa
push
insl
in
test
pop
pop
stos
add
bound
fisttpl
pop
pop
dec
aas
stos
js
shl
pop
dec
xchg
scas
push
and
je
jb
xor
pop
cmp
outsb
insb
xchg
ficom
or
sub
ret
movsb
push
xchg
or
xor
ret
push
or
int
sub
push
popf
pushf
pop
loopne,pt
lcall
mov
mov
sahf
sbb
jle
lcall
jg
xchg
dec
mov
xchg
pop
mov
insl
fs
cmp
adc
roll
cmp
ja
divl
popf
adc
jns
xchg
cmp
out
or
sub
xor
mov
insb
loop
xchg
push
stc
pop
stc
rcll
ret
fadds
hlt
sub
pop
cmpsl
lods
xchg
mov
sub
and
in
fldlg2
or
mov
pop
xor
das
pop
aam
push
nop
mov
xchg
fsubrl
aad
les
jns
xchg
adc
test
ja
sub
aaa
sub
mov
je
mov
jmp
int
cs
int
mov
mov
dec
cmp
roll
std
lock
js
je
xor
or
int3
push
or
push
xor
pop
adc
jge
inc
std
mov
test
pop
andl
stos
sub
aas
and
ds
pop
aaa
sbb
lods
test
not
out
std
loopne
cwtl
push
sbb
add
mov
lret
sti
mov
mov
loop
lock
mov
mov
test
aam
lret
scas
ret
ja
jecxz
fisttp
mov
cmp
scas
ret
jb
cli
ret
xchg
fnstcw
inc
push
and
jbe
xchg
pop
pop
jno
call
sub
cmpsb
sub
lret
popa
pusha
rcr
cwtl
cmp
gs
xchg
addr16
push
ljmp
and
xchg
stos
push
mov
and
cmpsl
mov
push
cli
aaa
rorb
repnz
and
scas
xchg
lods
cltd
cmpsl
inc
icebp
xor
in
mov
push
test
xchg
ficom
jge
sbb
push
mov
fwait
mov
inc
jb
pop
push
clc
add
sbb
xor
fnsave
in
jbe
xchg
and
mov
mov
push
cwtl
out
pop
mov
lahf
lock
lds
mov
mov
jp
xor
std
jne
loop
mov
inc
out
in
mov
sti
pop
jns
add
xchg
cmp
scas
cmpl
and
lahf
leave
xor
stos
cli
addr16
scas
movsl
mov
sbb
ret
jnp
jp
jle
jmp
in
dec
xor
push
je
in
jecxz
imul
jmp
jbe
jae
inc
stos
push
repnz
popf
dec
lcall
xlat
div
stos
mov
arpl
int
imul
lods
push
fldcw
iret
jmp
in
pop
push
popf
inc
hlt
lcall
inc
mov
mov
lret
inc
std
sbb
fisubrl
into
xchg
rol
add
pop
mov
inc
lds
jne
sarb
loopne
in
xchg
aaa
leave
pop
jge
movsb
leave
push
mov
jbe
aaa
leave
jge
push
mov
and
mov
cmpsl
jnp
or
mov
jno
mov
push
dec
mov
push
push
lret
pop
insb
xor
mov
pop
scas
std
xor
and
ljmp
dec
stos
cmp
bound
mov
and
daa
aad
lods
cmp
ja
out
jge
std
nop
iret
cmp
mov
fmuls
add
lahf
or
and
test
and
xor
dec
cs
jne
push
js
mov
mov
inc
sbbl
fcompl
mov
outsb
iret
push
insl
adc
out
rorl
movsl
xor
inc
aas
and
insl
sub
pop
fmull
cmp
add
mov
std
sbb
mov
push
sbb
mov
sbbb
fwait
jg
mov
mov
xlat
or
inc
adc
arpl
jae
loop
mov
divl
or
rcll
gs
sbb
out
dec
xchg
into
mov
aad
xor
push
outsl
push
jae
loop
lods
or
adc
clc
add
dec
sub
outsb
rorl
ljmp
je
in
mov
mov
add
jnp
sub
cli
push
loopne
daa
sbb
and
imul
mov
repz
cwtl
dec
xchg
shll
loop
fisttp
scas
cmp
jecxz
sub
shll
call
cmp
mov
cld
xor
mov
inc
pushf
cltd
and
jo
inc
je
pop
dec
jecxz
sub
lea
jno
call
mov
mov
xlat
dec
sub
mov
pop
or
inc
arpl
pop
aas
rcll
dec
xchg
lods
sub
rsqrtps
sarl
es
imul
mov
fisttp
adcl
pop
int
mov
dec
es
cmpsb
lea
in
xchg
inc
mov
pop
xchg
xor
icebp
es
lret
mov
add
xchg
mov
aam
mov
shr
dec
lods
xor
dec
mov
fs
popf
and
adc
pop
sbb
dec
xor
int
test
mov
sti
js
and
stos
fisttpll
mov
iret
ljmp
es
repz
mov
add
xchg
out
inc
pop
push
aad
xor
push
and
add
cmpb
and
pusha
cmp
xchg
clc
dec
insl
cmpsl
mov
cld
rorl
mov
xchg
or
jmp
fwait
rcll
sbb
lods
std
decl
dec
enter
insb
in
lock
xchg
jae
or
xor
jnp
ja
insl
cmpsb
dec
aad
push
mov
es
dec
adc
popa
jmp
out
les
bound
adc
xchg
add
lret
lock
and
xchg
or
sbb
mov
dec
mov
add
jle
cwtl
add
std
in
pusha
cwtl
jne
fild
cmp
ljmp
jae
scas
push
mov
out
jb
adc
iret
cmc
iret
push
push
lock
and
mov
sbb
mov
mov
stc
xchg
pop
push
and
cwtl
adc
xor
and
bound
arpl
inc
mov
sbb
sti
pop
inc
jl
out
ficompl
mov
int3
and
mov
mov
ficomp
clc
lds
inc
stc
mov
inc
push
pop
leave
rol
cltd
movsb
push
movsb
push
push
addr16
pop
jge
addr16
aaa
data16
or
repnz
add
outsb
jl
fcoms
push
scas
repnz
scas
fsubrl
and
add
pop
cmpsl
gs
into
or
and
icebp
in
jnp
dec
enter
daa
aam
mov
jnp
jbe
mov
out
cmp
out
negb
xchg
movsl
fild
lahf
sub
lods
push
adc
xchg
ret
jns
test
pop
pushf
stc
push
js
xor
push
nop
popa
loope
lahf
enter
cmp
mov
adc
ret
popl
sub
sbb
xchg
mov
mov
push
pop
and
sub
pop
cmp
insb
lcall
lret
sbb
cwtl
sahf
bound
pop
test
mov
in
mov
fmull
push
sub
in
cmpsb
sar
cmp
in
mov
push
lret
iret
shll
or
push
xchg
cmc
and
leave
outsl
xor
fsub
aam
idiv
enter
push
cmp
adc
and
pop
shrb
and
out
jge
cli
cmpsl
add
xchg
mov
in
loop
adc
xchg
test
sahf
mov
add
push
pop
xchg
mov
adc
dec
and
cmp
repz
cld
std
xchg
xchg
in
sbbl
pop
cltd
xlat
mov
clc
sub
push
jmp
jno
cs
mov
inc
xchg
adcb
xchg
fldenv
xlat
into
jecxz
ljmp
lcall
cmp
pop
jbe
push
pop
adc
sbb
push
adc
inc
ljmp
aas
pusha
movsl
pop
jb
or
dec
or
dec
xor
push
into
xchg
notb
ss
adc
jmp
mov
mov
mov
repnz
jo
bswap
in
mov
adc
das
int3
into
jmp
push
sbb
cs
xchg
adc
aam
outsl
sub
dec
ret
cmpsl
rcl
sub
test
cmp
dec
jmp
and
lods
or
cmp
adc
jl
test
fimul
test
jo
push
out
in
scas
ss
xchg
in
sub
icebp
cmp
popa
dec
clc
icebp
pop
sahf
dec
inc
stos
das
inc
repnz
arpl
xor
shll
jle
add
popf
jbe
adc
mov
mov
pop
adc
dec
aam
jmp
xchg
sub
rorl
sbb
fwait
add
inc
push
xor
cmp
insb
push
jmp
enter
daa
ret
sbb
pop
aaa
decl
or
js
sbb
rclb
inc
mov
mov
lret
icebp
scas
ja
cmp
inc
repz
xor
clc
pop
jne
inc
cmc
mov
ss
mov
popl
xchg
iret
sti
popa
sbbl
out
hlt
mov
mov
inc
xchg
jp
and
mov
movsl
xchg
insb
cwtl
pop
cmpl
nop
jle
cmp
out
pusha
xor
dec
fbld
loopne
xchg
adc
cmp
loope
in
aam
jae
or
js
mov
mov
push
insb
mov
and
shr
jmp
xor
pop
push
addr16
adc
testb
ret
lret
adc
xor
lea
les
dec
pop
inc
push
sti
adc
iret
push
int3
or
popf
jbe
cld
cmpsb
mov
sub
xor
mov
xchg
dec
imul
fild
push
mov
inc
jbe
sahf
sarb
pop
inc
sbb
sarl
in
mov
stc
scas
mov
dec
xchg
mov
push
xor
push
scas
scas
mov
sbb
cmp
push
loop
aaa
inc
pop
xrelease
bound
enter
daa
rorl
fs
mov
sub
punpckldq
cli
aam
ds
mov
and
inc
sbb
dec
push
loopne
out
ljmp
jo
xor
mov
pop
ret
lods
sbb
jns
jne
add
push
test
fdivl
in
daa
add
xchg
in
adc
popf
xor
fstp
repnz
pop
pop
and
mov
pop
fdivrp
int
dec
mov
pop
mov
aaa
add
mov
sbb
aaa
jns
add
mov
adcb
jg
sysret
mov
call
fdivr
fs
adc
inc
nop
ss
iret
aam
test
stc
div
adc
lret
lock
sub
or
lds
cmc
jmp
xor
outsl
adc
jmp
stc
jg
movsl
adc
jns
add
out
lods
cmp
jge
push
lcall
cmp
push
or
dec
and
inc
movsl
cmp
loopne
std
sub
dec
add
sti
jb
imul
inc
push
repz
movsb
leave
xchg
pop
and
mov
xlat
hlt
sub
sub
mov
ds
stos
jmp
imul
nop
hlt
mov
inc
ret
mov
mov
aas
div
lea
repnz
lds
mov
push
cmp
sub
lods
xchg
fildl
xor
inc
jno
add
push
test
jb
pop
inc
dec
test
add
pop
push
ret
add
std
mov
lret
jns
add
mov
add
fidiv
mov
aas
mov
pop
adc
stos
movlps
int
push
aam
aas
xchg
ret
and
push
es
cmp
dec
mov
mov
icebp
jg
daa
lods
or
rorl
sub
push
xor
pop
pop
rcl
dec
test
sub
push
mov
push
stos
test
clc
push
mov
push
ljmp
repnz
dec
pop
jp
push
lods
out
rorl
push
mov
add
out
or
or
test
dec
cmp
enter
add
sbb
jbe
shll
xchg
or
jae
fwait
das
into
sbb
xlat
cs
add
sub
inc
sbb
xor
fs
in
loope
xchg
adc
sarl
xchg
lahf
ja
mov
dec
mov
daa
mov
mov
mov
jne
mov
out
rcrb
jns
and
sub
cmp
sub
pop
sub
pushf
add
addr16
fnstcw
push
insb
add
jnp
setp
into
jns
or
into
pop
cwtl
fild
dec
xchg
in
lock
loope
xchg
jae
rolb
popf
rorb
push
xchg
insb
pop
stos
loope
arpl
inc
push
push
sbb
lret
cli
push
data16
mov
pop
mov
iret
push
fldenv
and
hlt
jnp
jae
bound
inc
rorl
mov
gs
jp
sbb
data16
clc
ja
pop
sbb
lahf
cli
movsl
lds
mov
out
xchg
leave
mov
aas
pop
push
add
call
lea
sub
push
mov
aaa
in
push
or
sbbb
jl
cmc
dec
add
xchg
push
je
dec
xor
scas
lcall
cmp
bound
in
and
sub
ret
in
dec
ja
enter
daa
rcrb
cmp
push
jno
imul
sub
or
and
cmp
movsw
in
pushf
sub
xchg
mov
lahf
push
movsb
push
mov
pop
leave
add
jb
xor
pop
cmp
or
pop
ljmp
pop
inc
add
push
lret
and
push
cmp
push
lret
fsubrs
push
int3
call
adc
js
inc
adc
lock
call
imul
bound
stos
sub
sub
lcall
mov
jns
sbb
add
mov
repz
jg
jmp
mov
xor
xor
push
adc
inc
movsb
ss
add
arpl
xor
sub
aad
add
movsb
rorb
cmp
fmul
dec
push
popf
cmc
mov
cmpsb
xor
outsl
repnz
loop
and
dec
adc
mov
add
nop
fs
lods
and
stos
mov
push
test
mov
cmp
inc
lods
cmpsb
in
mov
xchg
pop
in
mov
loopne
add
push
adc
iret
aam
aam
mov
repz
fwait
xchg
sbb
push
sbb
arpl
loop
xor
xor
fwait
lea
pushf
jmp
and
sub
sarl
nop
iret
sti
lret
dec
jmp
fsts
int3
jecxz
ss
movb
lea
and
cmp
movsl
pop
fsubrl
out
out
cmp
inc
inc
clc
pop
adc
pop
faddp
aas
sahf
fidivl
jb
pop
outsb
dec
sti
in
and
cmp
lods
mov
neg
fwait
push
std
pusha
mov
push
mov
xor
sbbl
xor
mov
sub
rorl
jb
nop
das
mov
jg
dec
mov
xchg
push
mov
mov
es
call
dec
mov
mulb
icebp
push
inc
test
cwtl
sub
jno
repz
jp
sbb
and
sub
mov
mov
and
or
std
fs
stos
repnz
arpl
shll
ss
pop
hlt
mov
stos
or
daa
cmpsb
xchg
ret
push
outsl
push
data16
sbb
add
jae
cltd
orl
mov
arpl
dec
mov
sbb
xchg
mov
jmp
imul
pop
adc
jp
mov
add
sti
mov
gs
xor
cs
xchg
pusha
mov
test
mov
inc
fstenv
pop
out
scas
pop
outsb
inc
and
mov
jae
inc
dec
mov
xor
and
popa
push
fwait
bound
jns
pop
fistl
mov
out
out
xchg
xchg
add
sub
daa
fs
mov
shrl
outsb
ds
jle
push
shl
adc
or
popa
sbb
xchg
mov
dec
jmp
in
xchg
jae
fbstp
push
sarl
popf
out
jge
subb
lock
push
arpl
and
sbb
sbb
imul
fwait
scas
and
pop
adc
mov
jno
xor
int3
arpl
push
inc
les
push
stc
adc
or
int3
jecxz
test
dec
mov
add
cmp
shlb
mov
cmp
add
ss
movsb
cmc
mov
jbe
aam
jge
imull
adc
or
mov
aad
add
mov
jl
inc
jbe
outsl
dec
cmp
xor
and
scas
jns
jae
dec
adc
inc
push
js
xchg
inc
jnp
xor
in
xor
mov
sub
xor
jno
sub
fimul
cmp
and
pop
nop
mov
and
loope
lahf
mov
ljmp
lahf
push
xor
jge
into
lahf
xchg
pop
adc
jmp
andl
push
idiv
loope
cld
mov
sub
mov
adc
push
push
cmc
popf
jns
add
jg
pop
rolb
jns
pusha
and
mov
int
data16
mov
jae
lcall
jecxz
mov
mov
jae
cmp
mov
mov
lahf
cmpsl
mov
mov
mov
in
jle
adc
push
mov
cli
lret
stos
shrl
xchg
pop
into
das
cmp
xor
jecxz
outsl
sarl
loop
or
stc
in
sbb
adc
inc
rolb
push
sbb
push
in
lods
or
rorb
mov
dec
cli
inc
in
xor
pop
in
and
sbb
mov
mov
iret
loopne
and
mov
imul
inc
xor
shlb
repnz
jnp
adc
sahf
insl
nop
xlat
jb
loop
push
cmpsb
dec
mov
xchg
xchg
ds
movsl
mov
aam
in
sbb
pop
nop
stos
addl
je
inc
lcall
addl
iret
add
mov
mov
adc
outsl
bound
inc
fndisi(8087
inc
sub
inc
jg
mov
jge
aas
cmp
ja
jb
push
and
xor
sti
mov
negb
stos
into
std
pop
in
cs
insl
push
fs
mov
pop
xor
jbe
lret
shll
mov
bound
int
or
imul
insb
aam
xor
ret
inc
xchg
outsb
dec
pop
insl
and
lods
dec
mov
out
ror
mov
push
icebp
sub
imul
mov
lock
jge
cmp
cltd
sbb
cmc
mov
test
mov
mov
mov
lea
and
xbegin
mov
xor
popa
lea
push
pop
lahf
and
stos
cld
dec
test
mov
xchg
or
push
inc
cmpsb
cld
bswap
scas
arpl
or
cmp
lahf
pop
sti
mov
data16
dec
or
cmpsb
xchg
push
je
pushf
xor
rcll
lret
or
dec
push
push
sbb
dec
sbb
sbb
repnz
inc
xor
cmp
jo
fsub
mov
lret
mov
adc
sbb
int
ja
mov
dec
mov
mov
mov
loop
jno
mov
inc
pushl
inc
pusha
dec
xlat
jno
jns
mov
repz
sbb
xchg
xchg
xchg
addr16
jno
pop
adc
insb
fldz
fdivrs
inc
sbb
aad
in
inc
dec
pusha
add
pop
fild
cmp
jmp
not
into
jae
xor
shrl
popf
push
icebp
push
mov
adc
mov
and
cwtl
sbb
inc
push
imul
dec
scas
test
mov
insl
in
adc
dec
jnp
les
stos
pop
push
loopne
arpl
dec
add
push
js
mov
call
call
cmp
jns
out
in
test
aas
je
mov
mov
leave
lods
dec
and
adc
inc
push
pop
jge
cltd
jb
lret
shrl
bound
dec
add
popa
aaa
dec
fiadd
push
cmp
daa
xor
jnp
loope
pop
andl
popa
xor
xchg
push
mov
inc
loop
inc
or
cmpsb
das
subb
mov
daa
ror
and
inc
or
sub
test
pop
xchg
dec
ds
dec
mull
lret
dec
lock
test
mov
test
pop
jb
xor
xchg
pop
pop
cmp
imul
aad
ret
push
push
cwtl
arpl
fdivl
sub
lods
aas
outsb
mov
stos
jne
xor
cld
in
push
cmp
sbb
shrb
push
int3
mov
cmp
push
lcall
xor
mov
xchg
cmpsb
stc
mov
push
scas
or
sub
test
xlat
sbb
ss
inc
cmp
fstps
jmp
lret
mov
cmp
jp
or
mov
sub
xor
pop
mov
mov
movsl
loop
and
mov
add
ret
data16
stc
lods
icebp
mov
mov
cli
jae
xchg
xor
xor
in
mov
sti
push
scas
mov
loopne
push
push
pop
adc
jp
ret
cld
inc
pop
repz
xchg
mov
cltd
or
fstps
mov
cmp
xorl
pushf
aas
and
jmp
jmp
or
nop
test
jo
je
sbb
flds
adc
jecxz
xchg
mov
lea
loope
call
aaa
push
mov
je
adc
push
dec
into
loop
adc
dec
pop
aaa
ja
inc
push
iret
roll
xor
fcompl
pushl
jge
dec
jmp
jns
rorl
jmp
std
scas
add
sub
mov
pop
or
mov
popa
lret
xchg
lods
mov
repz
lock
dec
ljmp
repnz
aam
test
ret
rcr
mov
insl
or
cmpsl
iret
sub
loopne
mov
lods
dec
xchg
mov
jg
aaa
mov
mov
fiadd
mov
push
pusha
mov
jmp
push
repz
jo
aas
mov
loope
pop
ljmp
xchg
pop
dec
imul
out
out
test
dec
push
sbb
jae
sub
pushf
add
sbb
cltd
icebp
mov
mov
imul
adc
dec
mov
mov
cmc
lret
pop
and
shrb
add
xchg
mov
loopne
or
scas
in
inc
repz
js
mov
push
sarl
mov
out
xchg
nop
imul
xor
mov
push
fldt
dec
test
or
mov
mov
pop
test
pop
scas
movsl
bound
arpl
add
xchg
sti
xor
cwtl
pusha
out
mov
sbb
lea
outsb
addr16
sbb
jp
jbe
mov
insl
mov
inc
jae
jnp
mov
cmp
lods
in
roll
lahf
pusha
fist
mov
sub
push
test
jno
xor
dec
loope
push
test
cmp
push
and
cmp
imul
jo
call
mov
adc
out
fwait
iret
and
popf
pop
lahf
fsubrs
xchg
arpl
jl
or
hlt
xchg
and
sub
fwait
xchg
adcb
pop
pop
test
inc
fimul
dec
enter
in
stos
roll
fbld
xchg
and
cli
movsb
or
adc
jbe
fstpt
xchg
clc
or
icebp
ret
push
orl
cltd
push
sbb
mov
jo
push
shrl
outsl
loop
cmp
insb
push
push
adc
cltd
inc
into
cmpsb
mov
lock
shll
daa
iret
out
cmp
jno,pn
pushf
cmp
jg
dec
cmp
clc
cmp
and
mov
xor
aam
gs
xor
push
pop
pop
popa
movsb
js
inc
lret
pop
add
mov
imull
loope
out
xchg
fcompl
pop
ja
jecxz
mov
and
sbb
rorb
pop
dec
pop
push
dec
sub
pop
sbb
xchg
pushf
and
push
xchg
int
adc
dec
pop
mov
sub
xchg
sbb
pop
sbb
dec
repz
xchg
aas
out
test
pop
add
sbb
xchg
or
mov
rolb
ss
mov
int3
jne
fcoms
cwtl
lret
inc
rcrl
int3
or
lock
xor
push
mov
mov
mov
pop
movsb
imul
mov
repz
lods
fmuls
mov
ljmp
cmpsb
stos
imul
cs
in
stc
in
sti
add
ljmp
and
insb
xchg
xchg
pop
das
aad
adc
pop
imul
jmp
xchg
gs
aas
sbb
adc
jo
lock
and
mov
ljmp
cs
nop
pusha
leave
xor
rcll
dec
inc
push
xchg
je
xor
push
cmpsl
inc
dec
fbstp
call
mov
into
pop
cmc
out
adc
xlat
xchg
fstpt
xor
das
inc
lea
sbb
jnp
xchg
jb
pop
icebp
dec
pusha
loope
and
pop
int3
rcrl
and
inc
cwtl
jecxz
inc
mov
pushf
push
andl
pop
je
add
mov
xlat
fimul
lock
das
daa
cmp
mov
repz
ret
pusha
jl
es
lods
insl
repnz
ds
test
pop
popf
mov
fnclex
mov
lret
ss
and
mov
fcompl
xlat
out
rcrb
mov
xorl
jb
aad
add
adc
xor
popa
mov
add
out
push
fldenv
cwtl
in
push
div
xor
mov
mov
sub
xor
jbe
mov
insb
jecxz
dec
xlat
scas
sub
divb
jno
mov
jae
fwait
jmp
sbb
add
dec
in
incl
mov
or
sub
mov
xchg
dec
push
mov
gs
mov
jb
sbb
lock
push
inc
out
sarb
gs
addr16
cmp
mov
repz
out
call
jns
in
popa
xchg
xchg
mov
and
inc
out
into
add
mov
addr16
jp
lea
mov
jns
insb
scas
lret
jge
pop
mov
in
enter
and
xchg
xor
or
mov
add
cmpsl
jae
mov
out
pop
jmp
sub
xchg
mov
mov
or
scas
dec
push
mov
adc
cmpsl
jo
mov
mov
hlt
cmpsl
and
sahf
stos
ja
int
xchg
or
outsl
cmpsb
fldl
jnp
fimull
push
xchg
xor
xchg
int3
movsb
dec
push
pop
xlat
lods
push
fisubr
shrl
lret
pop
jne
mov
repnz
clc
leave
fwait
in
movsb
xchg
test
xor
or
jge
mov
aaa
loopne
pop
or
sub
or
xchg
push
add
xor
xor
sub
add
aam
fnstenv
inc
sub
in
in
iret
enter
daa
into
mov
mov
sub
dec
jle
gs
enter
or
and
pusha
int3
lahf
out
and
cmp
test
jo
adc
push
jb
pop
jecxz
pop
xchg
jnp
inc
scas
push
mov
loope
popf
rcr
lret
sub
lahf
cmp
adc
in
push
mov
jg
sbb
mov
mov
lock
mov
int
inc
in
sub
or
pop
ss
imul
pusha
mov
in
add
fildl
fcoml
push
jg
adcl
fs
in
push
adc
ss
inc
cmp
dec
aam
imull
fnstsw
cmp
mov
sbb
cmc
int3
xor
test
outsl
outsb
push
loop
hlt
mov
adc
loop
add
data16
mov
mov
lock
out
int
cli
fstps
xor
daa
ds
mov
sar
jo
lock
outsl
loopne
lock
dec
xor
imul
out
xchg
sub
aad
dec
testl
sub
push
mov
xchg
mov
jl
std
and
aad
lret
mov
inc
and
cmp
mov
and
cmp
call
xor
bswap
adc
lret
lcall
pop
jge
xor
adc
pushf
inc
adc
aas
sbb
jb
jo
dec
xlat
ror
and
or
shr
stos
push
imul
nop
inc
std
cld
aad
cwtl
sahf
je
mov
pop
enter
ljmp
xchg
sbb
jae
rorl
sahf
add
das
push
nop
andl
xlat
mov
ret
out
pop
outsl
es
jb
fchs
cmpsl
dec
movsb
pusha
jnp
int
repnz
mov
add
pop
and
mov
pop
pop
int
lea
mov
notb
outsb
push
push
sub
stos
mov
push
jns
pop
fstpl
and
xchg
pop
cmp
popa
shlb
pop
mov
ss
out
mov
xchg
fbstp
adc
ds
nop
pop
cltd
pop
pop
mov
cmp
mov
outsl
pushf
sbb
iret
sub
jne
negl
mov
fcmovbe
adc
les
push
push
insb
rolb
push
imul
sbb
push
in
ret
rolb
jp
xchg
pushf
lahf
lret
mov
in
mov
pop
sub
aam
dec
jp
out
jge
pop
mov
das
ret
dec
cwtl
mov
enter
popf
fucomip
fstl
bound
jns
xchg
xchg
inc
mov
out
push
je
xor
or
and
repz
or
sbb
data16
pop
stc
jle
add
in
and
mov
aam
stos
sbb
inc
sbb
cmpsb
jae
mov
popf
cmpl
mov
iret
sub
stos
and
and
stos
mov
scas
scas
jae
push
adc
ret
jae
iret
loope
push
ret
gs
or
mov
leave
inc
xor
or
ljmp
fiaddl
out
xchg
mov
int3
adc
fmulp
call
rclb
add
test
leave
adc
push
push
nop
xchg
add
mov
jge
fsts
aaa
lahf
xor
sub
jl
mov
jecxz
jecxz
cmpsl
xor
mov
mov
xchg
jg
cmp
je
mov
aam
mov
xlat
adc
daa
int
fs
xlat
or
ljmp
adc
and
jmp
mov
and
int3
push
fmuls
ret
daa
addr16
push
inc
fidivl
jl
lods
xchg
gs
mov
dec
push
lods
sti
loope
jo
fdivl
in
sarl
outsb
out
addr16
mov
aas
ja
dec
outsb
add
sti
mov
xchg
and
push
mov
int
push
xor
test
xor
lcall
sbb
sbb
out
fs
xlat
hlt
jl
pop
push
xor
jg
jno
mov
push
pop
mov
pop
mov
les
ss
cmp
sbb
pop
imull
push
lret
cmp
enter
xor
or
cltd
into
mov
dec
sbb
inc
cmp
outsl
dec
ret
fldcw
out
idivl
lock
movsb
lds
add
sahf
cli
or
inc
xor
in
iret
cmp
insl
xchg
dec
js
xor
loopne
pop
out
pop
insl
xor
imul
daa
jecxz
jmp
sub
pop
cmp
xlat
outsb
and
mov
pushf
inc
lret
cmp
cs
aas
cli
aad
adc
dec
xchg
std
je
xor
in
sub
jecxz
fwait
es
push
or
call
mov
mov
pop
jmp
adc
xor
dec
test
fistpl
push
jnp
fwait
imul
aas
mov
mov
dec
dec
push
xchg
aaa
xchg
daa
imulb
jo
std
mov
push
nop
mov
movsl
sbb
dec
pop
sbb
popf
xchg
add
loop
mov
mov
xchg
lock
test
mov
pop
fbld
jle
push
es
ja
rolb
lahf
pop
xchg
cmpsl
int3
push
pop
mov
mov
mov
mov
jl
dec
and
jmp
push
rolb
lods
sub
sti
mov
adc
cmp
or
shr
clc
js
xor
push
dec
mov
rcrl
and
sbb
xchg
es
push
lods
cltd
dec
cmovns
pop
sbb
cltd
xchg
push
jnp
lret
fsub
mov
jb
rorb
rclb
out
or
push
mov
or
ljmp
test
mov
add
mov
inc
lea
dec
mov
mov
jmp
pop
mov
ljmp
call
cmp
insl
sbb
adc
cmc
mov
sahf
pop
sbb
dec
jne,pn
addr16
jo
ret
scas
repnz
js
jns
stos
mov
pop
dec
loope
inc
sub
das
sub
jle
insl
addr16
add
fadds
insb
test
dec
jnp
in
jle
push
sub
xor
cli
ljmp
mov
je
jae
and
push
int
je
stos
jno
mov
push
inc
push
stos
xchg
daa
and
push
sub
and
imul
push
pop
inc
mov
test
iret
inc
jnp
ret
pushf
pop
inc
pushf
aaa
hlt
cmp
loop
inc
sarl
dec
push
je
aaa
fidivl
sub
jp
out
xor
hlt
test
fdivrp
add
stos
loopne
mov
fsubrs
movsb
lods
lock
mov
xchg
or
sbb
mov
cli
add
sbb
mov
fdivrs
xor
out
fsubrl
sub
push
outsl
pop
and
int
cmpsb
cmp
mov
enter
daa
int3
push
dec
cmp
test
jno
inc
out
sub
popa
jb
ret
notl
push
mov
pop
and
ret
cld
lahf
and
cmpsl
push
stos
push
xor
add
testb
dec
xor
adc
popf
decb
pop
aam
int
push
aam
pop
mov
pop
loope
addr16
and
sub
pop
out
lret
rcrb
mov
sbb
xor
lods
mov
stos
leave
and
xchg
je
je
fmuls
sub
out
pop
xor
daa
lcall
fimul
in
sahf
jp
add
adc
jg
fs
mov
mov
inc
fs
and
adc
sub
mov
or
fadd
fsts
imull
mov
rcrl
cmp
pop
in
adc
into
sahf
and
cmc
pop
sbb
xor
push
dec
loop
xchg
cmc
stc
addb
ret
add
pop
aaa
lods
lea
mov
stos
pop
sub
aas
sbb
in
cmp
mov
push
mov
mov
sub
inc
xor
pop
mov
out
adc
inc
xchg
imul
stos
mov
loop,pt
cmp
loope
xlat
lods
jg
sub
or
jmp
dec
jmp
mov
mov
nop
icebp
dec
mov
stc
push
inc
inc
cmp
fstps
cltd
je
mov
push
dec
jmp
rolb
call
xor
dec
adc
ljmp
ret
aad
inc
and
inc
mov
ficoml
add
js
lds
mov
xchg
test
outsb
ret
sbb
dec
cmp
mov
jo
mov
jecxz
cld
enter
push
cmp
sub
ss
add
sub
into
mov
aam
lret
cmp
or
mov
in
dec
lcall
mov
pusha
ret
cmp
loopne
mov
fwait
xchg
adc
xor
rclb
subb
pop
push
test
lahf
dec
mov
cmpsb
xchg
push
decl
aam
mov
push
xchg
jbe
add
pop
test
stos
cmpsl
cld
xor
jnp
push
xchg
insl
cld
xor
push
stc
dec
add
cltd
int
sti
xor
push
bound
jne
sti
dec
or
or
jae
mov
sbb
rol
ret
adc
in
fwait
js
adc
dec
std
imul
sbb
pop
add
xor
leave
jne
ret
popa
xchg
je
sub
pop
pop
cmp
mov
daa
sahf
dec
pusha
cmp
inc
stos
xchg
add
jae
je
or
clc
dec
jne
push
mov
sub
bound
jg
xchg
daa
stos
sbb
mov
icebp
in
or
xor
sub
jp
or
lock
jnp
aaa
cmp
in
lcall
or
push
xchg
test
arpl
inc
cs
cmp
daa
push
nop
shr
rorl
mov
stos
push
sahf
es
pusha
leave
sbb
push
imul
jp
lahf
icebp
jno
pop
inc
pop
iret
lahf
jns
ret
dec
pop
jnp
pmuludq
fs
mov
mov
dec
outsb
inc
repz
addr16
nop
xchg
cmp
sbb
jg
ficom
inc
lds
push
insl
push
mov
sub
add
push
lock
pop
sarb
and
aaa
sbb
xchg
repnz
outsb
fisttp
cmpsl
popf
push
test
lret
inc
xor
mov
ficomp
aad
cmpsb
mov
insl
mov
daa
lret
xorl
inc
in
jno
enter
sub
xor
scas
movsl
push
aas
int3
and
xchg
dec
lahf
inc
push
mov
test
xchg
mov
xor
lret
pusha
cmp
push
lret
loope
sub
lret
pop
push
sub
pusha
cmp
jne
add
xlat
cmp
call
push
mov
push
shlb
mov
push
ja
jmp
aas
and
lahf
pop
pop
pop
mov
sbbl
inc
push
or
nop
mov
lahf
test
jmp
jg
pop
cli
mov
popa
xor
jle
jl
cmp
rclb
into
push
add
cmp
cmpb
imul
push
mov
testb
mov
or
or
xor
outsl
or
loop
mov
stc
aaa
addr16
lea
add
jge
incw
rorl
imul
and
in
movsl
out
sti
mov
into
cmp
adc
maxps
or
les
sub
xchg
jno
sub
outsb
mov
xlat
in
pop
bound
sar
mov
xchg
pop
stos
jmp
mov
fcom
ret
nop
int3
dec
mov
inc
pop
fimul
cs
cmpsl
jecxz
lahf
pop
push
pop
in
lea
xchg
mov
mov
lods
pop
sarl
dec
pop
inc
sbb
sti
dec
aam
dec
mov
out
inc
aam
sti
aas
notl
mov
push
loop
dec
cmp
arpl
xor
divb
ret
insb
cwtl
iret
leave
mov
mov
call
cld
repz
pop
lret
ja
mov
mov
test
mov
or
test
rcl
out
ret
pushf
xchg
icebp
subb
dec
xchg
sbb
fist
icebp
aaa
push
fsubrs
lds
ret
and
pop
bound
push
mov
shl
cmp
jae
push
test
xchg
stc
mov
jg
push
ret
fisttpll
xchg
clc
out
push
sbb
ljmp
out
pop
mov
add
loopne
mov
inc
push
arpl
push
add
or
popa
xchg
stc
mov
js
leave
dec
jae
leave
test
dec
int
repnz
add
rcrl
sti
or
mov
icebp
fwait
cmpsl
inc
sub
add
mov
jns
xor
lods
or
test
in
mov
divb
mov
and
dec
push
inc
inc
idivb
fimull
dec
repz
and
sarl
adc
jp
jmp
jns
clc
cmpsl
xchg
repnz
add
inc
movsb
inc
sub
je
scas
sub
jp
repnz
pop
jne
jnp
dec
jge
jmp
shl
inc
test
pusha
cmpsb
and
cmp
xchg
jl
imul
cmp
mov
push
jae
clc
mov
push
mov
mov
std
jns
in
xchg
xlat
mov
push
out
lock
dec
mov
jnp
ret
lahf
pop
mov
jmp
rcll
scas
inc
fldcw
mov
in
mov
push
jb
sbb
sbb
int3
push
pop
jl
xchg
dec
add
mov
ret
mov
test
bnd
add
ja
into
movsb
ret
push
jge
std
jbe
pop
stos
jge
sbb
add
or
mov
dec
out
cmpl
jl
mov
jecxz
push
dec
pop
jo
sbb
mov
dec
jno
cmp
jg
push
add
es
cmpsb
inc
aaa
jmp
enter
daa
lret
cmp
movsl
jno
insl
mov
enter
sarl
push
stos
shld
jbe
lahf
bound
push
push
ret
out
inc
roll
push
fdivs
pop
stc
and
adc
and
inc
pop
cmp
push
push
xlat
imul
ret
jbe
push
sub
pop
lea
push
push
push
ss
ret
aaa
fidivl
dec
stos
push
jp
sbb
cmpsb
loopne
sub
lahf
pop
pop
xor
rcrl
and
mov
or
sbb
sub
orb
jg
pop
and
repz
add
cmc
test
lds
insl
ss
pushf
cmp
mov
cmp
call
lret
mov
mov
cmc
or
sbb
call
lret
outsl
ljmp
stc
out
xor
adc
push
in
add
and
lods
pop
loop
mov
iret
xchg
out
std
or
movsl
jmp
test
adc
sti
insb
loope
cld
jge
gs
dec
shl
jae
sbbl
push
punpckhwd
jecxz
loop
mov
mov
icebp
cmp
sbb
xlat
sub
inc
sub
add
mov
inc
out
jmp
xchg
mov
mov
aad
mov
nop
cmpsl
pop
add
pop
inc
insl
mov
fxch
es
mov
push
pop
xor
sbb
sbb
xor
pop
je
dec
adc
ret
jo
fldt
jle
pop
or
pop
inc
out
push
push
aas
xchg
dec
fnsave
lds
dec
mov
std
and
pop
jmp
div
cwtl
xor
mov
mov
xchg
and
adc
outsb
cld
push
mov
mov
jge
mov
mov
ficompl
mov
cmp
aam
push
ret
xchg
insl
jne
or
aam
cmpsl
leave
push
push
mov
push
or
or
in
into
and
mov
xor
sarb
xchg
test
jecxz
mov
pushf
out
test
fnsave
fnsave
xchg
pop
sub
shll
iret
jle
dec
imul
out
inc
adc
push
and
pcmpgtd
ja
xchg
in
ret
cltd
cmp
in
lods
insb
push
mov
jnp
imul
sti
test
pop
jnp
jno
xor
xor
mov
fwait
sub
push
xchg
pop
mov
add
dec
push
lcall
xchg
xor
xchg
in
fmull
mov
xchg
aam
bound
pop
ja
mov
inc
xchg
pop
inc
fstps
cmp
leave
xchg
daa
jne
fwait
jnp
orl
aad
fcompl
repnz
mov
and
clc
sub
outsl
push
lea
pop
dec
jp
lea
shrb
jnp
es
in
insl
cmp
push
out
fistp
iret
xchg
dec
cwtl
mov
inc
inc
pop
sub
push
push
pop
ss
pop
insb
sbb
lret
mov
pop
and
stos
sbb
jns
imul
scas
cmp
push
sub
imul
not
lret
pop
jmp
andb
jmp
adc
or
lcall
int
sub
cmp
pop
ret
ficomp
lds
pusha
sar
loopne
gs
rorl
xchg
out
push
pop
movsb
dec
mov
push
int3
pop
lahf
jbe
iret
dec
jge
cld
sub
call
insb
test
add
mov
jl
jb
dec
out
inc
push
outsl
sub
xor
clc
sbb
scas
jno
adc
cmp
sub
inc
repz
ds
push
or
leave
imul
add
pushf
cmp
lret
sarl
ja
mov
and
outsb
lret
lahf
adcl
test
cmpsl
dec
xchg
xor
rcl
or
bound
lcall
test
and
mov
jge
dec
outsb
jae
adc
sub
pop
xchg
inc
xchg
fwait
xor
sarl
jecxz
jge
cmp
or
jbe
pop
mov
ficompl
popf
xchg
lcall
bound
sahf
arpl
aad
jne
cld
andb
jg
push
lea
insb
gs
push
adc
pop
pop
xchg
jl
mov
jns
divb
or
shll
cmp
test
and
into
inc
in
mov
scas
out
xor
dec
popa
loop
mov
and
add
add
add
loopne
mov
mov
inc
cli
fcomp
repnz
std
cltd
in
jnp
mov
pop
and
loopne
xlat
jae
jmp
aaa
dec
imul
into
xchg
dec
mov
cmp
mov
push
pop
sub
stos
cmpsl
pushf
in
inc
or
fdivs
cs
xor
aad
pop
mov
dec
or
ret
add
add
sub
jo
gs
pop
jae
pop
out
call
mov
xor
bound
dec
xor
fistpl
xchg
push
fild
scas
stos
inc
or
aas
xor
fcoml
dec
sub
pop
and
lods
pop
jae
xchg
divb
jne
std
aas
cmpl
jp
pushf
mov
subl
and
mov
mov
lock
loop
das
popa
je
mov
repz
mov
inc
mov
adc
dec
mov
mov
enter
inc
test
icebp
in
push
lods
mov
cs
mov
and
xchg
mov
rorb
loopne
test
cltd
mov
std
mov
fstpl
clc
fs
push
xchg
lcall
popa
inc
les
stos
je
mov
movsb
stc
ja
inc
xchg
mov
int
pextrw
mov
movsl
inc
cmp
negl
push
xchg
adc
enter
stc
inc
xchg
and
sbb
gs
aad
or
lret
add
jge
add
icebp
jo
cld
js
xor
lcall
adc
cmpsb
movzbl
arpl
or
pop
aam
adc
add
inc
jo
inc
mov
pop
imul
mov
pop
mov
bound
jo
adc
xchg
cmpl
out
mov
or
jg
sub
outsb
jp
fcompl
insb
xor
jnp
jmp
in
mov
fistpll
ret
xchg
and
xor
jle
outsb
inc
dec
push
loope
sbb
push
fsts
inc
xor
xchg
or
push
or
mov
pop
cmp
and
das
into
sbb
aas
inc
imul
scas
popf
popa
jns
je
imul
mov
jl
pop
and
outsl
arpl
lcall
call
cmc
inc
jo
jo
cmp
xchg
ds
int3
es
nop
pop
icebp
xor
mov
rclb
cmpsl
mov
and
add
gs
movsb
fdiv
xlat
push
sbb
jbe
mov
daa
sbb
add
bound
jbe
mov
xchg
stos
in
push
push
sub
pop
jo
js,pn
push
push
and
cmp
insb
push
fwait
sbb
aaa
cmpsb
inc
adc
in
dec
jl
enter
daa
enter
fistpll
jno
and
cmp
adc
lcall
and
push
mov
test
mov
das
xor
movsl
aas
pop
jo
jle
add
and
loope
lods
int3
push
jbe
insb
aad
outsb
sub
adc
push
stos
xchg
hlt
iret
xlat
scas
and
dec
mov
adc
and
je
or
int
pop
mov
adc
fiadd
xor
mov
push
hlt
and
mov
cmc
jmp
sbb
push
and
dec
pop
and
mov
lds
adc
adc
lret
cmp
mov
inc
imull
mov
lret
mov
cmp
hlt
bound
xchg
cmpsl
push
cmc
jbe
enter
test
loop
inc
sar
pop
mov
adc
add
data16
push
mov
aaa
out
lods
inc
cli
or
std
in
out
sub
lret
incb
arpl
out
loopne
cmpsl
xchg
pop
or
les
or
ja
jp
sub
push
or
andb
mov
push
cmp
adc
mov
xchg
jno
jmp
cwtl
xor
dec
cmovbe
xchg
push
nop
pop
mov
dec
inc
xchg
add
fnstcw
adc
cmovae
jecxz
mov
pop
lea
push
call
das
cmp
pop
fcmovb
dec
adc
dec
pop
dec
sbb
out
mov
nop
pop
dec
je
inc
cmp
and
aam
jb
sub
and
xchg
repz
sbb
cwtl
or
out
add
add
mov
ret
mov
addl
mov
or
sub
dec
stc
lock
xchg
das
inc
loope
mov
stos
mov
lret
xor
or
inc
cmpsb
jl
xchg
and
js
lods
icebp
mov
sarl
mov
sub
mov
mov
xchg
shlb
inc
sub
fwait
test
ja
mov
mov
fldl
mov
xchg
fnstcw
adc
pop
mov
mov
loop
mov
pop
addb
rcrb
xor
sbb
mov
xorl
test
das
loopne
outsl
scas
out
sbb
push
ljmp
adc
fwait
xor
or
fmuls
push
or
pop
lcall
repz
in
add
test
mov
lods
pop
lcall
sub
adc
xor
mov
mov
pushf
daa
xchg
jne
pop
xchg
mov
cmp
out
pop
lods
inc
bound
adc
cmp
push
popa
mov
out
push
mov
popf
call
xor
daa
mov
and
mov
insb
jnp
idivb
pop
or
pop
imul
xchg
and
jmp
pop
cltd
cld
jae
add
xor
into
in
push
dec
ja
stos
sarb
and
push
sbb
fcomps
aas
hlt
push
push
mov
fidiv
ret
push
push
mov
hlt
mov
packsswb
adc
dec
or
int3
cmp
out
push
mov
xchg
xchg
addr16
adc
mov
fisub
inc
ret
xor
mov
ja
lods
leave
fdivl
inc
push
push
ja
pushf
adc
fstpl
pop
imul
dec
shrl
jl
call
push
xor
and
scas
push
clc
scas
das
fnstenv
and
aaa
dec
cmp
cmp
popf
inc
adc
pop
in
ss
mov
or
daa
pop
cmp
jno
xor
xlat
cwtl
cmp
cs
or
and
cltd
pop
lahf
mov
dec
and
mov
dec
mov
pop
xchg
mov
pop
stc
imul
push
push
lret
loope
push
adc
sub
mov
adc
loope
mov
rorl
xchg
adc
lods
dec
push
cmp
int
jo
sub
inc
push
lcall
xor
xor
lahf
test
pop
stos
jg
fdivl
pop
lret
data16
adc
scas
sarb
insb
test
imul
in
adc
movsl
sahf
pop
rcll
cmp
mov
add
or
or
xor
cmp
xchg
mov
adc
adc
arpl
push
xchg
in
or
push
mov
dec
pop
out
lret
cli
cli
ds
xor
inc
in
push
sub
jns
lcall
dec
xchg
loopne
mov
fbstp
imul
pop
repz
cmp
jge
pusha
sbb
in
leave
stc
xlat
call
inc
pop
mov
inc
jne
jmp
rclb
loope
aad
fisttpl
dec
lret
and
inc
cmpsb
jbe
fnstenv
repz
add
arpl
aad
xchg
call
scas
out
pop
aad
adc
dec
pop
out
sbb
mov
dec
pop
repnz
mov
inc
add
jae
xorl
pop
pop
and
shll
adc
pusha
std
into
jg
mov
and
inc
in
sbb
and
jl
mov
sbb
mov
lock
das
aad
pop
push
lcall
cmpl
fdiv
mov
mov
insl
sub
dec
cmpl
mov
xchg
or
or
es
dec
jl
and
mov
pushf
xor
aas
sub
inc
test
es
mov
push
into
loop
stc
push
xchg
sbb
ljmp
push
dec
pop
add
push
shrl
movsb
notl
iret
pop
iret
jae
xchg
adc
xor
lock
test
dec
setnp
xchg
mov
pushf
jbe
imul
das
fwait
arpl
jnp
movb
adc
mov
or
sub
in
sbb
xchg
lds
mov
dec
xchg
test
dec
pop
testb
pop
mov
cmp
scas
dec
jg
pop
jne
push
xchg
mov
outsb
dec
out
negb
lahf
bound
inc
pop
xchg
push
popa
sbb
dec
mov
repz
pop
es
aam
pop
xchg
cmp
jmp
pop
lcall
and
in
andb
data16
mov
lret
xchg
enter
insb
push
sub
das
jae
jmp
cmpsb
enter
fnstcw
mov
and
cmpsl
sbb
inc
shrl
xchg
scas
arpl
icebp
push
add
je
cmpsb
ss
ret
cmp
mov
hlt
incl
arpl
jmp
inc
in
enter
ljmp
mov
out
xchg
cld
mov
pop
dec
jnp,pn
inc
ds
or
mov
dec
pop
mov
repnz
leave
push
icebp
test
push
mov
out
jge
lock
aaa
fadd
push
or
jl
movsb
inc
lret
jl
das
push
dec
xor
mov
sbb
dec
xor
or
movsb
and
outsb
mov
xor
mov
or
cmpsb
dec
sarl
cli
pop
enter
daa
and
cmp
mov
sub
xchg
fldl
dec
movsl
inc
std
pop
and
int3
xchg
popf
mov
test
enter
lret
pop
rcl
das
xor
js
mov
cmp
push
cmp
js
and
pop
sub
mov
adc
mov
bnd
aam
cmp
jl
jnp
mov
and
push
bound
xchg
stos
sub
jne
pop
sbb
push
mov
xor
sahf
dec
jne
test
clc
into
xorb
mov
cltd
add
icebp
mov
cltd
ss
popf
jae
stos
inc
pop
fsubs
lret
cmpsl
scas
push
shr
jle
pusha
pop
stos
or
adc
cmc
add
loop
rclb
cwtd
adc
ficom
stc
lret
adc
add
add
inc
shll
pop
pusha
lods
divl
push
mov
out
mov
cli
jno
pop
xor
fsubr
mov
push
popa
arpl
xchg
fild
adc
lds
les
or
push
push
fwait
xchg
inc
inc
jo
sub
adc
jno
sub
sbb
in
rcrl
lods
dec
cs
mov
nop
adc
dec
sub
mov
mov
mov
je
pop
jp
popf
dec
lods
imul
lea
add
rol
sub
popf
rcll
cwtl
in
xor
xchg
out
pop
xchg
sti
inc
inc
dec
jle
inc
pop
jnp
aas
adc
jb
pop
rorl
outsb
addr16
gs
shll
int
add
and
xor
pop
cwtl
jbe
adc
xor
jae
cld
lret
lret
jmp
aam
or
iret
mov
push
sbb
mov
das
inc
mov
sbb
rol
addr16
lret
setne
jl
aas
cmpsl
lds
aam
fiadd
icebp
push
stos
lods
ja
sub
jno
inc
and
es
rcrl
out
dec
jo
push
cmp
jmp
dec
pop
mov
mov
push
xchg
pushf
adc
clc
adc
bound
cmp
mov
pop
clc
mov
in
out
int
out
pop
mov
push
stos
inc
pop
psrad
fcompl
fcomps
dec
mov
xchg
test
push
cmp
dec
mov
or
and
fwait
xchg
push
ljmp
cmp
aad
fsts
jecxz
lea
xchg
adc
out
mov
jg
mov
add
pusha
dec
adc
push
mov
cmpsl
std
xchg
dec
negl
jne
scas
lret
mov
out
aad
add
push
es
out
sbb
jmp
aam
out
loope
sub
pop
lcall
mov
sbb
jb
xchg
jnp
xor
data16
xchg
pusha
lods
call
mov
jmp
jo
sub
cmp
pop
popf
mov
push
jns
pop
mov
and
cmp
imul
lods
push
dec
inc
push
iret
fld
and
inc
cmpsb
movsl
pop
hlt
dec
addl
or
ret
inc
in
addl
inc
or
inc
sub
int3
out
inc
pop
jle
leave
fsubp
cmc
pop
in
adc
push
xor
repnz
aam
movsb
jns
push
push
or
jbe
sub
jge
pop
sub
aaa
xchg
out
or
test
pop
jl
imul
sti
in
fbstp
frstor
in
ret
sub
inc
adc
cld
ret
stos
sub
in
add
std
enter
daa
lds
cmp
dec
jno
rcll
lods
inc
lock
ja
dec
dec
shll
je
xchg
jo
xchg
test
shrl
xor
and
pop
in
lods
js
mov
or
jne
dec
loope
sbb
int
cmp
outsb
incl
rclb
mov
sbb
or
lahf
push
mov
sub
insl
lcallw
stc
scas
pop
mov
or
sbb
jmp
cmp
sub
mov
jae
mov
sti
fs
adc
dec
ss
jmp
fsub
mov
xor
mov
roll
cltd
or
loope
into
shll
pop
xor
movsb
adc
adc
stc
add
mov
adc
mov
mov
sub
out
xchg
inc
cli
movsb
mov
ss
daa
rcll
xlat
mov
stos
xor
adc
jp
or
inc
in
adc
out
les
daa
repz
mov
xchg
add
xchg
sbb
int3
fst
data16
jb
frstor
cwtl
clc
mov
js,pn
rcl
ljmp
mov
inc
int3
cli
jno
loopne
je
jg
jecxz
or
imul
push
call
lods
iret
loope
repz
dec
fnstsw
pop
cmp
mov
or
aas
mov
push
inc
inc
adc
and
dec
jnp
scas
dec
testb
std
fldt
inc
mov
imul
outsl
js
push
xor
cld
cmc
cwtl
xor
pop
scas
popf
mov
fadd
mov
int3
dec
das
fnstsw
std
mov
iret
sub
aam
push
ret
divb
mov
dec
ja
push
cmpsl
les
xchg
inc
mov
mov
xchg
call
inc
mov
or
lret
cmp
dec
and
push
lret
clc
out
clc
push
inc
popf
xchg
xchg
stc
dec
ljmp
pop
mov
dec
jo
xor
fist
test
cmovno
stc
add
mov
cltd
dec
inc
insb
xor
xchg
mov
or
xchg
imul
or
ljmp
sarl
push
dec
and
pop
test
les
cmp
fisttp
add
stc
in
cmp
xchg
arpl
mov
sbb
mov
rolb
or
dec
add
loope
mov
push
mov
dec
inc
dec
cli
jne
insl
cmpsb
mov
adc
pop
bound
inc
sbb
imul
or
leave
addr16
mov
mov
stos
lahf
insb
add
jecxz
jle
or
in
xchg
pusha
dec
jg
fcomip
or
xchg
outsb
push
jne
pop
xchg
pop
inc
jnp
lcall
sbb
mov
push
xchg
fildll
xchg
mov
or
dec
scas
sub
push
nop
lods
nop
adc
iret
cmp
nop
ret
pop
cld
aad
hlt
xchg
adc
jmp
iret
or
cmp
cld
pusha
fimull
xchg
lcall
pop
lods
ss
lds
push
dec
rolb
bnd
or
pop
sbb
push
push
test
jbe
in
jge
mov
sbb
nop
mov
add
ror
mov
dec
adc
xor
mov
cmp
fnstcw
sub
repnz
mov
ds
dec
mov
cmp
ds
sub
ds
ret
add
or
inc
movsl
lret
test
fiadd
inc
xor
mov
cli
pop
or
jge
out
jne
pop
mov
add
daa
sub
lods
xor
sub
dec
jge
bound
cs
jb
lods
jo
adc
ljmp
and
cmc
push
mov
sub
adc
sub
sub
les
push
sar
mov
cs
test
sbb
jg
xchg
sbb
mov
push
cmpsb
adc
aad
cmp
popf
mull
xor
rcll
les
adc
dec
jge
into
mov
out
xchg
mov
xor
mov
and
inc
loop
xor
cmp
adc
push
roll
outsb
pop
xchg
push
stc
lods
lds
mov
out
cmp
xor
xor
in
xchg
dec
sar
ret
dec
pushf
dec
gs
mov
pop
test
push
pop
aaa
sbb
stos
mov
or
repz
fdivr
sbb
popf
stos
rcl
loope
sub
fcomip
mov
inc
js
jmp
ja
fistl
mov
mov
jnp
leave
imul
fsts
xchg
sbb
adc
mov
mov
lods
call
sub
aas
pop
cmpsb
dec
pop
adc
int3
dec
enter
inc
mov
pop
fistl
inc
pop
push
fild
lods
aas
push
invd
jb
pop
stos
dec
jge
repnz
test
testb
ljmp
push
push
mov
ret
popf
sbb
cld
and
fs
leave
mov
xor
fs
arpl
insb
cmp
das
mov
and
mov
lods
rcrl
test
pop
insl
push
jb
cld
cmpsl
ret
movsb
mov
icebp
sbb
lods
dec
xlat
dec
mov
mov
bound
pop
add
xor
lods
mov
test
aas
mov
fstpl
fstpl
imul
xchg
aad
das
ljmp
arpl
mov
pop
mov
out
xchg
lret
movsl
mov
lahf
push
je
add
or
test
xor
push
xor
ret
inc
add
or
imul
sarl
jno
and
push
fs
fadds
js
adc
pop
cmp
jns
jnp
jg
int3
inc
aam
mov
lcall
push
das
pop
jnp
les
adc
incl
ucomiss
xor
dec
sub
cwtl
mov
xchg
dec
push
mov
orl
out
mov
or
insl
and
jecxz
icebp
hlt
mov
inc
iret
insb
dec
inc
lahf
jnp
push
fwait
jle
jmp
in
pop
shlb
sub
fist
bound
inc
gs
push
sub
inc
xchg
mov
test
cmp
mov
push
stc
stos
sahf
mov
in
sbb
xchg
sti
mov
scas
mov
sbb
jnp
adc
mov
iret
xchg
cld
mov
pop
xor
hlt
loopne
test
add
mov
push
jmp
stc
mov
icebp
int3
mov
pusha
jge
sub
sbb
popf
and
rcrb
cltd
bnd
ds
mov
and
test
insl
jge
call
nop
aaa
adc
dec
sbb
imul
lahf
dec
subl
xor
scas
stos
mov
lods
cmp
fstpt
xchg
movsb
leave
inc
dec
mov
nop
in
shlb
outsl
dec
xchg
daa
ret
jnp
cmp
xor
adc
inc
cmp
ds
jp
movsl
push
pop
jbe
stos
ffreep
lahf
cmp
scas
push
push
add
lock
js
jbe
xor
adc
les
cmc
push
shrb
sub
fsubl
and
nop
add
adc
dec
pop
jae
iret
les
sbb
add
mov
mov
and
push
push
cs
sub
addb
movsb
cltd
lcall
xchg
mov
or
test
lods
jg
test
mov
fs
into
xor
ficompl
sbb
insl
cmp
pop
adc
in
out
lret
sbb
cmp
sub
mov
aaa
sbb
pop
pop
pop
xor
xchg
outsl
add
stos
stc
out
lods
cmp
in
sahf
add
and
lods
xchg
into
pop
pop
out
imul
fcmovu
icebp
in
std
test
adc
gs
test
mov
cmp
out
add
sub
mov
mov
test
mov
xchg
mov
sbb
fcomps
in
mov
pop
rcl
mov
out
lret
fucomp
jb
dec
cs
aad
mov
pop
mov
inc
repnz
or
je
dec
daa
jecxz
dec
outsl
pop
mov
call
stos
enter
sub
adc
ficoml
pop
jle
jno
loope
mov
lods
adc
out
add
lods
ret
dec
hlt
jp
and
adc
rorl
jnp
leave
adc
std
sub
sbbl
push
leave
jo
xor
mov
lret
cmp
inc
mov
cmp
lock
mov
or
cmp
mov
adc
pop
es
sub
insl
dec
xchg
dec
insl
and
cmpsl
ret
mov
out
cld
adc
jp
mov
fidivl
cmp
dec
or
push
sub
xor
outsb
daa
or
fiaddl
addr16
loop
xchg
adc
jecxz
xchg
push
fisub
jbe
pop
stc
inc
imull
imulb
xchg
in
pop
es
cmp
adc
aam
mov
lea
outsb
adc
xchg
lock
test
out
xchg
and
sbb
loop
rol
mov
repnz
push
pop
cmp
add
xchg
lea
mov
data16
mov
inc
in
stos
push
xchg
add
mov
mov
mov
ss
mov
dec
jmp
roll
stc
mov
hlt
jne
dec
or
in
jne
pop
adc
jb
mov
loope
xchg
int
xchg
dec
test
sbb
push
out
adc
or
and
cmpl
sbb
mov
adc
lea
in
jnp
mov
fbstp
mov
out
jmp
xchg
repnz
push
imul
mov
test
jae
mov
out
inc
inc
arpl
int
scas
out
mov
adc
pop
xchg
negb
inc
ret
dec
pop
push
repz
sub
arpl
lcall
out
push
push
fidivl
popa
mov
test
enter
ret
aam
lds
adc
mov
mov
repnz
test
leave
das
push
aas
movsb
sbb
push
cmc
movsb
jecxz
jmp
fwait
jge
add
add
insl
push
or
xor
add
roll
jl
pop
mov
pop
pop
push
movsb
inc
jp
pop
and
inc
lock
mov
fisub
out
into
cmp
mov
inc
fsubrl
stc
cmpsb
pop
mov
mov
fmull
cmp
ljmp
out
adcl
or
movsl
pop
popf
cmp
lahf
pop
mov
adc
hlt
xor
cmp
fnstcw
cmpsb
rcll
xor
addr16
loop
loope
lret
into
xchg
cld
sub
fwait
in
sub
adc
sub
das
and
sbb
daa
mov
decl
jbe
lods
push
xchg
popf
xchg
es
mov
pop
sub
mov
mov
test
mov
es
and
pop
jg
lds
mov
cmp
lods
jl
fs
pushf
dec
ss
fisub
inc
cmp
pop
mull
sbb
roll
cmp
pop
into
or
lret
into
jl
xchg
cmc
and
ret
push
loop
loop
jmp
sub
scas
stc
cmpsb
xchg
dec
adc
out
incl
and
fsubrs
leave
dec
push
mov
inc
sbb
mov
xor
push
cs
adc
mov
loopne
das
cmc
pop
ret
adc
cmp
imul
repz
insl
push
xchg
dec
ds
sbb
adc
fst
and
sub
je
mov
cltd
repz
popa
add
mov
out
pop
nop
jg
cmp
cmpsb
mov
inc
add
xor
mov
jecxz
xlat
sahf
jb
orl
sub
inc
pop
or
arpl
hlt
fisub
jp
inc
push
das
push
aas
mov
inc
jb
xor
and
repz
pushf
pop
adc
or
or
shlb
xchg
add
cld
jbe
loope
cmpsl
pop
xor
repnz
xor
jp
test
hlt
jnp
aam
fwait
jmp
sbb
insl
lods
jnp
dec
push
inc
imul
and
mov
std
mov
and
xchg
or
pop
push
pop
rclb
fsubrl
and
pop
test
cs
adc
push
popf
or
insl
pop
xor
xchg
push
xlat
pop
ljmp
scas
pop
movsb
push
bound
pop
std
in
xor
push
push
test
fildl
sub
cltd
repz
xor
pop
stos
mov
xchg
mov
push
test
xchg
aam
imul
inc
shrl
inc
ret
xor
dec
ret
stos
add
add
scas
popf
sar
je
xor
idivb
xchg
push
xlat
push
mov
test
mov
icebp
add
mov
xor
xchg
xchg
mov
arpl
dec
out
push
pop
jne
add
out
push
xchg
xchg
bound
jns
or
andl
out
pop
enter
sub
inc
and
and
push
mov
mov
fildll
cmp
push
jle
mov
in
sbb
xchg
out
or
aas
inc
into
inc
pushf
xor
push
loopne,pn
popf
push
repnz
ret
push
stos
test
add
int3
push
loope
out
and
stos
inc
scas
push
push
pop
push
gs
movsb
adc
sbb
iret
push
inc
insl
ret
repnz
mov
ret
popa
adc
dec
or
scas
decb
jmp
ja
lahf
gs
xchg
std
enter
in
jb
mov
stos
jmp
rcl
jge
pop
xchg
pushf
repnz
movsb
movsl
jecxz
push
inc
fwait
daa
jbe
leave
or
movsb
add
aaa
xchg
mov
pop
add
movsb
fwait
dec
pop
roll
xchg
lcall
fidivr
imul
insl
cmp
scas
push
sub
xor
fucomp
cmpsb
fcompl
in
mov
add
shll
jno
mov
sub
xchg
mov
ds
xchg
cmp
and
cli
xchg
lahf
jns
rclb
aam
test
dec
sbb
mov
pop
adcl
mov
inc
dec
cwtl
loope
dec
pop
fdivrl
std
sub
imul
adc
add
iret
lea
movb
xchg
inc
mov
mov
out
push
xchg
add
inc
popf
fwait
sub
and
test
lret
pop
push
push
or
mov
mov
sahf
jnp
jne
lods
mov
or
in
mov
in
mov
test
adc
mov
cmp
into
int
mull
ret
push
into
rcr
dec
cmp
fdiv
or
fwait
mov
out
push
xor
sbb
loop
add
stc
pop
es
adc
mov
xor
pminub
fnstcw
mov
fcoms
mov
sti
xchg
mov
gs
aam
out
mov
loope
dec
adc
or
and
mov
fnstsw
sbb
dec
je
bound
sub
int
mov
inc
out
or
push
les
cs
jae
mov
cmp
fisubrl
sbb
fnstcw
dec
jecxz
mov
mov
call
test
lret
pop
mov
cmc
mov
fcmovnbe
mov
aam
out
sti
cmpsb
inc
loop
pusha
aas
sub
out
dec
loop
inc
and
sub
shr
das
aas
dec
aas
lods
std
ja
jnp
sbb
sbb
bound
mov
push
js
mov
adc
jge
dec
das
pop
dec
cmp
stos
xor
or
lock
sahf
aad
insl
xchg
xchg
lret
dec
arpl
cmpsl
rcrb
fisttpll
cs
popf
into
insl
lods
mov
mov
and
xchg
and
sub
dec
sub
and
rcrb
mov
or
xchg
inc
fnop
cmp
adc
jp
xchg
popa
std
jl
pop
dec
iret
movsl
stos
in
jp
out
mov
mov
aaa
bsr
cmp
push
xor
dec
aam
mov
xchg
cmp
dec
test
aad
xchg
out
rcrb
int3
pop
icebp
roll
dec
pop
fwait
jge
mov
dec
ret
jno
mov
push
adc
fisttpll
loopne
dec
in
imul
cmpb
adc
fwait
pop
lods
cltd
cmp
dec
roll
xchg
jo
mov
rolb
shrl
jne
push
push
mov
push
dec
out
xor
and
pop
or
cmp
out
loopne
dec
xor
xchg
out
jae
sub
inc
jbe
and
mov
cmp
dec
jnp
inc
push
dec
inc
inc
in
xor
mov
jne
jo
pop
xchg
mov
enter
enter
outsb
mov
popf
jle
aad
imul
push
add
pop
and
das
dec
sbb
cmp
imul
push
scas
mov
out
lods
inc
adc
jmp
or
mov
push
hlt
shll
mov
repz
push
push
jns
xchg
lea
int3
jle
fstps
ja
ficom
in
shr
jl
cld
jbe
repnz
loop
movsb
xor
mov
xchg
aad
jbe
push
lock
in
sbb
sbb
push
pop
lock
or
jl
add
dec
into
or
xlat
xor
sub
and
mov
push
repz
and
rcll
in
xchg
pop
enter
daa
sarb
ja
xchg
jno
cltd
sub
jp
cmp
lahf
mov
mov
in
imul
and
or
dec
sbb
xchg
stos
mov
xor
mov
pop
test
lret
mov
push
insl
mov
fsubl
das
sub
cld
je
out
addl
fisub
in
mov
push
sbb
shll
and
xchg
int
inc
lods
sub
or
inc
lcall
insl
mov
loopne
xchg
xor
sahf
push
jge
test
mov
inc
or
mov
ret
xlat
mov
lock
out
jno
loop
js
xchg
nop
inc
fmuls
push
out
lret
rol
push
cmp
insl
test
or
and
scas
pop
mov
loop
and
loop
pop
inc
stc
adc
xchg
adc
fisttp
add
hlt
iret
data16
loope
mov
or
fdivs
pop
mov
in
ds
lock
pop
shl
out
fnop
cmp
fist
movsb
adc
les
dec
xchg
jae
sbb
mov
push
xlat
mov
fnstenv
mov
out
mov
pop
cs
sti
aad
in
nop
xor
push
jle
sub
fpatan
pop
mov
shl
mov
js
lahf
lea
dec
test
sbb
pop
jb
jno
mov
mov
add
jno
inc
jbe
movsl
inc
std
add
jb
sar
dec
pop
dec
xor
jbe
jb
cmp
std
push
imul
xor
or
cmp
inc
push
test
mov
fnsave
fdivs
sbb
bound
test
mov
es
aam
jnp
mov
pop
out
push
cmpsl
mov
andb
pop
lods
stc
sbb
mov
inc
movsl
cli
and
enter
test
clc
fwait
push
sub
jg
out
mov
pop
push
push
and
fnstsw
and
shrl
sbb
mov
pop
cli
push
jb
fucomi
out
pop
add
xchg
sarl
int3
push
mov
sbb
add
xor
lcall
xchg
or
test
stos
adc
jg
sbb
xlat
mov
jle
lods
adc
push
lock
add
in
stc
call
add
jb
clc
leave
dec
xchg
out
insl
mov
xor
mov
addr16
subl
mov
inc
lret
xor
inc
and
add
mov
adc
out
shrd
mov
xchg
stos
stc
addl
sbb
cmp
cld
push
jp
dec
mov
lret
insb
hlt
pop
outsl
jnp
ret
sub
insb
clc
and
nop
add
pusha
dec
pushf
pop
fisttp
test
jmp
mov
fidiv
inc
cwtl
push
mov
or
movsl
cmp
ret
push
inc
imul
sbb
jbe
imul
notl
mov
ror
adc
add
jl
pop
arpl
push
inc
cli
cld
push
or
movsb
fucomip
inc
out
icebp
fcmove
rolb
xchg
dec
fidivrl
imul
jge
mov
inc
xchg
rorb
cmp
nopl
xchg
popf
mov
push
loop
les
dec
jbe
repnz
ret
cltd
adc
dec
add
jp
jl
cmp
dec
cmp
sub
in
adc
push
movsb
scas
daa
loopne
and
mov
jnp
mov
ljmp
xor
pop
pop
or
cmp
lret
das
xor
cmp
jp
movsl
jb
lods
and
data16
mov
ret
clc
add
adc
adc
test
pop
iret
mov
js
lds
push
inc
push
pop
rcr
iret
in
sub
push
add
stc
dec
adc
mov
push
pop
aad
sbb
mov
mov
in
and
mov
enter
cltd
pop
cmpsl
inc
pop
lcall
xor
inc
cwtl
mov
les
push
sahf
shrl
xorb
jg
das
jno
test
jmp
adc
int
mov
bound
and
nop
mov
mul
imul
cmp
mov
or
insl
into
and
inc
lret
cmp
outsl
jg
shl
jecxz
xor
lret
das
lods
adc
push
push
add
jg
and
icebp
lods
dec
dec
mov
dec
stos
cli
push
xlat
xor
in
shr
imul
jge
shll
jno
loopne
sub
adc
push
sub
movsl
les
mov
sbb
les
leave
sub
sub
lcall
cs
aad
jbe
nop
adc
dec
ret
ss
out
je
aad
jecxz
or
or
aam
cmpsb
ljmp
stc
in
dec
pop
push
xchg
fldt
sbb
inc
std
mov
inc
sbb
dec
aas
imul
jb
repnz
dec
rcr
inc
and
nop
dec
rorl
cmp
std
lds
cmp
lea
mul
sub
hlt
je
mov
repnz
mov
fisttpl
das
pop
imul
mov
mov
gs
movsb
dec
in
bound
pop
add
sub
dec
xor
lods
rclb
xor
mov
arpl
cmc
ror
popa
push
sub
loopne
test
popa
xchg
push
out
push
fucom
dec
mov
mov
cmp
pusha
into
mulb
adc
movsl
lods
ja
lret
out
outsl
add
or
jo
jnp
jne
arpl
inc
cltd
cwtl
loop
xor
push
mov
pushf
sarl
inc
xchg
test
adc
xchg
lret
xor
mov
mov
pop
cmpsb
push
xchg
sbb
add
incl
pushl
gs
xor
into
in
xchg
in
jl
xchg
cmp
dec
mov
pop
and
pop
ja
or
dec
mov
mov
shufps
out
xchg
push
jne
sbb
mov
jmp
sub
es
jns
cwtl
notl
jg
out
cmpsb
mov
cmp
fs
cld
or
mov
lds
sub
or
jle
popf
mov
xchg
cmp
pusha
ljmp
xchg
pusha
sti
pop
jmp
mov
pop
push
ja
enter
lds
cmpb
and
pop
cmp
addl
push
cmp
jle
iretw
jb
pop
ret
rcrb
imul
arpl
or
pop
lds
mov
jecxz
movsb
dec
mov
pop
scas
aad
pop
stos
and
inc
add
shlb
ja
bound
leave
or
mov
push
std
jbe
ror
cltd
push
xchg
sbb
fsub
aaa
rcrb
or
mov
xor
lea
dec
lods
into
loopne
xor
out
loope
pop
scas
push
jae
and
adcb
jne
cmp
inc
sbb
scas
in
push
xchg
mov
daa
mov
ret
aaa
pop
xor
shrl
clc
pop
movsl
jns
stc
and
dec
mov
test
and
push
inc
jg
pop
negb
into
js
negl
push
enter
scas
fdivrl
out
ret
outsb
mov
push
adc
xchg
push
mov
stos
sbb
lret
cmp
mov
test
push
sahf
loope
int
cmp
fsubp
cmp
lcall
pop
mov
inc
push
sbb
int
sahf
fs
inc
fdivl
jg
pop
outsl
mov
sbb
mov
push
adc
jl
push
jae
fdivr
mov
jns
xor
mov
adc
call
xlat
adc
cmp
mov
cwtl
sbb
outsl
pop
enter
lods
jp
stos
push
adc
push
jno
pop
dec
mov
cmpsb
das
xchg
pop
mov
or
xorb
dec
stos
in
adc
lcall
or
loopne
sbb
pop
arpl
imul
dec
xor
xchg
in
pop
jns
sbb
decl
mov
sub
fcomp
pushf
inc
fidivrl
sbb
sub
jmp
cld
dec
and
inc
push
scas
jmp
popa
adc
jecxz
mov
sbb
fsubr
mov
and
sub
adc
sbb
or
pop
js
pop
lods
cmp
inc
xor
aas
or
jb
inc
outsb
dec
inc
or
and
shll
fcoms
popf
negb
in
std
insb
rolb
dec
mov
mov
stos
sbb
daa
push
jle
arpl
enter
les
mov
das
idiv
sbb
xor
outsb
push
add
es
cmp
insl
dec
das
popa
dec
push
mov
cmpsl
mov
mov
icebp
and
add
sub
jecxz
mov
and
decb
pop
out
rcl
sahf
pop
addr16
gs
mov
scas
fcoml
mov
imul
xchg
xchg
dec
mov
shrl
pop
popa
inc
xchg
rcrl
stos
mov
rolb
push
dec
sub
fidivrl
add
daa
cltd
iret
mov
imul
int3
stos
dec
scas
in
test
adc
gs
sbb
andb
movsl
cmpl
ss
add
sbb
pushl
adcl
dec
xchg
mov
mov
adc
pop
ja
das
cmp
into
cltd
inc
in
adc
mov
pop
cmp
jne
xchg
fwait
mov
shlb
rolb
xchg
inc
and
andl
adc
xor
lea
sbb
and
insb
lret
jnp
adc
in
ror
pusha
test
test
int
lea
sbb
fiaddl
xorb
xor
cmp
add
sbb
cmpsb
push
mov
in
jecxz
sub
imul
push
orl
test
push
mov
jge
iret
hlt
mov
gs
inc
add
mov
lcall
fidivl
mov
xor
aas
and
divb
fdivrp
add
vmovaps
mov
mov
xchg
leave
add
movsb
rcrl
push
sbbb
cmp
sbbb
lods
fdivl
popf
jp
and
repz
jl
sbb
dec
sbb
push
adc
jo
and
lds
jb
push
in
and
cmpsb
call
inc
pop
enter
daa
mov
sti
cmp
cwtl
sub
add
sbb
rep
sub
and
lahf
cmc
jle
push
or
jp
jns
addr16
imul
pop
sbb
mov
jmp
loope
ret
and
dec
pop
outsb
pop
rcl
repz
shrb
or
jg
add
imul
js
and
es
mov
mov
sub
addr16
movsl
test
mov
mov
sahf
mov
mov
loopne
pop
fistpll
andb
in
mov
xchg
mov
add
shll
mov
ss
popa
cmpsb
cmp
mov
mov
lret
dec
sarl
sarb
ret
or
jne
jmp
cmp
xor
push
loopne
cmp
mov
sti
adc
cmp
add
fldenv
pop
shrd
aas
lods
mov
push
dec
cli
cmp
add
in
jg
dec
sti
dec
mov
inc
mov
push
adc
mov
repz
lret
xchg
sbb
fdivrs
cmp
je
pop
test
xchg
lock
cs
test
nop
pop
lret
mov
int3
fstps
xchg
fsub
and
sbb
subl
sub
pop
mov
adc
adc
fisttpl
or
or
testb
dec
aas
test
int3
orl
xchg
and
inc
mov
negb
xchg
adc
loope
or
sbb
outsb
xor
cmpl
subl
aad
cmc
lock
xchg
sbb
xchg
aam
shll
ljmp
xor
decb
out
mull
test
and
cmp
outsl
mov
add
ret
mov
add
mov
sub
push
test
ds
fnsave
loope
clc
sub
mov
popa
pop
cmp
pop
sti
fldlg2
stos
test
inc
out
dec
sub
push
pop
out
xor
add
aaa
xchg
push
imul
cmp
dec
adc
mov
xchg
sbb
nop
jmp
inc
push
flds
fisttp
xor
cmc
xor
es
in
ffree
xchg
fcmovne
cmp
fnsave
pop
cwtl
sub
ja
xlat
out
dec
popf
jp
inc
test
pop
mov
mov
xchg
dec
pop
dec
ret
jne
jae
mov
shr
out
lods
insl
dec
bound
mov
and
cmpsb
popa
out
test
cmp
mov
addr16
mov
mov
pop
js
xor
loopne
jle
ret
scas
in
into
repz
and
fucomip
sub
xchg
push
cmp
movl
int
std
insl
in
sbb
fnstcw
in
stos
ret
out
xor
aas
adc
sbb
sbb
test
scas
inc
outsb
sub
enter
xor
outsb
iret
xor
ret
fstpl
paddusw
in
jne
arpl
aam
cmc
inc
push
fs
imul
pop
rclb
sub
jns
and
dec
pop
lds
jb
pop
adc
mov
or
stc
cmpsl
mov
push
iret
data16
pushl
sbb
jl
dec
callw
cmp
add
int3
dec
mov
mov
jo
and
scas
les
cmp
fwait
cmp
xlat
inc
ss
push
cmpsb
imul
and
nop
enter
daa
mov
out
jno
xor
sub
pop
pop
cmp
std
cmc
movsl
xchg
out
and
sbb
lahf
adc
pusha
push
jo
jo
adc
mov
pop
int
push
pop
inc
xchg
gs
pop
cmp
scas
push
jecxz
xor
loope
stc
inc
fnop
test
or
adc
adc
dec
cmp
nop
xchg
mov
mov
mov
movsb
mov
lds
aam
movl
jno
lods
push
or
and
js
sahf
stos
out
test
repz
lcall
inc
int
ja
fs
or
add
out
out
xlat
inc
cmp
jne
or
sbb
mov
ror
lcall
call
loopne
lret
xor
cmc
outsl
sbb
mov
pushf
int3
xlat
stc
lock
adc
scas
mov
data16
push
sbb
stos
aaa
iret
out
sbb
xchg
xor
outsb
inc
sti
rorb
gs
xchg
jl
and
imul
push
ss
push
xchg
fimul
sbb
jne
dec
xlat
popf
inc
shrb
adc
lret
pushf
fwait
inc
pushf
jmp
call
repz
mov
fbstp
fxch
pop
les
adc
xor
lea
aad
rcr
in
and
pop
ds
xchg
adc
xorb
mov
iret
lods
inc
xchg
cmp
repz
dec
inc
jg
xor
mov
mov
movsl
fwait
negb
movsl
sbbb
cmp
mov
dec
sar
js
popf
lret
inc
scas
stos
mov
pop
imul
mov
add
ds
add
xchg
ret
std
xchg
and
insl
pop
popa
bound
ret
mov
pusha
loope
rcl
shrb
or
iret
std
add
xor
sbb
and
and
inc
jmp
sub
pop
sbb
adc
push
das
lret
push
jae
arpl
xchg
int
ljmp
mov
mov
out
stos
jne
xchg
fldl
inc
sets
pop
add
adc
ret
xlat
push
or
jl
cmp
arpl
sbb
gs
xor
fmuls
and
jl
addl
phaddubq
daa
out
or
xor
aam
sub
mov
fidivr
push
addl
jge
orl
lret
mov
mov
std
scas
push
jne
mov
mov
loope
out
mov
jnp
out
loope
int3
ljmp
rcrl
sub
sub
mov
adc
jp
fidivr
insb
mov
jb
jle
inc
jns
lods
das
fsubl
dec
adc
or
stos
jmp
ficomp
xchg
rorb
dec
test
push
cmp
movsl
xor
sbb
movsb
pushf
imul
scas
movsb
mov
push
clts
bound
inc
iret
jg
ret
jle
jmp
jle
cmp
fbld
movsl
dec
inc
push
cmp
add
xchg
mov
ficoml
jae
int3
adc
inc
dec
fiadd
adc
jbe
imul
cmp
movsb
out
lret
push
push
cmc
nop
jbe
int3
cmpsb
jge
lods
pop
sbb
adc
or
push
xor
and
sbb
dec
stc
lods
or
cmp
repnz
scas
mov
xchg
call
push
ljmp
cmpsb
out
fiadd
in
or
inc
add
cmp
jmp
sub
popa
pop
cmp
xchg
popa
mov
js
sub
lahf
xor
in
push
scas
scas
jne
addr16
aad
inc
xor
xor
xchg
test
test
js
push
fs
in
int
push
xchg
loop
jnp
jp
jnp
push
sub
push
jecxz
adc
out
dec
into
movsl
stc
pop
sbb
movsb
lea
or
push
cmpsl
push
data16
fnstenv
dec
repz
mov
dec
jp
pop
push
sbb
jae
sahf
dec
in
test
xorl
pop
mulb
mov
es
call
ss
push
cmp
xor
mov
fmull
fcmovne
or
pop
shll
cmp
ret
adc
xor
cmpsb
xchg
cmc
xchg
mov
lock
sti
fwait
aam
das
sub
repnz
add
push
cmp
mov
mov
cmpsb
cmp
cli
mov
cmp
lods
les
or
data16
fnop
mov
pop
fwait
aas
addr16
ss
add
stc
pop
repz
jns
mov
push
adc
mov
fsubl
sub
mov
loope
inc
cmp
ljmp
aad
mov
fimull
and
inc
mov
cli
je
sahf
cmp
inc
add
movb
adc
mov
cltd
mov
push
outsl
add
or
fucomi
xor
inc
sbb
push
inc
test
out
aas
out
test
dec
lods
jbe
and
dec
mov
mul
sahf
jb
popa
outsb
dec
cwtl
jg
lock
lret
cmpsb
push
out
in
jne
cld
mov
sahf
imul
lahf
mov
mov
cmc
cmc
pushf
aam
xor
mov
es
lea
iret
sti
dec
inc
sub
mov
cmpsl
mov
mov
cmp
mov
and
iret
fwait
aaa
pop
inc
data16
pop
sbbl
mov
sub
push
bnd
fnstsw
jnp
sahf
je
xchg
or
pop
ljmp
lds
test
push
mov
xchg
and
and
pop
add
divl
insb
cltd
je
ret
xor
mov
out
xchg
xchg
pop
mov
mov
xor
iret
rorl
xor
xchg
cmp
push
pop
ds
add
imul
ljmp
jmp
or
mov
xchg
jns
sub
push
outsb
xchg
mov
dec
sub
inc
mov
les
adc
and
mov
push
dec
out
push
add
int3
mov
xchg
mov
frstor
pop
mov
or
mov
jp
add
shrl
loopne
add
mov
icebp
pusha
push
lods
neg
sub
sub
dec
lret
sub
jae
insl
dec
push
sbbl
mov
jl
push
stos
test
pop
pushf
sbb
add
bound
mov
push
pop
cmpsb
adc
insb
xchg
out
mov
adc
pop
and
hlt
adc
arpl
stos
xlat
inc
or
rorb
or
incb
or
jecxz
add
add
or
push
mov
out
mov
pop
repnz
rclb
and
leave
out
cwtl
movsb
jb
and
insl
fidivl
push
sub
call
push
or
mov
jl
test
and
xor
dec
arpl
scas
out
and
xor
push
mov
fs
push
das
jb
jno
dec
in
icebp
mov
ss
mov
fistl
jno
fcmovbe
sub
aas
pusha
cmp
dec
mov
test
movsl
xchg
popf
dec
and
and
push
sbbl
add
adc
xor
sub
pop
xchg
lahf
adc
mov
pop
sub
shrb
out
inc
loope
rcrl
fsubl
sti
jle
or
adc
add
int
adc
sbb
mov
or
out
fild
push
stos
gs
int
xlat
pop
sub
jbe
pop
and
int3
lcall
hlt
mov
daa
dec
sbb
aam
test
roll
xor
mov
fbld
sbb
mov
and
cmp
jmp
div
fwait
cld
popf
lret
leave
sar
aas
cmp
push
pop
or
push
cmc
pop
xchg
xor
subl
mov
dec
adc
mov
add
cltd
push
lods
lret
mov
and
cltd
cmp
xchg
xor
inc
in
sarb
sti
pop
jl
sub
cs
mov
and
mov
jae
imul
xor
repz
xchg
fs
or
cld
add
cmp
das
rcl
sbb
sub
call
pushf
icebp
add
jmp
jae
cs
sub
push
sbb
sahf
cmp
xlat
push
je
mov
add
xchg
sub
adc
call
and
test
dec
neg
sbb
cmp
dec
inc
mov
pop
repz
xchg
imul
jno
and
add
mov
dec
imul
sbb
std
or
mov
mov
fstl
mov
ret
into
fs
lret
pop
push
pushf
mov
lods
ret
lock
mov
push
mov
lods
sub
aam
loope
ret
sbb
shrl
cmp
and
cmpsl
mov
or
icebp
jle
les
sbb
mov
sbb
mov
bound
fcmovbe
ljmp
test
inc
lods
mov
mov
push
mov
popa
frstor
inc
scas
xchg
dec
adcl
cld
imulb
jno
mov
push
out
das
jl
push
jbe
add
fstpl
stos
orl
pop
mov
or
dec
dec
cmpsl
test
rclb
sbb
sub
or
adc
pop
xor
ret
add
xchg
out
decl
add
int
mov
in
in
xchg
enter
adc
cmp
pop
leave
in
int
sti
out
dec
jbe
cli
inc
dec
xchg
mov
mov
ss
dec
push
out
jne
push
leave
out
dec
push
into
bound
dec
jns
add
xchg
insl
cmp
out
adc
sub
pop
repnz
sbb
out
loopne
mov
in
cmp
out
jnp
loope
jle
and
pusha
icebp
pop
test
dec
fwait
insl
xchg
jg
sub
dec
rolb
jae
fistl
push
inc
data16
scas
add
mov
cs
and
xchg
imul
scas
push
xlat
push
popf
adc
adc
enter
or
pop
pop
push
inc
hlt
into
add
arpl
cmc
xchg
inc
or
push
or
xchg
inc
loope
mov
xchg
push
cwtl
add
jmp
enter
jge
mov
es
je
lods
mov
mov
add
pusha
movsb
std
setl
ffree
jbe
ret
insl
jge
push
rcrb
cwtl
ret
adc
or
xchg
cmp
mov
push
lahf
mov
and
scas
popa
fisub
adc
cmp
inc
pusha
push
sbbb
jecxz
jl
hlt
push
ja
fadds
fmul
cmp
fsts
jno
jecxz
sub
lock
rclb
movsl
pushf
lahf
xlat
and
arpl
push
push
inc
jno
push
mov
push
dec
jbe
dec
adc
push
ljmp
ja
aad
imul
stc
mov
test
loope
sub
inc
outsb
mov
push
mov
sti
lret
ret
sbbl
jne
mov
hlt
and
cli
dec
push
lods
call
in
sub
push
pop
mov
adc
xchg
repz
fidiv
push
test
cmp
adcb
jbe
popf
jno
mov
xchg
mov
dec
jae
add
xchg
adc
in
es
cmp
cmpsb
jecxz
negl
pop
lret
inc
rcll
or
mov
into
ja
xor
pop
movsb
pop
outsl
mov
xorl
add
pop
mulb
jmp
lods
mov
out
pushf
stc
int
cwtl
xchg
push
cli
or
popa
xor
sub
psubq
clc
popa
decb
mov
mov
inc
xor
cmp
imul
mov
aas
xchg
daa
cmc
sbb
es
pop
sub
mov
pushf
pushf
inc
jmp
push
adc
sbb
jbe
rclb
nop
xor
dec
std
lods
jg
mov
out
je
or
je
pop
jecxz
xchg
lods
lea
lea
mov
inc
adc
mov
mov
rorb
xor
dec
aad
pop
fnop
push
inc
daa
dec
jnp
mov
mov
out
dec
lcall
shll
stc
mulb
or
scas
stos
ss
cmc
or
mov
je
mov
loop
stc
cli
leave
lret
mov
xor
icebp
add
lock
or
fiaddl
mov
gs
ret
stos
and
es
repnz
int3
pop
nop
dec
cmp
cmpl
out
aam
xchg
cmp
mov
and
aad
rcrl
clc
mov
sub
push
js
clc
mov
jae
mov
ljmp
sbb
stos
fs
pop
out
aam
rclb
leave
sbb
mov
adc
aad
add
cmpsl
push
dec
mov
scas
jne
dec
mov
jnp
mov
xchg
mov
stos
sarl
jmp
or
leave
dec
fwait
cmc
inc
or
gs
lahf
add
mov
mov
xor
addb
lds
cld
mov
mov
pop
test
lea
sahf
rorl
xor
inc
loopne
ja
movsb
jno
mov
sub
stos
es
xlat
in
mov
shlb
push
mov
icebp
add
xchg
cmp
push
subl
out
pop
int3
sub
sbb
add
rorb
mov
adc
loope
mov
arpl
inc
in
stos
gs
mov
xor
out
out
inc
inc
incl
jae
push
or
insb
mov
cli
outsb
push
stos
popl
arpl
fwait
xor
imul
scas
int
rcll
sub
lods
push
mov
pop
nop
or
hlt
sbb
imul
dec
or
add
je
pusha
fiaddl
scas
loopne
int3
scas
pop
pop
loope
xchg
fisubr
rcll
mov
into
repnz
icebp
ror
aad
mov
push
or
xor
in
movsb
jge
or
aaa
dec
mov
or
cwtl
aas
jl
aad
dec
inc
jno
push
sti
sub
add
xor
movsb
jg
cmp
test
inc
jb
shll
sub
daa
mov
mov
shrb
jbe
cmp
mov
lret
movsl
mov
sar
lahf
nop
cmpsb
mov
daa
pop
test
enter
sub
fld
push
pop
loopne
dec
js
dec
jle
stos
pop
mov
loope
cmp
push
sub
outsb
push
fild
mov
sti
in
ret
idivb
jle
and
pop
repnz
mov
xchg
int
jge
sub
cmp
and
rclb
sbb
std
lcall
scas
rolb
cmp
lahf
mov
add
pop
mov
aas
fabs
ss
cmp
cmp
popa
inc
negl
insb
aaa
lret
mov
sub
adc
out
or
or
mov
xchg
shl
jp
stc
int3
jp
sahf
mov
pcmpgtd
add
out
insl
sub
xor
jno
in
xchg
pusha
ss
mov
lret
loopne
push
out
clc
aas
cmp
cmp
cltd
imul
fwait
mov
jo
les
dec
or
mov
cltd
aam
sub
mov
inc
or
jmp
imull
jg
sub
nop
or
stc
scas
inc
ret
mov
enter
or
nop
mov
call
pop
add
pop
or
adc
das
dec
int3
xor
fstpt
mov
inc
scas
adc
inc
aad
iret
aas
les
inc
jb
jge
dec
adc
inc
mov
mov
stos
insb
dec
std
push
and
cwtl
mov
fnsave
jg
xchg
xorl
pop
sbb
mov
mov
das
xor
mov
sbb
aam
cmp
ret
cmp
movsb
cmp
insl
mov
imul
cmpsl
mov
call
icebp
sub
lods
push
push
mov
and
mov
test
insl
sub
std
int3
test
push
jle
add
xor
pop
pop
out
fdivrp
dec
xchg
jmp
leave
xchg
mov
test
popa
int3
mov
pop
push
dec
xchg
stos
push
daa
inc
out
aaa
sub
stc
rcll
adc
dec
add
inc
xchg
cltd
sbb
xor
iret
sub
mov
lds
mov
xchg
xchg
pop
sarl
into
cs
push
fwait
and
addr16
or
add
mov
js
xor
daa
or
fwait
dec
in
mov
push
dec
mov
aas
cmpsb
jbe
jns
inc
dec
pop
bound
mov
mov
cmpsl
jne
test
iret
out
pop
stos
stc
bound
jmp
jns
movsl
push
xchg
add
push
out
sahf
adc
insb
mov
mov
pop
mov
jnp
popa
adc
test
cld
in
fwait
mov
fild
out
cmpsl
jmp
or
xchg
jae
pop
push
int3
dec
add
mov
cmp
stos
add
sub
jae
scas
xor
push
sub
repnz
or
imul
xchg
hlt
fs
lds
push
push
inc
adc
lcall
push
or
arpl
add
int3
shrl
fnop
adc
inc
shl
lea
cmpsl
xchg
sahf
leave
dec
mov
movsb
adc
push
pop
and
mov
jge
lock
sbb
dec
aaa
or
fwait
or
xlat
add
sarl
rorb
mov
xor
pop
pop
aad
pop
out
and
loopne
cmp
pop
push
push
push
outsb
inc
add
cmpsb
cli
cwtl
inc
in
cmpsb
aaa
cs
daa
mov
pop
cmp
aaa
jno
popa
pop
sub
iret
je
push
js
ds
cmp
movsl
stos
iret
out
xor
lahf
scas
in
daa
push
cli
cmpsb
in
test
insl
mov
xor
ficompl
pushf
or
cmp
pop
jmp
sub
loope
sub
fsubl
sub
sub
aad
imul
push
rclb
jne
icebp
pop
negl
mov
jne
pop
adc
and
std
loopne
mov
dec
int
daa
fldcw
cmp
pop
lahf
ds
lcall
inc
mov
push
sahf
fstps
test
test
jg
cld
mov
mov
adc
and
mov
push
ss
popf
fcomps
neg
jmp
dec
rol
and
or
push
cmc
lods
js
xor
inc
mov
jnp
stc
stc
xor
adc
shr
add
nop
cmp
mov
xchg
or
cli
outsb
pop
nop
xor
lret
add
paddd
cltd
hlt
loopne
jne
pop
pop
dec
push
adc
bound
imul
into
mov
xchg
lods
push
clc
sbb
pushf
popf
cli
xlat
fadds
int3
sub
dec
pushf
repnz
scas
jmp
pop
daa
loop,pn
add
dec
adc
nop
call
dec
mov
dec
xchg
je
test
jecxz
cmp
inc
or
mov
sahf
out
dec
pop
mov
nop
sbb
clc
cmp
xor
adc
aas
arpl
lahf
jb
cmp
dec
mov
pop
dec
mov
add
std
std
js
cwtl
imul
jb
jns
dec
andb
mov
dec
mov
inc
mov
fldcw
das
jo
cs
sti
in
ret
enter
mov
jae
dec
xor
add
add
lods
mov
push
mov
cs
lock
mov
loopne
sub
fucomip
mov
aaa
enter
push
fstpl
add
clc
mov
and
clc
mov
popa
jecxz
mov
and
lcall
push
jg
pop
add
inc
inc
cltd
push
xchg
in
cmp
enter
dec
mov
test
xor
xchg
imul
ja
out
jp
adc
xor
stos
mov
jne
xlat
jbe
ljmp
inc
add
in
or
loopne
xchg
mov
push
mov
cmp
pop
cli
loopne
ja
lcall
push
sub
mov
sub
adc
adc
mov
fs
lds
aas
xchg
into
std
and
mov
out
xchg
pop
sub
adc
mov
mov
lds
rol
jle
push
in
iret
lock
pusha
ret
fbld
loope
jmp
adc
mov
in
add
jmp
mov
lret
cmp
leave
cwtl
adc
shr
push
mov
pop
push
jb
inc
adc
jmp
ret
xor
bound
arpl
insb
xor
adc
adc
push
pop
mov
ficoml
sahf
insl
xchg
pop
fstpl
lods
andl
lds
insl
sar
hlt
mov
cli
outsl
leave
ret
or
sahf
mov
jbe
fwait
stos
jge
mov
cmp
enter
insb
xchg
in
adc
addr16
push
sbb
push
dec
pop
ja
jecxz
out
mov
cltd
dec
and
je
cmp
fisubl
nop
adc
in
lea
in
rolb
mov
dec
cmp
mov
sub
cld
jno
int
dec
adc
xor
mov
imul
push
js
js
xlat
xor
int
pop
cs
pop
sub
shrl
push
jg
out
aaa
mov
sub
or
std
jbe
in
sub
insb
mov
pusha
add
and
mov
dec
inc
and
in
push
mov
xchg
mov
adc
mov
call
lcall
or
xchg
sbb
out
sahf
jl
pop
test
imul
dec
std
mov
sahf
xlat
mov
std
mov
jnp
andb
cmp
xlat
mov
notl
fwait
rcrl
cmp
int
or
into
and
cmc
je
leave
xor
bound
idivl
stc
cmp
and
aam
push
lods
addr16
out
adc
xchg
lods
in
cli
mov
dec
add
insb
sarl
sbb
fdivr
mov
mov
movsb
pop
ss
mov
loop
stc
imul
push
xor
push
xor
xchg
jo
iret
sbb
xlat
xchg
push
pop
mov
sub
add
mov
popf
addr16
xchg
mov
cs
scas
and
nop
ret
daa
mov
inc
jmp
lahf
je
cld
jecxz
lock
xchg
lret
mov
lods
adc
sbb
mov
or
mov
or
jne
inc
mov
int
aas
add
and
cwtl
dec
jmp
push
rcll
jge
xor
bound
cmpsl
push
xor
sbb
mov
lret
fcmovne
lods
mov
out
mov
inc
pop
repz
add
mov
mov
aam
in
ret
push
sbb
es
fstl
adcl
cmpsl
mov
mov
icebp
fcmovu
xchg
lods
daa
ret
push
mov
mov
lcall
fidivr
jae
ss
sub
mov
loopne
rcr
fldl
inc
clc
lds
mov
inc
mov
ljmp
ficomp
adc
out
std
cmp
out
pop
push
push
psrld
aas
cltd
xchg
mov
mov
ds
out
lods
test
int
xchg
lock
rcl
cmp
loop
fwait
mov
dec
and
bnd
dec
vmwrite
sbb
lret
imul
xchg
and
pop
mov
xorl
ficom
movsl
push
lcall
je
dec
xchg
mov
jne
jnp
mov
in
into
out
lds
jge
pop
scas
and
xchg
cltd
xchg
incb
stc
insb
sub
or
push
addr16
push
ds
push
jb
and
popa
jle
dec
xor
test
adc
xchg
lret
or
inc
and
lods
jae
cmp
push
push
or
popf
sub
loopne
hlt
pop
js
mov
shrl
loopne
cmp
inc
inc
imul
mov
adc
add
iret
leave
dec
enter
lea
add
hlt
cli
add
add
sbb
out
jb
int3
inc
fucomp
add
leave
std
xchg
mov
push
int3
xchg
sub
adc
ficom
adc
add
sbb
mov
dec
jge
leave
cmp
movsb
sub
pop
push
clc
fidiv
jbe
and
jge
imul
or
scas
add
into
rorb
sbb
sub
stos
add
jo
arpl
and
aas
cmp
mov
sahf
inc
pop
hlt
push
cmpsb
add
aaa
enter
daa
mov
into
cmp
outsb
lret
in
jl
pop
xor
movsl
mov
cs
lahf
in
xchg
mov
xchg
add
xor
add
arpl
out
movsl
das
sub
add
les
outsb
das
sti
inc
adc
inc
out
orb
enter
insl
mov
loop
and
cvtps2pd
mov
es
xor
lcall
in
mov
lods
sbb
aam
test
pop
int3
cmpb
jg
cwtl
xor
mov
pop
sbb
sub
and
ret
ret
inc
cmp
xchg
into
inc
notl
fmulp
mov
xchg
cmp
jle
or
js
into
add
mov
xor
jns
outsl
xor
lahf
cmpsl
stc
icebp
into
adcl
int3
add
xchg
mov
mov
out
adc
xor
hlt
sti
mov
fildl
lret
or
loopne
sti
or
push
fs
adc
adc
repz
sbb
mov
and
sub
movsl
cli
pushf
dec
push
por
aad
sahf
cmpsl
nop
sahf
inc
cld
pop
repz
or
fsub
pushf
in
nop
cltd
jnp
lea
sahf
call
pushf
push
fistpl
je
adc
push
lea
fildl
out
inc
inc
into
ss
es
jle
mov
push
jg
jbe
frstor
inc
dec
rcrl
dec
xor
dec
jns
loope
sbb
pop
flds
movsl
fwait
lods
lret
dec
push
xor
or
icebp
sbb
int
mov
es
mov
aas
enter
aaa
outsb
ret
out
outsb
es
insl
push
mov
cmpsl
mov
add
icebp
mov
mov
mov
les
sahf
mov
std
adc
rorb
dec
sub
test
in
push
mov
push
imul
xlat
data16
add
bound
fiadd
popa
adc
pop
push
scas
and
pusha
xor
std
push
xor
lds
and
mov
mov
or
xchg
push
jno
outsb
pushl
xchg
add
rcll
cltd
fwait
mov
fistp
icebp
or
add
loope
xor
or
in
adc
mov
adcb
adc
pop
jo
add
mov
lahf
dec
xor
fwait
sarl
mov
jne
jp
mov
mov
out
movsb
int3
mov
jmp
idivl
imul
fs
subl
dec
sub
push
jle
addr16
sub
mov
or
insb
lea
jnp
ficom
jle
jl
in
lods
pusha
clc
mov
in
xchg
xchg
sahf
arpl
jmp
sub
jae
cld
mov
popf
push
mov
mov
divb
pop
stos
pop
push
out
and
nop
adc
sahf
cwtl
bound
pushf
mov
push
add
xor
sub
pop
insb
dec
in
hlt
inc
fsubs
and
mov
sbb
xor
in
or
fidivrl
xchg
or
int3
mov
mov
lds
stos
dec
mov
mov
repz
movsb
mov
mov
inc
dec
aaa
jbe
sbb
sbb
and
inc
cmp
or
add
dec
jl
push
mov
push
push
jae
jno
lahf
jo
add
out
lock
fwait
jns
push
ja
rolb
sbb
cmpsb
andl
pop
mov
enter
daa
mov
fdivrl
fistpl
mov
sarl
sub
out
mov
leave
icebp
lahf
or
push
push
jae
and
mov
xor
out
in
cs
jl
xchg
mov
in
sbb
push
fsubrl
iret
test
outsb
xchg
in
xor
and
sbb
sub
pop
sbb
repnz
leave
push
and
les
mov
jnp
sub
lahf
lcall
push
mov
pop
sbb
shll
mov
sbbb
push
mov
pop
loop
das
xlat
cmp
push
adc
pusha
ss
ficompl
fmuls
notl
xor
roll
inc
or
push
sbb
out
cmc
add
imul
adc
lods
loop
imul
repnz
fisub
dec
xchg
lods
xor
ja
out
std
add
pop
push
cs
inc
xchg
inc
sti
jbe
std
scas
ret
gs
mov
lds
pop
je
and
mov
imul
pop
sub
lods
mov
xchg
test
sbb
dec
aas
jle
xchg
movsl
out
sub
lds
pushf
repz
jmp
das
pop
or
ficoml
fcoms
inc
shrd
xchg
je
mov
pop
pushf
lahf
test
stos
lods
sub
sbb
lock
jecxz
adc
sar
addr16
or
inc
lret
inc
inc
jg
aas
inc
jns
jb
mov
dec
in
xor
and
mov
divb
fcmove
cwtl
pushf
fstl
mov
mov
or
push
mov
mov
adc
lock
push
das
lods
stos
scas
mov
not
pop
aam
fsubp
ret
jne
pop
es
dec
push
insl
dec
enter
sub
cmpsl
mov
sarb
mov
lods
std
insl
das
mov
out
pop
and
or
xor
sbb
push
rcr
dec
shrb
fstpl
mov
dec
pop
push
inc
sub
fisttpll
test
push
stos
xor
pop
stc
pop
and
stos
mov
out
ret
and
xchg
adc
fucomp
seto
add
aad
cmc
push
jmp
xchg
fwait
dec
test
les
xchg
cwtl
sbb
sti
pop
shr
ret
inc
or
ret
loopne
sahf
push
xchg
sub
add
sub
cmp
or
int3
sub
jl
sub
cmpsl
rcrb
sub
outsl
ja
icebp
out
sub
addl
fdivrl
sub
dec
pop
aad
jne
fcompl
out
orl
jns
mov
movb
and
imul
push
lea
add
jp
enter
loopne
insb
clc
es
jnp
bextr
xor
add
mov
jno
call
inc
ss
push
fcoms
fs
xor
test
and
inc
nopl
imulb
xor
mov
nop
jg
out
in
xchg
pop
int3
pop
mov
dec
arpl
inc
sub
or
push
loopne
fisubrl
fistp
popa
data16
insl
repnz
and
pop
or
sbb
repnz
leave
sub
movsb
aas
stc
dec
push
xchg
divl
fadds
aad
cli
mov
lods
or
ss
sarl
inc
ds
jno
sub
icebp
xchg
sub
lret
scas
fwait
lret
subl
push
xlat
xor
inc
push
scas
inc
cmp
xchg
aam
inc
push
jns
pop
mov
cmp
fldcw
je
nop
sub
jge
cmp
push
jns,pt
out
movsl
and
jnp
sub
jae
inc
fisubr
pop
jb
add
jno
xor
sahf
test
mov
mov
inc
test
in
mov
loope
cmp
out
pop
pop
test
adc
std
mov
mov
add
sbb
add
cmp
mov
mov
sub
aas
cld
pop
fwait
pushf
insl
lcall
test
sbb
fsubl
test
enter
outsb
cmp
inc
pop
mov
mov
mov
div
adc
insl
adc
dec
fistpll
or
lret
inc
push
insl
push
cmp
pop
pop
or
adc
ja
sbb
jp
data16
pop
cmp
xchg
jb
add
pop
jp
sbb
data16
xor
xchg
imul
cmp
insl
xor
in
lods
xor
sti
and
dec
cwtl
gs
shlb
xchg
nop
or
pop
int
imul
fisubr
xchg
mov
ret
mov
adc
mov
mov
sahf
cmpsb
jecxz
bound
inc
aad
mov
decl
mov
inc
and
jne
mov
icebp
in
mov
aaa
stc
loope
ss
lcall
adc
or
arpl
and
scas
cmpsb
hlt
inc
push
jmp
xchg
aas
fist
loopne
sbb
jb
and
mov
idiv
sub
std
cltd
ret
aam
push
ret
mov
in
cmp
movsb
lret
sti
jecxz
lret
sub
imul
pop
pop
das
mov
mov
lods
orl
daa
fsts
add
movsl
es
ss
fisttpl
xor
cmpsl
mov
adc
pop
dec
and
in
mov
dec
xchg
jecxz
cmpsl
cmp
cmp
inc
sub
dec
cmpsl
mov
adcl
mov
xbegin
add
repz
sahf
pop
test
mov
xchg
pop
sbb
lods
pxor
add
rcrl
imul
daa
dec
sbb
mov
xchg
cmp
sbb
pop
movsb
or
jo
fwait
lfs
add
inc
out
loop
cmpsb
nop
push
adc
repz
push
pop
jae
xchg
icebp
cmpsb
data16
xchg
jmp
pop
out
jb
xor
jl
sbb
rolb
pop
mov
in
mov
jne
mov
pop
out
bound
adc
aas
jns
jns
xchg
cli
inc
adc
out
call
ret
or
rcrl
push
popl
mov
xlat
insb
arpl
dec
jle
mov
in
sub
pusha
jb,pn
fbld
jle
xchg
inc
mov
jmp
inc
arpl
jae
dec
or
fwait
test
mov
je
jmp
and
mov
lds
mov
daa
adc
jnp
iret
out
sub
stos
and
jg
fstpt
arpl
gs
and
stos
or
jecxz
cmp
mov
adcl
adc
ljmp
mov
mov
inc
frstor
movsb
lret
push
in
loop
sbb
jge
int
sbb
cltd
aam
cmp
push
add
imul
dec
loopne
jecxz
aam
lahf
xor
and
lea
and
iret
in
or
push
or
xor
sub
inc
enter
daa
mov
push
cmp
push
jno
adc
cli
loopne
mov
mov
movsl
int
mov
cmc
cmp
lahf
dec
lea
sbb
jo
push
addr16
repz
idiv
mov
pop
lret
js
push
pop
and
pop
push
stc
aam
dec
fdiv
fdivrl
hlt
sub
imul
rcr
clc
push
push
mov
mov
mov
xchg
pop
and
movsl
push
ret
int
rolb
pop
sbb
or
xor
mov
mov
sbb
mov
fiadd
xor
jg
sahf
sub
mov
and
fs
scas
adc
icebp
xor
mov
cmp
ret
nop
mov
xchg
sbb
lret
cs
mov
nop
cmp
mov
into
lods
lea
xor
stos
movsl
outsl
shr
adc
stc
push
arpl
adc
sub
add
ret
lret
lods
add
shl
pop
lock
insl
divb
in
sbb
jle
inc
fnstenv
out
movsb
es
pop
lods
pop
mov
add
cs
or
adc
inc
mov
lds
xor
cmp
cmp
cmpsb
dec
sub
pop
mov
dec
push
xor
push
jecxz
rorl
aad
bound
das
ja
dec
xchg
pop
scas
inc
xor
inc
mov
cmp
leave
js
mov
adc
out
sbb
pop
cmp
sbb
fs
dec
dec
push
out
xchg
mov
pop
push
hlt
hlt
inc
fmuls
inc
ja
lea
jle
push
jb
add
in
adc
idivb
xor
inc
nop
clc
cwtl
adc
jg
xor
mov
cld
es
fs
xchg
xchg
mov
or
mov
dec
leave
lock
xor
das
push
lahf
mov
xlat
pop
aam
daa
ja
xchg
les
dec
pop
insl
sbb
int3
repz
mov
mov
fcmove
scas
icebp
ss
inc
lods
shrl
mov
sub
add
mov
pop
pushf
pushf
rolb
movsl
sub
lcall
push
int
arpl
loop
mov
loope
inc
sub
ljmp
call
stos
in
mov
pop
xchg
mov
mov
cmovle
test
pop
push
fcomps
mov
push
mov
ret
rcr
dec
repnz
or
sbb
xchg
rcrl
repnz
fwait
ds
popf
push
fimull
add
pop
aas
in
inc
outsb
pop
xor
mov
in
imul
mov
int
mov
mov
adc
dec
push
inc
scas
inc
add
mov
push
repnz
lds
je
push
mov
bound
sub
lds
inc
adcl
out
and
ja
fmull
test
add
mov
cld
dec
insb
into
or
jnp
aas
scas
jle
mov
loopne
leave
test
fild
push
xchg
pop
lods
add
scas
push
sbb
bnd
fnstcw
pop
in
lret
iret
dec
mov
mov
aam
mov
movsb
and
sub
xchg
cmp
scas
into
push
aad
push
adc
lret
adc
mov
icebp
push
es
mov
inc
and
fwait
or
pop
jle
fxam
cld
ficoml
lret
sub
inc
or
pop
sub
mov
fs
rolb
repnz
mov
shlb
imul
imul
mov
aaa
orl
or
mov
add
fwait
mov
xchg
dec
dec
pop
or
mov
pushl
andb
push
add
test
jle
push
fsubr
and
es
or
lahf
in
adc
jb
adc
adc
jno
cmp
sub
dec
or
cmp
mov
mov
out
lahf
imul
addr16
scas
leave
cmpsl
xor
xchg
sbb
pop
icebp
arpl
arpl
mov
jno
out
popa
lahf
push
fsubrl
out
sub
js
outsb
mov
mov
mov
arpl
sbb
push
in
lea
