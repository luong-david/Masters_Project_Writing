sub
mov
and
mov
pusha
mov
mov
mov
mov
outsb
mov
or
sbb
sub
sub
lods
fs
and
dec
in
sbb
and
cmpsb
data16
cmp
xchg
xor
addr16
fs
push
xor
mov
aad
mov
dec
fldl
cmp
lcall
mov
adc
jmp
push
sbb
cmp
mov
shll
cmpsb
adc
in
mov
dec
cmp
ucomiss
inc
in
test
cmpsb
mov
adc
loope
pop
clc
mov
lcall
mul
fisubr
repnz
push
push
fnstsw
std
fldcw
in
push
xlat
cmp
out
cmc
fisttpl
cmpsb
rol
iret
sub
movsl
jbe
enter
push
out
pop
jbe
sub
push
jmp
push
pop
mov
jge
notb
pop
push
cmp
popf
pop
push
sti
mov
addr16
dec
mov
test
shrb
jno
test
fimull
inc
std
dec
jle
fbld
jnp
fcomi
or
jle
mov
imul
jecxz
addr16
jecxz
aam
jecxz
aam
loop
rcl
ljmp
sub
shrl
pop
pop
dec
xor
js
popf
fisttpl
jle
xchg
hlt
jp
cmpsl
pop
insb
hlt
jge
inc
shrl
int
out
pop
pop
test
into
fisttpl
push
imul
je
outsl
es
xchg
cmp
pop
pop
pusha
cmp
insl
pop
pop
add
roll
mov
cmp
push
lret
push
mov
xchg
mov
sub
lret
out
mov
in
pop
inc
lahf
inc
lock
jmp
in
mov
lock
xor
aas
shl
jo
mov
push
fld
outsl
cld
lahf
lahf
hlt
mov
xchg
fildll
iret
pop
jmp
and
pop
test
jg
out
pop
mov
lcall
cmpsl
arpl
sahf
je
jne,pt
cmc
repnz
or
lods
sti
xchg
mov
ret
fdivs
lcall
adc
ja
loop
icebp
pusha
inc
out
imul
dec
popa
fsubl
fisttpll
mov
push
jne
mov
mov
mov
aaa
jbe
mov
mov
rol
mov
outsb
sub
cmpsl
jmp
jae
jg
icebp
das
sti
lds
clc
ds
mov
xchg
xlat
out
lret
pop
jmp
icebp
lahf
jmp
adc
aam
xchg
out
jbe
mov
stos
int3
or
dec
sti
mov
pop
push
pop
xchg
hlt
adc
dec
divps
shrb
sub
cmp
push
cmp
into
and
or
js
leave
clc
minps
mov
faddl
add
pop
sbb
sbb
ja
xor
ja
jg
or
mov
push
outsl
loop
cmp
push
xor
mov
outsb
sub
pop
in
adc
fucomi
sub
sub
push
mulb
fcoml
adc
sbbl
enter
mov
jne
and
movsl
jg
or
push
stos
push
js
jbe
das
inc
inc
mov
and
idivl
insl
push
mov
push
ljmp
push
out
lock
jne
cli
add
ds
mov
add
clc
adc
add
cmpl
xor
out
dec
inc
adc
in
jmp
fxch
sarb
je
aas
cmc
inc
aas
mov
sbb
pop
push
mov
insl
out
hlt
aaa
cmc
add
aad
sub
mov
jnp
mov
or
ss
push
and
movsl
adc
add
inc
pop
cs
nop
adcl
stc
syscall
aad
mov
inc
lock
hlt
call
pop
adc
loop
dec
add
sub
push
lcall
dec
movl
pop
fcmove
arpl
pop
ja
dec
pop
shrb
jecxz
sub
mov
adc
pusha
push
mov
insl
sbb
out
fidivl
mov
adcl
dec
sub
outsb
mov
add
insl
test
hlt
mov
and
mov
ret
iret
mov
dec
mov
xchg
pop
push
pushf
jmp
popf
push
jae
pop
push
or
lods
mov
and
push
aad
loopne
pusha
xchg
inc
addr16
out
test
adc
lret
ret
scas
ret
in
jbe
lret
mov
repnz
jge
mov
sub
cmp
pop
faddl
lock
jns
mov
pop
cmpsl
push
js
mov
loopne
jge
sti
mov
aaa
hlt
jecxz
add
mov
mov
jne
jg
mov
sbb
aas
loope
stos
jmp
into
rolb
jns
and
push
int
ret
sbb
sbb
xor
jbe
xchg
mov
clc
inc
mov
loope
lcall
push
cmc
jle
and
icebp
outsl
fimull
sub
pop
aad
mov
rcll
sahf
dec
call
or
cmp
enter
inc
mov
push
js
lret
mov
fldcw
ret
pop
xor
pop
xchg
push
add
xor
lods
pop
inc
jmp
lds
fldl
pop
int3
pop
rolb
xchg
mov
in
imul
jae
push
retw
adc
add
rcll
xchg
test
fmuls
sbb
je
xor
xor
xor
dec
push
inc
sub
pop
data16
test
cmp
mov
jo
pop
jg
mov
scas
sub
pop
add
daa
mov
pushf
je
adc
jbe
cmpsb
xlat
mov
dec
divl
hlt
push
xchg
pop
lcall
aas
ss
sub
xchg
out
pop
add
mov
fisubrl
popa
aam
push
bswap
loopne
mov
jbe
jne
xchg
push
sub
test
fildll
cmp
pop
movsb
ljmp
xchg
mov
add
sbb
fs
push
jae
popa
mov
stc
outsl
push
or
ficompl
ss
jne
mov
ss
push
mov
in
shr
mov
pop
push
cmp
xor
dec
loopne
and
sbb
jnp
popf
ret
divl
popf
gs
insb
stos
daa
orb
jne
mov
popa
repnz
push
jl
pop
jbe
cmpsb
pop
push
xchg
mov
cld
pop
push
pop
jmp
arpl
stos
push
adc
push
pop
in
adc
or
add
stos
mov
mov
sbb
insb
cmp
in
pop
xchg
push
xlat
sub
fcmovb
bound
jge
orl
sbb
mov
cmpsb
xchg
ss
pop
xchg
mov
xchg
lea
movsb
ja
dec
cli
bound
enter
push
stos
xchg
ljmp
in
sbb
lret
ljmp
icebp
outsl
imull
jl
stos
aam
rol
aas
jge
jae,pn
hlt
xlat
sub
aas
mov
imul
scas
inc
icebp
in
cmc
add
ss
lods
xor
ja
sti
out
cmp
loopne
mov
jge
jmp
mov
in
xor
cmc
xchg
rcr
jne
inc
mov
mov
test
mov
lods
sbb
cmp
int
repz
loop
adc
lcall
jno
jmp
push
call
iret
lods
aam
cmp
fild
jne
push
or
add
movsl
jl
pop
xchg
mov
lea
in
cmp
or
mov
cmc
mov
inc
repnz
cli
call
jnp,pt
pop
idiv
test
fistpll
cs
xchg
xor
lahf
cmp
das
lcall
push
mov
mov
mov
and
push
fnsave
addr16
push
jns
and
cs
icebp
rcr
jge
lcall
and
xor
jecxz
enter
stc
enter
aad
ret
xchg
sub
jno
js
in
mov
cmp
jb
loopne
shlb
add
jle
daa
mov
stc
dec
and
icebp
pushf
mov
insb
pop
or
push
ljmp
mov
aam
sbb
int
test
sub
movsl
dec
hlt
dec
lahf
push
jge
cmpsl
scas
and
sub
dec
lock
minps
outsl
loope
out
or
cmp
sbb
std
and
js
fstl
adc
jl
jp
outsl
dec
jg
rcrb
pop
in
out
jae
fcmovnbe
fisubrl
mov
outsb
sti
inc
rcll
lods
xor
push
or
and
frstor
rclb
pop
fwait
add
sbb
shrl
push
out
adc
enter
js
lods
out
in
outsb
adc
mov
jnp
pop
or
mov
mov
mov
fs
into
sar
jo
xchg
mov
int
mov
xchg
push
out
fidivr
adc
adc
into
inc
pushf
aas
incl
push
into
insl
loop
movsl
test
dec
iret
adc
lcall
xchg
cwtl
mov
movl
sbb
cmpsl
test
jns
add
lret
xor
in
fildll
or
and
mov
test
sbb
dec
or
andb
add
push
inc
bound
fwait
aam
insl
ret
sbb
repnz
mov
shrl
mov
pushf
ja
sbb
mov
fidivr
scas
pop
sub
call
scas
lahf
fsubl
or
dec
les
aad
mov
pop
push
in
mov
or
fwait
outsl
cmp
pop
jge
pop
test
cmc
mov
dec
sti
std
cmp
cmp
call
in
or
outsl
daa
loopne
inc
mov
mov
je
adc
dec
data16
push
dec
std
imul
jo
insl
lods
out
rcr
lea
dec
mov
loope
sbb
add
dec
cmp
mov
lods
jle
inc
xor
or
mov
xor
das
int
ret
ljmp
pusha
mov
pop
and
jo
addps
negb
push
mov
fistp
push
ljmp
inc
adc
test
mov
lock
adc
sub
pusha
sub
leave
test
loopne
inc
mov
roll
push
pop
lock
movsl
pop
cmpsb
pop
cmpsl
add
inc
cmp
cmp
jp
insl
cmc
subb
faddl
jmp
mov
mov
aaa
and
mov
clc
sarl
out
pshufw
pop
cmpl
push
hlt
sbb
cmp
sarb
inc
sbb
ffreep
pushl
add
mov
repnz
inc
repnz
pop
int3
pop
int
into
add
hlt
por
testb
cmp
jge
pop
inc
movl
movsb
add
add
adc
add
add
add
subb
pop
ljmp
add
inc
adc
add
add
adc
inc
adc
add
rcl
add
subb
pop
pop
add
pop
inc
adc
add
jae
nop
sub
inc
add
dec
add
movsl
add
adcl
pop
adc
jns
imul
rclb
pop
popf
pop
lahf
pop
out
adc
pop
add
inc
stos
add
push
mov
arpl
enter
inc
mov
addr16
rorb
dec
or
ss
insl
inc
hlt
rcr
pop
pop
out
add
test
pop
cld
sbbl
loopne
add
test
mov
call
punpckhbw
add
xor
and
aaa
push
jnp
outsb
mul
ljmp
pushf
adc
inc
testl
jge
popa
pop
insb
adcl
push
mov
ret
mov
mov
cmpsl
pop
rclb
les
adc
inc
ret
cmc
addr16
gs
cmpsb
jl
fdivrs
aaa
int
mov
ret
pop
add
jbe
std
subl
fs
mov
mov
loopne
mov
dec
stos
mov
jecxz
fdivs
cmp
arpl
test
ret
cmpl
push
mov
iret
ret
adc
test
inc
inc
stos
inc
push
rolw
dec
or
inc
or
adc
sbb
sub
enter
aaa
movsb
aas
test
stc
lock
push
jbe
xor
pusha
pop
test
mov
ljmp
fcmovnu
jno
xor
lods
les
pop
or
push
fisttp
aad
xchg
inc
lcall
testl
shlb
out
sahf
rorl
lods
pop
in
jp
and
cmp
ljmp
mov
loop
cltd
sbb
pushf
ret
fisubl
movsl
mov
dec
sti
mov
pop
outsb
test
into
stc
sub
gs
out
push
or
fstl
inc
dec
sub
jbe
stos
insb
cmc
cmp
xorl
jnp
imul
inc
dec
sub
outsl
push
mov
loop
lcall
rcl
mov
push
mov
lahf
add
or
mov
les
mov
fisubrl
jo
jmp
sub
stos
repnz
rclb
mov
cmp
mov
mov
mov
mov
movsl
out
push
fstpl
pushf
daa
aaa
cli
pop
xchg
js
fwait
imul
xor
mov
ss
lds
lret
add
mov
sub
int
mov
insb
fstl
lods
out
pop
xchg
imul
mov
lret
out
out
jl
dec
cwtl
clc
cmp
sbb
scas
fildl
sbb
aas
dec
or
cmp
cmp
jmp
addr16
adc
xchg
sahf
sub
mov
out
or
out
mov
jae
and
hlt
icebp
insl
pop
cmp
test
cli
js
sub
jns
sahf
sbb
mov
cld
mov
or
dec
dec
into
mov
leave
div
jg
adc
dec
pop
pop
inc
add
fnstenv
dec
pusha
ficoml
ljmp
jnp
lret
dec
jns
out
scas
pop
ja
dec
icebp
xchg
hlt
fimull
lret
push
mov
mov
mov
movsb
sti
rcrb
mov
bnd
fs
or
lcall
push
cmp
fwait
in
push
out
xchg
nop
decl
inc
push
mov
xchg
inc
jg
jl
paddq
aad
imul
and
popa
add
cmp
test
cli
xchg
mov
jmp
js
dec
jae
jne
into
in
pop
loope
out
inc
push
outsb
or
cwtl
adc
push
sarl
cmp
hlt
orl
cmp
pushf
test
cmp
aas
xor
mov
gs
nop
sti
jg
push
rorl
stos
incb
imul
or
dec
gs
aam
sub
in
push
movsl
out
pop
fistpll
rolb
jbe
das
dec
js
cmp
sahf
je
cli
xchg
out
stos
idivl
mov
dec
xchg
movsb
movsb
fs
sbb
popl
clc
push
loopne
xchg
pop
dec
stos
fs
outsb
jecxz
xchg
test
xor
daa
fmull
hlt
frstor
popa
xor
scas
mov
lds
sbb
ret
add
fisub
inc
dec
jns
fisttpll
xchg
mul
sahf
cmpl
lahf
pushf
gs
mov
in
hlt
sbb
ds
mov
cmp
cmp
imul
aad
pop
aaa
iret
loope
pop
mov
sahf
jmp
fwait
call
jp
aas
push
mulb
fisub
mov
insl
hlt
fidivl
adc
sbb
jle
cmp
jns
pop
repnz
js
jg
iret
xchg
sbb
scas
push
lods
aam
pop
and
into
lret
push
stos
mov
dec
lods
pop
test
nop
lahf
cmp
jmp
rcl
cmp
dec
iret
push
fidivl
and
xor
mov
push
lods
lods
mov
lret
push
mov
and
scas
push
adc
imul
sub
jle
jge
dec
mov
or
xor
es
shlb
cmp
in
pop
test
mov
push
les
dec
xchg
cmp
sahf
ret
pop
pop
mov
insl
xor
arpl
inc
popa
hlt
addr16
mov
shl
add
idivb
cmc
repnz
mov
aam
ret
mulb
jns
jne
fcmove
lcall
in
out
rorl
xor
outsb
cmpsb
lret
popl
sub
cmc
xchg
fist
outsb
aad
pop
rcl
bnd
sbb
fidiv
shrl
das
xor
sub
xchg
lds
jbe
outsb
stos
ret
mov
lods
jne
and
mov
addr16
or
iret
sahf
xor
aam
mov
jle
int
dec
mov
dec
sub
popa
lcall
nop
lea
xor
sti
cmc
test
subl
rcrb
fisttp
ljmp
rclb
or
daa
xchg
or
inc
rolb
in
insb
inc
sbb
dec
scas
push
clc
cmp
lahf
jle
adc
sahf
cmpsb
in
fs
xor
lock
dec
jne
ja
cmp
push
movsb
jp
out
push
cld
jno
sti
loopne
pop
jns
outsb
loopne
add
sbb
lcall
or
cmc
or
int3
clc
pop
xchg
loope
push
and
and
stc
out
mov
dec
mov
jp
fdivrl
rol
lods
mov
inc
ret
sub
mov
cmpsb
leave
push
sbb
ret
xor
push
and
stc
or
jae
outsb
xchg
daa
and
addl
inc
stc
inc
fnstcw
fisub
std
loopne
push
jb
outsb
push
ljmp
fidiv
jl
test
xchg
repnz
sahf
shr
mov
inc
push
xchg
mov
xor
test
and
cmp
in
dec
cwtl
out
mov
jno
insb
xchg
adc
sub
sti
xchg
enter
lds
pop
in
rcrl
add
pop
jnp
enter
dec
add
xchg
fsubrp
jp
out
daa
xchg
rclb
jns
mov
rcl
daa
mov
out
in
jae
and
es
mov
adc
shl
popa
xor
adc
xchg
std
movsl
mov
cld
or
cmp
dec
je
sbb
pushf
mov
mov
xchg
lods
dec
mov
int3
jno
mov
sbbl
mov
fldl
xor
in
add
fwait
fwait
and
adc
pop
iret
push
fisttpll
testl
dec
cmp
mov
std
pop
lret
clc
sub
mov
jns
jmp
ret
repz
sbb
pop
loope
aaa
inc
and
mov
sbb
outsb
repz
imul
into
and
in
in
or
mov
imul
mov
cmpsb
add
andl
pop
pop
loop
push
jg
data16
std
out
int
fild
notb
mov
mov
push
fwait
jmp
ljmp
jecxz
cmp
cltd
cs
scas
mov
loope
dec
sarb
mov
lahf
insl
ss
jmp
cmpsl
movsl
sub
inc
fwait
rol
out
sub
xor
int3
inc
cmc
enter
ja
mov
repnz
mov
add
or
push
adc
sarl
jno
aas
fidivrl
lods
movsl
pop
fs
adc
xor
rcr
dec
test
xor
sbb
mov
cld
or
mov
imul
xchg
inc
movsl
das
clc
movb
inc
sbb
mov
cwtl
mov
lods
clc
test
mov
cmp
mov
jns
outsb
mov
mov
adc
iret
xor
xor
cmp
dec
inc
jne
add
loopne
xchg
loop
cli
pop
int3
inc
mov
js
pop
add
inc
fiaddl
inc
fld
pushf
movsl
and
in
mov
insb
dec
mov
mov
adc
xchg
test
repz
mov
ficomp
xor
shrl
test
fs
xor
shrb
add
imul
dec
movl
out
jae
cmpsb
cmp
mov
mov
add
and
push
inc
les
push
dec
xor
cmp
inc
mov
cli
inc
cmc
out
sbb
sbb
xchg
mov
push
inc
cmp
mov
or
mov
lcall
xor
sbb
push
xor
imul
test
repnz
pop
or
sub
mov
out
xor
xchg
fwait
sub
sbb
lret
les
adc
dec
lods
dec
sbb
nop
in
xor
push
insl
inc
pop
mov
or
and
adc
mov
data16
loope
xor
sbb
je
push
fnstsw
rolb
lret
and
sbb
dec
mov
add
pop
dec
outsl
xchg
inc
sub
jecxz
xor
pop
mov
andl
and
dec
test
inc
int3
shl
or
aas
cld
lock
mov
push
adc
pop
pop
cwtl
movb
gs
adc
cmp
loop
mov
in
mov
or
cli
repnz
push
ret
shll
pop
lcall
xor
mov
pop
mov
mov
fxch
sbb
aaa
and
push
lds
sahf
mov
push
adc
imul
inc
mov
and
lcall
and
xchg
call
cmpl
andl
mov
xchg
movsl
inc
and
push
mov
ret
icebp
xchg
mov
sub
js
push
cmp
adc
cld
lahf
push
xchg
adc
sub
and
push
insb
dec
xchg
les
adc
sub
jg
xor
shl
inc
leave
or
loopne
daa
or
mov
push
fdivrl
pop
neg
cltd
jmp
xchg
push
jae
lret
in
imul
jg
in
adc
push
cmp
or
das
push
shll
and
mov
popa
push
dec
int3
push
imul
pop
adc
xchg
movb
das
fsubrl
sbb
mov
and
and
push
pop
popa
subl
and
fwait
or
pop
and
or
orb
fidivl
or
push
or
dec
movsb
add
paddq
fstpl
int3
lods
and
insb
enter
pop
and
daa
test
pop
xchg
and
inc
dec
adc
sbb
sbb
or
inc
xchg
lods
sarl
or
push
test
cmp
add
mov
insl
mov
leave
cmp
inc
mov
mov
dec
cmp
clc
imul
sbb
js
pop
xchg
sub
bound
jmp
mov
mov
cli
dec
out
sbb
faddl
sbb
mov
repnz
cmpsl
and
loop
xor
daa
mov
push
jb
add
and
cmp
jl
sahf
mov
or
ret
icebp
and
xlat
dec
sbb
pusha
insb
enter
mov
cmc
pop
or
lret
leave
adc
test
push
xchg
mull
insb
cwtl
bound
ss
xor
adc
jle
into
dec
mov
mov
and
lods
push
in
test
xchg
pop
popa
xchg
jle
xchg
ret
sub
sahf
shl
or
pop
pop
xchg
fildll
pop
mov
add
call
lea
cmpsb
xchg
loop
push
mov
loopne
rorl
sbb
mov
sbb
inc
addl
je
fcmovnu
mov
outsl
ss
and
mov
sub
repnz
mov
mov
adc
push
sbb
sbb
inc
jbe
mov
dec
pop
and
je
sbb
mov
xchg
repz
mov
sub
cld
xor
sub
and
xor
stos
add
mov
sahf
xor
int
pop
mov
sub
rol
inc
xor
sub
fwait
jge
nop
inc
dec
xchg
push
js
pop
loopne
lds
jl
ficomp
into
test
xor
jle
xchg
or
add
lea
inc
cmp
xchg
sub
mov
lods
pop
mov
sub
loope
rorb
sub
mov
adc
pop
rcrl
mov
jle
push
adc
add
mov
inc
lcall
mov
xchg
pslld
xlat
jo
fs
mov
fwait
sbb
pop
sub
push
jae
jmp
mov
sbb
leave
push
add
cmp
sbb
push
mov
leave
loope
out
iret
inc
and
ret
mov
imul
jge
jbe
xor
dec
cmc
add
xchg
jnp
jle
mov
add
ja
arpl
lahf
popa
lds
mov
lea
cld
into
push
push
pop
or
adc
subl
add
xor
sbb
pop
push
jae
aam
leave
jne
mov
pop
rol
mov
mov
lea
and
pop
sub
repz
or
jge
push
popa
aam
mov
jbe
mov
jns
mov
mov
adc
sbb
jbe
sbb
mov
popl
inc
repnz
enter
xor
fdiv
xor
xchg
push
push
jns
jmp
mov
fisubr
out
test
xchg
pop
inc
dec
mov
mov
cltd
xor
and
int
repz
and
jmp
lds
ret
daa
lock
sbb
sbb
adc
sub
movsb
mov
mov
jae
imul
adc
xor
push
popf
int
pushf
loopne
dec
cmp
pop
inc
mov
daa
xor
xchg
lods
in
lret
ret
ds
sub
inc
mov
dec
mov
sarb
mov
pop
int3
push
lcall
xor
out
cmp
das
dec
lds
in
in
sub
aad
arpl
jno
push
mov
lock
sub
cli
push
add
push
cld
sbb
mov
leave
push
fisttp
and
push
fsubs
adc
push
movsl
bound
xor
push
icebp
mov
sbb
mov
mov
fsubl
sbb
dec
pop
cwtl
fidiv
jno
dec
xor
xor
pop
push
idiv
pop
icebp
push
mov
jl
bound
jns
ret
jmp
pop
cltd
sahf
and
dec
movsl
pop
or
adc
scas
mov
jmp
mov
jns
mov
pop
dec
jnp
jnp
pushf
clc
in
pop
popa
push
mov
ds
inc
push
mov
adc
mov
es
out
push
dec
sub
and
inc
jne
stos
and
or
stos
into
mov
or
sahf
sbb
push
lcall
dec
xor
xchg
ret
or
or
add
add
ss
aas
xchg
sbb
arpl
pop
xor
fsubrs
mov
push
sbb
test
cwtl
push
mov
bound
adc
aas
xor
xchg
lods
cmp
inc
mov
adc
lcall
mov
xchg
add
xor
dec
bound
test
int3
loope
xor
dec
inc
fcomps
jae
dec
into
and
inc
cwtl
sbb
ret
mov
fs
adc
icebp
lods
bound
or
mov
mov
ds
sbb
lret
or
pop
xor
push
int
mov
das
imul
out
test
test
mov
pop
cmp
push
push
stos
xor
adc
adc
scas
push
add
pusha
mov
repnz
fsubl
xlat
les
add
adc
loopne
adc
sbb
xchg
and
xchg
dec
xchg
xor
lods
inc
pop
outsl
mov
pusha
nop
cld
loopne
out
jg
aaa
pop
gs
xchg
sub
xor
pushf
push
enter
aam
add
dec
push
jecxz
adcb
mov
bswap
xchg
loopne
mov
and
test
or
iret
or
dec
stos
in
mov
mov
pop
adc
in
adc
fs
adc
sbb
dec
mov
mov
bound
lret
xchg
aad
adc
in
jp
xor
mov
fisttp
les
arpl
in
lret
popf
push
mov
addl
leave
and
daa
dec
cmp
mov
cmp
popa
ror
mov
mov
dec
cmp
sub
lods
sbb
lds
in
adcl
inc
xor
mov
sbb
adc
push
cmc
ret
rorb
lret
dec
push
push
scas
add
dec
mov
addr16
pop
gs
xor
or
mov
mov
sbb
add
cmp
pop
test
push
cltd
dec
push
xor
int3
dec
insl
mov
test
push
aaa
mov
int3
cltd
and
arpl
pop
ret
stos
sbb
xor
inc
xchg
mov
insl
jmp
xchg
and
and
mov
sub
push
xor
dec
jns
pop
or
adc
push
mov
cmc
or
popa
cld
sbb
jecxz
inc
pop
rcr
and
mov
jecxz
pop
push
into
or
adcb
cmp
jg
pop
xor
sub
mov
cmp
pop
fwait
pop
jb
jmp
and
pop
and
inc
in
xor
les
lret
add
cmp
push
fadd
mov
adc
aas
dec
xchg
push
xor
pop
push
outsl
sarb
or
mov
rorl
cmp
and
adc
lcall
rolb
out
lret
out
pop
sahf
push
and
mov
fsub
xor
xchg
jmp
sub
sahf
xchg
lods
mov
data16
jo
xor
sbbl
push
aaa
outsb
repnz
cltd
data16
fs
pop
ror
inc
xchg
lret
and
out
in
xchg
stos
pop
sub
int
imul
movsb
mov
push
dec
mov
test
sub
pop
sbb
mov
int
andl
adc
cli
test
cltd
push
add
cmpsb
mov
adc
mov
mov
xor
icebp
dec
add
push
mov
jnp
popl
mov
les
push
pop
cmp
mov
mov
sbb
mov
popa
and
shlb
fmull
jl
mov
lds
push
xchg
mov
leave
inc
sbbl
add
mov
jle,pn
jbe
rcrl
test
sub
inc
inc
push
cmovnp
enter
inc
mov
scas
fs
or
mov
cmp
je
jbe
sub
mov
adc
popl
sbb
sbb
xor
mov
popa
cmpsb
cmp
aam
call
push
xor
xchg
int3
inc
cmpsb
je
scas
loopne
add
sbb
aam
cmp
jp
fwait
or
mov
adc
enter
sbb
xchg
outsl
jo
adcl
mov
jecxz
xor
mov
mov
xor
jns
dec
inc
push
dec
mov
inc
and
or
mov
clc
outsl
mov
int
mov
or
cmp
xchg
sub
or
data16
mov
mov
test
xchg
push
mov
mov
push
cmp
es
sub
and
push
sub
mov
lcall
icebp
lea
arpl
cmp
pusha
popf
scas
inc
add
sub
xchg
mov
imul
mov
mov
aam
push
aam
mov
cld
mov
sbb
fistpl
push
push
or
sub
into
cwtl
rclb
xchg
xor
dec
mov
inc
fcmovnu
dec
cmp
mov
jo
adc
sti
or
adc
dec
adc
fisttp
xor
jo
ljmp
mov
div
pop
lea
push
fmull
je
mov
inc
cmp
mov
push
sbbb
stos
bound
out
out
mov
or
out
pop
arpl
insb
jle
int3
loop
sbb
adc
lods
dec
mov
inc
fld
xor
outsb
sub
imul
and
xchg
push
cwtl
aas
mov
push
es
push
arpl
ss
push
je
aaa
shll
mov
in
jae
mov
dec
dec
mov
xchg
and
mov
clc
and
jle
push
stos
out
pop
scas
xor
xchg
push
push
dec
add
xor
ret
sub
or
push
cmp
xchg
fiadd
sahf
je
mov
int3
xor
push
and
xchg
cltd
push
push
inc
add
pop
stos
subb
dec
mov
xchg
sub
dec
lret
sbb
inc
and
into
fdivrs
jne
decl
mov
xor
imul
and
xchg
xchg
mov
xchg
push
cmp
ret
das
mov
inc
push
es
gs
xchg
mov
push
adc
xchg
mov
xchg
dec
sbb
jle
mov
mov
sub
cmp
fimul
push
das
loopne
mov
mov
mov
popa
lret
xchg
mov
sbb
fs
mov
dec
bound
inc
lcall
mov
jbe
fisttpll
adcb
pop
inc
dec
jno
js
sbb
call
lea
add
cmp
push
xchg
sbb
mov
aam
leave
inc
sbb
and
out
mov
mov
lret
subw
orl
mov
dec
add
push
lods
je
scas
fsub
jle
loopne
iret
or
or
push
cmpsb
mov
inc
jb
xchg
icebp
lods
jnp
add
sub
mov
xchg
cmp
push
std
test
xchg
lods
cmp
inc
fsubs
dec
int
shll
xor
in
jmp
inc
and
mov
stos
cwtl
cmp
mov
int
dec
jae
sub
popa
ljmp
lret
cmp
xor
iret
mov
inc
leave
mov
sti
xor
or
mov
addl
dec
sub
adc
decb
adc
mov
inc
mov
pop
inc
sbb
mov
sahf
mov
leave
mov
push
bound
inc
into
scas
xchg
ror
pushf
movsb
pop
xchg
pop
add
dec
arpl
outsb
ss
out
int3
cmc
daa
mov
cmp
enter
inc
mov
mov
cmp
lahf
and
loop
sahf
push
enter
dec
and
mov
cmp
in
out
dec
nop
push
push
xor
mov
aam
mov
pop
xchg
mov
jecxz
jns
xchg
out
sbb
and
fstps
nopl
imul
movl
mov
mov
stos
leave
and
dec
loopne
xor
cmp
mov
popa
mov
daa
clc
push
xor
cltd
mov
pop
in
mov
movsb
addr16
mov
inc
lret
sub
mov
popa
jno
dec
or
mov
xchg
out
lods
jmp
lds
xchg
imul
dec
xchg
xlat
push
rcl
ret
jl
mov
or
in
lret
and
pop
fdivrl
rorl
mov
in
rclb
push
xor
jl
enter
cmp
jns
mov
mov
pop
xchg
movb
lcall
sub
xchg
or
cld
jns
cmp
movsb
mov
or
mov
mov
rolb
outsl
mov
and
sarl
sub
jno
sbb
sbb
push
xchg
adc
ret
xchg
andl
pop
movsb
inc
xor
mov
loope
ss
push
mov
fsubr
call
fwait
xchg
xchg
idivb
inc
mov
fcoml
in
test
adc
and
fldenv
ret
rcll
arpl
mov
inc
das
adc
xchg
in
int3
and
aad
inc
fnsave
push
lcall
fs
leave
mov
mov
xor
std
fisubr
in
jmp
ljmp
into
xchg
push
lea
shlb
pop
xchg
mov
ja
out
pop
dec
inc
pop
sub
dec
cmp
cmp
xor
mov
mov
xor
je
and
and
stos
in
push
cmp
mov
leave
mov
jns
into
or
and
adc
loopne
xor
xor
inc
mov
div
js
mov
push
sbb
insl
gs
js
int
inc
imul
sbb
mov
pop
in
xor
into
lea
push
adc
les
in
stos
sub
int
rcl
lods
sahf
inc
dec
mov
cwtl
fmul
loopne
bound
push
mov
cmc
inc
out
cld
nop
fwait
xchg
in
pop
add
insl
sub
icebp
or
push
roll
xchg
adc
xchg
jo
ss
int
pop
and
data16
popf
ja
int
mov
xchg
insb
cmp
stc
fyl2x
ja
into
test
push
mov
nop
shll
jmp
cmp
loopne
jnp
or
xchg
add
imul
cltd
outsb
jl
sub
inc
xor
js
xchg
fnstcw
adc
es
pop
and
xchg
or
xchg
stos
insb
mov
push
loop
dec
xchg
lret
inc
sbb
jns
dec
cmp
and
mov
xchg
jno
jle
lret
push
fdivrs
sub
out
mov
xor
and
push
divb
sub
push
aad
ds
dec
out
jae
pop
in
in
or
test
mov
in
ret
outsb
scas
cmp
sbb
test
ss
ds
leave
arpl
repz
sub
push
sbb
enter
mov
dec
inc
and
mov
xor
push
test
arpl
aas
das
sub
inc
pop
sub
jnp
xchg
jno
cmc
jmp
addr16
fadd
fldenv
sbb
sbb
int3
sbb
adc
in
lret
paddq
flds
xor
addr16
mov
leave
lcall
push
lcall
mov
imul
iret
fadd
popf
ljmp
xor
sub
and
sbb
adc
pop
xchg
call
inc
imul
insb
jmp
mov
aaa
sub
push
inc
inc
fcom
mov
leave
xchg
and
imul
je
scas
adcb
inc
mov
js
xor
popa
xchg
outsl
mov
dec
push
inc
and
les
dec
mov
cmp
jbe
jae
cmp
cmp
nop
in
aaa
popf
test
push
cmp
outsb
or
push
insl
jae
xchg
inc
or
out
pop
push
sub
add
pop
xor
int
fs
repz
push
jbe
ds
jns
aaa
ret
and
sub
inc
adc
dec
push
sbb
cld
xchg
jnp
lock
daa
dec
adc
les
pop
imul
cli
jae
push
jno
xor
sti
and
sbb
inc
cmpsb
ret
call
or
mov
jns
loope
pop
and
jnp
out
push
pop
cmp
ret
jp
stos
lea
mov
push
test
sbb
push
push
jns
sub
test
in
xor
jae,pn
int
xor
add
shl
in
jb
mov
sub
mov
sub
inc
jae
mov
data16
jae
lcall
and
inc
mov
or
cmp
pop
mov
mov
push
sbb
push
mov
pop
adc
repnz
stos
jae
cmp
push
cmp
mov
cmc
movsb
pop
dec
jo
adc
mov
bound
sti
inc
shll
xchg
cmp
je
jmp
addl
cmpsl
push
imulb
mov
cs
cltd
jbe
and
pop
lods
enter
nopl
hlt
and
fmul
adc
adc
popf
loopne
pop
test
jbe
scas
push
out
adc
lods
cltd
inc
jbe
adcl
test
fnsave
xor
jbe
mov
or
mov
scas
sub
in
aad
mov
mov
std
ja
pop
push
dec
add
fsubr
scas
dec
out
and
and
dec
and
inc
push
inc
push
pop
imul
pop
sub
sub
add
mov
xchg
into
lcall
mov
mov
gs
scas
xchg
xchg
movsb
push
cltd
jb
sub
mov
jbe
mov
push
inc
ss
pusha
call
and
sarl
sub
and
push
mov
jbe
ret
lahf
jae
sub
inc
nop
push
lock
adc
lret
fcoms
gs
or
cmp
lcall
hlt
or
adc
adc
xchg
xor
jae
hlt
adcl
daa
push
jp
xchg
adc
stos
mov
inc
das
xchg
lret
sub
test
test
lret
lods
push
and
cltd
stos
sub
imul
or
movsl
out
sub
sub
and
xchg
in
popa
dec
loopne
icebp
cmp
cmp
xchg
es
inc
mov
push
in
test
cmp
lcall
jp
mov
mov
imul
pop
jmp
xlat
mov
stc
fnop
push
fyl2x
icebp
icebp
icebp
xchg
xchg
mov
aas
je
movsb
fiaddl
lahf
cmpsl
xchg
or
or
leave
loopne
test
or
mov
jmp
fs
inc
pusha
push
cmp
test
push
push
sbb
push
cli
and
iret
jnp
repz
inc
out
mov
lods
xor
xchg
pushf
in
push
lock
test
push
mov
xlat
push
cmp
mov
int
jb
sbb
test
sbb
leave
xor
adc
push
mov
and
movsb
dec
fidiv
lahf
mov
push
ret
adc
lahf
jmp
jne
int3
les
xchg
popf
mov
insl
cmp
pop
dec
push
scas
lcall
jle
aam
popa
lahf
mov
sub
insl
int3
xor
jmp
and
imul
jno
je
test
jbe
push
lcall
mov
movsb
int3
dec
dec
sbb
mov
inc
adc
icebp
cmp
jmp
jne
imul
dec
arpl
test
mov
sbb
sbb
cmc
mov
sub
jmp
das
add
cmp
mov
jb
ja
mov
lahf
push
bound
mov
loop
mov
scas
add
mov
pop
jge
mov
add
aaa
adc
popf
loope
jmp
adc
std
stc
fsubl
in
je
loope
stos
sahf
daa
xchg
lods
add
or
fs
hlt
aas
es
sahf
sbb
test
jge
outsl
jge,pt
cmp
push
into
fwait
fstp
test
xchg
xchg
outsb
int
cmpsb
lcall
repz
mov
test
and
xor
xlat
in
push
into
imul
les
repnz
push
xchg
mov
inc
xchg
stos
pop
das
or
ret
dec
push
sbb
add
mov
out
cmc
incl
aas
adc
fildll
std
fadds
jge
pop
push
inc
test
xchg
sub
roll
push
jecxz
dec
imul
cmpsb
mov
notb
int
popf
jns
int
stos
xor
push
cmp
push
mov
mov
cmp
cmp
xorl
mov
xchg
test
push
mov
daa
bound
sbb
into
mov
dec
test
jne
inc
push
push
dec
les
leave
fild
in
movsb
or
daa
mov
pop
cmc
cmp
jo
cwtl
mov
adc
int
loope
je
push
xchg
insl
xchg
test
leave
div
cmp
es
adc
test
mov
adc
jge
ficomp
jmp
jbe
mov
jbe
outsb
ljmp
mov
inc
call
add
loopne
aas
sub
hlt
lods
ds
dec
in
push
push
add
imul
lcall
inc
adc
in
sbb
dec
shll
pop
scas
repz
mov
pop
out
cmpsb
leave
sub
pop
aam
or
insb
xlat
mov
add
mov
out
pop
call
push
bound
fwait
xchg
mov
fwait
into
lahf
mul
push
into
int3
sahf
mov
and
xchg
cmp
addr16
mov
fcomp
ds
rclb
and
push
in
xchg
jae
pop
aad
outsb
sub
ficomp
pop
dec
xchg
dec
aam
inc
outsb
inc
adc
sub
and
pop
hlt
mov
adc
out
lret
sarl
data16
push
mov
movl
ja
sbb
ljmp
repnz
ret
cwtl
jg
mov
lret
fadds
xchg
mov
data16
jge
pop
shrb
mov
mov
dec
and
xchg
std
mov
mov
dec
fmull
ret
call
xchg
out
and
imul
pop
aaa
and
xchg
mov
movsb
fwait
popf
sub
pop
out
and
xchg
xchg
jb
dec
in
fcoml
inc
inc
pop
push
jne
jne
and
cmp
push
repz
cmc
push
jo
mov
push
mov
inc
mov
sub
pop
test
jl
mov
push
loope
cli
or
jl
mov
pop
pop
jp
cli
ror
mov
jp
push
sbb
enter
outsl
test
add
aam
dec
rclb
cltd
iret
popl
test
add
inc
mov
std
jne
cmp
xor
into
lcall
ret
stc
call
xchg
jmp
dec
adc
pop
mov
in
dec
adc
imul
adc
arpl
pop
jno
pop
loope
pop
je
mov
in
pushf
cmp
adc
xor
lock
inc
inc
mov
and
lret
bound
enter
and
cld
arpl
or
cmp
or
cmpsb
mov
aam
ror
sub
ds
fcoms
mov
pusha
ja
sbb
int
sub
adc
rcr
mov
cltd
inc
test
or
in
pop
lock
xchg
dec
mov
pop
cmp
cltd
push
pop
pusha
mov
pop
mov
sub
cld
dec
insb
xchg
int
bnd
xchg
sub
loopne
mov
aam
cld
add
dec
lods
xchg
jno
and
cmp
repnz
stos
mov
mov
and
cld
jl
lahf
jge
xchg
test
stos
fwait
lret
jge
mov
iret
lcall
or
jg
mov
adc
cltd
adc
out
add
sbb
int
shrb
leave
adc
enter
jno
jp
jge
out
push
fwait
and
mov
dec
xchg
dec
mov
loope
sbb
push
mov
mov
scas
insl
dec
dec
or
dec
cwtl
dec
es
or
rorb
les
sub
add
xor
jecxz
js
add
jp
sub
add
dec
lds
sub
xchg
push
clc
pop
in
mov
and
jp
cmpl
lods
adc
dec
jg
in
sti
jle
xchg
les
or
jns
push
mov
orb
cmp
shrb
lods
xchg
pop
mov
jo
jg
adc
popf
cmp
sti
daa
sub
cld
cli
add
inc
sti
or
xchg
adcl
idivl
sub
mov
dec
add
inc
sbb
pop
mov
mov
imul
jecxz
mov
andl
mov
pop
inc
sub
lods
mov
jo
push
mov
jp
aas
int3
fcomp
in
loop
push
daa
or
push
ja
icebp
call
fwait
mov
popa
subb
jo
rcrb
cmp
inc
jne
test
les
dec
mov
repnz
xchg
loop
mov
lods
push
mov
shlb
das
adc
xor
and
fdivrp
push
xchg
sbb
pop
lock
or
push
mov
inc
xchg
xchg
popa
dec
roll
jns
cld
ret
lret
mov
cmp
pop
mov
sub
je
lcall
cmpsl
pop
test
sbb
xorl
test
repnz
sub
mov
xor
gs
rcrb
lret
push
xor
pop
enter
sub
xor
xchg
lret
fidivl
cmp
push
repnz
lea
rolb
inc
dec
pop
cli
fs
xchg
fistpl
lret
adc
stos
insb
xor
sub
inc
data16
icebp
add
imul
dec
int3
jae
jns
mov
lret
jno
and
xor
testl
mov
repnz
jo
cli
scas
mov
out
mov
jbe
dec
cmp
push
jnp
sub
int
je
repz
std
lea
ss
or
pop
and
pop
mov
xchg
divb
sbb
shll
in
adc
mov
dec
jge
insb
jmp
push
int3
jmp
outsl
clc
or
je
mov
ds
pop
das
lea
push
dec
aas
clc
sbb
lods
clc
leave
pop
and
imul
imul
cmpsb
push
popf
fldt
pop
adc
movsb
jle
push
notl
out
lcall
fnop
add
in
es
xor
sahf
jne
ljmp
dec
xor
leave
pop
loopne
sti
dec
fstpt
dec
rcr
repnz
dec
jae
push
jmp
stos
dec
jbe
imul
iret
loope
mov
rcrl
cmc
aas
sbb
pusha
clc
and
jnp
push
mov
out
lea
pop
xchg
push
add
push
or
xor
or
ljmp
test
fwait
jae
fsubrl
loope
addl
add
mov
pop
xchg
pop
push
cmp
stc
add
mov
hlt
sar
packssdw
cmp
mov
mov
mov
cmp
adc
icebp
hlt
cmp
mov
lahf
adc
fisubr
into
mov
fwait
out
xchg
sub
mov
ficomp
rol
int
push
rol
aam
cmpsb
pop
adc
push
sbb
cs
dec
sti
icebp
scas
sub
xchg
ss
adcl
add
mov
jg
xchg
and
lret
xchg
lret
jbe
subl
dec
pop
ljmp
mov
sbb
cmp
adc
fidivrl
sub
or
fsubr
push
iret
push
xchg
repnz
aas
fdivrp
mov
push
sahf
push
mov
xor
lret
popf
movsl
scas
dec
scas
jge
decl
ja
push
mov
decl
cmpsl
pop
pop
xchg
mov
cmpsb
aas
mov
mov
out
xor
mov
test
or
mov
cmp
mov
push
loopne
xchg
mov
xchg
enter
push
dec
mov
scas
xchg
lock
push
jo
mulb
dec
ss
das
pop
in
pop
mov
cmp
add
ficoml
jnp
lcall
cmpsl
push
sbb
add
aam
shlb
xchg
add
cmp
dec
inc
push
jecxz
jmp
das
mov
inc
stos
xor
push
dec
mov
mov
jne
xchg
mul
fsubs
push
fbstp
xchg
pop
pop
arpl
mov
sub
hlt
lea
jmp
cmovp
pop
ljmp
pop
faddl
and
mov
dec
pop
or
fsubl
xchg
pop
or
and
sub
ja
jmp
in
xor
ljmp
mov
cli
pop
lret
lcall
in
subb
mov
adc
add
inc
test
scas
jb
scas
addl
mov
aas
sbb
cmp
das
imul
sbb
adc
cmp
mov
lods
mov
pop
mov
cmpw
scas
dec
cmpsl
sbb
int3
outsb
or
xchg
xor
inc
cmp
adc
sahf
xor
testl
mov
into
push
or
mov
out
sbb
lds
pop
bound
stos
sub
and
xor
sbb
sub
icebp
mov
push
shlb
enter
add
mov
arpl
push
inc
inc
sbb
pop
push
jne
inc
push
in
sahf
cmp
ds
out
mov
shrb
les
lods
cltd
cld
enter
jne
sahf
mov
andb
gs
hlt
pop
sub
sarb
popf
sub
das
adc
jl
push
popa
mov
fs
xor
inc
dec
cmp
scas
repz
test
cmp
dec
ret
xchg
jle
pop
nop
lret
aas
pop
xchg
icebp
cmp
and
in
and
rorb
flds
cli
lods
pop
outsl
cld
pop
ret
pop
sub
sbb
xchg
or
cld
jo
adc
jns
int
or
rclb
push
mov
clc
jmp
add
sbb
mov
inc
out
aad
pop
out
push
in
cmp
xor
pop
sbb
mov
xchg
xchg
mov
ret
hlt
and
stos
rclb
movsb
popf
and
pop
push
rcl
insb
lahf
jns
sahf
rolb
bound
sub
mov
mov
inc
hlt
lret
mov
ds
int
stos
loope
push
stos
dec
ja
adc
gs
jmp
sbb
rorb
sbb
stc
pop
ljmp
nop
ret
adc
mov
adc
mov
push
loop
jb
xchg
in
adc
pop
sbb
jmp
jae
loopne
cld
ret
arpl
fs
mov
cmpsl
in
cltd
faddl
and
inc
mov
jae
sub
js
bound
jb
rclb
push
or
stos
imul
jno
sti
lock
dec
push
push
or
cltd
dec
mov
mov
jae
rclb
sarl
aam
pop
xor
mov
mov
jg
outsl
xchg
and
pop
mov
inc
and
pushf
mov
vmovmskpd
cltd
je
xchg
out
add
xchg
mov
add
jecxz
cmp
enter
mov
fs
mov
or
ja
lock
lret
clc
mov
cmp
xchg
cmp
stos
xor
pop
inc
or
mov
dec
fld
clc
ja
nop
push
dec
adc
in
out
add
loopne
pop
daa
sbb
sub
stc
mov
pop
and
push
nop
shrb
push
pop
call
push
add
mov
cmp
aam
lret
jp
mov
sbb
jge
sub
push
add
movsb
fildll
xchg
cs
and
push
or
and
aaa
inc
and
lea
in
mov
scas
dec
jmp
adc
xor
pop
jge
push
cmp
jmp
sti
pop
sarw
mov
jle
fwait
repz
push
iret
pop
xchg
aam
das
jno
jbe
jecxz
adc
mov
cmpsl
xor
fildl
adc
mov
test
jecxz
sbb
lret
fisubl
xlat
fdivrl
arpl
push
or
subl
cwtl
sub
pop
lock
out
lods
mov
call
or
sub
insl
pop
pop
pop
dec
sti
xor
test
ret
shrb
xchg
sub
cwtl
pop
aam
in
inc
sub
push
add
int
inc
xor
and
push
jns
idiv
sub
rorl
sub
les
and
mov
jl
ss
jb
lahf
xchg
loopne
xor
xor
outsl
cli
int3
cld
insb
pop
push
fbld
and
sbb
cli
mov
cmpsl
dec
xchg
jne
rcrb
add
sbb
pushf
fidivl
pushf
pop
into
pop
xchg
fwait
bound
jns
addr16
stos
jge
test
test
out
gs
outsl
cmp
scas
mov
xchg
xor
jb
scas
std
mov
jmp
push
inc
or
rcrl
pusha
adc
test
enter
dec
mov
pusha
pop
fsubrl
mov
idivl
mov
push
push
in
jecxz
and
movsb
cmp
imul
jmp
xchg
mov
adc
aad
loopne
pop
fs
in
outsb
pop
fucomip
cmp
cmp
rclb
and
xlat
and
mov
pop
sar
jp
sbb
loop
fwait
and
int
das
push
xchg
loope
mov
push
pop
or
stos
repnz
divps
jmp
sub
pop
fucomip
shll
add
sub
ret
out
adc
pop
fwait
loop
push
and
or
dec
lods
push
mov
mov
add
jecxz
jmp
and
jae
fucomp
dec
jb
add
adc
imul
push
repnz
push
mov
mul
enter
pusha
mov
outsb
xor
dec
sarl
xchg
jl
addr16
dec
adc
test
je
sub
insb
test
pop
xchg
outsl
cmp
cmp
and
dec
and
mov
fldcw
addr16
ret
ss
inc
sub
xchg
dec
fist
out
adc
xchg
xor
pushf
hlt
dec
iret
cmpl
mov
sbb
mov
add
jne
xlat
push
cmpsb
xchg
jo
mov
xor
shrl
adc
push
cmpsl
adc
or
pusha
sub
stos
cvttps2pi
push
iret
jecxz
fldcw
pop
sub
jle
fcoms
lcall
insl
out
sti
movsl
mov
fnsave
movsb
cmp
test
xor
ret
loopne
cmp
rcll
cmp
jae
push
inc
pop
sti
inc
or
xor
std
movsb
jns
cmpxchg
sarl
push
mov
sti
sub
out
or
add
jbe
sahf
xor
xchg
xchg
or
add
inc
or
pushf
add
mov
imul
pushf
xchg
cmp
scas
leave
fnsave
mov
pop
mov
jo
cs
sbb
aaa
ffree
xchg
push
xchg
movsl
inc
adc
inc
int3
sahf
jae
in
inc
sbb
mov
adc
mov
jg
cmpsb
aam
les
xchg
cmc
adc
inc
shlb
push
ret
stc
js
jmp
jbe
shl
push
xchg
pusha
fidivr
push
dec
push
pop
fwait
and
fsubrl
sub
cmpsb
dec
mov
les
pop
enter
aaa
mov
repz
pushf
pop
mov
pop
pop
push
cwtl
jo
jmp
bound
int
fdivs
push
loopne
inc
out
test
mov
pusha
nop
cmp
xchg
pop
xchg
add
pusha
add
inc
cmpsl
data16
leave
lea
jecxz
popa
jle
movb
and
insb
jge
aad
pushf
outsl
inc
xchg
sub
pop
add
push
push
enter
xchg
dec
cmp
jge
add
in
xchg
lea
xchg
enter
dec
das
imull
dec
mov
aaa
lods
xor
cvtdq2ps
repz
lret
pop
dec
mov
mov
mov
idivb
or
ret
loopne
js
mov
xor
pop
cmpsb
into
xor
and
fs
jle
cmc
add
lret
or
stos
cmp
jnp
out
mov
or
imul
or
in
sbb
icebp
and
inc
dec
xchg
mov
pusha
outsl
ljmp
aas
sbb
xor
idiv
sub
hlt
jp
lods
test
cmp
lods
leave
add
xchg
cld
jp
rcll
movsb
clc
mov
jae
adc
loopne
and
daa
sbb
jae
mov
push
adc
adc
fdivl
sub
add
repz
mov
insl
cs
inc
shll
pop
inc
mov
and
or
xchg
faddl
mov
mov
mov
sub
add
xchg
sbb
fwait
xchg
test
xor
add
jmp
dec
incl
dec
test
cmp
xchg
clc
sub
push
mov
or
mov
mov
std
nop
xchg
lea
sub
imul
push
cmc
stos
loop
scas
jo
xor
call
mov
mov
dec
clc
cmpl
mov
shll
mov
mov
loop
mov
jae
int
dec
repz
push
sbb
mov
xor
ret
dec
clc
dec
jno
mov
fistpll
pop
ds
xor
mov
xchg
pop
mov
out
xor
int
and
rcr
jae
xchg
xlat
lahf
pop
lcall
sub
call
fistpl
xor
sbb
inc
xor
jp
fistpl
jecxz
dec
dec
add
scas
mov
jmp
mov
cmp
sbb
jp
mov
es
or
pop
jo
cmp
mov
das
or
sbbl
notb
aad
or
push
fnstsw
jle
jns
out
int3
test
aad
cmp
add
xor
sub
mov
jns
in
jae
rol
push
popf
dec
mov
mov
shl
sbb
jbe
psllw
and
iret
sbb
xchg
imul
push
push
es
xchg
fstpl
subl
dec
jle
jecxz
arpl
xchg
out
mov
mov
out
lock
lock
push
or
movsb
sti
mov
mov
popa
push
daa
cmp
jae
cmp
sub
adc
scas
mov
js
insl
in
rcrl
mov
inc
push
sahf
out
sbb
sbb
mov
mov
and
ficompl
jno
jecxz
jae
push
push
outsl
or
dec
fadd
lods
repnz
and
inc
mov
inc
mov
lcall
push
adc
pop
dec
sahf
lea
mov
imul
mov
mov
push
leave
cmp
jecxz
in
lods
xchg
inc
jo
inc
stos
mull
lcall
sbb
mov
cltd
push
inc
test
mov
inc
jmp
ljmp
fistpl
mov
adc
or
mov
push
stc
add
imul
dec
int3
ffree
dec
mov
dec
out
rol
pop
scas
mov
push
ja
cmpb
cmp
insl
push
jnp
fcmovbe
idivl
push
xchg
inc
ret
fcomi
outsb
jge
and
jle
pop
outsb
stc
iret
xchg
inc
inc
pushf
stos
dec
pop
pop
dec
xchg
cltd
mov
cmpsl
cmp
inc
bound
mov
mov
push
pop
jle
pop
xor
or
adc
fucomi
cli
cs
outsb
test
mov
mov
adc
movsl
mov
js
mov
stos
mov
adc
jl
aad
cmpl
cs
xor
sub
and
dec
push
cmc
xor
addb
dec
mov
ss
mov
push
sub
sarb
add
dec
pop
fnstenv
fldl
nop
fldl
push
mov
or
daa
sbb
mov
xchg
mov
cli
sub
fwait
sub
shlb
jp
inc
xor
mov
jmp
lods
mov
loop
jno
cmc
cmpsb
test
mov
cli
sar
ret
aad
push
mov
lret
fs
dec
jle
and
hlt
test
enter
data16
mov
call
jmp
or
loopne
jbe
xor
mov
mov
jns
jecxz
bound
and
cmpsl
mov
and
mov
mov
int
dec
jo
mov
stc
xchg
pop
mov
mov
mov
pop
pop
shl
mov
lcall
dec
ds
xchg
mov
movsl
add
js
jp
push
fisttp
dec
out
adc
ja
push
fildl
and
fwait
pop
cmpsl
sahf
xchg
fwait
push
scas
imul
int3
mov
rcrb
mull
push
pop
stos
mov
imul
push
mov
cmpsb
ficom
add
xchg
sti
xchg
xchg
mov
mov
hlt
hlt
test
jnp
xor
add
xor
and
in
pop
movsl
scas
cmpsb
mov
fiaddl
scas
insl
cmpsb
dec
xchg
ss
scas
lret
sbb
call
xor
cmpsb
outsb
mov
mov
and
loope
ljmp
jmp
and
scas
xor
mov
out
sub
and
push
mov
repnz
mov
mov
xchg
subl
popf
pop
jp
jo
dec
lock
xor
cmp
call
lods
xchg
sub
sub
or
jno
mov
cli
sti
and
outsl
xor
cmp
and
divl
xor
jno
daa
pop
or
push
dec
pop
notl
fnop
dec
vmread
jbe
loopne
adc
ret
jb
ret
ds
les
and
pop
or
sub
imul
and
leave
push
sub
push
mov
int
es
das
cmp
aad
or
insl
add
fnop
cmc
aas
xor
cmp
jns
mov
mov
dec
cld
jo
and
mov
inc
stos
adc
mov
push
jl
fwait
xor
push
test
mov
jb
hlt
repnz
mov
outsl
mov
sub
lock
xchg
fs
ret
mov
jmp
mov
fistl
or
lods
or
cmp
enter
xor
push
nop
imul
leave
push
sar
ret
cli
in
mov
insl
mov
or
xor
and
cmpsl
pop
adc
jle
aas
jecxz
lret
mov
ds
jecxz
dec
or
and
mov
lods
in
lret
dec
push
push
jnp
mov
loop
dec
mov
or
pusha
ja
or
or
loopne
in
xchg
push
daa
lea
test
sti
sbb
lods
pushf
xor
jp
das
cmc
xchg
jno
stos
cli
and
jne
and
sub
jecxz
mov
out
jnp
push
jle
imul
push
in
inc
hlt
inc
mov
dec
jb
jbe
sarl
xchg
andb
push
pop
out
mov
mov
dec
les
sbb
mov
rclb
cmp
mov
icebp
fidivl
jmp
loope
and
jne
sti
loop
leave
jnp
pop
mov
sbb
lods
cmp
sbb
ja
cmp
mov
incl
inc
loopne
cltd
jnp
mov
outsl
jne
mov
xchg
bnd
int
add
dec
clc
mov
aam
adc
mov
pop
fwait
inc
sbb
in
adc
scas
scas
dec
mov
and
sub
clc
in
lret
icebp
lods
mov
cltd
jns
jns
cmp
mov
mov
dec
xchg
rcr
add
sub
inc
dec
pop
jns
pop
inc
inc
push
stos
push
adc
popf
xor
push
mov
adc
xor
add
xor
sbb
adc
or
push
mov
addr16
inc
push
mov
sbb
sbb
jmp
daa
dec
mov
xchg
dec
xlat
xor
sbbl
popf
scas
aaa
adc
mov
js
aad
nop
xor
dec
mov
stos
aam
popw
xor
sbbb
imul
pop
in
push
out
sarb
inc
adc
pop
sbb
in
sbb
stos
cmp
adc
cwtl
xchg
jecxz
mov
sbb
sbb
jne
outsl
push
sbb
scas
mov
loope
enter
sbb
outsl
data16
jmp
dec
bound
sub
mov
mov
pop
mov
mov
pop
pop
mov
rol
xchg
inc
aas
sbb
sbb
pop
push
fmull
jle
in
scas
loop
or
jg
arpl
adc
imul
iret
ss
cmp
loope
push
loopne
xchg
movsl
cmpsl
incb
sub
cmp
xlat
stos
aaa
fisubr
or
lret
into
loop
xchg
add
mov
test
lahf
icebp
mov
jno
test
aad
dec
aad
mov
ja
popf
lods
ljmp
mov
push
inc
inc
into
cmp
xchg
hlt
fs
sahf
push
mov
pop
cmc
ficompl
ret
movb
mov
push
pusha
into
out
xchg
in
out
push
outsl
and
inc
adc
jae
ljmp
mov
pop
jge
push
xor
mov
in
jmp
popl
mov
cmp
loop
push
pop
stc
cmp
out
cmp
aas
sbb
mov
inc
xchg
add
mov
cmp
cmpsl
xchg
rcll
or
xor
push
add
dec
or
push
dec
mov
xadd
icebp
mov
daa
push
mov
adc
pop
test
or
insl
repnz
xchg
dec
xchg
and
mov
cs
mov
gs
adc
adc
jle
xchg
fistpl
pushf
fldl
push
pop
fwait
inc
mov
mov
xchg
push
push
push
ljmp
imul
xlat
rorl
movsb
ds
ljmp
lcall
sub
mov
dec
insl
jecxz
and
jns
fwait
mov
imul
lods
ret
push
jne
jg
fimul
push
stos
inc
or
jne
mov
movsb
imul
adc
inc
jmp
lods
scas
and
xchg
std
mov
mov
rcrl
jl
adc
into
mov
mov
imul
xor
lahf
movsl
sarb
or
jge
stos
fnstsw
out
cs
fs
xchg
jge
mov
stos
fdivrl
mov
or
cmc
push
jp
arpl
pop
mov
push
in
cmp
and
sbb
pop
cltd
xor
ret
sub
push
rcll
shll
fsubrp
mov
in
lods
push
aas
cmp
into
loop
in
imul
mov
cmp
cmpsl
test
inc
lock
push
dec
rolb
push
jmp
xor
outsl
cmp
mov
adc
clc
imul
mov
addr16
lahf
insl
outsl
aaa
jmp
fildl
repz
inc
xchg
mov
cmc
popa
and
mov
sub
inc
js
lret
imul
idivb
jo
repz
mov
xchg
imul
mov
mov
insb
cld
xorl
pop
jmp
lock
pop
andb
std
scas
dec
adc
in
scas
pop
push
int
es
adc
fsubrs
or
and
push
push
jl
inc
inc
add
mov
push
sbb
les
dec
int
cmpsb
shr
cs
rorl
mov
jecxz
push
dec
mov
cmp
in
negb
xor
cmpsl
mov
or
mov
sbb
mov
sub
dec
pushf
pop
aam
cmpsl
outsb
jb
int
sbb
das
pop
mov
mov
or
jp
mov
ds
dec
sarl
dec
sbb
jnp
dec
pop
or
insl
aas
ds
pop
aad
inc
loopne
xor
and
push
retw
jns
mov
call
sub
rcrl
or
sbb
mov
adc
pop
shl
arpl
mov
or
xchg
push
inc
rolb
jle
pop
adc
into
mov
sbb
ret
je
mov
movsb
lcall
cs
es
xchg
cmc
lahf
gs
or
xchg
outsl
dec
jne
gs
cld
jle
and
sub
jne
sbb
add
int3
xchg
std
push
popf
stc
fldt
outsl
xor
sti
daa
js
mov
out
cld
call
add
cmp
cmp
dec
sub
sub
iret
in
inc
sub
mov
int
cltd
adc
adc
repnz
int
xchg
pushf
add
lcall
sar
xlat
xchg
sar
jle
fistpl
jp
push
mov
das
ss
repnz
jmp
mov
sbb
push
pushl
push
insl
xor
popa
roll
or
inc
arpl
lods
lock
cltd
fwait
cmp
icebp
fisub
insl
xchg
pop
adc
repz
out
add
mov
fcmovne
into
jmp
push
int
cli
jp
xchg
ret
jge
push
lea
out
in
sub
xchg
hlt
push
mov
nop
jbe
out
outsl
cmp
xor
jmp
cmp
add
test
cwtl
leave
sarb
jb
xor
push
clc
pop
or
sub
mov
sub
mov
jne
ja
xchg
sub
icebp
loope
cmp
or
cmp
mov
sbb
repz
test
je
int3
into
inc
lods
cmp
dec
xchg
jp
faddl
lea
add
rcr
dec
in
rclb
test
push
lods
cmp
imul
imul
dec
inc
sti
mov
or
add
adc
cmp
into
iret
jne
in
xorl
nop
insl
sbb
sahf
cmp
cmp
test
jnp
cmpl
stc
sub
jecxz
dec
pop
push
loop
lock
jg
int3
mov
pop
movsb
adc
and
aam
cmpsl
jp
inc
mov
dec
add
jg
push
xlat
cmpsl
inc
addl
sbb
jg
int
inc
aad
sbb
pop
mov
jno
dec
inc
push
push
push
test
fwait
jle
or
jp
and
movsb
jecxz
call
sub
add
int3
lds
out
mov
test
mov
scas
rorl
cmpsl
clc
and
lret
out
imul
in
push
sub
pop
mov
pop
pop
adc
dec
fdiv
iret
mov
incb
in
xor
enter
addl
aaa
in
inc
scas
cmpsl
bound
add
ret
lods
push
pushf
push
dec
lods
repz
int
pop
test
xor
or
sti
mov
sbb
xchg
outsl
sub
mov
mov
cmp
ss
pop
call
orb
or
cs
fwait
add
inc
mov
cmp
xchg
jne
stos
pop
push
and
hlt
mov
sarl
sbb
xchg
in
pushl
movl
push
in
sub
arpl
pop
out
jbe
jle
mov
mov
stos
out
cmp
mov
and
cltd
fs
ss
adc
push
mov
jb
outsl
jne
jle
mov
repz
ljmp
jne
cmpsl
and
fwait
xor
pop
rolb
sbb
add
bound
mov
pop
or
call
xchg
inc
ret
fstl
cmc
dec
ret
mov
xchg
jle
cmp
dec
inc
inc
nop
loop
lods
mov
out
jo
sub
fisttpl
and
je
dec
jne
mov
xchg
inc
popf
pushf
pop
iret
mov
pop
fisubrl
pop
enter
das
arpl
shll
es
mov
addr16
and
push
bound
adc
aad
push
or
int
outsb
inc
idivl
jl
sub
add
adc
stos
lcall
and
pop
and
mov
and
addl
and
pop
mov
popa
mov
cmp
xlat
push
cwtl
push
ret
sub
lds
aam
dec
sbb
or
push
aam
fldl
xchg
idivb
xor
push
jge
mov
lret
call
movsb
sub
dec
cmp
jp
add
cmp
cmp
adc
stos
xchg
popf
adc
inc
jg
mov
jno
pop
fildl
data16
leave
flds
das
dec
sbb
sub
nop
ljmp
dec
mov
pop
clc
outsl
dec
imul
lods
cmp
dec
jp
pushf
sbb
ljmp
lcall
rcr
mov
mov
xchg
dec
sbb
sbb
leave
sub
pop
add
push
fidivr
adc
mov
cmpsb
inc
mov
in
cwtl
int3
jg
mov
cmp
shll
inc
sbb
mov
mov
push
pop
ret
add
push
and
mov
outsb
mov
mov
jae
add
out
imul
ljmp
sub
fimull
icebp
adc
ja
ror
cmpsb
jb
ds
mov
loope
push
fsubp
sahf
cs
repnz
sti
inc
mov
mov
push
cs
out
ret
inc
mov
aad
xchg
push
mov
sarb
ret
sub
jae
sbb
jle
fs
add
imul
mov
add
mov
rcr
jbe
dec
mov
cmc
mov
xor
jg
outsl
nop
xchg
xor
pop
xor
push
cwtl
sub
popf
hlt
test
fstl
enter
xchg
pop
clc
cmc
test
test
pop
js
jns
aam
jns
mov
sub
pop
iret
dec
jne
cltd
daa
daa
andl
adc
jae
mov
jp
stc
pop
outsb
mov
sub
nop
sbb
cmp
aad
adc
roll
dec
mov
repz
cs
cmc
ds
sub
xor
mov
mov
mov
mov
lret
frstpm(287
inc
sub
test
es
and
cmp
in
and
and
stc
xchg
shr
movsb
fucom
add
ds
jp
jnp
leave
pop
dec
pushf
stc
lods
fnstenv
addb
add
cli
cs
fwait
mov
mov
insb
sub
fisubr
rcl
ja
xor
mul
xor
mov
xor
fs
or
jge
dec
mov
push
xchg
cmp
repz
scas
push
push
popa
je
pusha
mov
mov
or
outsl
jo
sbb
sub
arpl
jno
cmpsb
test
mov
xchg
xor
sahf
rorb
popf
lret
jp
rcll
inc
je
lcall
and
mov
rcll
mov
inc
cld
pop
and
xor
aam
jg
xor
in
decb
xchg
ss
jne
xchg
cmp
imul
add
ja
push
cwtl
mov
sub
popa
sarl
rcll
std
adc
lds
ss
sub
push
pop
out
bound
mov
mov
insl
lahf
movsl
xchg
pushl
push
lea
aas
jmp
inc
in
in
and
xchg
add
std
enter
inc
dec
imul
jecxz
mov
bound
lcall
imul
repz
sub
js
pop
jmp
sahf
mov
and
imul
xor
icebp
jno
aaa
sub
mov
xorb
push
mov
inc
rol
inc
cld
out
aam
xlat
or
iret
sub
push
cmpsb
test
shrl
fs
lds
lods
cs
jae
loope
subl
fs
add
mov
fwait
jmp
jg
ffreep
add
jecxz
pop
outsl
inc
aaa
or
sub
scas
pop
cltd
mov
cmc
imul
inc
push
and
sti
ds
outsl
popf
clc
data16
xor
dec
jmp
jno
add
lret
pop
pop
enter
lods
scas
scas
and
sbb
fist
push
mov
sbb
out
cmp
mov
jmp
aaa
fiadd
push
pop
imul
pop
lock
jl
outsb
xchg
xor
into
mov
dec
lret
out
jg
xchg
jg
repnz
adc
jg
aad
and
sbb
loope
push
rcrb
xor
sub
jmp
test
sub
push
leave
outsb
jne
mov
imul
lods
or
std
enter
dec
cmp
or
jb
or
push
adc
inc
arpl
push
pop
mov
dec
ljmp
in
addr16
push
or
adc
rorb
test
cmpsb
fcmovnb
pop
and
push
adc
lods
lret
cmpsl
mov
mov
sub
fisttp
fdivl
sub
outsl
mov
dec
imull
mov
fmull
jle
jmp
out
bound
fisubrl
push
pop
push
in
xchg
pop
mov
repz
loop
sbb
std
dec
in
out
or
jae
mov
lock
mov
pop
sbb
stos
into
sub
nop
mov
xor
ja
inc
push
xchg
cmc
in
xchg
fs
mov
jle
lds
pop
jne
lods
mov
fidivr
lds
sub
mov
sahf
repnz
shlb
mov
cmp
into
aad
pushf
pop
and
and
xor
push
or
add
xchg
ja
in
insl
push
dec
ds
scas
cld
push
mov
or
sub
mov
push
dec
sysret
inc
aam
fisub
ror
lock
lahf
jle
fbld
out
test
in
out
mov
aas
or
and
in
mov
testl
sub
push
push
add
jae
cld
das
icebp
add
insb
sub
cmpsb
and
and
lods
adc
mov
or
jmp
hlt
gs
lods
dec
rclb
mov
xchg
cs
out
xchg
fisubl
xor
sbb
jp
lods
and
hlt
loop
stos
jbe
fistpl
cmp
xor
scas
sub
movsl
add
in
xchg
out
xor
shlb
xor
lock
data16
xor
xchg
stc
push
leave
pop
xor
and
or
sti
xor
jecxz
fsubrs
push
fisubl
cltd
sbb
sbb
divl
jbe
cmc
dec
gs
insl
sbb
push
pop
xchg
add
or
notl
mov
inc
add
or
int3
cmpsb
and
loope
add
jp
cld
cmp
xor
xlat
pop
xor
and
add
aam
shr
xlat
int
fistl
xchg
loopne
cld
scas
data16
dec
xor
inc
and
lahf
ja
sbb
mov
adc
lret
sbb
aam
push
mov
mov
mov
enter
movsb
hlt
jae
loop
call
outsl
cli
xchg
lahf
clc
mov
imul
ficomp
imul
sub
cmp
fdivs
mov
inc
jge
push
push
nop
jb
lods
int3
stc
stc
jp
xchg
jns
insl
lock
lcall
faddp
push
adc
add
sbb
mov
push
in
mov
sti
sbb
outsl
jg
sbb
mov
mov
test
jb
jne
das
lret
adc
lret
jns
xchg
aaa
sbb
repz
jns
pusha
pop
pop
cmp
les
xlat
addr16
pop
ja
xorl
dec
lahf
inc
jle
mov
data16
cs
call
jae
jecxz
sub
jb
sti
lds
in
test
push
inc
mov
data16
dec
mov
nop
testl
push
aam
sti
out
and
dec
push
cli
pop
sbb
fndisi(8087
mov
test
fdivl
mov
xchg
fxch
mov
decb
cmp
enter
lods
cmp
addr16
add
sbb
xor
inc
cmp
sub
mov
dec
sbb
dec
fwait
cmp
jb
pop
das
imul
mov
add
out
jg
cli
push
out
mov
xchg
out
not
adc
adc
or
xchg
add
sbb
jne
int
xchg
xchg
push
sub
dec
xchg
add
adc
mov
xor
divl
pop
mov
xor
sbb
js
flds
xor
ret
insl
cmc
cld
pop
pop
mov
shr
out
pop
mov
aaa
call
pop
push
xchg
and
dec
mov
mov
sbb
sub
sub
sbb
les
cwtl
dec
notl
push
data16
call
pop
mov
pop
lods
jl
lods
and
inc
int3
js
addr16
fldl
adc
ja
int3
and
stos
mov
xor
inc
xchg
push
mov
rcll
jbe
push
popf
cmp
adc
lret
dec
cmpsb
pop
push
lods
mov
pop
inc
mov
mov
dec
lea
mov
add
jb
sbb
sub
lods
loop
subl
aam
mov
outsl
pop
and
pushl
test
stc
inc
lahf
nop/reserved
fldcw
or
jae
xlat
jle
push
jmp
jg
push
pop
popa
sahf
lahf
mov
dec
test
mov
xor
cmp
jmp
hlt
fcmovnu
pop
subl
adc
ss
jg
mov
dec
inc
sti
test
pop
mov
pushf
int
sub
aad
cwtl
mov
mov
aas
xchg
sbb
jge
push
inc
jae
and
xor
xchg
ljmp
mov
inc
rclb
add
popa
mov
dec
jle
dec
mov
xchg
test
xor
rcr
and
je
negl
xor
xor
gs
repz
fildll
inc
test
or
in
fs
stc
loop
push
fidivr
inc
sbbl
xor
sub
mov
jecxz
std
fwait
inc
push
push
test
xchg
mov
inc
push
lret
pop
faddl
push
stc
jbe
mov
ja
cmp
pushf
call
lcall
push
out
push
jnp
imul
pop
xor
add
cs
lret
xchg
and
cld
sub
cwtl
aad
loope
push
clc
pushf
mov
and
lcall
enter
mov
loop
pushw
cwtl
sbb
call
or
js
inc
pop
leave
sbb
cmpsb
dec
lret
xchg
out
jno
or
mov
repnz
jmp
fs
xor
repnz
push
cmp
ds
and
repnz
sti
push
mov
xlat
and
push
xchg
les
test
adc
adc
ja
mov
mov
imul
ja
setnp
inc
rolb
add
mov
add
out
movsb
mov
pop
xchg
xor
dec
cmp
aas
fnstcw
mov
pop
or
loope
mov
pop
push
or
cmc
lcall
adc
cmp
inc
dec
popf
mov
test
aam
scas
cmpsb
bound
clc
aad
push
repz
cltd
cli
pop
cli
out
xchg
xor
movsl
xlat
mov
pop
or
fistpl
movsl
xor
shr
sbb
imul
popf
je
idivb
cmp
enter
add
or
inc
sar
sbb
lock
cld
mov
movsb
cmpsl
pop
mov
pop
pop
add
or
hlt
push
dec
cmpsl
adc
pop
mov
jns
sbb
repz
push
lods
ret
add
sbb
sub
shlb
xor
cmovge
mov
xchg
scas
mov
xchg
lods
xchg
rcr
iret
icebp
js
imul
inc
push
out
dec
scas
insl
sub
arpl
aaa
jecxz
cmp
dec
push
fmuls
sbb
or
xchg
inc
aas
mov
loopne
add
xor
ljmp
ja
ljmp
adc
je
nop
pop
mov
test
jg
xor
push
fcoms
ret
imull
ss
dec
xchg
mov
ja
jo
aad
and
aam
mov
mov
mov
xchg
std
jne
insl
dec
daa
mov
aas
mov
cmp
push
aad
pop
push
out
aad
clc
pop
jg
and
push
aam
sub
into
cwtl
add
and
mov
push
push
lret
cmpsb
mov
fimull
cmp
aam
sbb
xor
incb
jnp
pop
cmp
iret
mov
add
ror
lahf
cmpsl
jnp
leave
sti
xorl
popl
loopne
adc
test
xchg
jnp
fs
jecxz
leave
sbb
jge
stos
sub
clc
push
jge
inc
sbbl
sub
lds
in
test
es
mov
mov
push
sub
das
sti
xor
jp
gs
inc
out
or
jae
lret
pop
stc
aad
and
jl
aaa
clc
dec
mov
cmpsl
out
push
imul
int3
xchg
mov
out
cltd
mulb
pop
or
adc
push
repnz
jge
cmp
adc
lods
jbe
clc
outsb
push
ss
outsl
shld
gs
aam
repnz
fisttpll
cmp
xchg
pop
pushf
outsl
lea
fdiv
dec
add
je
jno
xchg
xchg
push
push
add
repz
aam
cs
out
addr16
in
jnp
jp
jl
pop
inc
add
or
mov
and
das
or
push
and
mov
push
in
mov
dec
mov
xor
in
or
idivb
and
pop
fidiv
test
aas
nop
pop
enter
sub
scas
ss
xchg
adc
push
out
push
inc
mov
cmc
or
cwtl
fisttpl
mov
sbb
xchg
sub
cmp
rcrl
xchg
insl
mov
inc
push
dec
mov
cwtl
in
aaa
mov
hlt
cmp
in
int3
nop
subl
call
push
xchg
ret
out
adc
sbb
mov
and
loop
lahf
cmp
pop
mov
push
inc
jno
rclb
cli
push
fnstenv
pop
data16
and
arpl
in
icebp
cmp
hlt
loopne
nop
sti
xchg
aad
add
popf
fisub
ret
jmp
outsb
popf
dec
jl
add
pop
jb
fcmovnbe
and
xchg
push
add
cs
lahf
sbb
xor
cmpsl
ja
rcr
lods
sbb
xchg
ret
fwait
cmpsl
inc
adc
dec
in
outsb
lcall
dec
mov
ljmp
ljmp
jne
push
mov
xor
xor
cmc
aas
inc
movl
mov
xchg
mov
scas
dec
xlat
push
das
nop
xchg
sbb
cli
push
xor
jmp
jno
loopne
nop
das
imul
or
les
mov
data16
jmp
lods
push
fidivrl
adc
mov
dec
aas
stos
bound
fist
adc
or
stos
jp
decb
push
test
in
stos
dec
movsl
or
mov
xor
gs
pop
cmp
insb
sub
and
push
mov
sub
fwait
xchg
jge
rcrl
jbe
add
sub
pop
sti
mov
pusha
sbb
sbb
sbbb
xlat
jae
sbb
jl
dec
xor
sti
mov
xor
rcrl
jo
aam
out
mov
mov
xor
addr16
fidiv
jo
stos
std
adc
scas
adc
sti
lcall
push
adc
mov
add
or
jbe
adcl
aaa
pop
push
sub
dec
sahf
sti
inc
fmull
sbb
pushf
dec
aaa
sahf
stc
fwait
sahf
dec
sti
mov
dec
dec
push
pavgb
cmp
or
or
push
lock
push
cld
sbb
sbb
mov
and
imul
movsb
xlat
fidivr
adc
xchg
and
mov
mov
mov
dec
xchg
push
cmc
rcrb
sbb
aam
js
packuswb
dec
outsl
ret
jo
mov
adc
cmp
in
and
push
and
mov
bound
out
stos
out
sub
dec
int
jo
leave
outsl
idiv
in
mov
cmp
xor
std
jae
iret
into
xor
cmp
sbb
mov
lret
jle
mov
and
imul
movsb
sbb
pop
cmp
shll
or
lods
push
inc
mov
inc
in
dec
iret
sub
les
arpl
sub
cmp
in
lods
jo
dec
or
stc
popa
popf
je
inc
jmp
inc
stos
cwtl
sub
and
pop
xchg
pusha
sarl
dec
pop
or
add
mov
sub
rol
xor
or
and
jl
sbb
popf
xor
or
push
call
test
sti
mov
mov
push
adc
loope
rcrb
mov
and
jo
xchg
mov
add
scas
mov
hlt
adc
or
fmuls
mov
daa
xor
xor
and
mov
imulb
aad
dec
sub
les
inc
fdivrl
loopne
pop
xor
icebp
test
sub
dec
jl
inc
dec
and
xor
cmp
pop
and
repz
out
xchg
in
mov
outsl
or
addr16
jecxz
enter
jb
addl
mov
sbbl
gs
inc
lods
inc
dec
jl
mov
push
out
mov
iret
push
xchg
int3
bound
sarl
mov
xor
dec
adc
out
movsl
push
leave
insb
or
sub
add
fwait
outsl
sbb
jmp
add
xor
ss
cmp
jno
inc
test
xchg
ljmp
lret
push
nop
imul
orb
loope
pop
sti
mov
or
enter
mov
xchg
lret
inc
out
movsb
mov
pop
mov
imul
push
or
sbb
jbe
mov
xorl
xchg
aaa
leave
push
adc
mov
lock
jae
mov
sub
daa
imul
add
jno
lds
testb
inc
mov
push
push
inc
push
sub
cmpl
test
mov
pop
jl
mov
lcall
ret
pop
andb
lret
add
pushf
jno
adc
mov
sbb
sub
idivl
add
mov
cmpsl
push
andl
lds
sub
add
or
fildl
jne
dec
push
lret
fs
movsb
div
mov
jae
or
sub
lahf
seta
push
cmp
push
sub
or
sbb
add
call
out
dec
test
ret
scas
inc
mov
adc
push
aam
into
sub
jns
mov
imul
lds
bound
je
mov
ss
insl
sbb
and
or
lods
imul
int
rclb
pop
mov
sbb
call
add
pop
cltd
mov
pop
in
sbb
rcll
sbbl
xchg
or
data16
je
adc
ds
loopne
push
cmp
sub
mov
jno
inc
sbb
jg
adc
sbb
sbb
jg
jb
lret
adc
cli
sbb
mov
push
and
in
push
bound
push
and
mov
jne
pop
fsub
mov
xchg
and
pushw
lock
fs
lcall
dec
pop
lds
movsl
inc
gs
and
mov
cli
adc
loop
add
mov
xchg
add
add
xor
pushf
cmp
rcl
adc
push
mov
jmp
sarb
fcmovbe
xchg
pop
mov
ret
and
adc
inc
inc
add
cld
mov
popa
cmovb
push
fcomps
push
loope
cltd
orl
add
xor
rorb
mov
inc
lret
out
pop
dec
adc
addr16
inc
cmp
and
inc
lea
pop
mov
call
push
jecxz
push
int3
pushf
ret
cmp
or
sbb
mov
push
daa
mov
shll
push
ss
inc
and
jmp
in
mov
adc
add
pop
mov
pop
rcl
mov
je
outsb
xchg
sbb
mov
pop
sub
call
add
pop
test
into
stos
xchg
dec
and
dec
lahf
pop
xchg
mov
pop
inc
fstpl
xor
xor
aam
js
push
enter
scas
add
jae
mov
mov
dec
loop
push
test
adc
jo
add
xchg
push
mov
xchg
mov
ss
sarb
push
mov
mov
test
adc
test
xor
add
aaa
lret
and
cltd
and
adc
pop
xchg
sbb
mov
adc
jg
cwtl
call
pusha
movsl
sub
in
sbb
push
inc
repz
push
mov
or
mov
inc
test
mov
fldenv
add
pop
leave
xor
xor
adc
mov
or
jge
push
ret
mov
mov
ret
jns
daa
ljmp
jecxz
jb
scas
push
mov
push
add
mov
mov
and
inc
lret
and
xor
std
cmp
cmp
in
into
movsb
out
or
sbb
mov
ret
mov
inc
adc
adc
cmp
int
popa
xor
js
mov
pop
inc
pop
js
mov
cmp
or
sbb
mov
mov
outsl
push
mov
dec
js
push
or
cmpsb
test
xor
in
mov
or
js
xchg
int
and
mov
clc
or
and
sub
pop
xor
or
frstpm(287
cwtl
jle
sbb
lods
jl
jns
int
jno
sbb
aam
stos
dec
dec
mov
cmp
pop
push
test
cmpsl
shrl
insb
mov
stc
fnsave
mov
or
out
add
outsb
test
lds
fisttpll
loop
jmp
nop
arpl
les
mov
in
sbb
mov
pop
adc
xor
testb
and
adc
sbb
add
jp
pop
mov
push
sbb
outsb
test
shr
pop
add
rorl
es
adc
or
mov
leave
add
cs
aad
and
dec
gs
addl
or
inc
in
sub
test
adc
mov
insb
loopne
int
adc
adc
xor
jne
cld
sbb
loope
out
or
sbb
and
cmpsb
jl
fwait
lea
cmp
lods
pusha
cmp
lock
jle
jge
inc
push
sub
call
fsubs
dec
mov
out
cmp
and
data16
dec
add
xchg
dec
pop
sub
movsb
inc
adc
test
enter
dec
push
mov
or
sti
cmp
lret
jmp
push
xchg
xchg
scas
cmp
rcrl
movsb
or
je
arpl
xchg
es
pop
sbb
lahf
pop
push
mov
fist
xor
repz
push
aaa
out
ds
xchg
cmp
sub
mov
in
lock
dec
into
xchg
int
or
fldl
cltd
sub
loopne
mov
xor
aam
inc
aas
fmuls
outsb
dec
sub
test
add
jmp
xchg
jecxz
sub
adc
out
inc
push
sub
inc
xor
mov
rolb
and
cltd
and
jbe
add
pusha
mov
mov
ror
lcall
mov
adc
data16
push
into
fnstcw
push
or
fisubrl
adc
add
mov
add
insb
and
sub
inc
lcall
ss
mov
sub
movsl
arpl
mov
in
mov
rcrb
mov
mov
loop
or
sub
in
pop
nop
adc
bound
inc
xor
in
xchg
push
add
mov
movsl
mov
mov
cmp
add
fs
out
pusha
mov
inc
mov
sbb
jl
mov
add
cmp
mulb
inc
xchg
jne
dec
cmp
or
icebp
imul
inc
outsl
ret
fwait
add
jge
imul
scas
xchg
push
mov
testl
adc
fstl
xchg
jl
and
mov
xchg
bound
scas
cmp
xchg
ds
or
leave
xor
test
mov
add
mov
push
inc
sbb
inc
pop
mov
mov
and
mov
repz
push
and
xchg
icebp
mov
mov
push
mov
stos
sub
push
movsb
or
fimull
inc
clc
push
pop
pusha
lret
call
dec
push
pop
and
sbb
in
nop
pusha
and
mov
jbe
loopne
and
add
push
sub
mov
mov
outsb
ret
jne
mov
mov
popa
inc
jl
mov
cs
test
or
movlps
xchg
pop
dec
pop
xor
inc
adc
add
inc
or
cmc
pusha
adc
inc
adc
xor
push
gs
repnz
push
mov
test
fimul
inc
mov
sbb
es
and
out
sbb
popf
sbb
jb
leave
call
xchg
xor
imul
mov
repnz
loopne
arpl
test
jg
je
push
sbb
test
sbb
push
dec
mov
insl
cwtl
sbb
xor
movsb
dec
pop
or
jno
in
sbb
adc
into
cmp
sahf
push
mov
and
mov
jge
push
loopne
ss
inc
pop
mov
adc
mov
int
xchg
rcrb
mov
sbb
pop
js
mov
xchg
and
adc
mov
icebp
adc
test
mov
pop
subl
wbinvd
xor
enter
js
out
mov
mov
int
or
mov
xchg
test
jnp
xchg
add
inc
repz
movsb
or
jg
pop
dec
mov
sbb
out
mov
inc
mov
mov
sbb
mov
pushf
and
add
pop
or
hlt
and
inc
jl
pop
int3
movsb
sbbl
or
or
jge
mov
fisubl
ss
pop
sub
jle
jmp
jbe
cwtl
cmp
js
lock
inc
adc
movsl
fwait
pop
and
popa
lds
pusha
dec
and
inc
sbb
js
push
jb
xchg
jbe
push
out
in
push
mov
sub
loopne
inc
cltd
sub
jbe
orl
sbb
clc
lock
or
xchg
scas
inc
shrb
pop
adc
xor
adc
add
mov
subl
cmp
inc
lock
in
xor
pop
addr16
or
ds
loopne
mov
mov
outsl
xor
scas
dec
aad
and
adc
add
pop
jnp
stos
mov
and
dec
ret
xor
enter
ret
mov
xchg
or
fldenv
in
push
sub
aas
xor
adc
xchg
mov
sbb
xor
ret
or
jo
adc
mov
mov
sbb
jo
cmp
sub
fdivs
and
mov
add
out
mov
and
adc
mov
and
and
ret
sbb
int3
or
dec
or
insl
mov
sbb
ret
cmp
loopew
mov
aam
fwait
or
xchg
and
mov
cmp
cltd
scas
shrb
sbb
enter
xchg
imul
aaa
ja
push
mov
xchg
sbb
in
push
sbb
jp
int3
add
mov
movsb
dec
push
or
push
addl
add
inc
imul
adc
pushf
mov
and
mov
xchg
mov
pop
in
xchg
adc
mov
push
xlat
lcall
push
test
in
sub
adc
fisttpl
xor
sub
daa
stc
inc
stos
xor
shrb
dec
ljmp
sbb
push
stc
and
mov
and
out
add
js
sub
test
shll
inc
loop
add
mov
arpl
adc
das
shlb
repz
sub
add
xor
mov
jne
sbb
pop
sub
mov
dec
test
out
sub
roll
xchg
aaa
pop
scas
and
add
aam
decb
movsl
movsb
push
push
mov
mov
or
ret
das
lahf
cltd
pop
and
outsb
add
add
push
dec
fdiv
test
xchg
repnz
push
orl
test
adc
dec
add
xchg
cwtl
mov
das
xchg
xchg
add
lds
mov
ret
adc
loopne
ret
aaa
add
rcrb
push
jae
push
inc
mov
fmuls
fisubl
xorl
out
xchg
dec
cwtl
xlat
inc
mov
add
test
xchg
jl
jo
xchg
bound
push
or
xor
inc
aas
popa
or
roll
ftst
sub
aas
or
fldenv
push
mov
call
push
and
add
add
cmp
mov
mov
sarb
mov
hlt
xchg
sub
fsubrl
sbb
jle
push
push
adcb
jmp
pop
dec
add
movb
cld
push
xor
mov
add
cmp
pmaxsw
or
jmp
test
inc
push
mov
fidivl
and
shrb
add
pop
repnz
and
imul
pop
sbb
pop
cwtl
arpl
hlt
xchg
iret
addr16
fbld
loopne
inc
add
add
clc
fidiv
cmp
andl
push
dec
ret
inc
cmp
or
mov
adc
push
jge
fcomps
mov
sub
push
sub
xchg
ret
scas
xchg
aam
inc
imul
dec
into
aas
cmp
scas
add
or
adc
jns
clc
xchg
and
add
sbbl
insl
inc
insb
enter
xor
push
and
xor
in
cmp
jp
mov
and
push
lahf
cmp
inc
and
adc
adc
pop
stc
and
cwtl
test
repz
and
push
pop
mov
or
jo
das
xor
dec
mov
jle
xor
jbe
popa
or
pop
mov
cmp
mov
lret
inc
or
xor
mov
loop
jo
mov
push
or
aas
cmpsb
push
ret
push
add
jl
adc
loope
dec
xchg
in
dec
stos
or
mov
add
mov
mov
jb
dec
xchg
pushf
arpl
xor
xor
aad
pop
xchg
jmp
sbb
sub
ss
xor
pop
push
mov
push
mov
inc
mov
mov
out
and
and
adc
jle
push
adc
out
int3
loopne
pop
add
xchg
movsl
outsb
and
xchg
jno
leave
sarl
pushf
cmp
jne
das
pop
dec
les
xor
outsb
xchg
imul
pushf
les
xor
mov
add
mov
ror
rol
add
loop
sarb
xlat
int3
ljmp
or
inc
insl
and
data16
jne
and
test
pop
inc
add
push
popa
adc
xchg
cli
inc
sti
and
inc
fldenv
fldl
aaa
mov
test
testb
inc
shrl
mov
xsha256
cmpsb
adc
es
ss
sbbl
dec
and
movsl
lods
xchg
push
cwtl
clc
and
add
adc
jecxz
and
and
lea
ja
xchg
mov
cmp
shrb
test
adc
lea
dec
and
es
xchg
adc
mov
xchg
lods
push
je
dec
pop
push
inc
movsl
dec
roll
mov
rorb
dec
mov
push
fld
push
ret
pop
mov
leave
sbb
or
jbe
adc
movsl
stc
sbb
dec
adc
pop
out
cld
call
or
mov
call
pop
fadd
dec
mov
clc
mov
sahf
adc
mov
mov
call
cltd
inc
push
cmp
mov
rorb
or
add
mov
stc
fnstenv
es
push
clc
cwtl
mov
hlt
inc
stos
mov
mov
mov
insb
jbe
push
jl
jl
mov
bound
push
jne
test
mov
jecxz
popf
pop
rorb
roll
je
sbb
call
movsb
mov
aaa
cwtl
xchg
add
pushf
jns
rcrb
push
adc
test
mov
pop
xor
leave
cli
cmp
dec
rorl
cli
and
cltd
fwait
shlb
mov
cmp
repnz
cmp
cmp
pop
ret
out
repnz
sub
cmp
stos
push
mov
xor
inc
xor
inc
mov
xlat
mov
aam
add
and
inc
mov
and
sub
push
aad
push
and
cld
adc
lcall
cwtl
daa
fadds
pop
loopne
rolb
or
dec
sahf
add
aaa
pushf
push
int3
sbb
add
inc
loope
ret
insb
xchg
ret
cmp
lods
xor
incl
pop
adc
shlb
sbb
lcall
mov
or
or
xchg
test
inc
std
mov
lods
rcll
int3
inc
addr16
mov
xor
rdtsc
lods
add
xchg
xchg
cmp
adc
xchg
pop
inc
cs
les
loop
or
insb
test
fstpl
lock
out
lods
pop
jno
out
movsb
ss
and
mov
add
push
cmp
js
mov
loopne
xchg
xchg
test
nop
inc
les
inc
pop
inc
enter
sbb
clc
xchg
jle
test
push
add
xchg
xchg
mov
add
jecxz
pushf
push
int
out
pop
mov
push
icebp
mov
jne
sub
loope
and
lock
pop
insl
add
leave
xor
push
mov
popf
xlat
mov
xchg
popa
arpl
or
xchg
inc
imul
mov
push
and
add
pop
or
repnz
fstp
std
mov
mov
xchg
xor
jg
or
sub
push
test
cmp
mov
js
dec
inc
lcall
xchg
sub
adcb
out
or
push
insb
push
adc
loop
jo
sub
call
fwait
xchg
adc
inc
leave
inc
cltd
xor
out
nop
test
sub
or
and
mov
sbb
pop
and
inc
andl
adc
sub
pop
in
sub
and
xchg
enter
mov
sbb
leave
orb
add
inc
push
or
sti
incb
mov
push
add
ja
test
mov
orl
adc
adc
add
roll
push
and
orb
xchg
lds
sub
mov
adc
add
or
stos
lock
mov
xchg
gs
push
mov
and
pop
test
int3
scas
dec
sbb
out
xor
cmpl
adc
mov
pop
xor
mov
adc
lret
js
dec
mov
lret
mov
imul
inc
add
leave
fnsave
lret
cmp
jg
jo
sub
sti
das
sub
mov
js
out
test
test
mov
mov
and
lea
sbb
orl
pop
xchg
inc
scas
mov
lahf
repnz
loop
jns
bound
sub
pop
push
sbb
sub
mov
scas
xlat
xchg
inc
mov
popa
or
cmp
cmp
or
call
mov
mov
add
daa
scas
cwtl
pop
popf
ret
and
fisubl
mov
sar
fisubrl
jg
push
cmp
js
add
sbb
and
out
mov
lea
push
stos
into
push
inc
lods
cmp
adc
pusha
scas
xor
push
adc
out
sub
sbb
xlat
inc
push
dec
iret
arpl
inc
lcall
push
pop
lock
and
xor
xchg
out
jbe
gs
sbb
sbb
adc
or
roll
and
adc
test
outsb
iret
or
add
nop
arpl
cmp
loope
cs
insb
divl
fdivl
pushf
aas
test
fadd
mov
jnp
mov
bound
movsl
xchg
fbstp
mov
xchg
fbstp
int3
add
adc
je
jle
mov
sbb
add
ja
dec
fdivrs
add
add
cmpsb
in
push
ja
movb
lods
mov
pop
xorb
pop
dec
loope
push
dec
add
js
xchg
test
add
int
push
cwtl
add
pop
mov
jo
data16
adc
movsl
dec
fwait
lds
and
jo
pop
popa
loopne
cs
nop
add
out
fdivl
inc
loope
jecxz
xor
xor
jo
jo
inc
cmpsb
jns
jo
mov
adc
sbb
pop
lcall
hlt
addb
and
ret
aad
pop
xor
pop
inc
mov
stc
pop
cmp
cmp
xor
mov
pushf
out
enter
pop
pop
sub
sub
or
ficomp
dec
sub
inc
call
js
lret
and
adc
or
imull
stc
cmp
mov
lods
test
mov
push
imul
mov
xor
lea
jnp
jnp
sub
cmp
sbb
push
xor
popa
cmpsl
test
xor
jb
in
sub
cmpl
das
or
cld
aas
jle
mov
xor
mov
stos
fmul
mov
mov
pop
and
pusha
ret
and
lret
es
jb
push
ss
nop
int
lret
loopne
sub
dec
loope
mov
jge
and
mov
jl,pn
out
sbb
out
dec
js
pop
xor
cmc
sbb
adc
push
and
adc
add
inc
push
xchg
cmpsl
add
mov
in
xor
jmp
ljmp
mov
xlat
pop
aam
pop
lock
enter
pop
fwait
popa
ja
cmp
pop
jns
mov
cmp
orb
sahf
nop
mov
movsb
mov
loop
arpl
out
xor
addr16
lds
and
inc
sub
sub
and
int
jae
icebp
sbb
jno
xchg
dec
pop
data16
loope
or
sub
das
cwtl
mov
clc
mov
jmp
push
movb
dec
imul
lret
ljmp
icebp
test
sbb
lret
cmc
sbb
cmp
jns
jns
push
outsb
outsl
ds
sbb
sbb
aaa
mov
jl
iret
push
repz
adc
out
lods
mov
push
or
sub
or
ds
repnz
jns
in
ds
xchg
and
outsl
jno
sub
test
ja
mov
inc
pop
mov
dec
movsb
pop
lahf
insb
scas
pop
mov
and
pop
outsl
loop
notb
push
pop
inc
adc
inc
jmp
lcall
xor
adc
jnp
or
mov
xor
out
jecxz
jo
sub
outsl
out
cmp
repnz
xchg
jns
iret
daa
pop
ja
xchg
das
btcl
mov
in
or
cmpsb
add
orb
mov
pop
or
fprem1
jae
shl
sbb
imul
icebp
aaa
inc
sub
out
rolb
xor
aad
push
repnz
dec
cmp
lods
xor
sbb
xor
push
sbb
ljmp
pop
sub
loope
sub
mov
or
lret
lret
sbb
sbb
adc
inc
mov
imul
cli
jmp
es
hlt
test
push
jmp
pop
add
jecxz
inc
ljmp
sub
idivb
jne
aam
add
xor
test
fcoml
loope
pop
or
mov
mov
or
cmpb
mov
xor
sbb
or
or
xchg
int3
mov
sub
repnz
pop
cwtl
sti
mov
mov
jecxz
cmp
clc
pop
and
loopne
dec
daa
rolb
cmc
pusha
mov
iret
dec
cmpsl
jb
in
aam
hlt
lcall
jne
cmp
mov
outsl
xchg
daa
cmp
in
lea
cmp
movsl
out
push
ja
add
jns
and
dec
clc
mov
cmp
sti
or
jle
mov
xchg
ds
inc
adcl
call
inc
mov
inc
aam
xor
cs
push
adcl
dec
daa
icebp
inc
sub
mov
fldenv
and
cmpsl
inc
fcompl
or
lock
sbb
int3
jecxz
mov
push
loop
aaa
shll
enter
jge
push
mov
dec
adc
xchg
fsubs
or
ror
dec
imul
push
push
pushf
outsl
jl
test
fistl
lret
aad
dec
bound
pop
xor
sbb
or
popf
test
popa
mov
dec
pop
ljmp
mov
mov
enter
push
fs
push
pusha
or
xchg
and
and
cltd
inc
pop
sbb
stos
xor
jge
dec
push
mov
test
or
ret
add
pushf
scas
mov
out
fucomip
pop
pop
push
insb
sbb
sbb
lret
imul
jnp
stos
adc
jnp
incb
dec
jo
scas
icebp
cmc
xchg
xor
dec
pop
outsl
and
mov
sub
mov
or
pop
or
cwtl
sbb
mov
mov
or
cli
dec
scas
imul
daa
jecxz
inc
xchg
xlat
dec
shrl
adc
xchg
dec
pop
sbb
ds
lret
imul
dec
push
mov
outsb
das
fcompl
je
sbb
or
jno
lods
cmpsb
daa
adc
or
nop
jecxz
fstps
xchg
in
xor
bound
jle
xchg
mov
cmpsb
stos
mov
sbb
jl
imul
cwtl
mov
mov
lods
mov
loop
int
push
and
or
repz
testb
es
ljmp
pop
sbb
inc
bound
sbb
int3
test
jae
mov
push
sahf
add
sub
jns
jae
insl
int3
inc
inc
jns
xorb
lret
or
sbb
jle
xchg
data16
xchg
jbe
lcall
mov
xchg
cmc
jle
cli
aad
rcr
loopne
out
pop
dec
scas
dec
and
sub
arpl
insb
and
dec
in
xor
jno
ljmp
jecxz
sbb
imul
pop
dec
inc
rorl
shll
cmp
movsb
cltd
lods
mov
test
sub
push
into
xor
stos
inc
jae
imulb
jae
pop
inc
xlat
mov
mov
pop
dec
push
sub
pusha
mov
pop
sub
scas
loope
push
dec
stos
jle
lret
stos
mov
insl
xchg
sarb
nop
out
pusha
pop
popf
out
pushf
rolb
xchg
lock
xor
and
outsl
imul
cmovne
xor
loopne
push
xlat
pushf
arpl
xchg
hlt
nop
sbbl
push
aad
aad
int
push
int
int
aad
push
int
dec
iret
push
int
rcl
repnz
aas
and
cmp
fadd
mov
cmp
sub
cmc
pop
or
mov
stos
push
jge
add
in
jnp
xor
fmull
fs
out
jle
addr16
lcall
pop
sbb
mov
add
fsubrp
mov
xor
inc
mov
pop
mov
lock
push
ds
xor
xor
insb
jae
adc
pop
aam
int3
fstl
push
or
push
rcl
pop
cli
mov
loope
outsb
pop
fisubrl
mov
push
jmp
xchg
es
cmp
push
pop
mov
idiv
std
fistl
jo
push
jnp
push
push
dec
aam
push
dec
data16
adc
je
jae
adc
hlt
mov
push
pop
scas
mov
in
cmpsb
jnp
jb
ds
pop
aad
mov
in
cmp
mov
incb
mov
xor
fisttpl
mov
add
fnsave
scas
dec
aam
rorb
iret
push
push
jl
das
lock
sub
cmpsl
mov
mov
pop
mov
aam
lods
xchg
jnp
js
ja
test
ds
jmp
gs
adc
jg
jnp
jbe
mov
mov
cwtl
popf
movsb
ret
xchg
popf
cmpsb
lahf
stos
pushf
test
sahf
mov
cmpsl
test
out
adc
std
jae
in
push
iret
loopne
int3
dec
mov
imul
fdivp
push
hlt
stc
lahf
add
adc
mov
or
in
mov
repnz
jp
in
jge
and
cmp
pop
stos
sub
jmp
jns
jns
sub
pop
stos
popl
pop
dec
addr16
and
lgs
imul
stos
insb
hlt
clc
cmp
add
pop
mov
outsl
mov
jae
xchg
stos
into
and
push
in
xchg
sub
mov
sbb
fcompl
jle
stos
xchg
jp
jb
jbe
push
mov
jb
data16
xchg
jg
stc
fisttp
out
iret
divl
sub
jge
sbb
xor
icebp
sbb
std
test
push
mov
lcall
xchg
bound
sbb
mov
mov
and
mov
push
mov
bound
jge
cmpsb
sbb
add
mov
arpl
cmpsl
sub
xchg
arpl
xchg
xchg
xor
cmp
in
lds
bound
xor
out
push
into
adc
cli
mov
mov
test
mov
add
lea
sti
leave
push
mov
data16
ret
punpcklbw
rorb
dec
mov
add
clc
fmul
xor
adc
hlt
mov
or
test
jecxz
mov
daa
sti
movsl
jo
aas
xchg
mov
adc
in
adc
into
bound
jb
lcall
in
mov
jbe
jns
mov
fcmovnb
or
cmpsb
scas
mov
imul
jae
sub
mov
call
mov
adc
mov
inc
add
xchg
push
fsub
fmull
ljmp
sub
push
imul
out
push
bound
and
sbb
dec
cld
std
das
and
aam
push
push
rcl
jg
out
fsubr
pop
fistpll
mov
das
jae
mov
cmp
mov
lret
pop
imul
adc
xchg
mov
lods
test
add
and
mov
mov
pop
mov
push
xchg
sub
fmuls
push
in
jmp
or
add
lds
subl
daa
add
leave
lret
cmp
cmp
jns
mov
pop
mov
in
fist
ror
push
imul
pop
mov
mov
cmpsb
fs
push
cli
es
inc
sub
xchg
fsubrs
add
dec
aaa
sub
mov
cwtl
inc
repz
lods
xor
add
push
cmp
fidivr
les
cmpsb
hlt
das
loopnew
int3
dec
addr16
dec
mov
dec
in
jbe
out
fnstcw
in
jecxz
jae
es
push
rolb
add
and
divb
stos
sbb
addr16
dec
mov
pop
and
push
xchg
pop
rcl
imul
test
and
inc
std
outsb
int
inc
shrl
xchg
or
xor
and
jbe
mov
cmpsl
mov
jnp
sub
ret
mov
hlt
push
xchg
jae
xor
xchg
je
push
jae
xor
push
xor
cmp
cmc
xor
sbb
sbb
data16
mov
int3
pop
pop
inc
push
sarb
mov
ljmp
inc
add
ds
dec
adc
xor
jne
sub
loope
xchg
inc
cmpsb
mov
or
xor
jno
mov
loopne
repnz
or
dec
inc
mov
insb
push
adc
jg
pop
push
sti
cmpsb
aad
lods
cmp
aas
and
fmulp
lds
xchg
ds
fucom
or
inc
inc
mov
pop
dec
mov
cltd
daa
mov
sub
icebp
aam
call
cpuid
insl
mov
idivb
sub
or
loopne
movsb
mov
inc
xor
lret
cmp
dec
dec
push
jo
push
mov
jnp
pop
inc
push
pop
mov
sbb
test
int3
xchg
inc
imul
pusha
movsb
mov
and
add
cli
fist
outsb
pop
jb
mov
or
dec
dec
rorl
rcll
aad
push
push
push
dec
push
push
aam
push
push
push
push
into
jp
std
xor
dec
add
inc
push
shrl
push
int
sbb
sbb
daa
xlat
pop
scas
add
push
pop
das
test
in
push
add
bound
add
xor
add
bound
push
xor
into
xlat
sbb
outsb
fnop
inc
in
mov
je
popa
adc
call
data16
add
outsb
imul
imul
mov
mov
jmp
stc
mov
leave
jmp
mov
leave
ljmp
dec
push
sbb
mov
and
cmp
fwait
xchg
imul
mov
mov
push
mov
insl
xor
xchg
fmull
or
or
popf
test
push
mov
icebp
pop
outsb
mov
inc
xchg
int3
in
jb
fs
aam
outsb
frstor
lcall
sahf
mov
lods
out
cmp
mov
jnp
cltd
cmp
adc
stos
int3
push
push
rorb
dec
ror
rorb
push
int3
pop
cmc
cmp
pop
cltd
iret
jbe
and
bound
and
pop
fistl
inc
insl
adc
push
or
mov
mov
xchg
dec
sbb
das
mov
xor
pop
push
ret
movsb
push
xor
js
xchg
lahf
cld
adc
cmp
push
jg
add
mov
xchg
lcall
jp
xchg
fnstenv
in
test
sub
sahf
add
sbb
mov
mov
cld
mov
lret
and
cmp
push
mov
fisttpll
sarb
lret
ss
popf
pop
inc
adc
cmp
mov
mov
pushf
or
mov
dec
fwait
inc
outsl
imull
and
jno
into
call
adc
ret
xor
lret
cmp
sub
mov
jns
fidivrl
mov
sbb
sbb
fistl
push
add
adc
mov
xchg
mov
push
inc
fcompl
sbb
mov
mov
std
loopne
push
inc
mov
push
jbe
pop
ja
lods
je
das
ret
xchg
pop
cltd
scas
imul
in
clc
mov
jno
pop
jo
into
inc
inc
aas
push
jae
insb
sarl
dec
sub
int3
andl
adc
je
in
imul
fs
dec
fs
in
adc
fnstsw
cmpsb
sahf
lahf
std
inc
mov
jbe
scas
jle
mov
rcll
xor
push
jne
xor
xor
lahf
in
pop
and
dec
adc
push
in
inc
adc
es
pop
push
aaa
lcall
add
add
in
cld
sbb
xchg
leave
nop
test
imul
or
lea
inc
cli
repz
icebp
xchg
xor
jmp
movsl
dec
mov
inc
cltd
out
scas
test
fnsave
cli
sbb
jmp
cmp
cli
sbb
je
mov
movaps
in
xor
cltd
push
je
mov
stc
icebp
scas
adc
loopne
mov
mov
jns
test
push
pop
ja
adc
mov
aad
mov
add
xlat
mov
iret
fiaddl
push
fwait
les
pop
in
add
out
mov
mov
push
sbb
cld
and
aad
pop
jmp
shrb
mov
mov
inc
and
add
scas
loopne
popf
in
imul
jno
lret
mov
jmp
psrld
dec
mov
jo
push
in
iret
movsb
aam
add
sahf
test
push
xchg
mov
xchg
and
push
and
xchg
inc
sarb
popf
mov
jnp
jle
into
jb
sbb
xor
sub
push
lea
dec
outsb
jg
mov
and
mov
dec
dec
mov
inc
mov
or
sub
sbb
xchg
sbb
and
sub
popf
idivb
xchg
cltd
out
ret
mov
aad
std
jne
lret
insl
js
mov
hlt
sbb
int3
jle
in
icebp
mov
mov
sub
ret
jae
movsl
leave
int
and
or
or
mov
fs
sti
dec
ja
std
andl
mov
and
lods
mov
inc
cld
or
pop
fnsave
dec
dec
inc
add
pop
call
mov
dec
nop
pop
push
inc
jge
insb
xchg
sbb
adc
rol
out
and
imul
js
jge
pop
insb
sub
iret
inc
xor
leave
sbb
pop
je
scas
mov
jae
cs
mov
vpsadbw
push
aad
sbb
dec
sub
add
int
xlat
in
pop
mov
call
repz
mov
aaa
cmp
ret
movsl
leave
dec
int
dec
push
cld
gs
std
popf
insl
mov
pop
rcl
push
jae
jge
mov
scas
scas
push
inc
add
mov
inc
daa
jae
push
sbb
inc
push
outsb
cli
test
loop
or
out
push
cwtl
jo
rcll
cmp
sub
dec
push
int3
fistl
cs
enter
inc
inc
mov
mov
out
or
call
and
mov
lcall
ja
pop
clc
pushf
das
out
cld
imul
mov
cmp
or
jo
ds
cmpsb
stos
jb
sbb
inc
jg
dec
jl,pt
ljmp
stos
lock
xchg
movsl
mov
jp
sub
fdivrl
xorps
add
shl
pop
xchg
cltd
repz
arpl
insl
and
dec
fsubrs
jae
jne
rolb
adc
mov
mov
jp
sbb
dec
adc
xchg
jge
inc
push
xchg
aam
and
test
jns
jae
stc
jle
mov
cmp
scas
adc
ja
dec
inc
xor
adc
lea
fsubl
repz
hlt
adc
cmpb
addr16
mov
and
bound
xchg
xchg
push
out
lahf
inc
sti
je
fdivrs
outsb
in
mov
into
sub
xor
jno
out
les
iret
insb
xor
pop
sbb
and
xchg
outsl
sbb
dec
push
push
popa
iret
mov
stc
jmp
cmpsb
lret
push
inc
mov
dec
push
rcl
push
jo
jnp
jecxz
stc
mov
iret
gs
and
xlat
das
pop
adc
sub
out
lahf
dec
out
mov
sbb
test
push
xchg
rclb
div
mov
jnp
mov
pop
loope
pushf
fsubr
aas
fwait
xchg
fdivr
in
jge
aam
and
jle
sti
fistpll
jnp
add
mov
int
aas
add
sbb
mov
lret
test
das
sub
rorb
xor
movsl
stc
and
mov
push
in
add
mov
sbb
push
sbb
add
pusha
mov
xchg
fcomps
mov
mov
sahf
aas
in
sub
pop
jns
mov
mov
js
out
sub
mov
mov
nop
adc
xor
mov
pop
insb
leave
lods
and
pop
je
mov
pop
nop
cli
cs
aas
mov
hlt
xor
cmc
inc
in
outsl
mov
jb
mov
xlat
push
leave
mov
cltd
idivb
mov
mov
mov
inc
jae
in
mov
xor
aad
or
rcl
ja
fwait
out
mov
mov
adc
mov
or
inc
in
sbb
movsb
push
cmp
lods
sub
pop
je
int3
imull
insb
jbe
xchg
jp
mov
pushf
aad
fcmovnb
test
mov
movsb
mov
mov
or
ja
cmp
push
in
cwtl
xchg
pop
adc
mov
jge
mov
xlat
sub
inc
into
mov
push
dec
lea
loop
ds
mov
dec
addl
and
add
cmpsb
mov
lret
cmp
or
jle
mov
lahf
fdivrl
movsl
repnz
jo
fidiv
in
fildl
mov
mov
arpl
jmp
pop
xchg
adc
xchg
pop
nop
rcrb
stos
push
imul
mov
push
mov
pop
and
lret
xor
xor
pop
xor
pop
cmp
in
in
push
mov
pop
cld
fidivl
cmc
mov
flds
insl
loop
mov
aad
jp
mov
or
xchg
into
jb
xor
mov
and
xchg
sahf
in
sub
lret
xchg
pop
mov
sub
gs
push
gs
pop
mov
imul
pop
roll
adc
icebp
movsl
mov
movsb
inc
mov
test
in
push
rdpmc
fistl
rcrb
xchg
jl
xchg
insb
mov
outsb
add
out
mov
je
iret
pushf
xchg
pushf
out
repz
movups
jecxz
push
cltd
pushf
je
insl
dec
push
pop
push
mov
dec
pop
and
push
cltd
mov
fistpll
scas
pop
ljmp
cmc
fidivr
cmp
je
fdivs
mov
sub
dec
mov
es
pop
in
bound
sub
or
pop
pop
xchg
xor
sub
repnz
or
dec
xchg
cmp
push
xchg
xchg
mov
pop
lds
cmp
fwait
movsl
out
scas
adc
dec
outsl
jle
xchg
cmp
xchg
xor
dec
xlat
xchg
sbb
jbe
movsb
insl
jg
stos
jno
xchg
mov
cmp
arpl
arpl
lods
out
mov
movsl
mov
mov
pop
cmp
jb
push
in
scas
adc
call
rorb
cltd
sbb
imul
xchg
je
mov
out
shrb
daa
mov
popf
dec
pop
outsl
cmpsl
lret
cmc
outsl
scas
xor
lods
in
lret
fisttpll
scas
mov
add
lock
jb
insl
xchg
push
xchg
mov
mov
movsl
test
lods
lea
dec
mov
pop
mov
hlt
mov
imul
test
insb
jecxz
fmul
in
push
jge,pn
mov
stos
mov
and
call
imul
in
lcall
xchg
out
pop
mov
jmp
xor
push
cmp
push
sbb
out
outsb
pop
hlt
xchg
stos
mov
sbb
or
arpl
insb
jp
mov
and
jge
dec
js
pop
inc
cmp
cmp
add
xchg
mov
stc
movsb
mov
lock
adc
push
dec
out
sub
insb
mov
pop
push
cmp
stos
orl
sbb
add
xchg
or
mov
lods
mov
adc
jp
arpl
push
imulb
push
pop
in
jmp
fcomip
fadd
mov
mov
or
out
xor
mov
pop
dec
test
mov
inc
xor
cli
ja
pop
push
out
adc
lods
cs
dec
push
repnz
jbe
stos
scas
xchg
jg
jl
xchg
xchg
mov
cld
dec
lea
negl
jae
or
imul
fidiv
cld
in
subps
into
mov
cmp
je
sbb
idivb
fildll
jbe
js
call
cltd
xlat
mov
incl
ds
jle
dec
jp
mov
sub
lret
lret
fwait
test
das
movsbl
jp
push
jns
cmc
pop
xchg
jge
push
sub
fistp
test
shr
outsl
cltd
jae
jns
popf
add
imul
pop
enter
pop
mov
xchg
mov
or
mov
stc
dec
pop
idivl
pop
ret
aas
cld
sahf
hlt
push
cltd
sbb
inc
data16
pop
or
bnd
or
cld
sub
sub
stos
push
lods
sub
cmp
into
out
mov
mov
inc
enter
adc
mov
pop
sti
sti
in
adc
cmpsl
int
rorl
or
dec
mov
in
jbe
lds
daa
clc
cld
jae
push
ja
sbb
ret
push
repz
aam
shll
inc
test
outsl
rorb
pusha
jbe
mov
ja
fisttpl
repz
sub
clc
mov
cmpsb
lds
mov
and
or
insl
into
sub
movsb
inc
cld
or
xor
mov
int3
daa
sbb
fwait
leave
aad
mov
cltd
pop
es
sbb
mov
pop
inc
add
and
dec
adc
js
arpl
and
mov
pop
not
dec
push
xchg
aaa
mov
pop
jo
mov
push
in
jbe
mov
mov
test
adc
dec
mov
jno
xchg
fld
imul
sbb
outsb
in
jno
pop
or
jnp
lock
dec
pop
or
inc
xchg
sub
mov
mov
add
mov
imul
sbb
imulb
rcrl
sbb
loope
mov
loope
pop
loopne
lcall
pop
clc
sbb
in
out
mov
cmpsb
repnz
mov
pop
cmp
xchg
ds
sarl
sti
jg
cli
dec
ret
int
dec
mov
inc
aad
mov
les
call
movsb
mov
xchg
inc
pop
push
xchg
xor
pop
test
mov
leave
lret
or
xlat
ds
jbe
pop
mov
pop
call
mov
bound
sub
mov
test
jle
gs
ror
jne
xor
or
outsb
sub
incl
xor
aaa
dec
add
stc
pop
sbb
xor
imul
mov
mov
pop
mov
pop
scas
jmp
add
imul
cmc
mov
stc
sti
insl
lret
call
lret
jge
out
jg
hlt
sbb
in
aas
pop
scas
daa
pushf
dec
jo
les
jae
cmp
test
xor
call
xchg
mov
fsub
cmp
mov
rolb
in
jmp
flds
push
jle
cmp
inc
int3
repz
xchg
xor
lret
push
pop
sub
psubq
jge
imul
mov
xor
jg
into
mov
loopne
mov
daa
and
stc
pop
jmp
out
repz
outsl
mov
fwait
mov
pop
movsl
fiaddl
ljmp
mov
xchg
in
sbb
insl
repnz
sub
adc
sub
popa
out
repz
pop
mov
push
xchg
out
ret
lods
outsb
pop
jo
sbb
xlat
cmp
cwtl
stc
out
dec
repz
mov
in
in
out
add
out
bnd
in
test
jge
hlt
int3
xor
xor
dec
cld
repz
cmp
mov
repz
call
mov
jae
push
xchg
outsl
xchg
negl
adc
idiv
inc
out
lret
in
cs
ficoml
je
mov
mov
pop
inc
imulb
mov
shll
pop
xlat
jecxz
mov
ljmp
sbb
sub
xlat
add
addl
mov
mov
dec
inc
outsl
cmp
scas
jmp
mov
xor
lahf
rcr
mov
imul
std
ds
mov
aad
push
adc
stc
inc
cld
ljmp
or
pop
lods
fcomps
jbe
cmp
jns
sbb
dec
fidivr
mov
shrl
or
sbb
insb
xchg
fistpll
pop
dec
cmc
daa
lret
push
sbb
test
test
mov
push
hlt
pop
jg
jo
jns
xchg
mov
out
int
xor
dec
outsl
inc
int3
mov
xchg
xlat
push
sbb
hlt
stos
stc
sbb
xchg
mov
xchg
xlat
xor
cmp
clc
jmp
enter
cli
cmpsl
cmp
sub
jo
pushf
or
sbbb
das
jns
in
pop
inc
jecxz
cld
pusha
in
int3
int3
data16
mov
push
mov
test
inc
enter
aaa
sub
mov
mov
inc
test
in
dec
inc
hlt
dec
fstpl
mov
adc
fdivs
sbb
addl
js
shll
xor
add
inc
cltd
xchg
or
lcall
fcompl
push
mov
push
lcall
call
mov
ret
add
out
pushf
sbb
icebp
icebp
dec
or
addr16
cmp
cli
cmp
add
pop
mov
xchg
xlat
out
mov
sbb
jg
jg
add
scas
xor
jg
jg
sarb
std
scas
iret
les
jge
add
in
lock
arpl
addl
mov
xor
repz
mull
dec
stc
lcall
push
fsubp
cmp
stc
inc
sarb
jl
jne
fidivr
cmp
xor
incb
repz
fistpl
bnd
mov
lahf
jmp
lds
ret
imul
dec
int3
add
adcb
in
sbb
jecxz
sahf
test
mov
icebp
pop
mov
inc
clc
leave
sub
imul
pop
loopne
inc
mov
ja
or
popf
pop
ljmp
icebp
sahf
decb
lock
dec
mull
fisubrl
dec
mov
insb
mov
das
js
sahf
mov
enter
repz
cmp
sti
add
cmp
cmc
iret
aas
and
cltd
icebp
rcr
push
test
jns
les
scas
shlb
push
call
jg
add
popa
bound
pop
jg
scas
imul
hlt
in
lock
test
fnstcw
lock
ss
pop
lret
icebp
out
cli
leave
loopne
or
aas
fidivr
jl
nop
push
std
push
sti
hlt
pop
adc
and
stos
fwait
daa
fnsave
and
pop
loope
cmc
imul
mov
repz
fidivrl
dec
xor
mov
mov
lock
xlat
ja
cmp
je
in
sub
push
sub
xchg
leave
testb
inc
rolb
pop
jmp
xor
into
movsl
adcl
or
repnz
test
test
clc
idivl
sbb
and
xor
jg
cmp
jmp
adc
add
jmp
jnp
lahf
lock
pop
std
icebp
mov
and
mov
imul
pop
add
and
fdivp
xor
ja
xchg
cmp
adc
or
test
imul
decl
adc
clc
fist
int
cltd
cld
dec
fistp
scas
fbld
incb
inc
stc
addr16
fildll
cmc
insl
cli
pop
inc
fild
pushl
repnz
loopne
cld
jg
lock
js
sahf
push
jne
ja
aam
add
into
out
xchg
cmc
adc
int3
jle
out
out
jle
call
lret
dec
push
hlt
int
leave
cmp
and
cmpsb
xchg
out
jecxz
sti
jg
lock
mov
cli
mov
outsb
out
jg
mov
jg
inc
imul
movsb
repz
outsb
scas
rcrb
dec
nop
mulb
pop
pop
loopne
jle
aam
inc
fs
loop
cli
xor
hlt
mov
lds
dec
xchg
shr
sub
icebp
pop
pmuludq
dec
jecxz
lahf
xchg
incl
out
push
ret
test
out
iret
fisub
pop
jmp
and
fistp
outsl
jmp
insb
out
out
sbb
sbbb
mov
std
add
and
pop
pushf
add
xchg
cli
inc
fstps
cld
das
xlat
cmp
aad
mov
jnp
imul
das
mov
aad
and
jnp
jecxz
or
and
dec
lods
out
xlat
das
cld
loopne
push
sub
scas
fnstenv
pop
xchg
fs
jle
leave
icebp
add
decb
lea
pop
aaa
mov
mov
fnsave
hlt
cmp
ja
loop
jnp
into
jns
lcall
lods
fdivrl
daa
lds
loopne
outsl
lods
dec
jnp
add
scas
or
fimul
xor
rcrb
or
hlt
add
xchg
cli
adc
out
idiv
movsb
pop
mov
outsb
cld
dec
mov
loopne
push
insb
lock
fcomip
ja
pop
cwtl
jns
idivb
cmpsl
stc
dec
std
sarb
xchg
cli
cltd
cld
mov
cmp
pop
sti
pop
jge
std
mov
cwtl
mov
incl
jge
jg
dec
hlt
daa
xchg
cld
mov
negl
imul
adc
out
pop
add
sti
shrb
das
mull
inc
js
jo
inc
les
mov
lret
scas
inc
std
aad
xchg
insb
pop
cmp
jnp
pop
adc
mov
add
std
sub
dec
dec
dec
cmp
pop
pop
icebp
clc
imul
movsl
in
or
mov
and
mov
xchg
ret
pop
adc
mov
inc
int3
mov
pop
gs
in
pop
sti
ficomp
add
mov
in
test
mov
xchg
insb
and
sub
cmp
add
ret
and
and
mov
repz
sub
cmp
loope
mov
imul
hlt
call
les
bound
inc
adcb
add
jg
ret
clc
pmaxsw
and
jle
mov
andl
outsb
cmp
adc
adc
sbb
pop
cli
test
cli
sbb
xor
dec
dec
dec
push
push
push
pushw
outsb
jo
jg
fbld
and
cmpsl
daa
test
push
push
jg
mov
fs
imul
pop
sbb
ja
push
fs
sbb
sub
inc
xor
cmp
inc
inc
mov
cmp
cmp
push
aad
stos
stos
lods
lods
mov
mov
mov
mov
loope
loop
jecxz
enter
rcl
in
divl
mov
mov
stc
cmp
std
lock
pop
pop
fwait
cmpl
mov
add
hlt
xchg
test
push
pop
bound
push
fidivr
jae
cli
and
cld
es
orb
mov
push
sbb
jne
jmp
lret
scas
lret
adc
mov
fwait
sti
mov
lahf
jmp
or
cmp
push
jle
mov
insl
cs
add
and
cwtl
imul
xor
cmp
xor
rol
or
pop
and
mov
mov
pop
pop
aaa
push
xchg
mov
pop
xor
dec
jp
aad
and
xor
adc
gs
bswap
popf
mov
es
xor
push
jmp
lods
adc
icebp
xlat
fwait
in
pop
jb
pop
push
mov
out
das
sub
leave
sbb
sbbb
or
jns
fwait
pushf
jo
loop
pop
out
scas
sti
push
dec
lret
xor
andl
add
leave
call
popf
loopne
cmp
and
cmpsb
lods
inc
mov
scas
sub
xchg
push
rcrb
cwtl
in
cli
mov
push
imul
cmp
in
xchg
inc
sahf
cltd
mov
arpl
push
cwtl
stc
inc
mov
pop
ljmp
lret
mov
mov
hlt
stc
and
add
pushf
cmp
sarl
jge
inc
adc
leave
sbb
test
int3
xchg
je
lods
xor
fimul
and
jl
lahf
adc
or
leave
stos
ret
or
movsl
push
sub
outsl
add
jne
addr16
aaa
jbe
push
shrl
push
pop
dec
push
cmp
out
cwtl
xor
repnz
enter
stos
push
push
lods
sarb
imul
in
les
sub
push
jg
fidivl
pop
adc
pop
push
into
pop
sbb
or
sbb
add
sbb
imul
insb
jl
lea
out
mov
enter
fildll
rcll
xchg
test
sub
dec
call
je
mov
xor
stos
mov
mov
test
addl
push
push
jge
mov
jne
sub
pop
xor
jp
gs
ret
cmc
push
push
ljmp
arpl
push
std
cmp
pop
dec
and
daa
aad
jae
les
xchg
add
incl
hlt
ljmp
jge
push
out
cmpsl
jno
daa
xor
inc
test
sub
pop
push
push
or
xchg
and
cmp
add
mov
fnsave
int3
push
int3
adc
adc
dec
and
push
inc
sub
and
jbe
push
adc
sbb
scas
sub
icebp
scas
or
negl
imul
lea
jns
pop
mov
popf
dec
xchg
mov
inc
pop
outsb
aam
and
mov
je
dec
dec
andb
imul
ds
cmovl
je
imulb
mov
lods
mov
and
fimul
jmp
cmp
addr16
mov
outsb
stos
daa
fmulp
notl
inc
pop
push
jnp
sbb
leave
sbb
dec
mov
in
insl
int3
in
mov
ret
pop
cmpsl
cmp
outsb
pop
pop
imul
das
nop
xor
sub
jecxz
jle
insb
xchg
jbe
cmpsb
stos
cmpsl
sbb
jno
outsl
pmaddwd
sti
in
add
movsl
fnsave
lock
mov
xchg
mov
fcom
popf
ficom
adc
adc
inc
movsl
dec
push
fmul
popf
rclb
mov
mov
rep
dec
enter
loop
sbb
mov
mov
jmp
mov
push
push
insb
add
stos
xchg
imul
cmp
sbb
jns
daa
jo
sbb
mov
vmaxps
inc
xor
push
pop
jmp
adc
push
dec
jb
scas
xor
add
adc
dec
mov
add
xchg
repnz
movl
inc
jle
test
mov
mov
idivb
aam
sbb
sbb
in
adc
pop
xor
mov
inc
xor
mov
dec
lretw
sar
mov
int3
stc
ja
inc
jmp
clc
pop
call
mov
sub
insb
cwtl
sbb
sub
sub
xchg
mov
ja
mov
dec
and
out
xor
pop
idiv
mov
xchg
and
cmp
fmul
xchg
movl
ss
inc
fbstp
lret
in
clc
mov
cld
sarl
xor
jae
lahf
cmp
xor
icebp
sub
aad
mov
ds
jecxz
jns
stos
insb
mov
dec
lret
pushf
add
pop
or
cmc
sbb
pop
push
into
xlat
outsb
cltd
push
inc
cmpsl
mov
inc
sbb
push
xorl
pop
xchg
xor
adc
rorl
and
pop
pusha
test
in
aas
mov
push
pop
sub
xorl
xor
add
and
push
scas
dec
jns
fs
jge
adc
mov
cmp
mov
push
mov
xlat
xor
stos
bound
push
rorl
das
adc
inc
sbb
xchg
dec
dec
push
adc
lahf
lods
lods
push
cltd
mov
nop
sbb
and
dec
mov
xor
scas
and
ss
add
push
mov
decl
int3
mov
cmpsl
les
sbb
cmp
mov
or
pop
mov
xchg
imul
test
mov
pop
das
xchg
movl
mov
out
sub
or
js
add
push
in
push
gs
jno
xchg
ja
into
loope
sbb
pop
call
sbb
adc
in
and
js
cmp
and
add
mov
fisttp
xor
ja
in
xchg
xor
adc
rcll
shr
mov
mov
or
mov
icebp
mov
test
adc
addl
sub
mov
dec
adc
das
jae
inc
xchg
data16
xor
sbb
int3
fiadd
sbb
stos
les
fst
mov
pop
stos
sub
cmp
test
jne
dec
pop
pop
or
repnz
mov
push
lahf
dec
insl
cmpsl
add
adc
fwait
into
xor
xor
sbb
jg
outsb
ja
sbb
mov
xchg
mov
inc
or
cmpsb
mov
add
xchg
out
push
inc
jle
test
out
mov
mov
arpl
push
push
stc
sbb
jae
fild
lahf
jne
nop
push
scas
sub
sbb
mov
dec
into
mov
add
cmp
xor
movsl
imul
popf
mov
sub
je
insl
cmp
cli
nop
mov
add
nop
xchg
adc
xor
dec
push
aad
addr16
stos
xchg
cmp
mov
imull
daa
mov
stos
mov
ljmp
aam
lds
out
sub
jnp
aam
lea
gs
ss
roll
pop
mov
cmp
push
jae
jbe
push
inc
stos
adc
ljmp
sbb
mov
nop
loope
xor
gs
cvttps2pi
bound
add
or
xor
sub
loopne
mov
push
mov
xchg
jecxz
fsts
lds
fldl
movb
jns
push
cmp
cmpl
sbb
cmp
mov
ja
dec
aam
pop
dec
fwait
adc
iret
les
mov
cmpsb
sub
aam
ret
jb
enter
or
push
outsb
mov
pushf
xor
mov
pop
sahf
in
lods
dec
xchg
int
in
ret
sub
add
pushf
cmp
mov
insl
xchg
pop
and
sub
xchg
in
add
push
sbb
aam
or
scas
test
or
loop
pushf
or
push
out
and
ljmp
fcoml
jno
and
jl
cs
outsl
push
lret
pusha
inc
and
mov
inc
test
mov
dec
fistpl
and
adc
adc
xor
dec
xchg
dec
cmpsl
lret
xor
xchg
loopne
imul
inc
loop
adc
stc
xor
movsl
dec
rorl
test
popa
les
cld
call
sub
mov
and
test
add
push
push
inc
xchg
mov
jae
out
in
mov
je
test
cmpsl
nop
xor
clc
or
cmp
adc
jno
out
sbb
je
outsl
fisttpll
stos
mov
and
cmpsl
mov
pop
push
fimull
cltd
repz
insl
xchg
lret
aaa
or
dec
das
js
rcr
xchg
mov
gs
push
push
sub
shrb
mov
sbb
mov
xchg
cwtl
add
add
mov
mov
stos
pop
je
fwait
pop
fadds
pop
xchg
mov
or
sbb
ret
mov
lcall
mov
push
add
sbb
xor
std
orb
jecxz
push
fdivr
push
mov
pop
bound
arpl
xchg
mov
pop
inc
pushf
push
inc
pop
or
popf
mov
andl
aas
test
push
enter
push
pop
dec
cmpsl
sub
inc
movsb
xorl
xchg
inc
inc
lods
push
rclb
leave
roll
loop
mov
add
add
sbb
sahf
lret
push
ljmp
test
adc
dec
sbb
pop
jmp
adc
pop
adc
mov
pusha
jns
and
lds
pop
jo
cmp
and
mov
test
add
dec
sub
adc
xor
add
xchg
xchg
cmp
jp
add
or
sarl
repz
lcall
jl
test
daa
mulb
push
xlat
out
push
fucomp
in
add
movsl
pop
push
dec
test
push
inc
pushf
pushf
into
mov
sbb
jb
and
dec
adc
pop
push
pop
jbe
jmp
loope
inc
and
pop
push
sub
pop
xchg
push
push
jo
sub
rcrl
lcall
push
outsb
jmp
or
sbb
mov
sbb
mov
mov
lahf
add
cwtl
cmpsb
mull
mov
enter
je
jecxz
mov
or
add
mov
movsl
cmpsl
mov
sub
sbb
cmc
xchg
fcoms
loopne
inc
in
iret
sub
jp
outsl
dec
ja
push
cmp
jb
fsubs
push
fimull
aaa
and
in
jbe
mov
mov
pop
or
cmp
stc
into
out
jbe
inc
cli
shlb
out
imul
jge
stc
in
push
stos
test
mov
in
sbb
mov
sub
sbb
mov
movsb
notb
sbb
add
mov
dec
stc
out
jne
lret
lock
je,pt
push
adc
adc
mull
rcll
xchg
daa
aaa
and
cmp
cltd
push
jmp
out
cli
sbb
js
pop
dec
aam
addr16
sbb
in
xchg
icebp
jo
push
add
pop
lret
xor
inc
mov
mov
xchg
call
sub
sbb
leave
fsts
ficoml
push
jns
dec
mov
xchg
push
mov
aam
stos
add
jne
aam
hlt
lods
loopne
mov
int
ja
cmpsl
dec
in
fistl
mov
in
mov
scas
test
scas
jle
jnp
mov
repz
or
jne
inc
rcr
mov
xor
xor
dec
es
mov
stc
inc
outsl
sub
repz
push
xor
cmp
adc
popf
dec
inc
gs
int3
test
mov
outsl
xor
test
mov
cmp
dec
mov
mov
jge
xchg
jle
pop
mov
pop
jnp
push
cld
fs
pusha
and
aas
inc
test
push
jo
xor
dec
stc
gs
in
cmp
test
subl
adc
sbb
mov
mov
mov
dec
dec
cmp
mov
jbe
in
lock
ret
leave
adcl
mov
jbe
fstps
leave
inc
aam
ljmp
cmp
stc
push
dec
sahf
xchg
add
dec
pop
aaa
xchg
pop
jl
int
fsubrp
push
daa
mov
movsb
jne
js
jbe
xor
movsl
mov
cmpsl
repnz
popf
in
fidivl
dec
xlat
scas
lret
icebp
jmp
pop
out
mov
movsb
stc
fistpl
icebp
lret
fs
jp
arpl
aaa
imul
fistl
push
xlat
mov
mov
loop
aad
idivl
push
icebp
out
pop
xor
or
out
sarl
push
mov
and
inc
jbe
test
dec
arpl
xor
sbb
xchg
gs
jno
pop
fdivrs
daa
mov
lea
adc
out
or
push
rcrl
test
scas
aaa
test
jo
and
rolb
lea
cld
sahf
jo
outsl
xchg
fnstenv
mov
mov
push
pop
test
ret
lods
mov
icebp
fisub
shrl
arpl
je
pop
xchg
dec
daa
jns
and
loopne
aad
xchg
lret
lods
fcoms
inc
lods
lea
adc
fidivr
add
adc
cmpsl
and
stos
movsb
cmc
push
add
cmp
pop
sbb
ds
mov
sub
and
adc
dec
std
lea
mov
xchg
daa
pop
rclb
bound
pusha
jmp
cmp
and
rcll
loope
sti
sub
lret
mov
mov
cwtl
mov
lret
les
mov
imul
enter
jecxz
mov
fnstenv
nop
out
mov
sub
idivl
pop
lret
imul
out
jns
ja
cmp
xchg
xchg
movsb
push
cmpsb
adc
xor
sub
ret
and
outsb
jp
pcmpeqb
loope
push
jne
popf
pop
xchg
pushf
jp
cmp
cmp
repnz
fnstcw
adc
jne
or
sti
movsb
adc
mov
jmp
add
aam
adc
sbb
jmp
daa
or
hlt
or
jp
js
add
mov
outsb
push
test
scas
cmp
lret
inc
dec
jl
mov
sub
dec
adc
inc
xor
popf
ss
pusha
sub
rcrb
in
in
ja
or
xlat
pop
arpl
je
xor
dec
push
shl
mov
xor
outsb
adc
push
sub
mov
aas
outsb
push
std
pop
fsubs
ret
lea
jmp
out
inc
jne
push
push
orb
push
xor
or
sbb
arpl
icebp
out
pop
or
fmulp
pusha
stos
int3
cmp
add
jg
aas
pop
xchg
inc
lods
or
insb
mov
fidivl
or
outsb
gs
dec
shl
outsb
cmp
mov
icebp
dec
push
inc
aad
fwait
mov
xchg
jae
mov
cmp
and
addl
fisttp
outsb
or
sub
stos
dec
cli
pop
add
xchg
or
xor
xchg
test
mov
dec
int3
adc
ja
mov
icebp
insl
frstor
xor
and
outsl
ja
out
stos
push
mov
out
add
sub
clc
push
sahf
and
ds
jb
push
jp
in
cmpsb
or
inc
in
xchg
inc
cmp
xchg
sub
leave
pop
adc
out
fstpt
pop
jo
out
lret
mov
dec
out
loopne
iret
fdiv
mov
inc
push
out
lret
out
mov
int3
xlat
mov
mov
ret
and
imul
imul
inc
dec
mov
push
or
scas
ret
mov
out
mov
iret
fsubrl
in
cs
es
clc
sbb
lea
pusha
scas
aam
or
leave
mov
shl
jo
movsl
cmp
js
enter
mov
mov
rolb
das
or
push
inc
cmc
sub
cmpsb
ds
adc
mov
and
dec
mov
mov
loope
mov
cmpsb
cmc
imul
cs
pop
dec
xorb
mov
push
pop
sbbl
push
in
xchg
xchg
lret
xchg
sbb
lea
add
jecxz
cli
repz
cmp
jne
sti
mov
dec
push
lea
jp
xchg
push
rclb
faddl
dec
pop
inc
add
aam
push
push
fisubrl
icebp
cmc
mov
inc
je
mov
pop
sbb
pop
sets
enter
mov
shl
stos
push
ss
fwait
dec
mov
jno
pop
int
pop
js
out
and
xor
push
jp
cs
into
jnp
cmp
je
mov
mov
jecxz
repz
lods
xchg
xchg
dec
mov
sbb
jmp
vmovaps
cli
adc
push
sbb
scas
and
and
aam
imul
jno
jle
fwait
mov
mov
mov
dec
mov
loope
inc
popa
mov
push
rol
repnz
ficompl
in
push
pop
sbb
dec
or
fcoms
scas
adcl
insl
loopne
fadd
loopne
and
sbb
mov
je
add
insl
test
in
cmp
xchg
jmp
mov
sbb
or
inc
cli
movsl
out
cmc
aam
add
dec
mov
mov
add
mov
sbb
xchg
jge
pop
outsl
xchg
push
movsl
shlb
rcll
push
sbb
or
and
mov
sub
pop
sub
xor
mov
mov
sti
adc
fidivr
or
dec
push
push
sub
or
mov
pop
inc
dec
mov
movsb
scas
div
lret
dec
xchg
xchg
sarb
test
mov
sbb
mov
fnstsw
rorb
jecxz
loope
mov
stos
mov
inc
push
aam
rcll
movsl
int3
jns
nop
imul
xchg
pop
or
rclb
xchg
andb
cmp
icebp
je
js
sub
cmp
popa
pop
mov
lds
and
and
out
fcmove
mov
sbb
cwtl
out
cmpsb
push
sub
insb
or
outsb
fbld
push
xchg
jp
mov
cmp
jbe
push
push
mov
js
add
inc
lret
test
sbb
adc
pop
call
das
repz
jmp
jae
sbb
xchg
adc
popa
aaa
or
fldl2e
fwait
jp
xor
int
outsb
pushf
inc
mov
mov
jae
mov
sti
lea
fstps
out
cltd
cld
inc
bound
pop
jg
dec
stos
xchg
sub
aam
nop
sub
mov
push
add
pop
dec
cmpsb
adc
mov
outsb
test
mov
xor
push
adc
pop
push
es
mov
push
adc
inc
ds
pop
fimul
or
xor
sbb
inc
xor
push
pusha
mov
loopne
add
sarb
xor
xorb
pushf
lret
cmp
and
xor
or
test
xchg
and
aas
lods
orl
inc
loope
push
xor
xchg
in
cli
lcall
pop
inc
jae
scas
gs
pop
jl
lcall
jno
out
jg
or
jle
dec
xchg
les
arpl
movsb
adc
push
adc
insl
lea
mov
out
ret
jae
arpl
clc
inc
repnz
sbb
push
test
mov
push
aaa
inc
mov
pop
sbb
insl
rcrb
outsb
and
push
or
xor
test
aad
gs
mov
push
out
shrl
ljmp
pop
ss
pop
push
or
xchg
imul
push
fmuls
cmp
cmp
inc
xor
xor
push
push
pop
or
test
mov
mov
jbe
mov
jg
insl
repz
or
dec
loope
add
mov
pushf
subb
push
aaa
dec
sub
mov
ljmp
push
mov
mov
pop
adc
push
vhaddps
or
push
mov
inc
jbe
mov
inc
or
pushf
sbb
or
jnp
push
cmp
jno
inc
cmpsl
lcall
leave
pop
mov
test
test
mov
shrl
sub
scas
push
or
rorl
mul
xor
call
ljmp
sub
mov
stos
jae
jno
jnp
mov
cmpsb
lea
test
es
popa
xor
cmp
mov
ljmp
pop
adc
add
pop
test
sub
test
dec
fmul
or
push
pop
dec
xchg
insl
es
in
mov
fucomi
mov
in
lea
ret
lret
push
mov
sub
xchg
mov
mov
push
ds
arpl
lea
xor
lock
jp
mov
or
mov
sub
jae
mov
inc
notb
push
dec
sbbl
repz
stos
dec
mov
scas
aad
inc
stc
inc
in
or
sub
xor
out
or
inc
xchg
xlat
dec
mov
dec
and
xchg
outsb
cmp
mov
ss
jmp
push
mov
xchg
pop
hlt
ljmp
out
outsl
push
sub
add
pop
xor
ja
call
push
clc
stos
mov
jge
mov
cmp
mov
stos
les
scas
clc
shlb
jp
adc
mov
dec
mov
lret
test
or
add
fisubrl
aaa
jne
test
xor
or
mov
and
push
sub
sub
cmp
nop
inc
pop
add
dec
pushf
pop
pop
mov
add
scas
jb
mov
cmp
pusha
inc
lock
popaw
xor
movb
inc
mov
idivl
mov
or
outsb
inc
sbb
push
dec
movsb
jp
push
push
aam
sub
sbb
cmp
fnop
jo
and
in
dec
pop
dec
mov
mov
leave
bound
aaa
fwait
mov
into
rcll
xchg
cmp
sti
dec
orb
insl
rorl
sbb
sub
mov
jo
out
sbb
add
scas
inc
pop
sbb
sub
mov
dec
xchg
xor
xchg
scas
push
pop
dec
or
mov
int3
xor
pushf
fdivs
adc
loop
int3
xor
pusha
mov
add
lret
sbb
stos
inc
pop
loope
nop
ja
lods
adc
loopne
fidivrl
imul
dec
das
jo
mov
xchg
xlat
jge
sbb
xchg
push
pusha
or
xor
fisubr
push
dec
ss
lock
add
std
aam
jo
scas
mov
es
sub
and
xor
mov
mov
adc
ja
push
add
rcrb
mov
lods
std
lods
scas
inc
pop
fidivr
jp
imulb
pop
push
jmp
in
xchg
fwait
inc
mov
and
jb
out
insb
aam
or
out
stos
cmp
popa
push
jg
push
xor
and
jle
loopne
pop
sbb
and
cmp
imul
mov
adc
stc
push
sub
jp
lods
in
ja
mov
inc
ja
mov
add
mov
mov
ret
jmp
scas
loopne
movsb
or
add
lods
and
scas
sbb
in
movsl
lahf
or
pop
mov
xchg
cmp
pop
shlb
add
rcrl
dec
push
fdiv
jl
sub
mov
cmp
sbb
sbb
fs
shrb
dec
dec
mov
push
icebp
andl
les
and
dec
rclb
or
cmpsb
xor
dec
push
dec
mov
mov
ret
repz
enter
inc
mov
repnz
mov
adc
cmpsl
mov
push
fisubr
pushf
addr16
jecxz
add
dec
pop
sub
fwait
push
jle
in
js
sub
stos
pop
popa
stos
outsl
dec
lods
enter
mov
dec
test
data16
push
outsl
or
sub
stos
test
in
push
fldcw
in
inc
cmp
pop
into
push
pop
sub
imul
jmp
insb
fdivl
scas
push
dec
ret
push
outsl
das
pop
rorl
imul
dec
ss
and
dec
in
mov
jge
fucompp
scas
mov
jmp
mov
cmc
sti
mov
enter
fsubrl
mov
mov
mov
arpl
movsl
xor
inc
xchg
push
push
gs
and
or
decl
add
and
dec
aam
divl
loop
push
lret
loopne
ret
fucomp
movsb
lods
out
mov
mov
daa
js
cmpsl
into
xchg
mov
cmp
xchg
lahf
js
loopne
std
aad
shr
dec
fimul
dec
adc
xchg
mov
inc
fnstsw
or
adc
outsl
aam
int3
iret
push
lds
cmpsl
push
xor
in
and
pop
push
loope
sub
inc
jle
push
fldt
mov
icebp
jns
fisttpll
aad
push
mov
in
mov
hlt
cld
push
dec
dec
addl
scas
das
popa
in
arpl
add
and
sbb
fisttpl
lds
push
lods
sarb
sbb
push
and
pushf
mov
xchg
iret
pop
clc
mov
or
mov
xchg
lods
out
jmp
xchg
pop
fsubs
jle
jo
lds
push
xor
xor
mov
jmp
push
mov
in
iret
cmpsb
sbb
subl
popa
lods
insb
test
out
fcoml
loope
sbb
mov
fs
inc
sti
iret
lahf
sub
sahf
xor
fcomps
fisttpl
mov
loope
cmpsb
jle
xor
xor
movsl
fisubl
imul
insb
out
mov
lods
cmc
stos
lcall
ja
ficomp
pop
pusha
flds
in
fmull
mov
fbld
jno
inc
icebp
or
ss
mov
dec
shrb
pop
jmp
mov
fsub
mov
pop
lock
cltd
imul
cmp
mov
fstl
inc
lret
pop
pop
inc
jne
sahf
lahf
enter
std
or
out
out
pop
cmp
inc
push
xchg
pop
mov
lods
leave
jnp
aas
mov
in
jecxz
cmc
iret
data16
aam
lods
cmpsl
cmpsb
cs
fnstenv
pop
notb
xchg
mov
rolb
sbb
inc
fstps
mov
mov
inc
test
scas
cld
inc
cwtl
inc
ja
ficompl
ficom
aam
inc
scas
jmp
mov
cmc
mov
iret
in
notl
ljmp
into
mov
mov
xchg
lock
lock
dec
nop
mov
xor
loope
adc
pop
push
mov
sub
test
test
movsb
push
jmp
mov
jp
add
ds
minps
scas
push
rcrl
fsts
adc
dec
fcmovb
mov
sbb
cli
sahf
cmp
push
xchg
dec
ret
cld
mov
shlb
mov
jo
insb
pop
dec
add
dec
pop
adc
pusha
ja
jo
ds
pop
out
push
sub
jle
xor
and
sbb
subl
cmp
aad
xchg
or
mov
sbb
lds
cmpsb
ss
test
popa
mov
pop
jbe
xor
push
pop
ljmp
cmc
nop
in
pop
aas
fstl
inc
pop
mov
jg
sbb
xchg
adc
and
je
or
and
in
rcrb
stos
dec
mov
sbb
jns
push
icebp
xchg
lock
les
dec
xor
int
test
mov
lock
clc
movsb
add
imull
cmp
out
inc
mov
out
jno
add
or
nop
rcl
inc
mov
cmpl
arpl
cs
sbb
fisubrl
xor
loopne
xchg
fstpt
cmp
and
das
lcall
stc
and
arpl
jp
xor
loopne
mov
and
flds
dec
inc
adc
and
inc
scas
cmp
ss
inc
lods
pop
mov
mov
mov
movsl
cs
mov
scas
jnp
inc
test
ja
ss
push
test
mov
cwtl
sbb
fsts
pop
sub
xchg
test
clc
out
sub
call
push
dec
mov
inc
pop
cmp
mov
stos
pop
add
dec
jecxz
dec
clc
xor
insl
push
sbb
jno
into
or
stc
add
popa
ds
std
and
sbb
arpl
mov
xor
jmp
aas
dec
lock
pop
dec
push
pop
mov
xor
cmp
movsl
in
scas
mov
test
movsl
inc
sti
sarb
pop
insb
or
pop
testl
popf
fwait
jne
adc
aam
aas
inc
push
fdiv
add
mov
and
or
dec
nop
popf
dec
mov
scas
addr16
aaa
or
xchg
mov
lcall
mov
adc
lds
ss
sarl
nop
mov
cmp
stos
lods
sub
mov
xchg
repnz
mov
push
lret
push
pop
dec
jp
adc
faddl
mov
stos
aas
and
sub
enter
jge
pop
outsb
mov
mov
ror
lea
xor
xor
fcompl
pop
je
mov
and
cmp
lahf
xchg
inc
nop
push
push
add
dec
das
add
stos
outsb
sbb
fwait
xchg
dec
xchg
inc
fistp
dec
inc
out
push
sbb
scas
mov
add
fcmovnu
sbb
in
addr16
or
sub
fnstcw
pop
mov
sbb
add
jae
popf
sbb
xor
jp
adc
jne
insl
rclb
repnz
jge
lock
nop
out
fdivr
pop
mov
imul
fldenv
inc
mov
cmp
dec
sub
push
data16
push
pushf
mov
mov
sbb
xor
jb
sahf
insb
outsl
mov
and
pop
lock
movsb
mov
mov
cmp
jno
pop
test
or
cwtl
xorl
dec
mov
ror
repz
sbb
aam
add
cmpsl
nop
and
out
daa
sbb
dec
and
call
cmp
mov
mov
mov
and
iret
ja
cmpsl
mov
lods
iret
add
mov
leave
xchg
mov
je
mov
mov
dec
xchg
pop
aam
pop
mov
ret
jnp
lods
xchg
xchg
jo
mov
sbb
xchg
mov
pop
cmc
cmp
lahf
push
leave
mov
repnz
jb
mov
cmp
scas
dec
cmp
mov
mov
imul
mov
and
mov
imul
data16
insl
pop
pop
ret
je
dec
icebp
mov
into
xor
popa
ljmp
push
stc
fldt
dec
push
dec
dec
fisttp
faddl
in
dec
bound
loop
jp
add
cld
es
cltd
adc
inc
in
cmp
mov
imulb
arpl
adc
fldcw
xor
pop
leave
sbb
dec
jmp
sub
fcomi
cmpl
sbb
ljmp
test
jg
fsubl
icebp
jo
jg
mov
pop
xchg
pop
fsts
pop
jl
ss
mov
jno
repnz
dec
push
dec
es
inc
cld
out
cli
data16
ss
adc
mov
clc
cmp
push
mov
push
rclb
push
push
sahf
jb
stos
cld
pop
xlat
data16
stos
jbe
outsb
inc
ret
mov
sub
inc
repz
bound
imulb
pop
xor
stos
jnp
out
xchg
negl
xchg
mov
sarb
sbb
cli
aam
xor
adc
cld
hlt
ffree
push
or
adc
std
and
cmp
inc
mov
xchg
imul
mov
scas
cmpsl
in
aaa
rclb
fsts
repnz
jae
stos
push
mov
stos
inc
adc
sahf
dec
and
add
in
ss
cmp
jo
stos
sbb
mov
sub
in
pop
push
lock
adc
mov
xchg
sub
pop
out
mov
jl
call
outsl
lret
ljmp
sahf
xchg
bound
dec
push
enter
sub
cmp
mov
adc
inc
jmp
push
mov
adc
dec
imul
dec
jb
movsw
lea
js
mov
outsb
pusha
inc
dec
adcl
sbb
inc
data16
mov
enter
loop
scas
push
mov
ljmp
jmp
push
into
jbe
sahf
push
inc
jno
xchg
push
jge
cltd
mov
movb
sub
adc
jl
aaa
mov
add
test
dec
ja
loopne
inc
test
pop
fdivp
scas
enter
jmp
mov
addr16
mov
rol
or
pop
fs
and
outsl
loop
lods
mov
outsw
push
cmpsl
loope
lahf
xchg
fnstenv
dec
cmpsl
or
jb
cmp
int3
sbb
jp
int
inc
mov
and
adc
aam
xchg
xor
xchg
frstor
fcompl
cmp
icebp
aam
arpl
lock
inc
jne
out
lods
fisttpl
mov
leave
jmp
scas
inc
in
mov
mov
cwtl
loopne
xchg
or
xor
xchg
jl
mov
roll
loope
dec
mov
idiv
and
test
rorb
stc
push
xor
mov
lret
into
add
stos
cmpsl
pushf
jl
jns
int3
push
sahf
fcmovnu
call
dec
xchg
xchg
push
dec
and
ljmp
sub
xchg
in
and
add
loop
jae
fsubrp
movsb
aaa
or
or
push
aaa
and
aam
pop
aaa
mov
lds
sbb
jb
dec
xor
stos
adc
cld
daa
lret
arpl
movsl
xchg
xchg
je
imul
lods
out
mov
cmp
rcrl
sub
js
daa
popa
sarl
lea
sub
push
push
outsb
mov
sub
pop
iret
mov
inc
mov
repz
fiadd
es
cmp
and
addr16
loop
rorb
cmpsl
sub
test
pop
sub
loop
sahf
int
les
mov
stos
mov
jp
mov
and
push
push
lahf
loope
sahf
call
push
cmp
mov
dec
insb
or
sbb
cmp
and
out
adc
cmp
push
cmp
orl
sub
inc
jp
leave
fstpl
cmp
mov
add
cli
es
loopne
les
popa
cmp
sahf
pop
lret
push
outsb
jnp
insb
nop
loope
xchg
pop
popa
out
icebp
push
jge
hlt
jnp
cs
or
imul
xor
add
fisubrl
test
dec
fstl
and
cmpl
fimull
cmp
js,pn
mov
ja
xchg
flds
or
enter
sbb
jge
roll
ds
jecxz
rcll
lock
rclb
aad
pop
ds
popf
call
jg
mov
push
jecxz
mov
sarl
mov
and
popa
popa
loop
push
and
add
stos
push
cmovle
bound
stc
es
fmuls
leave
jb
scas
cmp
jbe
and
lods
ret
enter
inc
lock
and
xor
pop
xor
sti
js
mov
cwtl
cltd
mov
nop
mov
sub
int3
mov
popa
cli
jg
pop
sbb
test
sbb
push
test
repnz
xchg
jl
cmp
roll
jle
xchg
jnp
or
shrl
or
dec
ret
mov
or
repnz
mov
scas
fmull
jns
cli
mov
addr16
ret
pop
stc
add
dec
negl
pop
xlat
orl
mov
pop
adc
add
hlt
imul
sti
sti
std
aam
subl
addr16
leave
jns
xor
or
test
cmc
pop
jno
scas
jg
adc
mov
cmp
cmp
std
mov
mov
pop
adc
imul
in
js
pop
lahf
push
lahf
xchg
and
cmp
mov
sub
cli
push
cmp
xor
loopne,pt
jl
sub
lret
rcr
lret
and
jg
fiadd
push
mov
and
outsb
or
repnz
int3
xor
push
popa
jnp
xchg
cmc
shll
mov
repnz
mov
mov
or
adc
dec
aas
sub
into
jbe
nop
jmp
mov
rep
pop
jecxz
add
rorl
repnz
sarb
and
xorb
push
jmp
cmp
xchg
outsl
lret
mov
cs
sub
push
and
test
lods
inc
mov
ror
out
adc
adc
lret
bound
or
fisubl
stc
cmp
bound
dec
lret
push
out
xchg
ja
pop
andb
mov
loopne
stos
les
jo
mov
pop
add
push
lret
inc
cmp
lods
dec
aam
jno
sbb
mov
stc
shrl
push
into
scas
sbb
mov
cmp
jmp
pop
xor
leave
push
push
loope
jge
dec
cmc
xor
sar
icebp
aad
imull
arpl
pusha
stos
js
popf
jecxz
add
jno
xchg
lock
sub
ret
adcl
lret
outsl
int
push
add
outsl
push
dec
mov
cmc
dec
fnop
dec
imul
mov
sete
push
scas
ljmp
cld
push
xchg
cmp
mov
imul
sub
mov
mov
mov
std
sti
ss
insb
mov
je
xchg
mov
sbb
push
aam
pop
pop
push
mov
stos
pusha
inc
mov
ljmp
in
mov
pop
dec
mov
pushf
test
arpl
insl
pop
iret
in
mov
fs
mov
jge
adc
sub
pop
int
jnp
add
dec
repnz
lahf
clc
xchg
inc
fimull
out
jnp
shl
mov
jae
and
loop
xor
dec
ret
je
inc
mov
jge
mov
cli
pushf
cmp
mov
dec
nop
cmp
cmc
sbb
ret
push
jns
mov
dec
es
mov
mov
xchg
test
xor
je
add
push
mov
jo
jbe
mov
cmp
xchg
scas
cmp
repnz
les
mov
jae
mov
pop
sahf
adc
iret
pop
and
std
mov
push
cmp
mov
jmp
mov
mov
dec
lahf
jno
arpl
add
jo
rclb
mov
movsl
leave
mov
test
inc
jle
lods
in
je
sub
cmp
adcl
push
stc
or
mulb
push
pop
test
jno
movsb
inc
sahf
cmpsb
lret
mov
sub
mov
insb
arpl
cld
std
clc
clc
pop
adc
mov
dec
pop
inc
inc
fimul
cli
outsl
pop
xchg
dec
inc
jae
pop
stos
push
not
in
mov
mov
lods
out
lds
jle
ffree
dec
js
ja
imul
add
mov
inc
ja
aad
xor
out
das
sub
sbb
push
push
xor
mov
sub
pop
movsl
push
mov
mov
inc
xchg
cli
sub
xor
out
push
repz
out
mov
sbb
adc
jb
mov
call
ss
adc
fxch
adc
mov
out
fimul
in
sub
mov
push
clc
mov
pop
cs
xchg
shrb
ja
pop
repnz
leave
sbb
push
cmp
in
jae
adc
call
inc
mov
xchg
loope
mov
push
pop
inc
out
adc
adc
cmp
cmp
icebp
xlat
lods
mov
test
sti
fidivl
pushf
jnp
sbb
fidivr
pop
add
push
jl
jae
xor
inc
mov
dec
jae
lods
arpl
in
in
add
jle
xor
xor
int
dec
out
jo
dec
ss
in
ja
pop
je
stos
dec
and
aaa
cmpsl
aam
pop
gs
cmpsl
and
pop
cs
inc
inc
mov
pop
ret
loop
xchg
mov
xchg
xor
mov
pop
faddl
lcall
inc
mov
push
jo
out
cmc
fiadd
stos
arpl
sbb
pop
xchg
lret
lods
fcmovnb
dec
out
jnp
push
lret
wbinvd
jecxz
mov
lea
ljmp
inc
jmp
push
inc
movsl
or
into
sub
psubusw
adc
outsb
or
mov
xchg
push
mov
cmp
push
mov
push
mov
or
aam
ds
cmpsb
xlat
jecxz
daa
scas
out
imul
cld
inc
mov
xchg
fist
mov
movsl
mov
shrl
xchg
mov
and
xchg
mov
adc
cmp
jmp
in
imul
fnsave
push
popa
pop
xchg
jb
movb
mov
call
push
mull
pushf
push
xchg
xor
mov
mov
sbb
test
mov
out
leave
outsl
movb
push
jne
pop
call
js
cmp
adc
loopne
loop
fistl
add
leave
stos
pop
lds
ja
sub
inc
jnp
repz
rcrb
sbbb
and
dec
xchg
lods
jnp
sub
in
mov
int
xor
dec
and
jl
xor
movsb
fcoms
rorb
jae
test
imul
int3
lret
cmp
jmp
dec
or
popa
xlat
adc
sub
aad
repnz
loopne
push
xor
addr16
aam
sahf
out
rolb
lods
adc
sub
jmp
ss
aam
inc
jbe
in
mov
popf
dec
aam
pop
xchg
cli
mov
push
xor
mov
jp
test
dec
xor
mull
cmp
cmp
fld
dec
jmp
cmpsb
sub
test
mov
movd
divl
push
inc
or
aaa
mov
sbb
sti
mov
sahf
xor
gs
xchg
scas
adc
inc
cmp
rcrl
dec
cld
pop
sub
push
push
sbbb
or
mov
dec
xchg
xlat
cmc
xor
add
push
outsb
mov
aad
int
mov
adc
mov
cwtl
ret
cmpsb
jmp
mov
lea
push
add
lods
push
push
lds
inc
xchg
fsts
mov
sub
leave
adc
jmp
or
xchg
push
fisubrl
inc
repnz
mov
cmp
push
mov
mov
mov
and
add
jmp
xor
or
mov
jne
jge
mov
mov
xchg
cltd
leave
loopne
pop
dec
in
adc
push
mov
push
insb
popa
popw
or
fnsave
in
sbbl
mov
xor
inc
jbe
ss
nop
add
push
push
sahf
push
sti
stos
push
ret
pop
std
lds
sbb
jno
ficoml
cmp
aam
or
or
push
in
fimull
cmp
mov
imul
dec
sub
xchg
mov
adc
pop
push
mov
gs
adc
into
hlt
rcll
jle
add
cltd
sub
lcall
inc
in
pop
out
test
xchg
ja
dec
mov
xor
leave
sbb
pop
gs
leave
leave
lahf
sahf
mov
adc
push
in
ret
mov
ret
adc
inc
shl
mov
push
out
sarb
jo
dec
es
cmp
pop
push
mov
sahf
je
cmp
roll
shr
xchg
das
aaa
dec
into
lret
cmpsl
mov
into
loop
mov
push
pop
xchg
sub
mov
push
jmp
in
adc
mov
mov
out
cwtl
jle
mov
jnp
ss
int3
data16
inc
xchg
cmp
outsb
test
or
gs
push
in
inc
in
xor
push
add
mov
cmp
mov
mov
inc
das
repnz
std
mov
mov
int3
sbb
xchg
xlat
xor
call
aas
sti
and
neg
lahf
pop
repnz
xor
lret
cmp
lea
cwtl
jae
xor
pop
jns
divb
mov
arpl
lretw
jno
xor
loopne
mov
movsb
int3
push
xor
cwtl
inc
jle
out
fidiv
das
movsb
subb
enter
out
jae
pushf
cmp
orl
enter
dec
mov
push
push
push
and
lret
out
mov
bound
test
outsb
js
cmp
jge
pop
jle
addr16
xchg
xchg
push
jo
movsb
aad
dec
xor
sbb
pop
inc
lret
push
sub
dec
pop
xor
pop
sahf
mov
jecxz
cwtl
cmpxchg
leave
ret
rorb
pop
xor
pop
push
xor
movsb
sub
ljmp
imul
popf
test
dec
add
dec
jne
lds
aas
cmpsl
loope
xchg
xor
push
cltd
fdivr
push
mov
out
data16
jmp
sarl
hlt
xor
ss
lret
xor
mov
add
xchg
jns
dec
daa
lret
vcvtps2pd
jle
and
es
sbb
iret
push
int3
mov
js
imul
inc
xor
dec
std
int
stos
je
dec
popa
fmuls
imul
aaa
jge
mov
xchg
xchg
das
mov
idivb
dec
sbb
lahf
imul
je
loop
leave
jecxz
xor
mov
sbb
mov
and
movsl
ds
xor
mov
lret
push
pop
dec
adc
mov
pop
fistpll
fbld
loop
push
aaa
sub
mov
rdtsc
mov
add
imul
jb
lods
sub
je
jne
sbb
jl
fdivr
add
gs
sub
stos
ja
rcrl
arpl
inc
dec
dec
scas
enter
xor
pop
mov
and
pop
lret
das
mov
mov
stc
add
subl
mov
dec
aad
jno
mulb
dec
push
dec
in
push
push
push
lods
pop
add
into
out
in
xor
outsb
pop
sarb
repnz
mov
mov
pop
xchg
push
pop
xor
bound
mov
mov
mov
call
mov
sarb
aas
fsubs
jnp
scas
pop
das
sbb
mov
mov
jae
jnp
xor
inc
mov
cmpsb
inc
or
and
shll
mov
pop
inc
in
mov
out
sti
in
sarl
out
out
loop
test
adc
gs
fnsave
dec
add
sbb
lods
rcr
fidivr
xor
xchg
in
leave
mov
push
test
xor
xlat
xchg
lret
outsl
or
xchg
lock
jnp
mov
cmpsl
dec
int
outsb
jp
push
pop
lea
jecxz
cmp
jbe
sbbl
imul
fstpl
sbb
jmp
fcmove
sbb
xor
mov
test
lods
cwtl
sub
pop
cmp
pop
dec
dec
nop
mov
pushf
ljmp
mov
insl
rol
add
pcmpgtw
test
in
fwait
sbb
jge
addr16
ja
jne
cmc
cli
mov
fs
push
push
aad
icebp
push
inc
sub
and
sub
sbb
or
jg
adc
lock
bound
addr16
leave
popa
jle,pn
sahf
es
in
testl
repnz
popf
mov
jg
test
leave
out
and
mov
jbe
dec
xchg
stos
subl
int3
lock
hlt
ja
push
and
push
rcr
jns
jl
or
ror
xor
cli
stos
idivl
test
dec
jge
xor
ret
and
add
aas
pop
push
fstpl
push
jle
test
jle
cmpsl
fs
push
mov
mov
mov
mov
inc
lret
lret
and
cmc
or
sbb
mov
pop
js
icebp
sub
xor
cmp
negl
jne
stos
dec
clc
lret
or
xchg
xor
pop
das
repnz
movsl
push
pop
cmp
std
dec
adc
or
or
mov
or
and
add
mov
lret
push
mov
fcomp
xlat
in
mov
mov
xor
in
mov
out
gs
daa
flds
dec
jle
out
dec
imul
loopne
lret
push
or
pop
not
cmp
fcmovne
mov
loopne,pt
mov
cld
cmp
sti
leave
gs
jae
jno
subl
sbb
xor
and
pop
js
push
jl
lock
fmul
mov
inc
scas
add
sub
push
fldt
lahf
hlt
ds
imul
jnp
stc
cld
fcomps
cli
loopne
insb
cltd
pop
push
jnp
test
xor
cmp
fcoml
mov
dec
in
cmp
sbb
or
jle
popf
outsl
test
daa
test
fdivrs
aad
out
push
mov
call
cmp
push
bound
je
mov
dec
test
pop
xor
mov
cli
pop
roll
inc
dec
cmp
mov
xor
rolb
sbb
xchg
ds
push
sbbl
dec
cltd
lahf
add
test
lahf
and
jp
mov
mov
nop
or
aaa
sub
and
dec
aas
shr
into
or
mov
roll
mov
sahf
inc
pop
cmpsb
cwtl
or
pop
mov
dec
loop
mov
and
call
jno
mov
jo
inc
rorb
lahf
mov
jb
stc
clc
pusha
adc
cmp
lret
sub
dec
mov
cmp
push
dec
insb
aam
mov
mov
sub
test
xor
jns
add
and
pop
add
out
mov
dec
ret
inc
fsubs
fs
mov
inc
cmp
jno
xchg
gs
mov
cmp
cli
jae
fdivrp
pop
lods
sahf
pop
cs
sub
adc
decl
mov
and
pushf
mov
test
int
adc
ds
push
rcl
jl
and
adc
andl
xchg
je
push
mov
mov
data16
subb
int3
fdivl
mulb
lcall
pushf
std
out
popf
or
inc
push
dec
xor
les
mov
push
xor
pop
xor
es
push
gs
gs
cmpsb
clc
inc
xchg
mov
pop
sbb
ret
arpl
fwait
sub
jb
repnz
xchg
cmpsl
add
dec
jmp
es
aad
sbb
mov
dec
mov
push
cmc
outsl
push
add
cmpsb
mov
cmp
xor
or
jb
pop
mov
mov
sti
test
in
nop
mov
fidivr
add
mov
and
pop
ret
or
sbb
jecxz
mov
push
xchg
pop
lods
in
loop
jnp
sub
iret
push
std
sahf
daa
adc
mov
sub
jnp
mov
lret
imul
sub
and
dec
inc
in
pop
sti
xor
pop
mov
ja
mov
and
jmp
adc
mov
daa
pop
mov
sbb
mov
xor
lahf
movsl
das
xchg
mov
out
rorl
jb
jge
jo
call
push
fmul
fdivr
cmc
mov
out
insl
xchg
insl
add
sub
jnp
insl
cmp
nop
insl
das
add
mov
push
outsl
daa
into
addr16
sbb
jl
lret
in
pop
xchg
or
sar
mov
adc
and
shr
aad
repz
outsl
dec
fs
sbb
call
and
cli
pop
xchg
aam
aad
inc
out
mov
inc
mov
scas
mov
and
in
lea
push
push
mov
movsl
movsl
insl
out
outsl
pop
push
test
iret
mov
movsb
adc
cmpsl
adc
jb
scas
lods
int
dec
je
fisttpl
rorb
arpl
xor
xlat
cmpb
xlat
loopne
scas
mov
lods
js
sub
shl
repnz
lods
insl
idivb
fwait
rcl
addr16
jg
gs
xor
dec
xchg
call
incb
add
add
call
add
aaa
inc
aas
mov
out
mov
push
push
mov
ret
loopne
sbb
ror
add
push
lret
sbb
cltd
pop
lods
xchg
push
sbb
xor
sub
aas
sbb
insl
lahf
in
ror
lcall
jecxz
fsubrs
sti
add
pop
sti
gs
cmp
lcall
call
imul
and
in
mov
and
jmp
inc
cmc
adc
sub
or
mov
push
incb
dec
jg
or
sbb
out
xor
xchg
leave
repnz
lret
enter
fild
adc
jnp
cmpl
lret
popa
cs
dec
fld
push
cmp
repnz
push
dec
sbb
jnp
sub
push
pusha
or
rcrl
rcrl
out
popf
repz
jno
or
mov
lret
cltd
dec
mov
loope
pop
sarl
scas
repnz
cmc
cs
out
lock
mov
imul
iret
pop
imul
repz
nop
loopne
mov
pop
dec
adc
adc
scas
cmpl
rcll
add
cmp
lret
movsl
rorl
and
sarl
cmpsb
dec
mov
js
shlb
xor
icebp
mov
loop
push
loop
popf
call
pop
roll
sub
sub
fwait
mov
sbb
rorl
icebp
rcrl
jae
xchg
dec
add
cmp
adc
mov
in
and
fidivl
aad
or
out
xchg
dec
int3
mov
pop
mov
and
mov
pop
cwtl
mov
inc
aam
fimul
mov
ds
mov
add
dec
inc
pop
mov
ljmp
push
inc
cld
xlat
or
shll
lods
jae
sahf
adc
push
xor
or
xor
lret
cmpsl
add
test
ja
sbb
dec
dec
stos
cmpb
subl
movsl
mov
test
cmp
push
push
pushf
jno
les
mov
xchg
movsl
cmp
enter
cmp
cmc
adc
das
adc
add
popa
call
jb
adc
jecxz
str
jne
fldt
push
and
mov
pop
xchg
mov
mov
pop
mov
repnz
push
lea
sub
mov
and
fs
add
jg
dec
xchg
add
hlt
loope
rcr
push
adc
xchg
lods
stos
inc
add
push
bound
mov
lahf
sahf
mov
cli
addr16
cs
scas
enter
cmpsb
es
lock
xchg
cli
sbb
je
xchg
inc
std
xchg
jg
jo
push
mov
sbb
cmp
mov
pop
push
and
leave
lret
fwait
imul
and
hlt
fcompl
inc
pop
push
aaa
imul
lock
pop
in
test
aas
sbb
cmpsl
mov
dec
test
pop
cli
jbe
bound
cmp
mov
mov
hlt
loope
jnp
movsl
dec
iret
stos
cli
pop
es
std
enter
ja
mov
mov
repnz
xor
pusha
push
int
sbb
pop
mov
unpckhps
stos
mov
jmp
icebp
push
lods
add
scas
lods
inc
fsts
jmp
out
inc
adc
adc
or
xchg
ljmp
cmp
sub
push
pop
mov
xchg
push
adc
cmp
lahf
faddl
jmp
mov
ficompl
notl
rcr
mov
pop
jno
xchg
lea
xor
xchg
mov
sbb
add
xchg
mov
cmc
les
jnp
jg
in
iret
cmc
call
std
shll
and
dec
loop
leave
lea
sub
mov
or
enter
andb
in
outsb
leave
into
inc
shlb
ljmp
mov
hlt
lret
adc
pop
cltd
pop
adc
inc
sbb
es
dec
jmp
mov
cs
xlat
movsb
jns
xchg
mov
push
adc
mov
xchg
jg
jns
es
xchg
xor
mov
push
mov
push
lea
andb
sahf
dec
mov
and
test
sub
pop
out
mov
sbb
cmp
xchg
das
jnp
clc
lea
out
xchg
cltd
or
int3
mov
sub
jg
out
push
mov
sub
pop
mov
pop
hlt
das
adc
inc
mov
mov
inc
movsb
out
lea
mov
cmp
call
aaa
cmpsl
in
mov
scas
insl
mov
lods
adc
cwtl
or
mov
push
xchg
cmpl
push
hlt
loopne
jecxz
out
add
mov
mov
inc
pop
push
jnp
inc
and
movsb
es
xchg
lahf
js
push
int
adc
sahf
push
movsb
push
add
ss
lcall
jge
jne
jle
sub
aam
ret
cmp
les
decl
pop
push
push
repnz
fwait
aam
lds
add
sarb
test
leave
aad
testl
dec
adc
ljmp
mov
out
xchg
cmp
adcb
outsb
into
lret
sub
out
aaa
or
aad
add
aam
push
cmpsl
or
stos
cmp
mov
inc
insb
inc
and
or
in
sbbl
fs
pop
inc
stc
and
ja
addr16
fdivs
xchg
inc
push
pop
mov
xor
sets
push
popf
sub
cltd
neg
por
addr16
push
and
mov
imul
in
xchg
call
pop
fs
mov
cmp
push
lods
sub
adc
add
push
mov
cmpsl
es
sub
rol
push
jnp
scas
mov
inc
addl
inc
mov
xlat
adc
lods
dec
ja
les
mov
mov
ror
mov
sub
lds
xor
push
jo
jns
push
fnop
sar
push
push
fwait
in
pushf
xchg
cltd
mov
adcl
dec
inc
shlb
mov
je
sbb
push
push
dec
enter
ret
jns
stos
aad
out
test
adc
fcmove
aas
dec
mov
test
fmull
push
pop
into
adc
pop
cmp
jge
inc
and
stos
loop
pop
jle
cmp
loope
pop
pop
ret
push
aas
ja
push
jge
iret
mov
test
xor
pop
jp
cmc
xlat
xchg
hlt
cwtl
cmc
xor
sbb
jecxz
lds
push
mov
push
cmpsb
push
outsb
in
push
or
movsb
push
fisubr
add
fstpl
push
pusha
push
mov
lods
in
or
lcall
ds
stos
jae
cmp
lahf
add
jb
jne
mov
inc
in
mov
pusha
fistl
mov
inc
and
add
mov
gs
jmp
mov
das
and
push
mov
or
rorl
std
pop
outsb
cmpsl
cmp
movsl
inc
mov
push
sub
mov
jle
ss
dec
or
lods
cmp
fdivl
pop
add
sub
clc
dec
scas
mov
int3
xor
sahf
enter
or
js,pn
fnsave
sbb
arpl
add
adc
lods
leave
rclb
sub
mov
push
fxch
jg
mov
or
cmpsb
mov
out
jne
pop
shrl
sub
adc
stos
xchg
adc
mov
mov
shr
jae
sbb
xchg
and
shr
in
sbb
mov
push
pop
xchg
or
or
cmp
vsqrtss
in
jecxz
jle
pop
mov
inc
add
icebp
and
sbb
xchg
inc
jge
cmp
aam
lods
pop
mov
pop
into
ljmp
xchg
scas
hlt
xor
hlt
sub
das
mov
fwait
out
cmp
icebp
gs
sbb
mov
out
or
aad
sbb
iret
dec
fdivrs
add
cmp
mov
repnz
push
and
leave
test
xchg
jne
outsl
inc
or
stos
mov
incl
loope
and
imul
push
inc
mul
mov
push
sub
jmp
mov
mov
arpl
imul
insl
and
rep
shlb
mov
sbb
fnstsw
cld
cld
mov
aad
stc
mov
mov
cmp
inc
mov
fldenv
sub
sub
inc
mov
dec
xorb
loopne,pt
xlat
add
mov
or
jl
pop
sarb
pop
aaa
es
cmp
aam
stos
xorb
roll
jle
and
push
xor
sbb
and
clc
pop
mov
pop
xchg
subl
jg
jbe,pn
lods
pop
cmpsb
imul
fnstsw
arpl
inc
inc
les
rcll
aad
adc
insl
pop
pop
test
fldl
lret
sarb
mov
int
mov
lods
sub
movsb
mov
cwtl
test
ss
lret
mov
aad
imul
inc
mov
fs
cmp
cmp
mov
test
je
and
and
test
lds
daa
mov
addb
dec
push
jecxz
mov
mov
movsl
leave
pop
add
mov
and
aad
and
push
inc
jne
inc
js
push
addb
xchg
push
adc
popf
jg
mov
jge
jge
push
push
mov
push
mov
mov
xchg
int3
lods
and
cmp
int3
pop
cmc
mov
mov
ficompl
jnp
sbb
pop
adc
adc
mov
dec
sub
dec
add
push
push
into
push
lea
jbe
mov
sahf
ret
sub
xchg
in
out
push
lret
push
sub
xchg
imul
mov
mov
sbb
stos
adcl
ret
sbb
sub
pop
cwtl
xor
cmp
inc
pop
xor
push
es
mov
loope
stos
mov
repnz
mov
outsl
adc
out
jmp
add
rcrl
xlat
sub
push
jge
xlat
cmp
mov
mov
or
ret
add
cmpsb
cwtl
mov
xorl
xorl
jp
jae
call
adc
jecxz
dec
sbb
inc
fsubrs
and
xlat
jecxz
sub
mov
xor
imul
repz
dec
mov
je
add
clc
test
jae
xchg
nop
dec
ret
inc
or
ljmp
push
loop
xchg
dec
mov
movsl
cwtl
test
into
in
outsb
das
stc
ret
xchg
ja
inc
ret
lods
mov
addr16
inc
ss
mov
or
int3
push
sarb
jae
jne
je
sub
cmc
mov
ja
jmp
push
daa
in
push
and
jb
push
sti
jb
inc
sub
push
and
sbb
dec
ljmp
fmuls
sbb
mov
and
sub
bound
push
movsb
xchg
ss
sub
shrl
dec
fcmovnu
cld
adcl
sbb
bound
aam
cmpsl
push
sbb
and
aas
int
in
out
aas
or
test
add
or
bound
rclb
sahf
jnp
cmp
and
ret
int3
sub
ds
lea
iret
dec
int3
fisttpl
fs
notl
mov
rcr
repz
addr16
loop
call
push
or
ljmp
inc
icebp
out
cmpsl
in
jmp
popa
jl
xchg
or
std
push
mov
je
and
mov
test
lds
stos
jl
xchg
int3
fwait
add
jbe
gs
mov
xchg
pop
inc
jae
je
adc
aad
cmp
sbb
sub
xorl
outsl
popf
cmpsl
inc
push
aaa
jmp
fsqrt
and
or
fstp
movsb
lahf
jo
icebp
ret
fadds
push
test
lods
div
xchg
cmc
popa
ret
cld
cmp
add
divb
cltd
mov
push
jae
add
scas
xor
jo
cmc
ljmp
push
shrl
cmc
js
jmp
jo
dec
lret
push
lods
lds
push
in
mov
lods
std
lret
dec
in
cli
sbb
adc
mov
mov
fpatan
in
lcall
pushl
jl
cmp
sub
or
ror
ret
lods
loope
mov
fsub
daa
das
test
mov
mov
loope
xlat
addr16
inc
mov
addr16
pop
adc
mov
xchg
inc
aad
daa
inc
xlat
stos
inc
insl
cmc
stos
pop
imul
mov
cli
mov
mov
xor
stc
mov
bound
pop
add
mov
sbb
mov
int
cmpsl
rclb
and
cmp
push
popa
repnz
aad
imul
scas
add
sti
and
inc
mov
addr16
lret
mov
pcmpgtd
mov
sahf
mov
cs
mov
ret
sub
push
popf
lcall
pop
add
scas
lds
push
enter
in
mov
dec
test
into
dec
mov
subl
add
ja
clc
repnz
jle
xor
mov
outsl
aas
and
dec
add
gs
xchg
ja
lea
hlt
dec
rcrl
cmc
clc
les
jle
fimull
fsin
sub
movsb
je
sbb
xor
imul
es
mov
rcr
jle
mov
cwtl
xchg
leave
in
cmp
jbe
mov
jb
mov
cltd
ret
mov
adc
mov
bnd
jecxz
je
shlb
mov
cmc
xor
mov
popa
sti
out
repz
cmc
scas
xchg
fstps
xchg
or
sub
cmc
adc
push
sub
and
push
dec
xor
mov
lock
adc
fisubrl
decb
adc
xchg
fmull
xchg
pop
xlat
cmp
aaa
cltd
inc
xchg
mov
and
int3
cmp
imul
xor
fs
mov
push
add
dec
test
jg
pop
mov
push
dec
popa
fisttpl
jle
fildl
rcll
in
and
xchg
xor
sub
or
jge
stc
gs
scas
adc
scas
mov
fadd
add
sbb
movsl
push
arpl
inc
cmp
aas
adc
lods
int
test
xchg
jae
fisttpll
xor
pop
popf
jl
pusha
mov
cmpsb
push
inc
mov
sti
movsl
push
popf
out
shlb
pop
int
icebp
or
clc
cmpsl
xor
mov
inc
loopne
or
push
mov
test
sbb
mov
outsb
int3
push
jg
mov
leave
cmp
sub
adc
mov
jmp
xor
xor
jp
xor
cmp
out
xor
xchg
loopne
push
lods
dec
roll
mov
leave
das
jns
inc
out
aas
jns
cwtl
mov
pop
addr16
lcall
dec
mov
pop
stc
xor
ret
adc
xlat
rcrb
add
mov
add
cmp
jl
inc
mov
mov
fld
idivl
into
orb
jmp
std
testb
xor
mov
pop
mov
loope
add
pop
call
fwait
pop
shrb
inc
xor
push
test
sub
and
or
xor
pop
rolb
jmp
add
lret
adc
cmc
push
mov
out
or
sub
rclb
movsl
enter
ja
jne
sahf
mov
sub
bound
aad
dec
or
mov
je
test
fstl
imul
fldt
mov
imul
push
mov
jecxz
lahf
ret
loop
into
das
scas
test
rorb
outsb
push
popa
ret
mov
outsb
ljmp
stc
add
jle
fsubs
cmp
xchg
fcmovnb
je
mov
scas
jno
jnp
jbe
cli
daa
sti
sbb
mov
cmc
xor
movsb
cmpsb
sti
mov
mov
dec
daa
test
dec
cmp
subl
repnz
mov
pushf
mov
dec
pushf
testl
movsl
iret
mov
push
test
inc
hlt
xor
sbb
arpl
cmpsl
fisubl
mov
dec
xor
lret
fldenv
pop
cs
xchg
insl
jecxz
xchg
lcall
or
inc
cltd
jbe
sub
mov
pop
mov
and
pop
loopne
push
push
stc
jmp
stc
sbb
pop
mov
fcmovnbe
mov
or
out
mov
sub
fcmove
mov
xor
loope
adc
arpl
shl
dec
pop
xchg
pop
repz
ror
stc
push
inc
out
jno
inc
mov
push
sbb
clc
hlt
push
jbe
push
stc
dec
pushf
pop
mov
mov
lods
push
int3
inc
pop
pop
xchg
add
shr
loopne
xchg
cmpsb
fincstp
jnp
fwait
arpl
push
ja,pt
and
scas
jl
jg
xor
xor
ret
xor
lcall
outsb
xchg
cmp
xor
insl
lahf
in
xchg
mov
jbe
xchg
xchg
jns
dec
add
mov
rol
xor
sub
sub
inc
sub
cli
push
pop
inc
addb
repnz
cld
jl
mov
xor
call
push
lods
dec
fcoml
imul
add
jg
inc
xchg
and
jbe
movsl
movsb
or
call
mov
jmp
lahf
pop
test
jle
lods
leave
add
mov
sub
fildl
stos
and
cmp
mov
push
push
jns
shrb
scas
push
in
divb
and
rorb
mov
int3
std
leave
pop
inc
gs
mov
fcomi
sbb
fild
not
mov
jge
pop
jns
add
inc
xorl
and
mov
mov
stos
mov
and
scas
jge
cmc
inc
sbb
jae
push
scas
pop
jnp
adc
mov
je
add
adc
mov
pop
popf
add
scas
jno
cltd
sbb
cmp
cmpsl
push
scas
jns
lret
leave
mov
or
sub
popf
and
or
mov
mov
pop
scas
ds
pusha
mov
ss
push
ljmp
push
or
sub
out
mov
cmp
jp
cmp
inc
sbb
scas
in
lcall
stos
ss
cld
std
push
sbb
push
xor
scas
stc
xor
sub
nop
add
movb
mulb
add
movsl
xor
rolb
mov
fdivrs
clc
aas
jb
scas
jmp
adc
lods
or
push
neg
mov
pop
mov
frstor
fidiv
lahf
mov
stc
mov
and
pop
scas
jg
push
fucomp
insb
pushf
imull
sub
daa
mov
sbb
aaa
lods
js
je
jno
js
les
les
mov
pushl
adc
inc
cwtl
jp
sbb
stc
cmc
mov
inc
cmc
pop
jmp
jb
lcall
or
sub
cmp
sahf
fldl
jg
xor
cmpsb
ret
sbb
aas
aam
jge
flds
lods
cmp
pop
scas
pushf
ljmp
xchg
test
xor
pop
aas
cmpsl
test
xor
js
loop
iret
test
xchg
add
lock
js
vmovlps
cltd
dec
std
sub
sub
adc
push
and
adc
inc
add
aas
and
push
fcoml
leave
sub
jnp,pt
dec
add
xchg
nop
lock
jecxz
xchg
aam
and
test
pop
push
sub
jecxz
rcrl
pop
dec
sarb
leave
ja
test
xor
xchg
xor
pop
sub
push
mov
lcall
icebp
movl
xor
mov
iret
xor
push
jle
inc
cmp
or
das
push
cli
jle
fstps
mov
mov
repnz
scas
out
and
js
jb
mov
push
xchg
ja
jb
fmul
lss
incl
sahf
out
mov
aaa
loope
jl
ficompl
subb
rcrl
jge
sub
adc
pop
out
push
or
mov
xlat
xor
sbb
or
imul
xlat
dec
fidiv
adc
adc
pop
aaa
ret
pop
shrl
sub
fcmovb
inc
jae
or
aam
dec
inc
scas
mov
mov
push
mov
cmp
sbb
dec
push
les
jae
jp
mov
stos
sbb
push
cmp
sbb
in
gs
jecxz,pt
hlt
mov
push
lcall
jo
mov
lcall
movsl
test
test
fs
or
outsb
adc
fdivrl
push
data16
fsubr
sub
inc
scas
std
nop
mov
inc
sti
and
ss
sub
repz
push
imul
and
andl
or
push
out
dec
lock
fcmovne
in
les
add
insl
loop
cmp
push
push
pop
cmpsl
jmp
sbb
pop
push
out
jg
add
jo
cli
call
in
ljmp
lret
dec
lock
loope
or
insl
mov
cmp
repnz
dec
lods
cmpsb
sub
push
cs
pop
jl
xchg
pop
xchg
or
jns
popa
sbb
popa
pop
scas
and
call
and
arpl
add
insl
xor
fisub
mov
pop
lret
fstpl
stc
xor
sub
ror
push
mov
jg
mov
dec
mov
addr16
dec
xchg
in
fistpll
fsubr
insb
pop
adcl
fwait
inc
dec
stos
inc
in
subl
aaa
sub
es
mov
sbb
mov
xor
mov
int3
lods
jb
lret
mov
jmp
sbb
jge
aad
dec
xlat
xor
jecxz
pop
xchg
pop
jle
popf
out
cs
iret
or
sahf
pop
fmulp
arpl
xor
test
stos
ret
scas
xor
jp
mov
pop
in
repnz
xchg
mov
out
adc
dec
mov
int3
rorb
mov
and
push
push
aaa
jmp
and
mov
mov
sbb
gs
shrb
mov
out
pop
sub
mov
aaa
sbb
dec
imul
dec
mov
mov
fwait
test
jp
push
pop
pop
bound
mov
sbb
dec
dec
hlt
and
xchg
ret
aad
xchg
xor
lods
fisttpl
push
jne
test
xchg
xchg
mov
jne
stos
inc
push
pop
cmp
fistpll
aam
mov
fimull
push
scas
movsl
test
scas
add
xchg
and
cs
cmp
xor
pop
inc
insb
dec
cmp
fwait
mov
xor
aas
fistpll
push
mov
in
imul
ret
popf
test
sub
mov
xchg
or
sbb
mov
push
ret
mov
sarl
mov
add
scas
in
pop
ja
pushf
ds
outsl
inc
xchg
outsl
iret
cmp
addr16
inc
int3
mov
inc
insb
sbb
pop
mov
or
sub
je
ljmp
mov
test
mov
faddl
xchg
scas
popf
push
pop
inc
sub
jo
cs
or
int
hlt
xor
scas
jmp
pop
and
sbb
adc
inc
sbb
dec
sub
mov
test
icebp
push
dec
icebp
aad
mov
outsb
and
add
jg
lock
sti
cmp
imul
test
cwtl
push
mov
jmp
and
mov
in
out
xchg
xchg
mov
push
jns
stos
or
dec
xchg
and
push
fwait
or
paddusw
ds
xchg
int
jo
and
sahf
movsl
xor
and
adc
jp
inc
das
in
adc
hlt
jbe
xchg
mov
pop
std
fsubr
pop
lcall
pop
mov
scas
push
cltd
in
jne
xchg
xchg
roll
stos
stos
cltd
lock
sub
pop
pop
inc
shll
jne
fnstenv
sub
in
push
cmp
sub
fist
pop
fadd
inc
push
jmp
test
ds
jl
jge
xor
mov
mov
add
rcl
dec
jne
mov
fisttp
cltd
mov
insl
fild
jbe
mov
fstps
lret
addl
sbb
sarl
ss
pop
or
jg
cli
xchg
sbb
pop
cmp
enter
jp
imul
loope
mov
cmp
add
push
sahf
iret
andl
jae
lods
lock
mov
pop
test
adc
ja
or
pop
mov
push
push
xor
popa
mov
dec
outsl
or
mov
aam
or
movsb
enter
ret
aad
adc
xor
inc
push
fld
sbb
outsb
add
lahf
je
out
arpl
jecxz
fdivp
cmpsb
dec
andl
push
stos
mov
mov
and
or
test
dec
inc
jo
mov
dec
push
sub
orb
clc
outsl
xchg
ret
ljmp
aad
mov
xchg
jne
mov
and
pushf
xchg
inc
and
out
js
fnstcw
cmc
sti
shr
lret
cmp
notl
in
cmp
cmpsl
jne
cli
and
and
jns
fnstenv
mov
push
icebp
aam
nop
outsl
cmc
sbb
add
mov
test
push
test
xor
push
jecxz
xchg
out
adc
mov
fldt
or
ret
sbb
cmpsb
in
or
nop
sbb
lock
hlt
push
lret
pop
mov
das
call
dec
mov
imul
push
pusha
mov
adc
mov
shrl
stos
call
jge
fninit
outsl
jae
fwait
sub
and
es
push
add
mov
in
pop
xor
scas
xchg
inc
dec
sbb
gs
outsb
rorl
sti
call
andl
imul
sbb
lcall
fcoml
push
ja
cmpsl
fstpl
stc
mov
fwait
cmpl
lahf
cmp
arpl
add
rol
movsb
xchg
xor
test
pop
pop
jecxz
addr16
sub
inc
shrl
sti
icebp
jg
cmp
js
lret
sub
xor
call
roll
push
sbb
out
fdivrl
lret
sub
addr16
xchg
jno
les
mov
cltd
mov
inc
call
inc
mov
test
mov
cmp
mov
push
daa
pop
test
ljmp
jp
int3
inc
stc
out
addr16
cmp
add
nop
sbb
xchg
stos
mov
pop
jp
outsb
xlat
call
lret
ja
cmpl
cmp
add
popa
fcmove
loope
lcall
sahf
subb
movsl
sahf
sub
sbb
enter
rcll
scas
mov
adc
cld
cli
push
push
into
adc
xchg
outsb
pop
lds
jo
inc
fmulp
mov
add
and
inc
or
pop
ja
es
aas
data16
lcall
cmpxchg
ljmp
xchg
mov
dec
mov
clc
pop
mov
mov
hlt
shlb
mov
int
inc
fwait
mov
jp
cwtl
jo
cld
loop
jecxz
push
mov
imul
lods
and
mov
js
jp
push
es
adc
pushf
push
jl
pop
dec
push
xor
cwtl
sbb
xor
push
cmp
testl
xor
repnz
mov
push
inc
xchg
or
dec
jb
adc
gs
fildll
cmpsl
repz
sbb
rcrb
jns
std
mov
push
pop
lret
cmp
fnop
or
cltd
mov
dec
in
aaa
sarl
cmp
adc
movsl
jno
in
stc
pop
push
adc
orl
jge
jecxz
je
fidivrl
fild
mov
int3
jno
inc
add
push
sub
rcr
shrb
mov
fisubl
sbb
or
cmp
shrb
subl
push
sbb
aaa
and
sub
cld
jle
mov
ret
sub
dec
and
popf
mov
cmp
fs
and
addl
frstor
inc
loop
in
cmp
clc
jo
rcr
and
and
ret
cmp
popf
cmp
fstp
mov
and
pop
es
shrl
dec
test
mov
pop
xor
cs
daa
jg
rorb
mov
ficoml
mov
icebp
iret
push
cmpsl
jae
ret
ja
bound
sub
pop
adc
inc
jp
jb
xor
xchg
fs
sbb
xor
xchg
mov
xchg
fdivl
dec
loop
pushf
jb
je
jne
sbb
pop
fstpt
push
loopne
cmp
cmp
xchg
xlat
rcrb
xlat
pop
mov
into
aam
adc
cwtl
add
mov
dec
out
mov
cmp
add
les
adc
mov
mov
cmp
insl
mov
and
das
pusha
cltd
mov
ljmp
scas
iret
es
std
mov
dec
aas
adc
and
jne
sbb
push
jns
dec
pop
push
movsl
ja
ficompl
std
sbb
inc
aas
sarb
jmp
mov
loopne
mul
fldcw
or
insb
jmp
clc
add
out
xor
call
sbb
jle
sbb
push
adc
push
mov
pop
sbb
xor
stc
cmc
push
pop
adc
mull
xor
loope
stc
mov
fiadd
adc
ja
inc
or
xchg
mov
aas
enter
or
or
addr16
jg
into
mov
xor
adc
jl
fisttpll
int3
in
inc
xchg
in
lods
push
mov
lahf
xchg
fnsave
stc
jnp
mov
negl
dec
mov
jno
cmp
mov
fstl
xchg
jnp
ret
mov
lcall
cmc
or
inc
lock
adc
or
push
loope
cmp
fadd
jne
shlb
push
loopne
test
jno
cmp
inc
sbb
cmpsb
jne
sbb
push
scas
mov
mov
int3
sti
add
mov
push
loope
xor
test
push
mov
jne
jno
add
xlat
mov
sub
repnz
push
jge
test
loope
clc
mov
add
cltd
mov
mov
cmc
fsubrp
aad
les
xor
imul
xor
mov
lods
cmp
fisttpl
mov
or
in
into
cmp
dec
push
inc
fnstenv
outsb
mov
pop
daa
pop
dec
call
push
pop
sbb
repnz
mov
addl
in
aam
dec
outsl
movsbl
pop
into
xchg
orb
insb
or
push
mov
enter
data16
nop
adc
test
faddl
ret
add
xchg
mov
rcll
sub
and
cmp
ss
xchg
es
je
mov
jnp
mov
repz
in
or
iret
mov
xor
mov
and
loope
packuswb
mov
sbb
mov
sbb
sub
in
mov
not
addr16
ficomp
loopne
mov
out
xlat
and
je
add
push
jl
mov
or
stos
data16
pop
fildll
sub
scas
cmp
and
arpl
pop
int3
out
loop
mov
fwait
pop
jmp
std
test
pop
adc
enter
xor
divb
pop
je
dec
and
in
xor
mov
js
mov
pop
push
lds
adc
out
ja
dec
ret
mov
ljmp
sub
jnp
pop
push
inc
outsb
mov
cltd
xchg
fdiv
add
aas
out
xor
js
pop
mov
xor
push
pop
in
loopne
add
fiadd
push
push
pop
lea
enter
sub
jb
mov
xchg
mov
push
fcoml
mov
cmp
icebp
xchg
jnp
cmp
dec
insb
cmc
mov
cmp
cmpsl
lock
cmp
lods
insl
mov
mov
mov
ds
aas
rcrl
add
stos
outsb
pop
jae
lcall
jmp
and
sti
jae
fwait
aas
notb
je
mov
inc
imul
lcall
adc
mov
aad
adc
cli
divl
push
pop
cltd
dec
xlat
cmp
insl
inc
mov
mov
daa
imul
mov
fs
and
xor
push
es
imul
xchg
xlat
mov
daa
xchg
es
dec
pop
sbb
adc
jnp
aas
cmp
out
mov
add
cmp
dec
sub
lock
jmp
out
xchg
jnp
and
pop
lahf
sbb
aas
stc
cmp
dec
lods
jbe
pop
enter
push
lahf
movsl
adc
outsl
jl
enter
out
inc
sbb
sahf
cmp
pop
jae
or
iret
cmp
repz
push
std
subl
push
loop
and
lock
mov
ss
arpl
adc
cmp
sar
jb
out
je
cmp
cmp
leave
push
ds
icebp
dec
sbb
adc
sub
add
xor
sbb
dec
rcr
arpl
cmp
fadd
mov
clc
xlat
cmp
daa
jp
push
pop
push
ljmp
cwtl
pop
addr16
sbb
dec
andl
stos
scas
cmp
fs
lcall
xor
pop
ds
or
xchg
int3
push
std
sub
fwait
cs
xor
aas
aas
jae
push
push
int3
xlat
sbb
pushf
jb
push
aaa
and
push
dec
push
into
xor
cltd
addr16
mov
dec
les
pop
sbb
push
dec
add
insl
push
dec
lahf
rcll
push
fidivrl
arpl
movsl
cmp
jg
popf
dec
cmp
arpl
jb
aam
cmp
mov
sbb
jl
repz
sti
into
adc
in
gs
iret
mov
shr
inc
loopne
outsl
jns
mov
xchg
dec
xchg
popl
outsl
jne
fwait
jo
nop
aam
notl
and
sbb
in
cli
adc
mov
xlat
popf
push
aad
clc
sbb
mov
add
movsb
cwtl
leave
mov
mov
push
daa
sub
enter
loopne
out
mov
pop
pop
mov
xor
aad
imul
loopne
or
in
add
pop
pushf
cmc
jl
out
shr
push
push
mov
outsl
addr16
push
or
xor
adc
mov
gs
jb
jno
aam
xor
out
shrl
int
xchg
stos
jne
sub
hlt
pop
fildl
arpl
gs
stos
scas
lds
jecxz
rorl
shrl
sbb
call
and
sbb
rcrb
test
cmp
mov
popa
xor
push
sahf
mov
push
sbbl
push
mov
jne
cmp
cmpsl
push
push
or
cmp
movsl
aam
fwait
mov
aas
mov
mov
adc
adc
in
push
adc
push
jae
fistpl
adc
xchg
lods
mov
or
pop
sahf
imul
or
jp
cmp
mov
sub
inc
inc
mov
lods
test
sub
or
or
push
rcll
loope
mov
sbb
loope
leave
adc
push
iret
jge
dec
push
adc
jo
lcall
push
test
lea
iret
adcl
xchg
add
xchg
inc
mov
jmp
enter
iret
or
mov
imul
repz
cmp
imul
cmpsl
jecxz
dec
mov
in
xchg
mov
popf
and
scas
ret
ds
push
add
dec
xchg
mov
and
or
aaa
pop
fild
aad
xor
repnz
inc
je
aam
pop
fidivr
call
cs
pop
xor
lods
xchg
jno
mov
push
adc
hlt
mov
and
push
lea
das
int3
sub
xor
in
mov
push
jge
repnz
sbb
mov
inc
pushf
push
sub
adc
jae
cld
sub
and
inc
push
lcall
sbb
jge
ret
inc
int
cmp
mov
mov
pop
jb
outsb
js
push
push
out
repnz
pusha
mov
jb
popa
mov
adc
popa
adc
leave
xor
mov
mov
cmp
fdivrl
das
pushf
pop
and
arpl
push
into
cwtl
jno,pn
aaa
imul
jg
js
sbb
cmp
and
int3
adc
aad
roll
insb
pop
test
int3
sub
arpl
sbb
push
outsl
jp
mov
mov
aas
lock
clc
cmc
ja
pop
dec
mov
sbb
inc
mov
adc
outsb
ror
lret
inc
ret
insl
xlat
pop
rcll
les
out
aam
xchg
xor
push
mov
xchg
repz
shrb
xchg
ljmp
xchg
jmp
and
add
add
jo,pt
sbb
or
fldenv
and
mov
dec
mov
jo
pop
je
in
in
lahf
lret
mov
mov
pop
cld
push
ja
adc
pop
push
cmp
mov
mov
lahf
mov
pop
repz
sub
sti
adc
push
push
sub
dec
mov
imul
jne
mulb
aad
adc
adc
cmp
mov
fs
ud2
imul
xchg
pop
fcmovb
pop
ja
xchg
xchg
xchg
stc
out
cmp
xor
adc
les
dec
sub
mov
sub
pop
movsl
mov
push
jecxz
scas
pop
and
mov
ret
sub
movsl
push
push
mov
ror
repnz
std
mov
pop
sbb
gs
and
fsts
ss
cs
inc
mov
xchg
pusha
fs
lock
sbb
popa
call
outsl
jbe
mov
lds
out
lret
mov
cli
data16
insl
dec
fsts
sub
or
fwait
mov
sbb
mov
dec
jae
adc
push
or
dec
rcrb
addr16
popf
push
dec
js
cmp
push
add
loopne
inc
popa
dec
jmp
jne
lods
int
xor
stos
ret
js
xor
js
mov
arpl
xlat
lcall
mov
add
dec
sbb
add
or
pop
push
scas
mov
jge
incb
sub
jno
inc
out
cwtl
sub
add
inc
sbb
xchg
inc
sub
jge
out
inc
ja
decb
inc
mov
mov
fldl
iret
inc
jo
sub
inc
inc
loop
movsl
mov
mov
push
mov
mov
sbb
jno
cmc
jg
std
jnp
div
into
mov
or
out
popa
xchg
in
int3
cltd
xchg
out
pop
jne
sahf
xchg
and
fnop
cmpsb
popa
mov
std
pop
add
push
and
loopne
scas
xor
pop
nop
mov
xor
rclb
mov
sbb
cmc
bound
inc
xor
pop
dec
and
imul
xor
mov
cli
imul
les
sub
test
cmpsb
mov
and
pop
es
outsb
icebp
lds
adc
test
jge
ret
xor
cmp
or
cld
jmp
push
jl
cmp
jge
testb
in
jge
sbb
fistp
test
fcoml
lret
pushf
adc
roll
hlt
es
push
dec
push
sbb
jo
movl
imul
les
dec
js
into
jae
aam
sub
add
flds
mov
mov
lock
jecxz
ja
cmp
daa
popa
xor
loop
mov
loope
inc
movsb
ljmp
lret
stos
mov
loope
xchg
xor
push
sub
push
pop
adc
xchg
imul
jbe
jnp
lods
push
xlat
push
sbb
push
push
in
out
rol
cmp
cltd
jecxz
iret
loopne
in
mov
mov
je
lret
adc
aam
dec
rorl
lea
aam
or
arpl
arpl
test
sub
jmp
dec
mov
xor
push
rcr
cltd
and
adc
testl
sub
or
out
fsubrl
sub
and
cltd
cmp
test
push
popa
inc
or
xchg
push
cli
repz
push
mov
int
push
xchg
sub
pop
lret
push
push
mov
sub
push
push
jg
ficomp
fimull
mov
stos
mov
add
mov
push
bound
test
push
lds
xchg
loopne
inc
and
pop
jns
out
dec
ret
jno
xor
dec
data16
call
enter
xchg
fisttpll
xchg
sbb
inc
outsb
mov
movsb
test
push
adc
mov
pop
insl
inc
es
fwait
and
dec
jnp
je
sbb
mov
mov
lret
fnstsw
add
lods
das
popf
mov
into
add
mov
lahf
aas
in
fwait
jmp
sub
pushl
ja
daa
push
xchg
test
test
cli
mov
movb
push
scas
ret
cmp
cmp
xchg
nop
andb
out
inc
push
mov
sub
mov
cmp
mov
insb
jns
in
icebp
je
xor
sbb
dec
sti
jo
repz
dec
sbb
push
cmp
or
bound
popf
sbb
fdivrl
in
loop
sub
mov
jecxz
xchg
mov
loop
cltd
bswap
scas
aad
fstl
adc
pop
fmulp
loope
push
inc
adc
mov
ret
divb
test
inc
je
sbb
f2xm1
clc
push
or
jbe
dec
mov
lahf
ror
pop
mov
incb
ds
push
and
pop
cmpsb
ffreep
test
push
ds
push
pop
jb
in
pop
xor
mov
push
into
xchg
mov
pop
int3
insb
jle
outsl
cmp
aam
push
xor
insb
out
das
mov
pop
mov
inc
cs
enter
fstpl
pop
sbb
cld
in
fidiv
jo
mov
roll
xlat
xchg
and
leave
jg
unpckhps
notb
daa
test
sub
push
fs
mov
jne
or
mov
and
arpl
mov
jb
jo
add
orl
cli
pop
xchg
imul
dec
sbb
and
sub
lcall
pop
xlat
sub
jge
test
sbb
mov
sub
dec
arpl
out
dec
pop
adc
and
or
lret
das
xchg
xlat
jae
ret
scas
or
loope
lret
or
hlt
lods
aam
cmp
sahf
out
push
inc
push
sbbl
fwait
inc
insb
fsubrl
xor
adc
iret
xchg
sub
mov
xor
dec
push
xchg
xchg
mov
mov
insl
loope
ret
ljmp
test
pop
clc
push
dec
jp
mov
movsl
lret
in
add
gs
test
mov
lods
fisttpll
pop
in
out
jae
jbe
inc
sahf
push
mov
inc
xchg
repnz
ss
int
leave
or
adc
jecxz
rol
cld
jnp
adc
jle
ret
jge
xor
stos
lret
pop
in
arpl
and
cmp
out
xlat
adc
loope
push
adc
aad
xchg
mov
loope
insl
hlt
mov
lods
dec
mov
or
mov
inc
jl
pop
pushf
insl
mov
mov
jns
fwait
cmp
lock
sbb
add
aaa
and
nop
mov
js
aas
data16
fxtract
xorl
pop
loopne
cmp
fldenv
mov
enter
fcom
mov
xor
jne
pop
int
pop
inc
xchg
cmpsb
test
dec
fadds
stos
inc
iret
mov
jbe
mov
jno
testl
in
shlb
aas
mov
push
cmpsb
push
push
xchg
cli
ficoml
lret
push
fcmovnu
inc
push
rcll
jnp
lock
pop
je
fstl
lea
ljmp
inc
incl
fwait
repnz
in
pop
sub
jp
out
lcall
mov
push
leave
hlt
icebp
into
leave
out
add
jecxz
cmpsb
jnp
js
sti
cmp
push
cmp
cmpsl
imul
sti
mov
mov
lock
dec
pop
mov
sub
cmc
sub
stos
xor
push
or
in
stos
sti
int
mov
fisubr
push
jge
je
out
loop
dec
call
xchg
dec
jl
sbb
push
movsl
pop
xor
pop
push
adc
nop
mov
dec
add
mov
aad
fisubl
lods
dec
cmpsl
mov
js
ljmp
sub
fildl
scas
adc
fist
insb
xor
adc
cmc
xor
xor
mov
push
lret
fistp
pop
jno
xchg
bound
out
xchg
dec
and
push
cli
sahf
mov
jmp
repnz
mov
test
mov
and
iret
and
inc
jecxz
fsub
cmp
hlt
sbb
sti
mov
es
ljmp
push
or
loop
inc
xchg
or
jmp
pushf
dec
mov
das
inc
mov
cmpsl
iret
fisubrl
lcall
rclb
cmp
es
mov
emms
xchg
dec
movb
cmp
and
cmp
sbb
ret
lahf
stc
xchg
mov
les
push
mov
mov
cmpsl
push
jmp
push
leave
popf
bound
movsb
in
data16
pop
and
jbe
push
mov
xchg
outsb
in
js
xchg
push
test
xchg
add
or
lea
jmp
decl
push
enter
ret
xchg
loopne
in
jb
and
and
push
pop
lretw
icebp
out
fwait
cmp
cmp
jae
sub
mov
adc
dec
es
test
scas
pop
or
imull
push
inc
adc
inc
je
loope
mov
aaa
cmp
mov
cmp
iret
repz
das
mov
fsubrs
jmp
gs
jae
shrl
mov
mov
push
imul
or
cld
mov
int
jbe
cmc
pop
sub
sub
mov
insb
je
inc
ss
imul
gs
in
push
fistp
pop
inc
adc
imul
scas
adc
lahf
loope
fldln2
pushf
xor
hlt
ret
jp
sub
sub
mov
test
sub
xchg
out
push
jne
shrb
inc
mov
mov
xor
cmpl
insl
xchg
daa
inc
cmc
ljmp
add
aas
call
lret
call
xchg
inc
call
clc
imul
mov
add
loop
std
insl
or
daa
add
sti
add
dec
clc
or
mov
je
das
dec
outsl
ja
xchg
cmp
das
insl
jle
hlt
fcompl
scas
jmp
hlt
stc
xor
lret
pop
lods
cltd
lret
cltd
sbb
mov
fildll
cmp
sub
incb
arpl
cmpl
mov
dec
dec
xchg
mov
jge
hlt
fnstcw
cs
sarb
pop
lret
sahf
addr16
mov
or
inc
rorb
mov
dec
out
lods
dec
push
push
cmp
jecxz
fisubl
nop
mov
cli
fisttpll
jae
jmp
jl
test
cmpsb
cmp
jnp
dec
cmp
sarb
fist
mov
dec
mov
cmpl
pop
adc
lret
pop
int
mov
xor
mov
mov
jno
std
push
dec
das
add
fwait
incl
or
jnp
lock
pop
punpckhwd
jmp
or
cmpsb
inc
les
fwait
orl
pop
enter
sbb
ss
or
adc
das
lods
insl
push
cli
das
cli
add
inc
ss
xchg
out
cs
inc
in
loop,pt
mov
fnstcw
or
dec
test
loopne
mov
add
aad
xchg
ret
subl
addr16
ret
mov
movsl
dec
jne
stc
loopne
cmpsl
and
jns
jecxz
push
out
xor
xor
jle
nop
cmpsb
push
xor
jmp
call
xchg
push
int
dec
inc
inc
pop
popf
push
hlt
je
jmp
adcl
icebp
adc
xchg
mov
push
sub
outsb
xor
push
inc
leave
pusha
add
imul
dec
imul
push
push
fcomp
lahf
aam
and
mov
cmp
mov
dec
xchg
pop
and
pop
and
lods
jmp
xor
movsb
js
sub
rorb
push
pop
pop
jnp
cmp
les
adc
into
sub
inc
jmp
and
loope
jno
test
xor
addl
test
sbb
int3
inc
aam
dec
mov
mov
das
mov
imul
gs
mov
jns
std
mov
cmp
dec
xor
lock
jbe
cmp
lahf
out
psubusb
mov
dec
xchg
popf
push
std
test
mov
sub
add
shrl
cmc
cwtl
mull
imul
pop
add
pop
cmpsb
orb
ljmp
mov
jl
mov
dec
inc
xchg
jle
adc
adc
mov
in
stc
sbb
stos
xchg
popa
data16
fs
out
ficompl
dec
mov
out
rclb
add
mov
repnz
dec
inc
mov
cmpsb
push
sbb
mov
imul
popa
fwait
xchg
aaa
stos
in
cmpsb
insb
insb
jecxz
pop
and
or
in
inc
nop
inc
mov
imul
push
loop
cmp
jo
call
fiaddl
sub
mov
jg
xor
jle
mov
adc
dec
sbb
pop
iret
shlb
js
jae
mov
xchg
push
xor
sbb
or
repnz
mov
loopne
clc
enter
pop
fcompl
dec
movl
insl
or
mov
cld
mov
ret
cs
xchg
sbbl
sti
lds
push
sub
xchg
out
fist
sarl
add
aas
mov
push
adc
mov
adc
mov
mov
test
cmp
cmc
push
stos
dec
scas
mov
pushf
xchg
nop
jne
xchg
pop
dec
pop
xor
fcomps
out
insl
inc
out
sahf
sub
cmp
mov
divl
dec
cmp
pop
inc
inc
je
push
jge
aam
jns
pop
std
xchg
ja
scas
cld
push
lcall
dec
push
pop
stos
xchg
and
jbe
adc
call
mov
pop
call
rcrl
xchg
std
lret
fs
push
sbb
addr16
xor
test
and
xchg
jecxz
xchg
in
std
jecxz
pop
pop
loope
dec
adc
xorl
add
jle
cmp
cmpsl
jae
push
push
mov
fwait
repnz
ficompl
into
icebp
xor
je
add
std
inc
cmp
lcall
imul
out
cs
and
insl
inc
dec
and
jecxz
jbe
xchg
int
push
roll
sarl
gs
call
fucomip
repz
xchg
mov
jl
in
test
dec
jb
xchg
outsb
clc
test
xchg
mov
testl
dec
shr
dec
call
fdivrl
xlat
xchg
sub
pop
adc
cmp
cltd
adc
fidivrl
sahf
fisub
cmc
mov
arpl
aas
sub
pusha
enter
inc
lret
adc
int
mov
dec
and
shrl
leave
out
enter
add
mov
jl
pop
popa
and
add
mov
push
pop
push
jle
jns
jge
fbld
mov
outsb
les
fisubr
xor
adc
and
arpl
push
in
imul
pusha
test
jae
and
frstor
jno
xor
xchg
mov
pop
imul
scas
sub
test
insl
sti
maskmovq
idivl
dec
fidivr
mov
cmp
push
call
jecxz
push
cmp
outsl
sub
loope
or
jmp
or
das
iret
mov
movsl
push
pop
xchg
loop
cltd
adc
bound
inc
les
xchg
aaa
mov
mov
pushf
dec
add
sti
or
push
sub
adc
jbe
jbe
fcmovnu
in
mov
add
lods
xlat
or
repnz
dec
scas
jae
add
inc
xor
inc
loope
in
mov
rorb
mov
jnp
es
in
and
cltd
add
inc
adc
lods
xchg
test
xor
repnz
mov
mov
sub
es
or
lahf
lods
jbe
inc
cli
inc
adc
daa
or
arpl
adc
xchg
cmc
test
out
push
jbe
cmpsl
ret
movsl
popl
aaa
repnz
pusha
in
ds
ret
loope
cmp
sbb
outsl
push
jno
fidivrl
jle
push
xor
inc
and
adc
cli
push
fnop
loopne
fsubs
xchg
std
out
push
jo
mov
div
inc
jl
shrb
les
into
jne
and
jmp
jnp
ss
add
pop
insb
cmp
cmpsb
dec
add
jbe
inc
jmp
add
sahf
fisubrl
sub
xchg
clc
cmp
out
roll
jno
movsb
rcrb
xor
mov
imul
jnp
cmp
in
adc
sti
test
or
scas
sub
jns
adc
hlt
mov
test
mov
test
inc
push
mov
and
movsb
jne
enter
xchg
jmp
xor
jo
jbe
js
mov
fildl
rcrb
dec
mov
dec
jae
push
push
outsl
cmp
xorb
sahf
adc
inc
and
xor
and
icebp
fild
std
mov
sti
sbb
lds
jge
lock
roll
sbbl
mov
imul
adc
stc
sub
sub
jmp
adc
ljmp
mov
jne
inc
and
faddp
je
ret
adc
outsb
std
jp,pn
cmp
mov
push
add
test
push
or
aaa
mov
enter
mov
pop
mov
push
lret
bnd
and
cmp
mov
imul
add
push
pop
sub
mov
add
mov
outsl
sbb
sbb
dec
cmc
ret
add
cmpsb
or
sub
cmp
das
pop
mov
ds
push
pop
pop
mov
mov
pop
sbb
in
adc
pop
cmp
sub
das
adc
adc
mov
gs
mov
sub
and
or
and
or
add
jle
adc
int3
loop
movsb
adc
inc
movsl
xchg
les
sub
jl
jmp
jo
adc
in
pusha
mov
sub
jp
sub
pop
mov
sahf
sbb
xor
mov
cli
rcll
mov
jb
loope
sti
out
pop
mov
mov
out
andb
gs
and
push
add
and
inc
les
xor
jbe
or
push
aaa
aas
test
sbb
push
in
loope
dec
imul
push
mov
imulb
mov
mov
mov
xchg
fild
xlat
sub
aaa
lock
xchg
xchg
pop
sub
daa
ret
loope
cmp
test
into
xchg
negl
idivb
push
or
sub
jno
mov
xor
test
inc
jnp
inc
stos
test
fs
mov
dec
packssdw
jbe
cmpsb
out
lea
mov
jmp
pushf
sbb
jp
dec
inc
mov
push
push
mov
mov
andl
mov
lock
cld
mov
dec
jl
mov
stc
pushf
push
int
es
cmc
outsl
ret
leave
xor
xchg
movb
scas
scas
add
hlt
jne,pt
into
mov
loop
xchg
in
ljmp
pop
or
xchg
repz
ljmp
arpl
dec
addr16
push
pop
cmp
xor
call
mov
pcmpgtd
jp
fmuls
out
repz
cmc
xor
inc
mov
mov
scas
mov
xchg
mov
outsl
push
xchg
lcall
xchg
and
jp
loopne
adc
jno
loope
mov
lcall
mov
push
imul
popf
hlt
dec
sub
aam
jo
lods
cmpsb
mov
cwtl
cmp
push
xchg
enter
adc
aad
imul
or
push
mov
dec
cs
add
push
push
jg
xchg
adc
or
add
faddl
faddl
adc
inc
adc
inc
ljmp
adc
inc
adc
cmp
mov
mov
and
or
mov
xchg
jbe
mov
fstp
aaa
jae
sub
int
iret
sbb
mov
fs
lods
leave
dec
fmulp
ss
pusha
in
imul
insl
aaa
xchg
movsl
dec
xchg
aaa
sub
dec
mov
mov
jb
fcoml
scas
in
mov
in
test
sar
das
jl
dec
fistpll
sub
stos
jl
call
push
out
out
out
jl,pt
lcall
sti
out
iret
out
xchg
and
lds
cmp
fadds
sub
into
int3
aaa
pop
shll
inc
arpl
sbb
mov
loopne
xchg
fistpl
les
push
sub
xor
add
scas
inc
daa
test
stos
and
ficompl
xchg
pop
push
cmp
jl
mov
xchg
push
gs
idivb
xor
xchg
jne
pop
mov
lods
into
int3
xchg
aad
inc
pop
mov
add
add
fcomps
cld
push
test
popa
mov
outsl
push
xchg
mov
jbe
mov
cmovle
mov
mov
push
js
cld
in
call
cmp
mov
in
movsb
pop
xlat
fstl
sbb
mov
jne
ret
push
rcl
sbb
sar
mov
out
mov
js
push
test
js
imul
inc
jns
xor
je
sahf
dec
cmp
add
test
pop
mov
mov
daa
fnstcw
roll
pop
mov
cmp
jmp
xor
pop
cmp
xor
jl
xchg
push
pop
push
push
cmp
loope
sahf
scas
mov
pop
xor
and
xchg
sarl
jge
nop
jae
add
xchg
jp
mov
dec
mov
xchg
mov
int3
jecxz
outsb
cli
in
mov
ds
cs
mov
inc
mov
pop
mov
push
lods
sbb
pop
jl
mov
and
stos
ret
into
xchg
xchg
inc
and
push
mov
push
push
decl
or
lods
cltd
and
add
in
inc
fs
xor
pop
mov
test
inc
mov
and
sahf
mov
jne
ss
add
cmp
test
or
jns
lods
push
xchg
fsubs
enter
mov
cmp
jge
or
fldcw
mov
adc
sbb
test
test
mov
push
test
es
mov
inc
into
inc
fsubrs
notl
xchg
hlt
lret
std
mov
add
cmp
xchg
mov
mov
clc
xor
and
and
push
faddl
nop
bound
mov
orl
xchg
inc
xlat
hlt
dec
mov
adc
xchg
int
iret
xor
or
jo
adc
pop
inc
cmp
ficom
jle
pop
xchg
mov
add
test
out
lods
xchg
sbb
fstpt
or
lea
adc
aam
nop
pop
mov
cwtl
dec
sti
mov
or
xchg
lea
mov
jno
push
push
dec
into
lret
xor
mov
cmpsl
cld
in
fcomp
dec
ret
outsb
test
outsb
lcall
ja
push
adc
adc
je
ja
dec
mov
js
rcrl
mov
dec
pop
cltd
shrl
jne
ficoml
sbb
cmp
jbe
pusha
sub
outsb
das
jg
jnp
xor
push
mov
lret
dec
xor
dec
push
push
mov
add
fisubr
cwtl
rorb
jo
add
test
cmp
sarb
les
pop
shr
lret
xor
pop
lcall
xorb
pop
inc
std
xor
lret
arpl
mov
std
mov
mov
stos
jecxz
push
orl
decb
lret
sub
fcomps
in
mov
mov
lcall
cli
sub
pop
test
cmpsl
or
mov
push
push
jb
inc
arpl
push
cmp
cmpsb
repz
xchg
arpl
fistp
mov
mov
sub
jl
arpl
sbb
inc
cmp
push
fimul
notl
sub
jecxz
loop
mov
mov
test
mov
mov
push
push
movsl
pop
test
lds
out
popa
dec
loop
sahf
ret
cmp
cmpsl
cmpsb
cmc
mov
mov
push
mov
mov
scas
fnsetpm(287
pop
in
sub
xchg
mov
cmp
xchg
dec
movb
jb
jmp
lds
in
fs
push
xor
jl
mov
mov
out
sub
or
inc
cli
or
xor
mov
and
pop
les
loope
xchg
outsb
push
mov
int3
dec
imul
sbb
icebp
dec
in
jmp
stc
xor
mov
sbb
mov
xchg
fidivrl
inc
nop
lea
xchg
adc
push
cmp
mov
mov
mov
sarb
fwait
pop
dec
aad
jno
int
pop
ss
inc
mov
ds
adc
popa
pop
push
repz
ljmp
inc
mov
mov
xchg
test
xchg
rcrl
loopne
rolb
and
jns
loop
push
sbb
pop
push
or
loope
jae
dec
loope
test
mov
dec
fistpl
pop
leave
das
push
out
or
mov
mov
cs
lods
loopne
stos
lret
or
sub
mov
movsl
jecxz
aad
shll
movsl
mov
pop
or
subb
popf
fpatan
xchg
push
enter
jns
jl
aas
arpl
xlat
mov
popf
add
inc
xor
mov
stos
adc
mov
or
lcall
mov
pop
adcb
inc
pusha
xor
dec
arpl
fwait
lock
or
jno
aad
jp
jnp
fcoml
xchg
push
fisubl
sub
jae
aad
mov
sub
movsl
bound
add
mov
stos
out
jo
daa
enter
mov
fsub
in
adc
xchg
mov
loopne
out
inc
or
stos
pop
arpl
push
rcrl
cmp
pop
cmp
sbb
jmp
cltd
shrl
mov
pop
pushf
inc
insl
push
leave
mov
push
add
xor
ret
insb
fdivrs
push
inc
sbb
ds
out
leave
hlt
out
adc
xor
sbb
imul
push
sahf
leave
xchg
or
enter
jmp
loope
jmp
ficompl
push
pop
orb
jo
and
add
push
sub
fisub
cs
stos
ficompl
out
mov
mov
rcrl
xchg
movsl
inc
repnz
mov
xchg
popf
lds
fsubrs
leave
aam
dec
push
mov
xor
xor
xor
push
pop
push
or
dec
push
add
std
push
sub
pop
sub
dec
mov
inc
dec
mov
movsl
into
dec
push
test
repz
ret
xchg
and
les
sub
push
out
adc
fwait
aad
enter
adc
dec
xchg
dec
lcall
dec
mov
ret
mov
adc
pop
nop
and
ss
jmp
and
dec
sbbl
dec
sub
ds
jb
cmpsb
arpl
mov
push
cmp
enter
icebp
mov
jmp
sti
mov
sbb
dec
dec
dec
nop
pop
pop
cwtl
jnp
lret
mov
imul
push
mov
cmp
test
xchg
or
idivl
xor
ret
pushf
mov
test
add
mov
fstps
leave
sub
pop
cmp
pushf
in
push
cltd
pushf
lret
sbb
aad
scas
out
xchg
inc
lds
movsl
js
or
cmpl
fsubl
mov
mov
rcll
or
aam
cmpsl
call
sub
cmc
ja
add
push
add
and
pop
shll
mov
cmp
rcll
int3
dec
and
xor
sub
and
mov
push
xchg
ljmp
lcall
scas
push
sub
cmpsl
lock
mov
rcl
repnz
int3
sbb
pushf
push
xchg
push
out
loop
pop
and
inc
dec
test
or
and
pop
adc
aad
jns
jge
inc
xchg
dec
xchg
and
shl
daa
in
cmp
xchg
inc
mov
inc
mov
jge
jmp
fimull
push
jmp
mov
ljmp
jo
in
add
inc
or
xor
shrb
into
xlat
insl
adc
push
mov
jle
sub
mov
daa
imul
add
inc
sahf
cmc
push
mov
mov
push
and
xchg
inc
je
scas
nop
mov
mov
in
push
rorl
ret
mov
pop
pop
mov
fs
inc
lcall
cmpsb
mov
lds
mov
outsl
sub
xor
imulb
loope
shl
sub
cltd
inc
inc
inc
cmp
mov
mov
dec
shl
add
test
push
fucom
aam
inc
mov
roll
in
pop
cmp
ret
pop
aas
jnp,pn
add
cmp
movsl
loope
outsl
stc
mov
sub
add
xor
push
sbb
sbb
daa
inc
jp
sbb
inc
movsb
mov
mov
and
cmp
inc
icebp
icebp
cs
scas
jne
nop
mov
mov
mov
dec
loopne
outsl
push
mov
xchg
ret
test
call
push
push
cmp
push
out
and
cmpsb
push
and
aam
pusha
cltd
and
pop
addr16
push
shr
popl
cltd
inc
mov
aad
mull
sbb
jnp
pusha
nop
push
push
lret
leave
cmc
xlat
test
pop
popf
jmp
in
sub
fwait
lcall
enter
push
int3
rcrl
dec
push
enter
stc
dec
lcall
xor
shrl
jnp
mov
mov
dec
shlb
scas
xchg
out
roll
mov
cli
pop
or
incb
pushf
scas
add
push
pushf
je
jae
je
and
sub
mov
sub
dec
cmpsl
mov
in
xchg
and
cs
gs
into
jne
lcall
push
adc
outsl
inc
inc
pop
inc
pop
mov
push
imul
adc
mov
addr16
mov
je
jns
adc
je
adc
jge
cli
xchg
jae
mov
adc
dec
mov
sbb
in
das
cmp
test
sub
and
cmp
scas
sub
jmp
mov
cmp
sbb
add
or
xchg
out
mov
fiaddl
or
mov
push
mov
jmp
push
push
or
out
ja
xor
out
loopne
cmp
cmp
mov
adc
and
and
pop
mov
cmp
sbb
dec
jg
mov
jmp
fisubl
sbb
into
lock
inc
and
cmp
xchg
out
jge
inc
pop
add
and
lea
test
test
adc
out
add
sub
jns
pusha
jo
jmp
pop
cmp
and
dec
aad
mov
stos
cmp
xchg
ljmp
lret
shrl
mov
js
jne
nop
clc
cmp
cmpl
cwtl
inc
stos
cs
sub
fwait
scas
push
shll
push
pop
outsl
cmp
pop
frstor
and
pushf
inc
xor
sahf
xchg
in
xchg
sarl
mov
push
daa
imul
mov
mov
imul
imul
xchg
mov
jne
arpl
sbb
mov
xor
lcall
fdivs
enter
leave
dec
inc
pop
call
or
mov
sti
je
mov
mov
stos
jp
mov
bound
xor
pushf
movsb
or
cwtl
and
push
sub
loop
jmp
mov
push
push
leave
mov
dec
dec
insl
inc
lds
or
int3
test
push
jb
cs
cmp
sarl
mov
in
or
jmp
fs
xor
adc
mov
out
shrd
xor
cs
push
push
mov
outsl
fcoms
fwait
stos
cmpl
or
jmp
cs
aam
and
cmp
pop
dec
sahf
out
out
or
cwtl
flds
jae
fsubrp
push
leave
sub
popf
mov
xlat
loope
xchg
dec
xor
or
mov
adc
mov
or
cmp
add
sub
and
ret
arpl
pop
lea
sbb
push
fdivl
or
adc
insl
pop
and
in
rolb
mov
xor
iret
or
xchg
mov
jnp
or
lock
ljmp
add
pop
xchg
sbb
mov
cmc
shlb
inc
lods
aaa
adc
xchg
sti
imul
stos
jp
les
jns
je
fcoml
xor
push
inc
xchg
dec
movsb
ss
pop
insl
sbb
jbe
mov
push
mov
xor
mov
test
inc
or
mov
fmull
mov
pop
xchg
scas
jb
pop
jnp
into
in
jo
inc
add
clc
cmc
sbb
js
xchg
or
pop
fcomp
adc
mov
test
test
lret
outsl
jmp
jo
cmp
lds
sub
jl
movsb
mov
clc
jae
sub
and
outsb
scas
mov
inc
cwtl
sbb
jmp
jb
sub
xchg
subl
out
lcall
cld
insb
inc
cmp
jmp
ret
xor
ja
adc
mov
adc
xor
lods
cmpsl
shl
cwtl
and
enter
out
out
or
dec
cmp
mov
adc
xchg
insl
movsb
jb
fiadd
std
jns
fcmovnb
scas
sub
xchg
cmpsl
daa
fstps
rcll
jbe
jmp
push
mov
add
sbbb
mov
push
mov
dec
push
or
xor
or
jae
insb
xchg
xor
push
mov
push
bound
cmp
xor
pop
int
and
adc
jnp
sbb
add
mov
push
and
lods
jle
xor
stos
ret
cmp
cld
or
mov
lret
inc
mov
xor
imul
ds
call
test
xlat
pop
add
push
xchg
ss
rorb
push
out
out
rcr
push
aam
xchg
popl
jmp
loop
sub
dec
fld
gs
xchg
sub
in
sub
jecxz
ret
shrb
into
nop
pop
and
jp
ret
sub
cmp
and
adc
pop
inc
jns
fstl
js
fstps
imul
outsb
lret
push
sti
std
mov
pop
int
cmp
cwtl
sub
enter
sar
or
push
xlat
push
mov
pop
pop
push
cmpsl
dec
sub
cmp
popf
xchg
ss
or
or
idivl
adc
dec
mov
dec
aaa
jno
dec
fxam
inc
leave
mov
fisubl
dec
int3
push
add
push
sub
push
jmp
mov
sbbb
int
jb
andl
mov
ret
movsb
out
les
icebp
inc
mov
push
and
cvtpi2ps
test
lcall
dec
gs
test
cli
mov
inc
inc
push
xchg
incb
or
cmc
bound
cmp
leave
lahf
dec
jecxz
cmpsb
mov
in
pop
add
jg
inc
cmp
daa
add
jp
inc
insb
mov
sbb
push
push
out
cmp
lods
pop
sahf
cpuid
adc
jp
push
in
test
jae
test
mov
pop
in
jecxz
mov
mov
pop
push
ja
push
dec
fwait
imul
mov
ljmp
inc
mov
shrl
mov
and
jae
xacquire
in
sub
dec
inc
xchg
jmp
int3
data16
xchg
and
fsubrp
enter
mov
imul
insb
pop
or
cmpsl
fist
shr
movsb
jnp
xlat
imul
hlt
xor
pop
pusha
dec
xchg
or
lret
outsl
or
stos
and
scas
add
mov
testb
or
daa
aam
push
frstor
add
jle
cmpsb
or
and
xor
sbb
mov
lahf
gs
mov
and
push
cmp
pop
lahf
push
fs
inc
out
movsb
sbb
inc
lcall
mov
lahf
push
cmp
xorb
ss
in
sbb
imul
adc
rol
or
add
xchg
mov
les
sub
lea
adc
cld
dec
ret
jne
dec
jb
sub
dec
gs
repz
adc
scas
jo
mov
xor
adc
ss
pushf
add
add
inc
movsb
les
pushf
xlat
sbb
lea
dec
cmc
les
lock
add
pop
sub
enter
pop
loopne
cs
aas
mov
and
mov
sub
pop
cmpsb
stos
and
fldenv
xor
pop
fisub
jbe
ret
lret
loop
xchg
les
jne
das
movsl
xor
fiadd
mov
fcomps
data16
jge
adc
sbb
xor
and
inc
enter
in
adc
mov
dec
leave
insl
sbb
arpl
inc
mov
daa
ja
cmp
adc
sub
and
mov
dec
adc
cmp
andb
xor
adc
xchg
imul
jns
in
dec
and
adc
mov
ret
pop
in
aas
lret
ret
aad
fisub
into
scas
jo
test
out
mov
jno
leave
out
getsec
cmp
mov
xor
loopne
sub
cs
jp
into
mov
push
fldenv
sub
shll
sahf
sarb
dec
push
cwtl
je
fcmovnbe
pop
mov
jbe
jbe
lret
outsl
xor
clc
popa
mov
pushf
dec
pushf
pop
mov
ljmp
add
ss
out
push
pusha
or
test
lret
mov
and
sub
mov
dec
jae
push
outsb
ficom
fdivp
jnp
imul
dec
inc
xor
lods
lcall
sarb
push
jbe
loop
mov
push
cmp
mov
xor
arpl
dec
cltd
push
into
lock
aaa
jge
popf
or
popa
mov
pop
and
imul
mov
ss
dec
sbb
scas
outsl
mov
mov
pop
je
cmp
jne
cltd
call
xchg
lods
adc
push
sbb
inc
nop
loop
lods
pop
lds
or
or
cmp
stos
popf
mov
mov
xor
lahf
ret
inc
aam
nop
in
pop
lahf
xchg
fsubs
add
mov
pop
or
cmpsl
aam
and
mov
jg
push
loopne
inc
sub
outsl
jmp
fbstp
bnd
test
inc
cmpsl
test
movsl
inc
push
fcomps
jge
inc
fdivs
jge
scas
inc
aas
cmp
push
push
jp
mov
ja
stc
mov
lock
mov
inc
adc
inc
pusha
jge
add
aas
popl
push
mov
fsubl
in
mov
fsubs
int
xchg
jmp
or
xor
sbb
iret
fsubs
mov
inc
aad
das
leave
cmpsl
push
cmp
arpl
sub
mov
adc
addr16
test
push
hlt
inc
or
jnp
cltd
dec
add
jmp
xor
cmp
and
loope
lock
js
movsl
xchg
sub
sub
add
lret
out
sahf
sbb
inc
push
fcomps
push
mov
xchg
mov
dec
inc
push
movsb
das
xchg
cmp
lods
js
inc
mov
mov
xor
dec
cmc
cmp
movsl
aas
jo
dec
xor
jns
stos
ljmp
test
stos
inc
xor
jp
add
adc
or
aam
int
scas
sub
pop
xor
jge
ljmp
rcrl
sub
out
add
lods
enter
mov
inc
jle
jno
push
mov
subl
adc
adc
adc
jbe
xchg
js
insl
scas
push
ret
je
stos
and
mov
dec
pop
in
or
inc
notl
fimull
push
stos
sub
mov
data16
xor
arpl
imul
rorb
lods
pop
mov
mov
add
ret
push
mov
stos
jae
jbe
loop
enter
mov
cmp
jbe
movsb
pop
dec
sub
mov
lock
dec
jecxz
dec
dec
cmp
mov
mov
sbb
pop
lahf
int3
mov
push
sbb
push
mov
mov
push
imul
outsl
sbb
stos
aaa
loopne
cmp
mov
insl
jo
sbb
pusha
repz
insl
insb
push
push
mov
mov
int
outsb
jge
and
hlt
push
sub
outsl
cs
nop
sub
lods
cwtl
fwait
cltd
dec
sub
arpl
rorb
or
outsl
ficomp
pop
mov
xor
test
imul
sub
out
into
and
sub
pop
lds
add
mov
popa
sub
repz
lods
pop
xchg
or
insl
inc
bound
mov
add
pop
pop
xor
stos
sub
test
mov
sbb
in
xchg
das
and
xchg
clc
sbb
add
add
movsl
mov
pop
and
pop
adc
or
pop
mov
pop
mov
int3
fbld
cmp
jbe
sbb
lret
leave
cli
jge
mov
mov
sub
xor
cltd
mov
cld
lahf
dec
inc
xchg
or
fnstsw
cmp
sub
sbb
mov
push
mov
push
aas
mov
mov
bound
dec
jns
nop
cmp
mov
shll
rolb
adc
lds
out
adc
aad
mov
and
pop
jmp
xor
ja
in
or
test
cmpsb
xor
add
les
push
sub
movsb
cmp
clc
push
inc
nop
and
add
and
fcmovu
decb
jb
inc
or
jb
cmp
stc
imul
inc
jb
push
fs
aad
or
pop
lods
mov
jae
in
fcomip
lds
pop
nop
cs
and
stc
jmp
ljmp
call
aas
mov
sbb
popa
xlat
idiv
pop
mov
fcom
cmp
and
add
sti
inc
das
adcb
pop
je
mov
popa
xchg
arpl
adc
cmp
mov
int
push
in
out
popa
push
aas
jb
mov
repz
jns
ficompl
jl
stos
fucomp
push
xor
and
inc
and
cmpsb
push
rorb
test
and
sbb
pop
lcall
sti
jle
sub
mov
cmp
cmpsb
or
rcrl
or
loopne
pop
aas
xchg
xlat
outsb
sbb
in
cmp
jg
sbb
out
daa
or
ffreep
flds
add
cli
loope
xchg
dec
sbb
mov
lret
xor
sub
int
xor
add
in
out
add
mov
or
adc
inc
cli
fst
and
ljmp
mov
pop
std
sti
pop
mov
es
sti
mov
imul
jecxz
push
mov
mov
mov
cmp
add
gs
jne
mov
stos
ljmp
daa
cmp
nop
loopne
sbb
push
push
testb
mov
pushf
in
in
inc
xchg
jg
xor
clc
dec
mov
adc
dec
jo
outsl
insl
or
mov
add
mov
popf
roll
mov
cld
idiv
or
fiaddl
adc
sub
ret
sub
in
inc
test
imull
adc
push
aad
or
xchg
cs
sti
fiaddl
inc
adc
clc
outsb
pop
ds
push
xchg
test
mov
mov
fcmovnb
stos
or
cmc
lds
pop
inc
nop
push
dec
add
jae
cmc
dec
fdivr
xchg
dec
js
popf
add
loop
inc
jnp
push
out
mov
cmove
sbb
sbb
aam
adc
pop
lods
inc
jg
rol
mov
fdivrs
ret
out
lret
cs
inc
outsb
jl
es
in
sti
push
paddb
cld
and
idivl
push
in
icebp
jge
loope
in
cmp
loop
jns
aas
ret
in
idiv
cli
push
in
iret
bound
bound
mov
and
roll
ret
push
ret
jbe
mov
les
pop
cmp
movsb
pop
ds
jns
std
xchg
fs
mov
out
hlt
push
pop
flds
mov
sbb
out
daa
in
push
std
xchg
lahf
lods
je
inc
fmul
fdivs
inc
pop
mov
jle
rcrb
in
aas
cmp
or
pop
xor
int
jge
mov
adc
aas
es
xor
and
clc
or
bound
mov
aas
out
mov
repnz
fs
jecxz
dec
mov
aaa
mov
cs
adc
sub
cli
push
ja
and
stc
popf
mov
inc
int3
ja
iret
mov
mov
shr
bnd
pop
or
mov
popa
clc
inc
sub
sahf
add
leave
dec
mov
pusha
mov
lret
int3
sahf
aaa
or
dec
pop
mov
negl
sub
add
fimull
xchg
in
scas
cltd
jnp
in
test
push
jb
add
adc
outsl
mov
mov
adc
repnz
sbb
repnz
jb
inc
sahf
cmp
adc
dec
or
fs
ljmp
ret
into
scas
pop
sbb
out
fisub
loopne
in
fstpt
jg
leave
sbb
sub
jbe
adc
inc
es
pop
mov
fcompl
into
inc
pop
mov
orl
insl
ret
in
jl
pop
adc
xor
stc
jg
xchg
cmp
pop
push
cs
movsl
adc
xchg
sarb
sub
jecxz
xor
fbld
jmp
cs
pushf
sahf
xor
jmp
mov
sarb
fldt
add
sbb
pushf
jb
mov
enter
add
dec
jmp
xchg
add
mov
stc
adcl
push
add
jne
stc
scas
push
mov
inc
add
out
jns
aam
push
scas
mov
jp
cmp
cmp
lods
aad
cmp
pop
pop
cld
xchg
xchg
push
stc
dec
sub
sbb
cmp
int3
sub
lock
nop
jg
loopne
mov
xor
dec
pop
push
loope
rol
and
clc
pop
idiv
into
mov
xchg
pop
add
adc
cmc
cmp
sub
fnstenv
adc
lods
xchg
lret
cwtl
notl
iret
inc
js
sbb
sub
mov
xchg
stos
fcompl
cwtl
add
and
jns
ds
push
test
in
mov
cmp
dec
or
dec
push
call
xchg
mov
adcl
mov
lahf
pminsw
xchg
mov
fstps
inc
xorl
pop
inc
lods
pop
stc
movsb
push
fsts
stc
out
sbb
mov
push
fdivrl
icebp
hlt
rep
inc
lock
inc
fmulp
mov
out
insl
adc
xchg
dec
mov
leave
out
inc
nop
pop
xlat
mov
loop
inc
lret
aam
xchg
or
or
add
sbb
push
jge
cli
push
sarl
iret
mov
hlt
pop
nop
lahf
lds
sarb
and
repz
jmp
pushf
insl
fistl
adc
inc
mov
cmp
xor
lds
incb
xchg
insl
jg
std
dec
and
int
fnstenv
ja
in
sub
out
cmp
jb
out
bound
mov
fwait
stos
psrlw
repz
jg
push
pop
sahf
cmp
sbb
mov
out
cmp
cmc
mov
cmp
aad
mov
sub
mov
dec
or
jne
stos
mov
cmc
mulb
cmpsb
ja
adc
ljmp
fld1
dec
ret
push
divb
add
in
mov
outsb
ds
xchg
xlat
out
xor
xchg
mov
lds
fnstsw
mov
and
mov
xchg
jecxz
int
or
xchg
into
jbe
popf
xchg
fildl
repz
movlps
cmp
adc
iret
push
stc
or
xlat
jmp
cli
dec
pop
jnp
mov
outsb
sbb
sbb
mov
mov
cmp
cwtl
pop
adc
add
inc
mov
push
xchg
xchg
or
fsubl
fsubrs
sarb
ds
xchg
pop
cli
sti
enter
pop
push
jmp
push
ds
or
icebp
push
mov
cmpsl
xchg
repz
fist
pop
sbbl
andb
adc
lahf
push
or
test
cmpsb
jne
jge
lods
out
xchg
mov
lret
push
fnstenv
loopne
dec
jp
loop
or
push
ror
pop
and
outsl
test
test
add
pxor
jle
xor
add
icebp
cmpsb
pusha
adc
pop
cmp
mov
or
repnz
dec
ret
test
push
or
adc
xchg
mov
insb
xlat
mov
jmp
addr16
leave
dec
jae
imul
pop
jae
inc
push
mov
xlat
cwtl
loope
insb
std
xchg
fcomi
jnp
cwtl
add
and
or
test
jmp
add
test
test
mov
sbb
pop
push
cmp
push
imul
add
jp
add
mov
inc
mov
pop
in
daa
mov
pop
enter
ljmp
mov
icebp
pop
xchg
pop
aas
mov
notb
pushf
into
aam
into
mov
iret
scas
add
or
fcmovu
mov
xchg
fidivr
in
or
cmp
mov
sub
dec
cmp
push
test
dec
aas
inc
xlat
jg
lods
lock
imul
and
test
aaa
mov
ja
add
mov
pop
je
pop
gs
cmp
add
dec
cmp
hlt
sbb
cs
out
adc
paddq
mov
jp
cmp
cwtl
out
dec
sti
lcall
daa
test
cmc
inc
cmpsl
faddl
cmpb
sbb
pop
mov
stc
mov
movsl
cmpl
push
adc
fisubr
cmc
push
cmp
mov
out
mov
sub
sub
cld
and
jg
xor
sbb
adc
jno
xchg
jae
sub
sub
sub
das
xor
clc
aas
mov
clc
fwait
pop
lock
or
decb
pop
and
mov
lods
lret
cmpsl
jle
in
cltd
push
daa
xlat
cmpxchg
ds
rcr
push
inc
jle
inc
and
inc
inc
push
add
int
mov
push
mov
icebp
shrl
or
inc
cmp
fldenv
or
hlt
les
stc
imul
push
repnz
mov
fbld
std
jecxz
cmc
fnsave
inc
pop
adc
sub
stos
inc
jg
fdivrp
lret
aas
or
pushw
stc
lahf
js
iret
test
movsl
sti
mov
add
mov
ja
fstpt
iret
mov
sti
jbe
mov
jg
mov
test
adc
add
les
lret
mov
daa
sahf
stos
or
xlat
mov
xor
sub
lret
xchg
inc
mov
xor
dec
push
test
push
dec
push
ret
add
cmc
fdivr
pop
xor
mov
mov
sar
jne
in
add
pushf
xchg
jno
and
push
icebp
xchg
push
jmp
mov
add
adc
test
iret
in
lods
jg
xor
aas
dec
addr16
cmp
lret
scas
xchg
loope
ljmp
adc
sub
inc
jge
mov
or
and
lods
push
lcall
or
or
mov
or
jg
cltd
or
mov
add
dec
out
jnp
jge
jnp
lahf
push
jecxz
xchg
repz
add
dec
adc
in
cmpsb
fs
orb
out
cmp
push
pop
dec
ret
or
adc
adc
dec
dec
push
and
inc
and
sbb
or
mov
mov
add
shlb
push
scas
imul
fldcw
xor
cmc
stos
les
mov
jp
pop
lods
push
sub
bound
jnp
xchg
mov
iret
cmp
sahf
dec
pop
mov
push
pushf
out
jp
fwait
mov
cli
test
out
push
test
movsl
out
arpl
call
je
lret
lret
push
in
shr
gs
jb
loopne
xlat
and
fdivl
xchg
scas
rorl
adc
mov
test
cmp
cwtl
out
std
pop
pop
jle
out
push
sbb
sti
cltd
jae
jns
mov
jae
mov
iret
jg
mov
jno
jae
lret
je
pop
fs
jl
loopne
pop
fildll
out
adc
inc
es
aas
adc
or
dec
cli
mov
push
loope
mov
rcrl
outsl
adc
xor
ljmp
ror
mul
jae
test
in
mov
mov
sti
dec
bound
icebp
nop
cmp
cmpl
or
pop
lahf
mov
mov
or
test
mov
mov
scas
jp
push
jecxz
roll
jmp
stos
push
xchg
or
insl
aaa
sub
shrl
jne
jo
rorb
mov
mov
outsl
jecxz
stos
in
push
dec
and
aam
mov
rcrb
mov
mov
dec
pop
fnsave
rcrl
test
out
bnd
add
fmulp
dec
in
loop
sbb
jle
cmp
cmpsl
shll
rorl
ret
cmp
adc
cmp
in
sub
mov
mov
mov
inc
mov
mov
xchg
push
lahf
imul
sub
aas
std
out
imul
in
lods
stos
mov
sarl
movntq
sbb
push
jl
push
adc
imul
inc
imul
push
push
out
sahf
shr
sub
jb
xchg
in
out
push
pop
inc
mov
pop
dec
jnp
cmp
clc
mov
aad
push
jp
addr16
sbb
lahf
sub
repnz
jbe
mov
cmp
jmp
or
std
nop
jle
test
stos
pop
sbb
lods
fisttpl
cmpb
inc
je
addr16
ja
jg
cmp
dec
sub
movsl
int
les
loop
inc
sbb
test
sbb
sbb
dec
mov
lahf
jmp
mov
roll
jns
mov
mov
push
cmp
cmpsb
mov
shrl
stos
gs
loop
jae
into
aaa
into
sbb
shrb
inc
sub
xchg
sbb
ljmp
cmp
push
mov
test
pusha
out
jb
jl
mov
cmp
fildl
fmuls
sbb
pusha
cwtl
aas
jge
push
int
push
inc
add
dec
int3
jbe
add
sti
in
mov
sahf
xchg
fucomip
aam
ficoml
rep
outsb
cmp
in
sbb
stc
lds
sub
xor
ficomp
push
mov
ljmp
add
pop
insl
mov
test
jle
stc
sub
fnsave
dec
test
test
in
aaa
fidivr
xchg
jmp
aad
pusha
mov
inc
addr16
pop
daa
add
and
movsb
jnp
pop
sub
dec
cld
xchg
or
sti
push
adc
in
push
jmp
sahf
clts
out
cwtl
int
push
stc
xchg
pop
mov
inc
clc
movsb
mov
or
adc
xchg
mov
push
stos
xchg
jne
dec
insl
xlat
out
mov
mov
inc
add
aad
insl
jmp
addr16
jno
and
fs
sbb
lret
xor
and
pop
jo
inc
daa
ficomp
outsb
lods
sbb
mov
cwtl
sub
or
mov
dec
lcall
mov
push
push
jge
mov
mov
pop
and
push
bound
movsl
pushf
xchg
pop
loopw
mov
xchg
cmc
lods
push
setp
sub
mov
xchg
cmp
xchg
into
ljmp
dec
xor
inc
addl
sub
push
and
xchg
arpl
cmpsb
test
lods
stos
push
out
dec
ret
stc
mov
push
das
fsubr
data16
lcall
jge
popa
and
and
sar
scas
adc
das
negl
sahf
jnp
test
add
push
loop
sub
imul
fcmovnbe
stos
orl
sub
jg
test
rcll
in
outsb
mov
xchg
out
mov
sbb
out
xchg
cmpsl
pop
xchg
or
mov
push
scas
pop
out
leave
movsl
cmovo
mov
pop
fnstsw
add
shr
mov
and
ret
sbb
push
jbe
pusha
push
mov
cli
add
adc
mov
int3
push
mov
mov
shlb
imulb
xchg
mov
cld
mov
add
xor
es
cmp
stos
popf
sub
stos
pop
or
pop
aas
test
jne
shlb
jmp
popa
xlat
ljmp
dec
test
int
addr16
push
repz
popf
sbb
jle
pop
stos
dec
mov
stos
imul
xor
out
inc
cmp
pop
fidivrl
pop
dec
or
pop
or
or
cld
push
add
ja
adc
or
test
out
jne
and
lea
mov
in
arpl
mov
jmp
dec
aaa
sbb
lahf
xchg
dec
mov
test
push
adcb
mov
mov
lods
mov
mov
mov
sub
lahf
loope
fildll
and
fcoml
addr16
pop
mov
mov
test
push
in
pop
sti
cwtl
xchg
std
popa
or
dec
dec
dec
pop
cmc
int3
jae
jmp
enter
repnz
cwtl
loopne
add
cmp
popf
lcall
mov
sub
mov
ja
js
jae
lods
fistpl
add
xor
ljmp
sbb
das
fldcw
divl
out
or
mov
out
shrb
push
fildll
sbb
add
push
xchg
or
xchg
iret
hlt
mov
pop
jge
push
mov
ja
inc
out
in
inc
pop
mov
stos
xlat
pop
jle
inc
fmuls
jge
sahf
popf
push
cld
ret
lahf
daa
or
je
mov
push
ja
mov
stos
inc
jbe
lret
fisubrl
out
inc
das
mov
pop
lods
pop
clc
test
imull
das
sbb
pop
and
mov
sbb
cmc
jns
roll
insb
pop
cmp
pop
jmp
scas
xor
mov
fs
sub
pop
mov
mov
mov
ficoml
mull
in
jne
sub
imul
insb
push
jge
xchg
and
stos
lock
jnp
cltd
enter
xor
mov
and
and
mov
mov
loopne
jmp
mov
xor
leave
stc
push
jb
cli
aam
cmovnp
push
and
pop
dec
xchg
xchg
xchg
movsl
inc
pop
cmp
mov
inc
jo
arpl
lret
xor
rol
and
sahf
dec
mov
stos
cmpsb
mov
repz
lods
data16
pop
outsl
adc
sub
mov
out
es
and
fstpl
add
out
cli
xchg
xchg
dec
push
xlat
test
jb
mov
mov
pop
sbb
push
pop
dec
je
mov
dec
in
cmp
ret
push
inc
mov
pushf
add
mov
fstps
xchg
dec
add
test
cmp
or
and
es
xchg
inc
mov
adc
cld
into
push
out
stos
jae
or
cltd
sahf
mov
insl
mov
jecxz
push
adc
mov
xchg
fisttp
cmp
inc
loope
add
orl
mov
sbb
pop
xor
jne
xor
out
lods
xchg
inc
mov
aaa
popf
push
xchg
movsl
bound
loopne
jo
pop
fsubrl
mov
shrl
in
jb
push
xchg
test
inc
or
mov
mov
fmuls
aad
dec
xchg
or
pop
xchg
ljmp
xchg
stc
mov
jmp
push
adc
xor
test
mov
push
rorl
cli
jbe
xchg
in
push
xorl
xchg
outsb
pusha
test
xor
es
push
nop
in
ja
or
mov
sbb
cltd
rclw
inc
loop
pop
dec
lods
rorb
inc
insl
cmc
pop
mov
jbe
in
xlat
rcll
jae
push
js
mov
mov
adc
lods
push
jecxz
leave
push
out
mov
stos
or
je
or
mov
push
jge
dec
pop
test
daa
inc
test
add
xchg
aad
pop
incb
inc
dec
popf
in
mov
call
adc
ljmp
ljmp
test
bound
push
fsts
xchg
stos
or
pop
fsin
sarb
popa
sbb
and
push
xchg
bndldx
cmp
jns
push
pop
sbb
jle
mov
negb
sub
or
cmpsb
insl
push
lock
mov
adc
dec
xlat
inc
out
sbb
iret
sub
sub
insl
cmp
push
gs
out
lcall
mov
int
test
pop
enter
push
cmpsl
mov
xchg
jns
mov
test
jne
mov
scas
inc
sub
push
pop
pushf
lods
cmp
or
shrb
data16
cmp
and
lcall
xchg
mov
movsl
movsl
mov
scas
adc
mov
sbb
sub
mov
xlat
add
stos
mov
cmp
fstps
in
mov
push
movsb
ss
inc
mov
inc
jne
cmp
and
jae
sbbl
das
mov
pop
mov
add
inc
pop
pusha
xor
jns
push
pushf
roll
pop
and
xchg
lcall
fstp
mov
mov
nop
push
adc
int
in
xlat
jl
stos
pop
ret
mov
xlat
mov
adc
cli
mov
xchg
psubw
mov
cmp
ret
es
icebp
into
mov
pop
ljmp
inc
push
xchg
sub
xchg
sub
mov
pop
jmp
cld
aad
je
cld
mov
mov
inc
out
aad
cmpsb
mov
mov
fs
iret
out
pop
xchg
arpl
xorl
adc
das
jmp
ljmp
ret
mov
lods
mov
push
test
and
adc
jnp
mov
sub
or
les
data16
int3
imulb
mov
mov
hlt
out
cmp
scas
bound
adc
mov
sub
push
rorl
into
aam
rorl
mov
jo
jge
pop
in
cmp
aam
mov
add
fldt
add
xchg
psrlw
ror
repz
xor
dec
add
jmp
int
lock
in
add
sbb
xor
pop
jg
sahf
mov
push
test
cmp
jo
int
add
sbb
mov
mov
ljmp
andb
mov
lcall
jb
lret
lods
leave
xor
mov
dec
or
roll
mov
movsl
mov
dec
mov
mov
int
mov
neg
inc
int3
nop
add
sahf
push
or
adc
inc
jp
sub
dec
daa
mov
xchg
aam
popa
xor
loop
aam
add
cld
scas
sbb
push
bound
and
inc
gs
fstl
aaa
in
in
push
xchg
xchg
xchg
dec
je
pop
lret
lss
cmp
lock
je
pop
movsb
loope
int3
jne
je
sub
fst
fcomps
test
inc
push
add
movl
ss
jecxz
mov
ja
xor
fmul
clc
jo
pusha
adc
mov
or
in
xor
cld
das
sbb
pop
dec
jbe
cmpsl
ljmp
dec
adc
push
mov
xor
or
jg
jns
push
inc
xor
cmp
in
lods
mov
fcmovbe
cmp
cmpsb
dec
subb
pushf
out
sbb
mov
adc
push
adc
sub
fisubr
cmpsb
pop
out
cmpsb
cli
jae
push
loope
xchg
push
jmp
pop
inc
out
movsb
xchg
jns
mov
sti
cmp
cmc
dec
lahf
aaa
into
sbb
jne
push
cmp
xchg
out
fnstcw
or
lds
jne
xor
std
test
hlt
das
or
push
ss
inc
cmc
jae
gs
dec
je
imul
jb
mov
stos
cwtl
inc
lods
loope
shrw
push
lods
pop
stos
add
push
rclb
les
adc
mov
dec
adc
fidivr
mov
pop
aaa
test
scas
lahf
pop
nop
cli
xchg
out
push
das
out
add
lret
fisubl
fs
int
push
mov
xchg
pop
dec
jb
pop
mov
dec
jmp
sbb
sbb
jo
fbld
jp
les
cld
push
aas
cmpsb
f2xm1
xchg
shrb
popl
adc
cld
ret
cmp
fwait
xchg
xchg
push
arpl
scas
xor
gs
push
insl
mov
jmp
xor
dec
push
pop
cmp
dec
test
mov
leave
sub
iret
addr16
inc
sti
jecxz
leave
jecxz
sbb
aam
cmc
pop
jae
adc
repnz
mov
movsl
jg
pop
add
jnp
fcomp
mov
les
xlat
push
jmp
sbb
out
cmc
sub
push
inc
std
int
sub
test
out
or
cwtl
pop
pop
test
xchg
dec
lcall
ficom
call
sbb
adc
pop
cmp
ss
aas
subl
pop
sarb
mov
inc
dec
outsl
stos
push
cli
cmp
sub
push
rcll
les
sub
cwtl
lret
pop
jl
cld
sbb
mov
pushl
jnp
ficomp
fidiv
scas
stos
jmp
aad
cmpsl
dec
xlat
gs
rcll
mov
inc
popf
cmp
push
pop
pusha
jnp
dec
in
inc
stos
jge
fdivr
sub
cs
add
pop
dec
or
das
pop
mov
inc
pop
incl
and
jmp
mov
ret
iret
repz
aad
adc
loope
stos
jecxz
jecxz
adc
in
scas
sbb
in
xchg
inc
lahf
xorl
mov
ret
pop
out
aad
sub
sbb
mov
sbb
pop
movsl
xchg
inc
scas
test
je
aam
cs
lods
cmc
enter
fwait
mov
inc
mov
popf
imul
ret
cmp
push
ret
andb
and
cmpsl
jne
dec
mov
mov
push
pusha
cmp
xor
iret
aam
int
lret
or
adc
andl
aad
push
push
mov
out
push
lods
push
lret
xor
dec
xchg
push
les
pop
ficoml
pop
xchg
add
adc
pop
je
mov
push
test
or
or
fcmovb
jbe
data16
ss
dec
xor
in
cltd
je
mov
jmp
nop
lcall
fcoms
fucomi
sbb
dec
mov
pop
into
inc
addr16
add
pop
lcall
ljmp
out
insb
sti
mov
insb
sarl
dec
clc
ja
repnz
into
lea
aam
xchg
es
or
stos
jbe
or
call
sub
aas
xchg
mov
dec
dec
aaa
sub
xchg
shr
lret
aas
in
leave
xchg
data16
pusha
gs
add
or
inc
int
ret
or
test
mov
sar
lods
inc
fsubrl
sar
rclb
lock
push
roll
and
or
int
sbb
push
pop
xchg
jmp
inc
test
pop
hlt
rcl
mov
mov
sub
mov
mov
push
mov
or
lret
sub
sub
push
mov
aam
iret
pusha
xlat
leave
hlt
jne
xchg
dec
push
daa
cmpsl
mov
jno
insw
insb
jo
inc
sbb
pusha
add
pop
push
inc
aad
std
push
lock
fwait
sub
das
repz
rclb
int
jns
aas
loope
push
aad
lcall
insb
jno
jmp
jno
pop
rcll
jb
out
inc
lods
xlat
movsl
das
add
push
hlt
popa
jmp
insl
mov
pop
idivb
jnp
pop
cmpsb
std
pop
jb
and
lret
call
xor
jmp
xchg
sarb
xchg
sbb
or
in
div
sbb
push
jno
int3
sub
sbb
inc
sub
mov
int3
mov
mov
cmp
pop
lcall
sbb
ret
sti
leave
push
out
jmp
mov
mov
in
xor
pop
mov
cltd
lahf
add
add
cmpsb
addr16
icebp
rcll
js
jp
fld
dec
push
mov
dec
dec
push
call
dec
mov
flds
mov
inc
imul
sbb
dec
xor
leave
and
add
mov
mov
in
adc
mov
adc
lcall
dec
xor
or
xor
popf
cwtl
popf
pushf
lcall
dec
dec
popl
and
sub
and
xor
xchg
in
popf
mov
pop
or
mov
dec
insb
pop
xlat
or
cmp
repnz
add
es
popf
mov
and
xchg
arpl
insl
and
cmp
inc
jbe
inc
xchg
gs
test
mov
jno
sub
pop
xchg
inc
jle
and
rorb
insl
inc
fcmove
mov
and
movsb
pop
dec
mov
and
daa
je
loopne
mov
fmull
out
dec
lock
mov
aas
pusha
xchg
ja
jle
cmp
and
mov
mov
out
movsb
out
les
daa
andl
cmp
das
and
movsb
lock
lock
daa
mov
call
aaa
push
js
js
dec
xchg
adc
leave
jecxz
jnp
mov
daa
nop
and
cmp
aaa
bound
xchg
daa
xchg
daa
xchg
daa
xchg
and
cmp
aas
jo
pop
xchg
ret
cmp
cmp
and
mov
leave
sub
cmp
dec
cmp
jb
add
in
add
daa
mov
and
aas
les
dec
dec
dec
jmp
aas
dec
mov
cmp
mov
leave
jmp
cmp
dec
in
mov
testb
jp
mov
stc
aaa
mov
add
ret
clc
dec
in
leave
mov
daa
mov
stc
or
repnz
ficoml
bnd
jg
xor
and
pop
inc
or
push
pushf
into
into
test
gs
inc
push
inc
mov
adc
xchg
jl
sbb
and
dec
sbb
mov
lods
lcall
es
dec
popa
sbb
incb
dec
and
xor
jne
jbe
data16
addr16
push
mov
js
push
fs
test
push
lcall
xor
push
mov
xor
into
and
xchg
inc
inc
shr
jg
or
rcl
cmc
push
ret
mov
xchg
aaa
out
xchg
stos
loope
scas
gs
xchg
divb
pop
cld
nop
and
cli
js
dec
and
out
cmp
andl
pop
dec
push
cwtl
jno
dec
pop
out
xor
pop
jno
mov
lods
sbb
std
jge
mov
aad
cmp
push
mov
dec
inc
insl
xchg
in
xlat
xlat
cmpsb
cld
xlat
push
aaa
adc
insl
stos
push
cmpsl
or
mov
dec
pop
icebp
in
xchg
call
jae
jae
call
push
mov
adc
dec
jge
push
pusha
xor
and
imul
add
adc
dec
push
es
pop
or
sbb
das
pop
dec
and
cltd
mov
mov
push
sub
lea
pop
xchg
add
dec
jle
jecxz
add
and
pushf
and
pop
lds
mov
xor
and
in
jnp
bound
sbbl
enter
mov
stos
std
test
loop
cmove
fxch
in
cmp
cltd
pop
mov
push
jbe
sbb
jb
sbb
adc
es
sub
pop
fxtract
cmp
mov
mov
pushf
or
popa
inc
push
mov
adc
adc
cld
das
subl
repnz
add
push
loop
pop
je
xor
pop
imul
or
mov
clc
and
andb
adc
cmp
loope
xor
adc
or
cltd
sbb
or
dec
lock
xor
adc
or
test
mov
add
movb
push
out
adc
push
xor
adc
mov
xor
and
div
inc
pushf
push
decb
push
jo
cli
and
jg
pop
mov
jle
ret
and
pop
fstl
nop
nop
inc
repz
jb
test
and
out
test
dec
inc
mov
rolb
scas
pop
jo
ja
cmp
lds
mov
push
and
insl
hlt
or
cmp
ljmp
or
or
dec
and
test
mov
mov
xor
lods
inc
and
je
xchg
test
sbb
xchg
addl
jl
in
pop
movsb
pop
push
js
fstl
fs
adc
lret
cmp
shlb
lea
aaa
in
adc
adc
sbb
xor
int3
and
mov
xchg
inc
dec
sbb
push
inc
sbb
xor
std
xchg
cmp
or
or
sub
inc
movsl
add
or
aas
movsb
cld
xchg
loop
imul
call
cmp
push
mov
bswap
and
outsl
out
popf
clc
xor
push
pop
movsb
and
xor
popf
lret
cmpsl
add
xchg
popa
mov
pop
inc
or
and
dec
xchg
sub
fwait
xchg
sarb
imul
mov
mov
jo
xlat
sbb
mov
imul
add
cmpb
aam
lcall
dec
cmp
sti
cwtl
les
xchg
mov
cltd
aam
js
into
loop
xchg
das
aam
in
lahf
jge
daa
out
sbb
mov
aam
push
mov
lret
dec
jb
xchg
add
test
pop
pop
pop
repz
sbb
jge
inc
push
dec
mov
and
cwtl
xor
sbbl
xor
xor
xor
cmp
int3
sbb
cltd
sbbl
dec
das
pop
jnp
xor
fxtract
mov
cli
inc
jge
jns
jns
div
nop
sbb
adc
mov
sub
idivb
jmp
scas
repz
mov
dec
xchg
push
dec
outsl
push
mov
sub
out
cmp
cmc
mov
mov
setle
ficomp
stos
in
stos
js
adc
das
sti
xchg
push
test
inc
sbbl
sbbl
jl
mov
pop
xchg
js
jno
pop
inc
jae
and
loopne
ret
adc
or
rorl
addr16
js
inc
jo
push
add
xor
sub
rcll
call
jecxz
xor
mov
or
lods
sbb
sbb
sbb
sbbl
jl
mov
pop
xchg
js
jno
pop
inc
jae
and
loopne
ret
adc
movl
add
xchg
mov
cmovs
xor
jg
push
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
jbe
in
notl
cmc
das
ljmp
pop
push
scas
pop
mov
lods
dec
dec
adcl
lcall
jne
or
pushf
push
outsl
dec
jge
xchg
inc
and
pushf
xchg
stos
outsb
outsl
push
ds
xor
sub
insb
outsl
fisttpll
or
jno
pop
mov
mov
dec
lahf
jg
and
push
sti
and
add
nop
fmuls
push
sbb
and
and
inc
adc
ret
clc
xlat
jo
in
or
dec
imul
xor
dec
jo
and
ja
inc
sahf
sti
pop
mov
inc
insl
jne
imul
movsl
testl
pop
gs
push
add
sbb
arpl
adc
jp
add
mov
push
ficomp
xchg
and
sub
nop
jge
sbb
loopne
cmp
cwtl
push
test
xchg
xor
inc
cmp
aas
xor
sbb
cmpsl
out
test
clc
mov
sbb
lock
xchg
inc
mov
dec
icebp
lds
popf
xor
imul
pusha
mov
sbb
adc
dec
icebp
fwait
xorl
jb
subl
jns
xorl
test
push
ljmp
fsubr
cmp
icebp
cmp
and
bndldx
data16
push
sbb
mov
or
mov
pusha
gs
xchg
adc
lea
gs
sbb
cld
mov
pop
sbb
xor
ret
sub
inc
cld
pop
and
shr
inc
fcomps
add
pop
add
sbb
enter
push
orl
inc
sub
or
inc
aad
mov
iret
adc
movsl
packssdw
mov
loopne
dec
test
xchg
xchg
mov
in
sbb
icebp
dec
sbb
ja
xchg
mov
jge
dec
or
sub
pop
popa
insl
into
fsubp
mov
cmp
sahf
loopne
jno
cmp
sub
adc
push
je
ja
cmp
cmp
enter
inc
sti
leave
icebp
out
pop
sbb
addr16
push
jl
icebp
and
out
pop
or
lock
jl
out
out
push
clc
jnp
out
inc
mov
into
imul
jae
in
mov
add
mov
repz
pop
cmp
addr16
jge
fs
and
xchg
ds
sti
loope
addr16
push
push
jne
je
call
pop
pop
pop
pop
xlat
inc
scas
mov
mov
jmp
xchg
inc
scas
test
mov
add
ds
hlt
mov
jne
lret
mov
pop
sbbb
test
jne
jmp
push
dec
cs
pop
xor
cli
mov
jne
lret
movsl
push
pop
pop
dec
cs
pop
and
idivb
cltd
sub
mov
push
dec
aaa
imul
jnp
inc
cmp
into
xor
mov
repz
push
push
push
push
push
or
iretw
push
sbb
xorl
xchg
test
mov
add
inc
nop
and
and
and
js
fcoml
xchg
pop
xchg
movsb
mov
xlat
lds
sbb
imul
dec
mov
jb
mov
mull
cltd
sahf
dec
in
gs
jb
out
rcrl
cmp
push
in
jnp
lcall
push
out
pop
dec
ret
jle
xchg
mov
sub
push
popa
adc
pop
dec
inc
xchg
sbb
and
xchg
cli
xchg
jae
ja
lahf
dec
xor
pop
inc
push
xchg
fiadd
inc
sub
push
jge
cld
push
dec
rcl
icebp
sbb
hlt
ds
fs
push
xor
out
adc
enter
fstpt
fisub
cmpsb
jmp
fwait
je
ror
lcall
leave
les
mov
pop
push
fmull
dec
mov
insl
cwtl
dec
popa
pop
rcr
push
mov
or
pusha
cmpsl
sbb
or
xor
outsl
jbe
lret
or
test
push
lods
mov
and
pop
das
push
fwait
dec
fiadd
xor
int
dec
in
rol
xchg
arpl
xor
fisttpl
sub
repnz
popf
mov
int
cmp
xchg
mov
xchg
leave
jmp
jg
sbb
insb
addr16
test
xor
loop
fs
jno
adc
mov
nop
add
inc
xchg
mov
inc
out
rol
sbb
pop
cmp
dec
rorl
fstps
mov
inc
cmp
sbb
mov
or
dec
das
xchg
repz
jne
or
cli
pop
ja
stos
data16
ds
fidivr
inc
inc
or
jle
cmp
inc
into
jp
cmp
rorl
clc
xor
and
cld
push
mov
fstps
pop
adc
arpl
out
dec
mov
icebp
in
pusha
xor
leave
out
add
sbb
sbb
add
nop
jne
int3
cltd
mov
ficom
sub
pop
das
ljmp
xchg
dec
fsubl
cli
ficomp
sub
xor
insl
icebp
xor
aaa
lods
adc
popa
mov
pop
xor
and
dec
mov
or
fimul
loop
dec
cltd
pop
loope
insb
and
bnd
scas
push
lea
mov
mov
mov
lds
jle
in
cmp
push
test
out
lahf
mov
loopne
movsl
dec
aam
test
into
outsl
not
push
into
pop
outsb
mov
mov
ljmp
lret
xor
je
inc
push
jmp
ds
adc
push
flds
clc
sub
xor
jbe
mov
push
mov
push
cld
mov
add
imul
call
push
fwait
push
jbe
jbe
inc
dec
addr16
rcrl
push
sbb
test
and
jbe
and
in
xchg
std
and
and
jns
jns
mov
dec
ret
das
adcl
push
push
int3
and
gs
pop
sbb
fmuls
lods
or
lret
out
in
dec
xor
les
out
imul
pop
gs
or
mov
das
inc
dec
mov
lds
cltd
cmp
pop
xor
xor
xor
inc
jno
mov
ret
inc
add
cli
fsubs
or
dec
bound
adc
and
incb
ds
push
mov
pop
jecxz
mov
jmp
pextrw
inc
and
stos
inc
lods
int
xchg
xor
push
pop
dec
add
cld
mov
jg
xchg
leave
notb
fcomp
stos
hlt
add
push
xor
xor
jge
js
xor
or
nop
jo
pushf
fucomip
mov
cmp
pop
ficompl
mov
std
and
cwtl
scas
pop
inc
push
aam
cmp
mov
sarb
fwait
mov
pop
stc
jle
cwtl
dec
cmp
cmpsl
push
xor
data16
dec
rorl
cli
outsb
movsb
pusha
xor
popf
enter
sbb
sarl
dec
adc
xchg
and
and
daa
mov
movsb
pushf
and
es
scas
mov
sbb
loope
dec
push
mov
leave
lcall
xor
jg
mov
mov
imul
adcl
lods
adc
data16
movsl
jb
sbb
push
pop
addb
loope
andl
icebp
pop
sub
and
shr
and
and
dec
shrl
mov
and
xchg
add
movsl
mov
movsl
fucom
xchg
loop
push
fdivrs
popa
or
add
fldcw
pop
xchg
ljmp
ss
jecxz
push
or
add
mov
xlat
scas
mov
mov
fst
fldl
lret
add
xor
sub
test
das
mov
stos
fidivr
or
sub
lcall
icebp
ja
popa
je
cmp
inc
jecxz
popa
inc
dec
popa
mov
dec
in
sub
or
push
jge
cs
mov
inc
mov
jns
dec
lea
add
xchg
add
sbb
push
je
push
insb
data16
xor
xor
jecxz
xor
sbb
mov
inc
outsl
and
xor
sbb
cmpl
lds
sbb
sbb
sbb
sbb
adcb
jle
sarl
jns
xorl
jb
adc
add
sub
mov
js
daa
mov
js
daa
mov
js
daa
mov
js
daa
mov
xor
sbb
cmp
xchg
push
lock
jno
sbb
xor
or
mov
xor
add
loop
das
imulb
inc
repnz
add
cs
in
and
ret
and
xor
xor
jnp
jmp
in
push
clc
lahf
inc
dec
push
mov
mov
imul
out
lods
jp
pop
cmpsl
inc
out
test
inc
add
add
imul
dec
xor
and
push
sbb
cmp
mov
lods
push
dec
lcall
inc
xlat
mov
fist
jge
and
arpl
sub
pop
shrb
mov
cmp
out
pushf
mov
push
and
call
add
fcomip
addr16
sbb
mov
lock
loop
in
xorl
in
cli
push
xor
mov
mov
test
inc
testb
sbb
out
and
ret
les
sbbl
hlt
cltd
stos
sbb
orb
cmpsl
popf
inc
jmp
int3
nop
pushf
xchg
jns
pop
pop
cmpsl
aas
push
inc
pop
jno
test
push
fldenv
imul
je
pop
std
nop
pop
push
bound
push
jge
mov
daa
leave
bnd
daa
leave
repnz
nop
pusha
call
jmp
push
ret
call
jmp
mov
add
sub
cmpl
mov
jne
lea
push
call
mov
mov
lea
push
push
call
stos
mov
scas
jne
cmp
jne
lea
jmp
push
imul
insb
insb
outsl
arpl
push
imul
jb
add
jb
jne
insb
push
jb
je
arpl
mov
or
je
mov
xchg
mov
lea
cmpl
je
push
push
push
push
call
mov
mov
add
push
push
push
push
call
mov
push
mov
add
pushl
pushl
push
push
call
mov
cmp
jne
incb
mov
add
pushl
movb
call
popl
push
push
push
push
mov
sub
mov
xor
or
je
js
lods
cmp
je
jmp
cmp
je
inc
dec
jmp
mov
jmp
cmpb
jne
and
rol
sub
mov
add
add
sub
jmp
pop
pop
pop
pop
jmp
mov
mov
add
mov
sar
rep
mov
and
rep
pop
push
push
pushl
call
add
cmpl
jne
push
push
pushl
call
mov
or
je
mov
xchg
mov
mov
sub
je
mov
shr
xor
mov
add
cmpl
je
mov
sub
shr
mov
add
add
mov
shr
cmp
je
cmp
je
cmp
je
jmp
mov
and
add
jmp
mov
and
add
jmp
mov
and
add
jmp
orw
add
loop
jmp
mov
mov
or
je
add
lods
or
je
add
mov
lods
stos
jmp
mov
mov
add
mov
test
je
add
mov
push
call
test
jne
push
call
mov
movl
mov
mov
test
jne
mov
add
add
mov
mov
add
add
test
je
test
jne
add
inc
inc
push
and
push
pushl
call
test
pop
jne
test
jne
push
mov
add
push
push
lea
push
push
jmp
and
mov
cmp
jne
push
mov
dec
shl
mov
mov
mov
add
mov
add
pop
jmp
push
mov
add
push
push
lea
push
push
jmp
mov
addl
jmp
mov
mov
mov
add
mov
jmp
mov
mov
add
push
push
push
push
push
pushl
push
call
pushl
push
movzwl
movzwl
lea
lea
lods
test
je
add
cmp
loopne
jne
push
push
pushl
andl
pushl
add
push
call
pop
lods
lods
mov
loop
call
pop
mov
push
add
pop
or
mov
popa
jne
mov
ret
push
ret
mov
lea
push
push
call
mov
lea
push
call
mov
lea
push
push
call
mov
mov
lea
push
push
call
call
add
pop
push
lea
push
push
push
call
push
call
imul
gs
xor
cs
insb
add
imul
jae
jne
gs
xor
fs
insb
add
jae
popa
addr16
outsl
js
add
jo
imul
dec
inc
inc
inc
push
and
push
dec
push
add
and
outsl
arpl
jne
and
je
jns
jo
imul
arpl
insb
and
je
bound
insb
outsl
arpl
gs
and
and
popa
insl
imul
and
jb
jb
and
and
imul
and
jne
and
je
bound
insb
outsl
arpl
gs
and
and
popa
insl
imul
and
jb
jb
and
mov
pushf
lods
or
je
xor
mov
shr
jae
xor
dec
jne
jmp
xchg
pop
ret
xchg
nop
add
inc
add
adc
add
nop
add
and
add
add
add
in
push
add
add
call
mov
mov
push
push
lea
call
test
jne
or
add
ret
mov
lea
push
push
lea
call
test
jne
or
add
ret
mov
add
ret
add
add
add
push
pop
or
or
adc
sbb
sub
cmp
pusha
jo
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
or
or
or
or
or
or
movups
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
push
mov
push
mov
push
cmp
jb
push
mov
mov
mov
inc
mov
mov
mov
mov
shl
and
or
mov
add
mov
mov
mov
cmp
jae
pop
mov
mov
mov
sub
shr
mov
sub
and
shr
add
pop
mov
pop
pop
ret
mov
mov
mov
mov
lea
mov
add
ret
sub
push
push
push
mov
push
mov
mov
xor
lea
xor
rep
mov
cmp
mov
jbe
xor
mov
mov
lea
inc
inc
cmp
mov
jb
mov
mov
mov
mov
mov
xor
mov
movl
mov
lea
mov
mov
shl
add
cmp
mov
ja
mov
mov
mov
add
cmp
mov
mov
jl
mov
mov
mov
mov
shr
mov
and
sub
add
mov
mov
mov
mov
mov
mov
shl
mov
shr
rep
mov
mov
and
rep
mov
mov
mov
add
inc
dec
add
cmp
mov
mov
mov
jge
cmp
je
pop
pop
pop
xor
pop
add
ret
mov
xor
test
jbe
mov
mov
test
je
mov
and
mov
mov
xor
mov
mov
lea
inc
mov
mov
inc
cmp
jb
pop
pop
pop
mov
pop
add
ret
push
push
push
mov
push
mov
cmpl
jb
mov
mov
inc
mov
mov
mov
mov
shl
and
or
mov
add
mov
mov
mov
cmp
jae
mov
mov
mov
sub
shr
mov
and
cmp
jae
mov
mov
shr
xor
mov
mov
jmp
cmp
jae
cmp
sbb
add
jmp
cmp
jae
mov
jmp
cmp
jae
mov
jmp
cmp
jae
mov
jmp
cmp
sbb
add
mov
mov
add
mov
mov
mov
sub
sub
pop
shr
mov
add
mov
pop
pop
mov
pop
ret
push
push
push
mov
xor
xor
lea
mov
push
call
mov
pop
mov
add
shl
add
inc
cmp
jb
mov
lea
push
push
call
push
push
lea
call
push
push
lea
call
push
push
lea
call
mov
pop
pop
add
pop
ret
mov
mov
mov
push
mov
lea
mov
movl
mov
mov
mov
mov
xor
mov
mov
mov
mov
mov
mov
rep
mov
stos
call
pop
ret
sub
push
mov
push
push
lea
push
push
mov
call
test
jne
mov
mov
rep
stos
xor
push
mov
call
mov
inc
cmp
jb
lea
lea
push
mov
call
test
jne
pop
pop
pop
pop
add
ret
xor
mov
call
cmp
jae
mov
mov
add
and
mov
inc
jmp
jne
push
mov
call
add
test
jle
cmp
jge
mov
dec
mov
inc
test
jg
jmp
cmp
jne
push
mov
call
add
jmp
push
mov
call
add
test
jle
cmp
jge
movb
inc
dec
test
jg
cmp
jl
lea
lea
push
call
test
jne
pop
pop
pop
pop
add
ret
lea
lea
push
call
test
jne
pop
pop
pop
pop
add
ret
lea
push
lea
call
test
jne
pop
pop
pop
pop
add
ret
movb
xor
cmpb
jne
inc
cmp
jb
jmp
movb
mov
lea
mov
rep
pop
pop
pop
mov
pop
add
ret
call
nop
pop
sub
ret
sub
mov
push
push
push
movl
mov
push
xor
test
mov
mov
jbe
lea
call
cmp
jae
mov
mov
mov
inc
inc
mov
mov
jmp
cmp
jae
add
mov
and
shr
lea
cmp
mov
jne
lea
call
mov
xor
push
call
mov
pop
cmp
jb
mov
mov
inc
mov
mov
mov
mov
shl
and
or
mov
add
mov
mov
mov
cmp
jae
mov
mov
mov
sub
add
shr
mov
mov
sub
and
shr
xor
push
call
mov
pop
mov
add
add
mov
mov
mov
xor
push
call
mov
pop
test
mov
je
cmp
jb
mov
lea
cmp
jb
mov
mov
shl
mov
inc
mov
mov
mov
mov
and
add
or
mov
cmp
mov
mov
jae
mov
mov
mov
sub
add
shr
mov
mov
sub
and
shr
lea
call
add
lea
jmp
cmpl
jb
mov
mov
shl
mov
inc
mov
mov
mov
mov
and
add
or
mov
cmp
mov
mov
jae
mov
mov
mov
sub
add
shr
mov
mov
sub
and
shr
add
cmp
jae
mov
test
je
mov
mov
jmp
mov
mov
lea
mov
mov
mov
mov
mov
inc
lea
cmp
mov
jae
mov
sub
inc
mov
mov
mov
cmp
jb
mov
add
mov
mov
jmp
mov
call
test
je
cmp
jb
mov
mov
pop
pop
pop
mov
pop
add
ret
pop
pop
pop
xor
pop
add
ret
or
add
xor
out
add
pop
out
add
add
add
imul
gs
xor
cs
insb
add
add
je
jb
arpl
fs
jae
add
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
add
fs
imul
add
out
add
sbb
add
