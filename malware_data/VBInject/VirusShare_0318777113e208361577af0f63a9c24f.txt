test
imul
sbb
jbe
arpl
mov
dec
cmp
repz
push
lcall
mov
enter
inc
fldenv
push
bound
push
or
or
out
inc
push
jbe
or
adc
shl
add
movb
and
xor
push
dec
xchg
das
xor
add
and
or
or
add
xchg
dec
insl
xchg
adc
sbb
pop
push
or
xor
xchg
and
jne
push
das
jge
sub
dec
xor
shll
jl
or
dec
lock
cltd
xor
cmp
ss
bswap
dec
pop
cli
dec
fdivr
jb
fs
out
cmp
bound
inc
inc
movsb
or
aaa
or
int
rorb
sbb
nop
inc
dec
and
jo
lret
and
leave
popa
add
inc
push
inc
inc
mov
ret
in
mov
sbb
insb
inc
pop
sti
xchg
inc
cltd
loope
jp
jns
sbb
insb
arpl
aas
int3
sub
pop
mov
jmp
push
les
negl
pop
push
cmpsb
jmp
mov
je
xchg
js
aam
ljmp
mov
int3
mov
pop
insl
mov
scas
push
sbb
inc
and
sub
add
dec
cmp
or
gs
mov
inc
notb
add
test
js
dec
mov
push
js
push
jo
xchg
add
je
bound
xor
pop
inc
out
test
push
sbb
leave
in
loop
lods
ja
mulb
fdivl
pusha
xchg
inc
call
dec
dec
push
insb
jle
sahf
subb
jle
push
adc
int3
or
mov
fdiv
mov
mov
les
lock
or
movsl
imul
mov
mov
movsb
lahf
add
push
jno
in
fimull
mov
cs
mov
loope
lods
add
int3
ja
pop
dec
sbb
ficomp
fnstsw
jae
test
dec
pushf
push
stos
loope
xchg
int
adcl
or
xchg
push
dec
ffree
pop
inc
js
rorb
cmp
cmp
hlt
or
data16
xchg
in
or
and
rclb
and
shrl
stos
jge
sbb
in
cmp
hlt
push
add
lock
loopne
lock
xor
sub
rclb
test
mov
out
dec
inc
add
pop
sub
pop
add
add
movsb
int3
dec
jp
mov
xlat
int3
push
and
emms
cmc
dec
cld
int
inc
insl
push
dec
mov
addr16
mov
adc
add
mov
xor
aam
ret
dec
sub
rcrb
insb
mov
cmp
inc
dec
sub
movsb
jno
faddl
or
cs
pusha
adc
dec
jne
xor
gs
imul
js
popl
push
xor
xchg
xchg
pusha
ret
sub
or
xor
pop
jo
cmpsl
and
addl
imul
inc
push
adc
sbb
idivb
adc
push
pop
adc
mov
loop
push
sbb
out
adc
aam
add
inc
inc
mov
jno
and
and
adc
pop
mov
and
outsb
mov
fadds
sarb
je
loopne
test
sub
xchg
jo
xchg
mov
pusha
and
cmc
addr16
add
test
popa
iret
or
mov
sbbl
jl
sub
mov
in
femms
sbb
fstl
pop
and
cmp
stos
pop
sbb
aaa
xchg
mov
mov
cmpsb
je
gs
je
cli
daa
inc
dec
mov
pushf
dec
mov
add
jne
hlt
bound
sub
and
imul
pop
rclb
leave
ret
dec
rorl
inc
sbb
sbb
sbb
sub
and
outsb
sbb
adc
add
call
aas
enter
cwtl
xor
jbe
fdivrl
push
adc
dec
aaa
dec
jo
mov
adc
dec
gs
or
in
push
sbb
orl
sbb
inc
push
xor
je
addl
push
adc
rolb
pushf
lods
call
cmp
jnp
add
pop
push
push
add
je
cmp
sub
and
and
sub
insb
les
sbb
cmp
int3
mov
jnp
mov
or
or
add
add
dec
push
add
xor
inc
push
test
cmp
pusha
mov
adc
pop
insl
and
outsl
mov
add
and
fs
push
dec
insb
fs
and
sub
dec
mov
sbb
test
push
jge
xor
sub
adcb
adc
mov
xchg
mov
in
ret
outsl
add
paddq
add
xchg
add
cld
scas
ss
inc
pop
pushf
add
add
fidivl
mov
dec
in
ftst
std
je
inc
and
pushf
lods
add
cmp
jl
add
inc
fidivl
pop
lock
pop
fadds
mov
dec
ret
ret
add
sbb
xor
lret
int3
add
clc
add
cld
inc
mov
dec
sub
add
xchg
sete
add
or
sbb
or
loop
pushf
and
dec
call
sbb
loope
push
movsb
mov
pop
repnz
pop
clc
cmc
and
and
cli
sub
andb
je
xchg
cs
jae
or
add
add
adc
add
dec
xor
inc
and
je
dec
insl
push
cmpsb
out
xchg
pop
andps
dec
pop
add
and
jl
ss
inc
fsubl
pop
insb
xor
sub
mov
iret
outsl
dec
pop
jb
hlt
cmp
xor
jne
sbb
add
cmp
or
cld
or
pop
clc
or
push
or
cmovns
and
dec
add
into
dec
dec
je
or
or
or
or
and
gs
imul
push
int3
and
addr16
push
fs
sbbb
loop
cmpb
mov
ret
mov
fdivrl
xchg
jge
jnp
addb
test
mov
pushf
mov
adc
or
lea
je
sub
andb
cltd
cmp
addb
lahf
and
int3
add
jg
lods
rcr
repnz
addb
stos
mov
lods
subb
andb
fdivl
jg
addb
lock
mov
xchg
mov
push
ret
lock
jns
rol
call
push
xchg
int
in
xor
nop
and
cmp
fidivl
add
faddl
mov
ss
add
in
cmp
lods
add
out
sub
pusha
or
and
mulb
jmp
and
mov
movsb
decb
xor
jl
dec
and
popa
sbb
addr16
cmp
or
jns
ljmp
add
pop
xchg
movsb
adc
xchg
mov
testb
sbb
pop
or
cmp
push
ret
add
or
add
cmp
nop
xchg
sub
sub
adc
jle
cmpsb
sub
pop
adc
shr
enter
cmp
mov
adc
add
sub
dec
mov
sbb
or
hlt
jp
add
rcrl
jo
inc
and
sbb
js
sbb
and
and
icebp
pop
push
pop
pop
push
push
sbb
and
push
inc
mov
push
mov
clc
fsub
inc
dec
add
push
je
and
outsl
or
adc
pop
pop
insb
mov
enter
dec
or
inc
dec
and
jne
cmp
je
xlat
jp
lds
fwait
movsb
pop
mov
push
ficomp
jb
push
jo
and
nop
adc
adcl
sub
lret
movsl
push
pop
jb
inc
int3
pop
addl
pop
in
jb
and
inc
mov
push
xchg
leave
push
jns
pop
fmull
add
enter
dec
push
push
inc
mov
and
mov
hlt
adc
pushf
sbb
ret
xchg
pop
jo
fcmovnbe
mov
push
sub
jl
inc
movsb
and
shrb
push
adc
jb
cmp
pcmpgtd
sbb
imul
ds
leave
jp
sbb
sbb
imul
dec
les
les
push
xor
sub
outsl
push
movsb
xchg
stos
dec
cmp
cmp
mov
faddl
repnz
aaa
cmpsb
mov
test
aam
outsl
add
mov
sbb
add
cmp
cmpsb
outsl
sub
push
and
cmp
sub
mov
add
in
int3
repnz
jns
sbb
push
mov
jmp
or
or
loope
cmp
cld
xchg
or
pusha
aam
add
or
movsb
pop
push
ljmp
or
gs
popa
mov
xor
cld
and
cs
cmpsl
add
pop
inc
sub
add
fmuls
pop
mov
or
inc
andl
enter
aam
mov
inc
in
adc
and
mov
push
call
in
mov
or
in
mov
addb
add
aas
inc
test
adc
pop
cmovns
xchg
xchg
lock
hlt
cs
pop
adc
jno
xor
das
xchg
push
aam
push
push
imul
sbb
or
sub
adc
loopne
push
inc
dec
cmp
movups
pop
sbbl
dec
mov
adc
fs
sbb
bound
jmp
push
xor
movsl
gs
sub
outsl
cmp
or
push
js
xchg
outsl
or
cmp
mov
into
pop
cmp
jl
push
xchg
lret
js
dec
xor
loopne
or
icebp
push
add
sbb
icebp
je
call
dec
adc
lcall
js
xor
faddl
clc
mov
sbb
sarl
xchg
xor
iret
nop
pop
push
fwait
mov
cs
xchg
addb
inc
add
mov
push
loop
xor
adc
xor
cmp
inc
sti
or
dec
sbb
jnp
and
nop
enter
xor
gs
add
push
cmpsl
or
xchg
sub
aam
and
cmpsb
add
jae
sbb
nop
add
push
push
lock
pusha
imul
cvttps2pi
or
xor
test
push
or
in
add
dec
ret
rorl
in
fs
in
lret
sub
daa
sub
mov
sbb
adcb
repnz
lods
test
jl
repnz
mov
andb
dec
mov
sub
aam
add
or
clc
dec
push
hlt
insl
lods
sub
imul
sub
pop
cmp
fiadd
mov
aaa
test
pusha
sub
mov
ja
cwtl
into
ror
lds
sub
rorb
sub
sbb
cmp
add
ret
wrmsr
mov
pop
pop
jle
aad
fcoml
mov
mov
inc
xchg
add
cmp
dec
pop
push
jnp
cmp
mov
hlt
mov
pusha
test
pop
cs
ffreep
inc
imul
sbb
mov
and
and
icebp
pop
cmp
les
fiadd
adc
adc
pop
jns
jo
fs
les
xor
imul
pusha
add
and
pop
fs
cmp
or
or
and
add
jge
inc
repnz
add
sbb
xor
or
outsb
frstor
xchg
fiadd
adc
andl
inc
cmc
sub
and
dec
pusha
subl
insl
push
cmp
jo
add
add
jl
inc
sbb
sub
mov
cmp
pusha
enter
cld
int3
push
dec
mov
pop
orl
push
iret
enter
sbb
cmpsb
xor
hlt
add
mov
jb
mov
fild
and
repnz
in
or
sarb
jecxz
adc
push
sub
loop
imul
pusha
pop
cmp
jp
cmp
aas
loopne
jne
insb
gs
or
pushf
xor
dec
popa
inc
sub
and
mov
inc
sub
pop
insl
or
add
dec
test
jp
push
stc
mov
add
dec
jge
enter
test
dec
pushw
aas
push
popa
and
adc
add
flds
jnp
arpl
jge
insl
adc
outsb
call
dec
xor
push
add
cs
pop
push
adc
or
push
test
inc
fnsave
loop
xor
xchg
inc
mov
add
add
add
inc
lret
or
mov
shl
mov
and
ret
xchg
jp
repnz
push
jge
push
jae
sub
jb
outsl
and
adc
pusha
xchg
xchg
push
imul
add
sti
cld
lret
sbb
cmp
sbb
jbe
adc
insl
pusha
and
imul
cli
push
and
aam
je
dec
push
cld
jne
push
insb
into
rcll
adc
jnp
push
add
dec
ds
add
cmp
fimull
addr16
or
cmp
inc
jns
push
sub
test
inc
fiaddl
push
lcall
jp
sub
mov
sbb
jno
and
jp
jne
cmp
or
pop
jl
mov
adc
xor
add
adc
fisttpl
js
jae
push
pop
cmp
dec
cld
pop
and
xor
outsb
adc
movapd
js
push
jb
call
jno
std
jnp
rol
mov
jnp
xor
inc
sbb
dec
xor
add
adc
lret
jns
jle
cli
mov
pop
cmp
jmp
lret
or
stos
es
stos
push
jae
xor
adc
icebp
les
and
sub
inc
sarb
xor
jb
mov
jne
in
cmp
imul
je
mov
movsb
cmp
les
inc
dec
stc
pop
or
aaa
push
jno
mov
inc
movsb
in
loope
sbb
dec
hlt
push
add
and
and
push
xor
mov
jns
cmp
and
in
and
mov
cmp
fidivl
out
inc
sahf
ret
and
or
dec
fnop
into
insl
sub
sbb
leave
in
inc
cltd
mov
and
jl,pt
mov
xor
add
jl
out
push
inc
cmp
loopne
fnstcw
push
or
lcall
cmp
inc
and
aaa
sahf
xor
lds
and
mov
in
testl
jae
xor
lahf
jno
adc
int3
jmp
jnp
ja
mulb
jno
inc
jecxz
inc
mov
sbb
adc
pop
push
enter
inc
inc
cmc
jnp
data16
adc
adc
stc
leave
jle
push
lret
adc
push
daa
mov
fwait
xchg
test
jle
jnp
xor
mov
push
jp
in
lods
add
addr16
add
mov
pop
mov
in
sub
xor
cld
inc
dec
aaa
add
adc
mov
pop
mov
and
mov
lret
movsb
push
xor
lea
push
ret
add
xor
add
jns
inc
sub
dec
neg
pusha
push
cmpsl
nop
adc
push
out
negb
or
adc
pop
fwait
push
push
xor
sbb
repnz
pop
xor
xor
adc
sub
dec
ficom
lods
dec
insb
lods
add
ss
cmp
push
jle
cs
jmp
orb
sahf
es
inc
inc
rcrb
mov
insb
fstpl
out
mov
pushf
lahf
es
enter
push
shlb
hlt
je
inc
sub
mov
sahf
mov
xor
cmp
sahf
aad
xor
aaa
or
push
js
hlt
shrl
mov
push
mov
or
inc
mov
pop
dec
std
adcb
jae
cmp
stos
and
xor
mov
jp
hlt
pop
push
xlat
mov
shrb
outsb
mov
pushl
xchg
cmp
push
inc
sub
cmp
mov
dec
jl
push
lret
ss
rcll
ja
rcrb
mov
jb
fcoms
add
ss
mov
clc
aam
push
loopne
pop
pop
aam
lahf
jne
inc
lock
mov
call
cmp
cmp
mov
xchg
xor
ljmp
xor
sub
xor
sbb
sbb
add
dec
jne
pushf
add
rclb
scas
mov
dec
pusha
push
scas
iret
xchg
ds
add
and
das
cs
cld
repnz
ficoml
jns
push
jecxz
int
inc
add
mov
sbb
rcrl
pop
pop
cmp
ljmp
sbb
xor
pop
push
loop
xor
cld
pop
stos
cmp
data16
sbb
ficoml
mov
adc
jne
dec
jb
stos
add
icebp
push
dec
sub
jp
jno
fs
pop
cli
add
sub
cwtl
lods
mov
pop
adc
aam
sbb
in
je
cli
mov
push
loopne
push
lcall
adc
cmp
ror
push
stos
stos
js
dec
daa
mov
jp
push
stos
xorb
push
je
lret
das
cmp
insb
call
ret
scas
jb
xor
ja
or
dec
and
dec
out
movsl
push
pushf
arpl
mov
jo
movsb
dec
and
push
mov
aam
dec
push
repnz
and
xchg
jbe
les
pop
ljmp
lods
push
mov
push
or
cmpsb
mov
jb
mov
add
pushf
rcrl
movsb
mov
xchg
je
ret
aas
jge
mov
adc
insl
insl
daa
mov
inc
movsl
bound
scas
hlt
xchg
movsb
add
fiaddl
std
adc
rcrl
xor
xor
js
or
lock
cmp
ds
fcoms
scas
mov
pop
mov
popf
push
push
push
pop
inc
ja
sbb
inc
jns
cmpsb
or
xor
xor
fstl
ds
xor
sbb
outsl
xlat
add
fsubr
sub
cmpsb
xchg
xchg
jg
xor
xchg
push
xor
seto
xor
jmp
cmpb
movsl
adc
dec
je
fmul
stos
adc
push
cltd
movsb
inc
adc
aad
mov
pusha
test
xor
mov
out
xchg
xor
add
idivl
repnz
adc
std
bound
fcoml
ljmp
jnp
out
xor
shrl
and
fs
xchg
mov
lahf
add
movsl
xor
inc
cltd
aam
add
scas
jbe
insb
ss
in
test
pop
fwait
test
adc
mov
popf
push
pop
mov
jl
add
mov
popf
or
pop
stos
add
add
fildll
xchg
insb
mov
add
aaa
aaa
dec
adc
in
sbb
inc
es
pop
test
xor
js
das
push
aaa
and
xchg
lahf
pop
adc
xchg
dec
fs
cmp
cld
in
mov
fdivl
xchg
stos
movsb
mov
and
dec
dec
hlt
loop
les
cmpsb
cmp
inc
jbe
jg
loopne
cwtl
pushf
or
mov
stos
out
aaa
mov
mov
popa
jae
sub
cmpsb
or
pop
and
sub
mov
mov
icebp
jo
xor
js
daa
xchg
or
jns
xor
mov
repnz
sub
inc
lcall
lret
xchg
insl
and
inc
push
mov
decb
adc
in
cltd
dec
addr16
adc
pop
mull
push
xlat
pop
xchg
jb
je
adc
inc
dec
stos
or
mov
out
pop
les
lret
addr16
xor
sbb
test
mov
pop
jb
push
cmp
int
imul
in
jno
call
repz
pusha
gs
mov
inc
sub
notb
jp
mov
fiaddl
xchg
inc
popa
cmp
cmp
aad
inc
lret
into
mov
aas
fs
xchg
push
popf
test
fwait
add
ljmp
bound
shrb
pushf
sahf
and
add
xchg
dec
fnstenv
lret
mov
and
ss
jno
mov
push
dec
je
jbe
lret
xlat
inc
leave
das
insl
mov
and
es
dec
cmp
dec
and
jecxz
insl
repnz
sub
out
test
orl
xor
mov
lds
jo
push
xchg
inc
test
ja
test
lock
mov
lahf
pushf
xchg
inc
int3
mov
sub
sub
pop
jae
xor
xor
xor
sbb
loope
inc
add
insb
inc
out
adc
inc
sub
in
sbb
daa
call
xor
cmpsb
dec
dec
xorl
push
dec
fildl
adc
lea
xchg
pusha
xor
sub
adc
mov
lret
es
push
mov
test
xchg
mov
xchg
or
fistp
mov
jns
aaa
push
and
inc
xor
dec
pop
dec
push
insb
xor
pop
xor
adc
or
mov
and
fwait
sub
les
clc
es
inc
pop
jnp
dec
xor
and
das
mov
push
lahf
cmpsb
dec
std
mov
cmp
cmp
call
daa
lods
jmp
test
test
gs
push
inc
mov
sub
pop
fwait
push
jmp
push
add
or
xor
loop
mov
sbb
inc
mov
lcall
pop
push
test
cmp
dec
es
cmp
js
mov
clc
cmp
in
sub
jnp
inc
mov
xchg
mov
int3
pop
xor
outsl
mov
mov
test
inc
push
push
xchg
pusha
xchg
addr16
adc
push
inc
inc
inc
inc
lcall
xchg
inc
mov
xor
jns
dec
pop
xchg
gs
jl
ljmp
dec
stos
test
jmp
inc
mov
into
in
mov
cmp
insb
xor
js
daa
std
mov
sarb
add
or
push
xchg
adc
adc
nop
aam
fxch
ja,pt
sub
pop
pusha
jo
rclb
lods
sub
jb
rcr
add
push
mov
scas
stos
dec
jno
fsubl
xchg
rcrb
ljmp
fcoml
mov
and
mov
sub
stos
xchg
jne
mov
insb
roll
push
test
xor
mov
bound
fnstcw
rol
xor
cwtl
xor
rcll
push
xor
pop
xchg
adc
in
cmp
sub
cs
into
push
lret
pop
sbb
test
shlb
or
into
sahf
lret
sahf
push
wbinvd
push
cmpsl
nop
cmp
pop
xchg
rcrb
dec
and
scas
repnz
push
jmp
lock
in
cli
xchg
xor
sbb
mov
arpl
sbb
push
aaa
scas
call
xchg
inc
or
add
std
stos
lea
rcrl
mov
cmp
scas
dec
xchg
jl
sbb
sub
ljmp
sbb
sbb
xchg
push
aam
jno
shlb
pop
repnz
mov
movsb
inc
add
sub
data16
push
inc
dec
sub
dec
pop
xchg
inc
cmp
push
xor
pushf
push
dec
dec
jnp
xchg
pop
sbb
int3
daa
add
dec
add
xchg
xor
jbe
cmp
idivb
jo
or
movsb
cmp
aam
notb
xor
push
in
pop
movsl
pop
xchg
pop
mov
pop
ud2
xchg
out
fildll
jnp
mov
hlt
leave
insb
push
aad
sbb
jge
xchg
mov
mov
fs
and
jbe
cmp
call
mov
dec
daa
cltd
xchg
jg
jle
jae
sub
and
push
ljmp
push
jbe
dec
sub
in
daa
push
mov
pusha
inc
in
adc
arpl
mov
pop
js
jg
pop
into
xchg
cmp
push
xchg
dec
inc
lret
xchg
pop
lcall
lods
jb
outsb
leave
sti
imul
mov
ud1
cmpsb
fcmovu
ret
and
sub
mov
outsl
jns
leave
jbe
mov
push
xorb
sub
jl
dec
leave
divb
xchg
es
daa
xor
cmc
outsb
xor
pushf
lds
mov
dec
add
sub
cltd
mov
jp
xor
leave
ss
fs
xchg
pop
xor
sbb
out
pusha
jne
int3
scas
fbstp
pop
jg
pushf
sub
push
lret
test
mov
cmpb
je
inc
pop
xchg
sub
jns
outsb
loope
xor
add
enter
inc
movsl
or
aaa
cltd
shlb
xor
add
out
imul
lods
popf
jnp
cmpsb
daa
sbb
mov
dec
cltd
call
and
movsl
mov
inc
xor
sub
dec
in
insb
sarb
lret
rorb
pop
dec
insl
xlat
popf
loopne
repz
daa
inc
mov
xor
fiaddl
lret
pushf
dec
mov
aaa
inc
test
dec
stos
gs
nop
or
xor
xchg
dec
lock
sub
cmpsb
xor
inc
mov
adc
cwtl
pop
cmc
xor
sub
pop
in
mov
insb
pop
lcall
dec
push
inc
fisub
jl
movsb
or
pop
mov
jbe
xchg
inc
mov
flds
pop
adc
fs
stos
sbb
mov
push
lahf
xor
loop
daa
xor
dec
inc
pushf
push
push
out
xchg
dec
inc
push
call
inc
cmp
leave
fdivl
adc
int3
lock
jb
inc
movsb
mov
in
lcall
cmp
mov
dec
push
out
mov
xchg
stos
lock
xchg
inc
aad
aaa
out
pusha
xor
mov
and
pushf
push
cmp
jbe
or
mov
cltd
pusha
fs
ljmp
xchg
inc
std
or
adc
sbb
lret
in
gs
cmpsb
ja
in
or
or
mov
mov
aam
sub
push
cmp
daa
xor
into
stc
cmp
inc
dec
lods
scas
ljmp
popf
in
jo
das
mov
push
jp
icebp
dec
cmc
aad
lcall
pop
jno
xchg
inc
dec
stos
scas
jbe
fsubl
push
jb
jp
push
ljmp
push
fwait
pop
xor
out
jge
xchg
test
and
mov
push
lds
leave
adc
cld
jae
xor
inc
pop
lock
test
test
ss
mov
cmpsb
clc
cmp
cmp
sbbb
dec
xlat
push
add
test
cmp
nop
xchg
sbb
mov
movsl
ss
dec
js
pop
mov
dec
cmp
scas
jae
xor
push
xchg
dec
push
test
pop
mov
inc
jae
add
add
xchg
xor
subl
and
rclb
outsb
and
cli
daa
xor
mov
or
cmp
jmp
cwtl
bnd
mov
dec
jg
test
fldpi
xchg
cmp
out
xor
enter
pop
pushf
out
stos
jbe
mov
xchg
cmp
and
cmpsb
fistpl
movsl
pushf
sbb
mov
dec
push
push
jns
imul
xor
mov
push
stc
aaa
jle
jno
jecxz
test
pusha
loopne
add
xor
xorl
and
popf
xor
xor
xchg
cmp
jge
fisubr
dec
add
jmp
jecxz
loop
std
in
imul
xor
sar
xor
out
mov
xchg
xchg
add
mov
sbb
popf
jns
cmp
daa
lret
jmp
fwait
hlt
or
stos
or
xlat
out
add
fldcw
xor
xor
out
sub
pushf
gs
aad
in
mov
dec
cmp
inc
cmp
sub
jmp
aaa
popa
inc
dec
xchg
dec
nop
lds
fcoms
dec
sbb
insb
xchg
mov
call
out
jp
mov
jle
mov
bound
add
hlt
add
adcl
ffreep
mov
add
aaa
test
lahf
and
ljmp
mov
leave
aaa
sub
dec
xor
xchg
pop
push
ss
fcoml
sarb
lret
aas
jo
cmpsb
pop
adc
push
ret
jge
and
pop
out
data16
fidivl
les
xor
ja
push
cmp
into
xchg
sahf
fs
mov
adc
push
mov
das
outsl
out
in
stos
movsb
insb
dec
xor
ss
mov
jp
xor
mov
dec
in
jg
je
fisub
stos
cmc
insl
lret
je
fst
and
int
or
or
cmp
movsb
lods
loopne
es
mov
cmp
ret
mov
scas
mov
hlt
out
leave
sub
cmp
ret
mov
test
mov
mov
ja
mov
fsubrp
push
aaa
or
dec
in
adc
leave
cmp
add
negb
popf
pop
push
cmp
add
inc
icebp
imul
orl
xchg
jle
leave
popa
lock
cltd
or
ljmp
ret
push
adc
pop
lret
inc
pop
fcmovnbe
or
mov
dec
or
fidivl
dec
add
jl
ds
insb
inc
pushf
ret
push
xor
cltd
jmp
fstpl
push
cmp
xchg
aam
push
cs
int
pusha
mov
mov
js
cli
mov
push
dec
repnz
xchg
mov
dec
fisttpll
adc
insb
adc
aad
xchg
mov
jge
loop
scas
mov
pop
aaa
ds
push
repnz
xor
sub
movsb
sbb
xchg
push
imul
jge
pusha
push
inc
sbb
aad
out
push
dec
leave
mov
jle
ficomp
sbb
jl
xchg
lea
das
das
mov
pop
mov
xchg
mov
les
sahf
inc
mov
mov
int3
push
xor
adc
lcall
aad
inc
or
push
xchg
je
aam
mov
aaa
fildl
cmp
push
pop
pop
testb
xchg
mov
cmp
stc
jl
cwtl
adc
jbe
xchg
xor
ja
popa
pop
pop
cld
and
xchg
add
ljmp
imul
push
lock
outsl
sbb
lds
sbb
cmp
outsl
jle
xor
aaa
mov
mov
xchg
imul
lret
xor
xor
fidivl
sub
lods
lret
cmp
xchg
lea
neg
push
cmp
dec
xchg
or
mov
lds
je
lea
adc
cmp
fwait
divb
cmpsb
sbb
sub
dec
jmp
movsb
adc
mov
xchg
mulb
cmpsb
xor
cmp
ja
pop
adc
gs
nop
mov
add
mov
and
rcrb
call
xchg
pop
loopne
mov
push
pusha
nop
out
outsb
add
int
pop
ret
and
inc
icebp
cmp
mov
xor
insl
inc
sub
pushf
inc
leave
test
inc
scas
pop
xor
aaa
sbb
sbb
test
cmp
mov
xchg
gs
dec
xchg
arpl
push
xchg
mov
mov
mov
jb
inc
xchg
test
push
xchg
inc
xchg
mov
cmp
repnz
mov
jb
pop
dec
or
aad
or
xor
push
xchg
paddsw
pop
and
xor
lods
xchg
and
jle
push
xor
mov
mov
lock
push
daa
fnstsw
inc
jmp
jp
pushf
std
pop
sbb
subl
ret
sub
xor
movsl
cmp
in
gs
push
push
gs
cld
cmpsb
mov
xor
inc
inc
out
stc
xor
xchg
xor
xor
pop
jbe
push
xor
sub
mov
jne
out
mov
inc
shll
xchg
sbb
and
loopne
loopne
fisub
sub
lds
jb
jae
push
xchg
cmp
sbb
sub
mov
in
mov
cmpsb
push
fcmovu
in
cmpsb
cmp
xor
out
sahf
into
cmp
movsb
stos
cmc
push
pop
fmul
add
xor
adc
cmp
je
adc
inc
sub
dec
and
xchg
jle
int3
xor
mov
test
pop
pushf
enter
dec
sub
xor
les
les
int3
into
movsb
mov
sbb
mov
shufps
or
std
mov
inc
jbe
hlt
mov
mov
cli
adc
mov
push
xor
stos
push
jl
rcr
pop
bnd
call
test
and
xor
mov
mov
sbb
push
das
outsb
and
out
xchg
xor
shrb
jge
scas
loopne
fcoms
mov
xchg
xlat
xor
xchg
sub
sbb
pop
sbb
fcmovnu
adc
lret
dec
into
xchg
in
or
andb
sub
inc
daa
jbe
imull
dec
rolb
mov
cmp
jg
pop
adc
in
xchg
xor
mov
mov
stos
divb
jge
cmpsb
lcall
faddl
dec
xor
xor
mov
ret
bound
xchg
jl
xor
cmp
bound
push
fisubr
jmp
mov
clc
fsubrs
inc
in
and
xchg
jne
daa
pop
dec
sbb
inc
xor
imul
inc
stos
fstps
dec
pop
cmpsb
scas
pop
xor
xchg
fldl
xchg
cmp
mov
outsb
test
cmpsb
lods
test
xchg
adc
aaa
cmp
aaa
fmuls
enter
call
mov
dec
cmp
das
inc
ds
sub
xchg
xchg
xor
ret
fs
fcomps
inc
in
dec
xor
sub
xor
add
outsb
addr16
out
insl
in
cs
loop
int3
flds
lock
incb
in
mov
rcr
adc
ret
loop
mov
jle
std
fs
scas
push
mov
xchg
adc
dec
fcompl
jbe
out
push
jbe
pop
cmpsb
mov
gs
push
dec
cltd
cmp
xchg
adc
or
scas
adc
mov
jb
fs
ja
xor
xor
lods
cld
shrl
std
sub
lods
je
flds
adc
sub
add
out
leave
sub
cmp
xchg
or
pop
xor
ret
add
add
js
data16
sub
popf
jo
jge
aaa
sbb
dec
cmp
out
and
insl
jle
inc
jbe
out
scas
jne
inc
ds
std
sub
inc
lcall
lds
add
ss
loope
out
pop
xor
hlt
shll
cmp
adc
jbe
push
xor
rcll
cltd
inc
lret
data16
lret
xchg
insb
out
mov
iret
push
test
icebp
int
clc
sub
in
or
cld
hlt
inc
iret
adc
int3
popa
mov
cmp
add
in
cli
lea
pop
jge
inc
push
inc
pop
daa
pop
pop
lcall
pop
push
cli
jbe
clc
outsb
sub
jo
xchg
xchg
bound
push
das
fs
cli
mov
outsl
add
je
test
repnz
dec
es
cmp
pop
xor
or
sbb
test
pop
gs
jb
xor
loop
sahf
scas
xor
adc
xor
xor
inc
std
pop
enter
call
sub
inc
or
lahf
lcall
test
sub
ljmp
or
repz
and
pop
push
les
fsubrs
mov
clc
bound
sti
data16
xchg
mov
dec
loop
mov
mov
dec
fsubrl
ss
je
inc
popf
dec
fisubrl
test
and
add
enter
gs
add
mov
xchg
addr16
leave
int3
mov
movsl
mov
pop
inc
jmp
adc
jb
pushf
test
cmp
inc
mov
cmpsl
xor
xor
sub
cmp
popa
jne
mov
gs
pusha
repz
scas
lret
xchg
gs
sbbb
scas
ss
push
jbe
aam
icebp
scas
jns
cmpb
dec
aad
lods
fucomi
ss
mov
sub
adc
lock
dec
sbb
jb
mov
pop
jne
jnp
imul
dec
adc
mov
fnsave
mov
jge
dec
push
dec
dec
cmp
loope
loopne
jns
xchg
and
sbb
cmp
dec
xchg
mov
dec
mov
xchg
and
dec
xor
mov
or
fdivl
adc
sbb
xchg
adc
jle
pop
mov
jb
xchg
xlat
xor
pop
mov
les
insb
xchg
sbb
aad
and
push
xchg
shrl
jbe
push
in
sub
dec
dec
out
and
pop
cmp
pop
cmp
mov
repz
or
flds
add
xorl
xchg
and
sarl
xor
das
popf
mov
xchg
push
sbb
aam
mov
push
int
in
cmp
test
add
xlat
gs
push
es
cmp
dec
inc
dec
jno
fisubrl
imull
xchg
aad
mov
lahf
dec
movsl
lods
jb
push
fst
nop
sahf
cwtl
ljmp
and
mov
movsl
xor
mov
push
out
pop
out
lods
sbb
stos
fs
in
xor
inc
cmpsb
cmp
pop
and
cltd
sbb
pop
enter
dec
pop
push
gs
sbb
dec
lret
sti
sarb
movsb
pushf
sbb
mov
xchg
loopne
jp
sbb
cmpsb
mov
jb
bound
and
mov
pop
test
rcll
xor
mov
push
xchg
inc
fs
pop
lret
ss
dec
call
stos
loop
xchg
in
bound
test
xchg
rolb
imul
push
sub
jmp
cmp
xor
or
and
jbe
insb
lds
mov
inc
dec
xchg
cmp
or
scas
push
cmp
clc
lret
sar
rorl
xor
push
js
ficomp
in
xchg
les
inc
mov
mov
imul
lahf
int3
mov
lds
daa
stos
jmp
ds
stos
lret
inc
leave
ss
loopne
cmp
lea
adc
mov
add
std
jns
test
mov
jp
xor
ds
lods
test
fldenv
jne
push
sbb
inc
mov
xor
dec
cli
pusha
daa
inc
mov
rcll
ja
dec
cmp
loop
inc
xchg
mov
inc
cmp
mov
jbe
movq
out
cwtl
pop
out
inc
fsubrl
xor
xchg
stos
aad
pop
scas
mov
out
mov
jno
add
lret
shll
movsl
mov
push
push
in
dec
push
xor
mov
jnp
add
leave
pushaw
mov
adc
pushf
sub
mov
lret
add
aaa
fcoml
popf
int3
xor
lcall
popf
pop
movsb
jb
sbb
sub
pop
dec
and
dec
dec
mov
dec
cmpsb
fidivl
sub
out
pop
mov
movsl
or
mov
push
ja
sahf
popf
es
mov
dec
fstl
repnz
xor
les
daa
mov
je
mov
sbb
aam
cmp
into
sub
jb
mov
add
cmp
or
push
out
mov
mov
test
sbb
ja
sub
push
dec
sub
add
pop
mov
push
mov
cmp
fisubl
leave
xor
lret
fsubrp
in
lods
push
rorb
test
aaa
xchg
jp
mov
nop
inc
cmp
hlt
jo
sbb
loopne
in
push
mov
xorl
lock
cmpsb
outsl
in
scas
or
gs
or
loop
int
jl
add
data16
scas
cmp
daa
mov
lods
cmp
cmpsb
addr16
punpcklwd
inc
sahf
outsb
rorl
mov
sarb
mov
xchg
dec
pop
mov
jl
inc
sahf
out
sti
loopne
xor
pop
insb
push
mov
push
in
jp
dec
fwait
xor
jbe
stos
in
cli
movsl
repnz
lcall
gs
insb
xchg
inc
movsl
xor
sbb
insl
xor
mov
mov
jbe
cs
in
sbb
cmp
lret
in
or
push
push
pop
cmp
jmp
es
xor
fisttpll
dec
fcmovu
lret
jmp
ja
push
enter
xchg
jae
inc
and
int
inc
ficompl
add
pushf
rolb
mov
inc
imull
cmp
int
cmp
cmp
xor
mov
sbb
ss
ljmp
test
test
in
data16
mov
fistpl
addr16
lock
inc
mov
stc
or
negb
outsb
insb
xchg
cltd
out
aam
push
xor
mov
lret
jp
xor
shl
fsubrs
jp
fadd
push
mov
lea
fwait
jl
int3
push
les
xchg
js
jno
std
ds
mov
jle
cmp
in
push
cmp
sbb
stos
pop
insb
mov
cmp
and
sub
loope
xchg
pop
stos
mov
lcall
daa
dec
mov
mov
sub
xchg
adc
sub
insl
xor
mov
outsb
ds
sahf
fdiv
inc
mov
add
push
xor
out
cs
les
mov
xchg
sub
xorl
cmp
aad
out
jl
sub
xchg
mov
mov
lret
push
and
cwtl
aas
mov
icebp
mov
inc
xor
jae
sub
mov
icebp
outsl
fsubs
xchg
mov
stc
rcr
dec
rcrb
xchg
fs
jge
jp
and
mov
xchg
push
cmp
xor
cwtl
stc
push
xchg
mov
add
addr16
lret
jne
es
or
fmuls
testb
jnp
or
jne,pn
jp
loop
leave
or
xchg
jmp
fldt
jg
cmp
push
insl
in
ss
bound
adc
test
inc
jmp
jns
repz
cmpsb
call
ret
insb
and
jb
incb
fnstcw
inc
mov
inc
lods
icebp
lret
scas
sub
mov
fcom
rorl
out
dec
scas
shlb
out
sbb
sbb
fimull
jle
in
mov
xor
cmc
shll
inc
ja
sub
sub
jge
push
jnp
fs
inc
in
leave
movsb
push
lds
dec
repnz
or
mov
out
mov
clc
les
mov
push
mov
inc
cmpsl
mov
inc
push
xor
ja
outsb
paddq
mov
fwait
test
ja
push
movsb
mov
sbb
push
sub
and
rcl
sbb
movsl
in
fbstp
lcall
ss
xor
push
pop
mov
dec
mov
dec
mov
outsb
jae
cmpsb
cmp
cmp
mov
into
in
movsb
jp
test
sbb
mov
adc
bnd
sbb
mov
mov
iret
clc
cmp
pushf
pop
xchg
movsb
aam
xor
jb
cmp
jne
lret
fstl
xor
add
push
xchg
jmp
dec
pmaxub
xchg
sub
jp
fs
std
out
aad
dec
loop
xchg
ficom
ljmp
les
lahf
cmpsb
cmp
push
loop
arpl
out
ljmp
jge
sbb
adc
mov
lahf
xor
sub
jl
sbb
cmp
xchg
das
inc
xor
roll
mov
xchg
xchg
pop
mov
movsl
fnstenv
push
sbb
leave
or
int3
push
push
iret
testb
call
inc
lods
mov
leave
outsl
sbb
pushf
or
notb
cltd
aad
ficompl
lea
lods
cs
sub
scas
xchg
mov
mov
imul
or
xchg
push
fstpl
sbb
shr
pop
incb
divl
stos
pop
xchg
fmuls
cltd
adc
rol
jae
xchg
pop
mov
push
cwtl
mov
add
sti
jge
repz
inc
push
dec
mov
push
test
loop
sahf
sub
lods
push
jbe
inc
in
outsb
scas
jle
or
jbe
pop
aad
dec
sub
push
sbb
test
lds
stos
movsb
push
popf
es
jo
mov
add
sub
movsb
mov
inc
jp
inc
in
add
mov
inc
shll
adc
aad
mov
cmp
cmp
mov
in
push
pop
aad
and
push
pop
mov
mov
jecxz
gs
imul
loop
inc
lahf
and
mov
fdivl
fisubl
ffree
cli
test
divb
rolb
ficoml
mov
jb
insl
fcoms
cmpsl
mov
push
pop
sbb
jmp
add
inc
fsubrl
mov
sub
and
inc
inc
mov
ja
es
xor
jno
sub
pop
or
loop
mov
dec
mov
sbb
mov
mov
subl
int3
pop
inc
jbe
outsl
mov
cmp
xor
dec
jbe
and
fsubr
inc
daa
mov
inc
xor
sub
rolb
int
xchg
les
inc
jmp
and
xchg
add
gs
sub
mov
jge
scas
sbb
cltd
bnd
lcall
add
pushf
push
inc
scas
negb
fstps
mov
push
push
fwait
push
imul
test
mov
mov
stos
test
scas
xchg
xor
je
dec
ss
xchg
ret
in
sbb
loop
loopne
sbbb
lcall
aam
dec
xor
mov
sub
in
mov
xchg
in
lcall
xor
cwtl
mov
cmp
jmp
jbe
pusha
mov
mov
ljmp
flds
xchg
enter
mov
js
adc
mov
jae
mov
mov
hlt
call
fistpll
js
sbb
mov
push
push
push
out
mov
imul
sub
mov
jns
xchg
xor
movsl
jno
or
mov
hlt
mov
sub
sub
inc
and
xchg
sub
inc
lahf
idiv
lret
shll
lds
cmp
push
jle
mov
jl
in
adc
sbbl
inc
xchg
inc
in
cltd
push
sbb
sub
sbb
fwait
add
jb
xor
mov
add
add
cmp
pop
mov
das
sub
mov
jb
cmp
pusha
movsl
stc
clc
dec
inc
mov
add
mov
pusha
es
cwtl
jno
sub
pop
mov
mov
mov
xchg
mov
mov
cmpsl
mov
ljmp
or
idivl
scas
repnz
xchg
push
test
adc
adc
push
xor
aaa
mov
jl
sub
add
pusha
mov
roll
mov
jg
xchg
inc
out
push
loope
gs
dec
daa
aaa
push
pop
jp
jne
scas
js
leave
js
std
jecxz
lds
je
int3
cmp
test
cmpsl
ljmp
push
push
mov
cs
js
scas
mov
aas
push
mov
in
sbb
add
cmp
mov
das
inc
add
dec
imul
ret
test
sbb
xchg
ljmp
sahf
daa
out
mov
stc
and
int3
or
fisubl
bound
daa
in
movsl
push
imul
fdivs
ds
daa
adc
bound
enter
push
adc
fcmovu
xchg
pop
jbe
in
repnz
fist
pop
inc
dec
xchg
xor
loop
adc
add
es
sbb
mov
stc
lods
hlt
cmpsl
inc
aad
xchg
out
jmp
pop
lock
fs
lahf
sbb
mov
stc
push
sub
mov
push
fist
mov
cwtl
xor
ja
sub
dec
jno
cwtl
sbb
push
xchg
inc
xchg
cmp
push
clc
cmp
jno
cmp
xor
mov
sbb
outsl
mov
scas
lods
stos
lahf
and
xor
mov
jae
ljmp
int
xchg
push
mov
mov
push
outsb
push
pop
scas
xchg
fisub
ret
cli
bound
and
rcrb
das
push
fcmovnu
lods
mov
pop
fnsave
roll
inc
xor
insb
in
insb
push
xor
cmp
cmp
mov
js
and
jb
in
sub
xor
add
xchg
mov
push
xchg
jl
xchg
cs
leave
xor
lret
roll
cmp
icebp
mov
inc
cmpsb
sub
ja
pusha
push
insb
ret
addr16
cmp
daa
gs
dec
in
cltd
or
lcall
cmpsb
in
aam
lods
lret
repz
stos
shll
in
xor
enter
sub
sub
icebp
lahf
pop
enter
pop
movsl
popf
dec
rol
daa
pusha
dec
daa
add
mov
aam
pop
popa
les
xor
out
jb
in
inc
add
bswap
int3
push
jb
es
mov
jbe
es
mov
aam
mov
push
sahf
aaa
push
jb
cmp
cmp
lods
clc
mov
aam
jl
push
cli
cmp
push
inc
push
ja
jmp
dec
pop
fcoms
insl
pop
push
aaa
fs
testl
mov
mov
jecxz
cmpsl
push
stos
xchg
mov
fsubl
jge
mov
mov
idivl
sub
outsb
ljmp
adc
pop
loopne
or
movsb
into
cmpsl
cltd
je
mov
push
xor
sub
cmp
mov
xor
faddl
pop
fstps
and
mov
pop
lret
jl
jmp
pop
aaa
rorb
sub
push
inc
cltd
fsubrs
outsb
xor
add
leave
add
xchg
jb
js
xchg
int
loop
jle
inc
inc
add
dec
push
je
dec
leave
fnstsw
sub
dec
cwtl
and
fsub
std
outsl
jmp
mov
push
js
lcall
lea
popf
pop
cmp
mov
scas
xor
pop
fidivr
push
mov
push
jnp
dec
std
and
xor
test
push
adc
nop
push
mov
dec
pop
jnp
adc
sahf
mov
push
or
mov
int
clc
push
jg
fmuls
cmpsb
es
mov
imul
popf
hlt
xlat
xchg
pop
outsl
fldcw
push
outsb
pushf
sub
roll
out
dec
pop
mov
push
xchg
je
scas
fwait
xor
gs
sbb
enter
sub
jl
rolb
xor
jno
loop
xchg
imul
sbb
xchg
push
aam
inc
inc
clc
add
ljmp
lahf
popf
push
mov
ja
fcoms
in
js
inc
stos
xor
jbe
push
jno
mov
jge
and
push
mov
fcmovnb
mov
mov
push
sub
dec
mov
loop
mov
inc
xor
nop
cmpsl
leave
xchg
pop
lret
in
xchg
push
adc
ja
dec
xchg
rorl
xchg
mov
pop
inc
cltd
inc
inc
rclb
out
popf
or
push
pop
into
dec
xor
fldl
fisttpl
xchg
dec
insb
xchg
pop
lahf
mov
cltd
push
and
xchg
push
mov
cmp
jb
xchg
mov
xor
ja
in
shll
add
inc
xchg
mov
cli
pop
fnstsw
leave
popf
mov
inc
int3
mov
xchg
push
je
jl
jl
sub
jb
add
fldln2
cli
xchg
bound
xchg
adc
adc
mov
aaa
mov
dec
sarl
leave
loop
mov
in
push
mov
push
mov
mov
mov
xor
adc
loop
adc
pop
popf
ror
add
pop
int
and
xlat
xor
sub
xor
notb
push
add
sahf
imul
imul
sbb
pop
daa
mov
adc
mov
lret
ja
mov
sub
xor
jno
mov
mov
add
scas
dec
push
cli
flds
mov
lods
mov
out
pop
movsb
mov
gs
mov
mov
mov
daa
or
mov
mov
adc
mov
xchg
dec
mov
sub
movsb
xchg
les
les
push
push
inc
pop
pusha
pop
mov
adc
fsubrl
pop
xlat
mov
cmp
gs
outsb
jecxz
inc
scas
imul
repnz
pop
xor
pusha
mov
cltd
int
mulb
mul
icebp
loop
cmp
ja
lret
push
into
leave
xchg
test
stc
jg
cmpsl
jae
sbb
movsb
inc
in
mov
cmpsl
pop
mov
lock
adc
xor
jg
xor
clc
push
dec
sub
mov
push
shlb
push
push
gs
and
popa
es
aas
pop
es
or
push
mov
mov
aad
cmpsb
clc
push
in
push
xlat
aam
push
mov
xchg
out
fs
mov
addl
mov
and
aaa
jbe
mov
mov
lret
iret
xor
outsb
in
pop
inc
xchg
push
insl
std
push
inc
aas
jmp
pop
jb
not
push
inc
mov
stos
call
adc
sub
lahf
sub
cmpsb
aam
add
xor
inc
mov
das
inc
rol
cwtl
ficomp
push
popf
mov
stc
mov
dec
jno
inc
inc
mov
jp
pop
fwait
sbb
in
decb
cmpsb
or
jo
addl
cld
pop
cmp
push
rcrb
jle
push
xor
push
add
xor
cmp
out
mov
xor
je
dec
mov
addr16
dec
mov
inc
stos
aad
mov
cmp
jns
lds
sbb
mov
fnstcw
fnstenv
sbb
les
cmpsb
cs
jno
out
pop
jbe
cld
stc
cmp
and
mov
mov
jle
mov
xor
and
outsb
adc
xchg
sbb
cmp
in
dec
jle
scas
mov
inc
js
addr16
enter
out
mov
ljmp
fs
dec
hlt
pop
in
jo
jge
mov
pop
cmp
push
mov
cld
pop
out
lcall
xchg
inc
clc
mov
insl
inc
cmpsl
push
sub
cbtw
mov
inc
push
aad
out
inc
lods
sub
notb
popf
mov
sbb
or
inc
cltd
or
jb
push
dec
mov
cmc
mov
and
jge
mov
dec
and
out
stos
dec
cmp
mov
inc
es
inc
lret
lahf
jno
jg
out
sub
cmp
lret
out
xor
imul
sub
movsb
fdivl
mov
inc
push
xor
ss
out
jbe
dec
xchg
stos
lds
cmp
sbb
in
push
mov
mov
push
mov
bound
cmp
add
jne
daa
push
je
xor
std
out
pusha
mov
sub
scas
jno
or
rclb
and
int3
cwtl
std
cmp
or
scas
jl
stos
cs
cmp
push
movsb
xor
inc
sbb
mov
jae
dec
sub
jbe
mov
out
fbld
cmpsl
mov
push
add
fldcw
sub
mov
dec
repnz
cld
or
in
into
cs
inc
in
mov
mov
cld
jg
sbb
jbe
outsl
mov
ja
orb
lret
mov
pop
rorb
push
xchg
push
mov
fldcw
gs
cmpsl
sti
push
dec
cltd
shll
cli
cmpsl
adc
cs
lcall
movb
mov
xor
not
imul
pop
cmp
out
sub
xchg
push
xor
mov
stos
ror
movsb
out
xchg
sti
nop
sub
adc
jmp
inc
mov
push
iret
es
lea
inc
test
dec
push
inc
out
jl
jnp
push
inc
sub
in
cwtl
in
sub
add
sbb
mov
pushf
xchg
xchg
mov
hlt
inc
push
in
sub
movsl
inc
mov
push
jle
xor
dec
scas
jae
mov
sub
ds
add
inc
xor
dec
subb
mov
test
push
add
lcall
push
cwtl
lcall
push
push
cmp
fs
in
rclb
cmp
cltd
xchg
mov
or
mov
imul
and
fcmovnu
and
jle
ljmp
cld
mov
stos
out
popa
ror
xchg
inc
divb
xor
push
test
enter
es
cmp
mov
out
push
repz
xchg
stos
ss
and
xor
fmuls
out
es
lahf
lds
xor
into
fnop
cmc
pop
push
and
dec
mov
mov
movsb
push
xor
lret
call
or
cltd
dec
lock
jo
mov
inc
sub
ja
cmp
or
mov
push
inc
lahf
mov
imul
aad
icebp
adc
lret
insb
xor
aas
neg
daa
add
stc
sub
test
scas
mov
mov
xor
jge
add
out
and
jge
clc
adc
jle
jb
push
push
inc
sub
call
std
cmp
push
movsl
je
add
shlb
into
push
xchg
mov
aad
cmp
aas
js
mov
xchg
pop
int
call
cmpsb
lock
jmp
sub
or
into
call
mov
xchg
xor
fdivrl
adc
jbe
dec
dec
arpl
pop
push
ja
fs
xchg
mov
dec
in
gs
cmp
adc
mov
xor
pop
push
push
mov
xchg
fstpl
sub
sub
shlb
xor
jmp
inc
pop
inc
jnp
or
es
cmpsb
ds
lret
pop
ds
mov
sub
sub
pushf
jne
push
out
sub
mov
outsb
lds
jbe
ja
into
in
out
inc
or
jne
daa
fildll
mov
fidiv
rcrl
pop
bound
push
inc
or
sbb
sub
scas
adc
push
out
lcall
mov
test
cmpsb
les
rcll
mov
lahf
jg
aam
call
ds
je
sbb
sbb
or
repnz
xchg
movsl
gs
sbb
outsb
push
inc
mov
movsb
xchg
repz
xchg
mov
into
and
outsl
sub
mov
push
cmpsl
xor
add
insb
sbb
andb
repnz
cltd
inc
xor
mov
lahf
in
sarb
cmc
mov
or
xor
mov
lret
inc
cmp
jmp
mov
sub
ss
xor
push
in
js
push
subb
xchg
fmuls
lret
cltd
and
icebp
aas
cmp
fistpll
adc
or
es
sarb
int
mov
sub
mov
insl
lock
xchg
cmp
xor
ljmp
imul
cmpsl
leave
sub
or
xchg
int
in
out
fbld
inc
out
pop
mov
push
jp
pop
mov
jno
mov
cli
push
jns
sbb
dec
inc
add
mov
in
ja
pop
dec
xchg
fdivp
add
mov
fmuls
mov
push
loop
mov
pop
mov
mov
mov
stos
ror
stc
jnp
outsb
jnp
test
std
inc
fistl
sti
jge
jl
inc
sar
cmp
mov
std
cmp
xor
loop
cmp
fisubl
xlat
jb
mov
leave
stos
add
scas
push
dec
cltd
xchg
rclb
sub
js
mov
sbb
xor
dec
jns
jns
outsb
mov
or
jg
cmp
xlat
xor
ds
out
dec
add
rclb
movsb
sub
lds
loopne
push
daa
call
adcb
pushf
mov
mov
dec
mov
jbe
xor
jle
sti
cmpsb
or
sub
push
insb
imul
fidivl
mov
sub
jl
stc
sub
scas
lds
int3
mov
sahf
movsb
push
outsl
test
lret
out
inc
in
lods
mov
ss
je
dec
les
lret
xor
adc
inc
jg
stos
in
jp
dec
lcall
inc
pop
ret
idivl
js
outsb
leave
sub
int3
xor
lods
shl
insb
test
jl
scas
gs
push
inc
je
loop
lahf
pop
loop
movsl
sarl
sub
es
push
mov
iret
sub
ja
lock
add
xor
cld
add
push
or
out
and
loopne
out
mov
jns
movsl
mov
cwtl
cli
insb
mov
mov
stc
push
jb
test
xor
setne
stc
sub
mov
pop
sub
dec
mov
addl
push
inc
jl
cmpsb
movsb
sub
mov
pop
dec
inc
dec
int
cmp
stos
ljmp
sub
js
int3
push
cmp
push
cmp
dec
repnz
fcomps
fwait
mov
jge
push
pop
js
push
mov
mov
jo
outsb
sahf
lods
repz
addr16
insb
lret
rclb
inc
sbb
mov
cmp
add
je
je
mov
scas
xor
mov
fstpl
cltd
out
jg
dec
mov
in
inc
insl
mov
cmpsb
xor
mov
dec
mov
xchg
mov
cmpsb
mov
inc
in
inc
mov
mov
mov
dec
mov
and
fist
pop
test
out
push
sahf
pop
xor
insb
jb
add
pop
push
out
push
add
sub
or
adc
aas
xchg
add
pop
fsubl
cs
loopne
lods
sub
repz
sub
scas
mov
add
fistp
in
mov
xchg
cmp
push
dec
jno
or
xchg
mov
nop
dec
lcall
scas
jno
inc
dec
mov
pushf
lods
jnp
adc
fisubl
inc
fstpt
push
cmp
out
xchg
pop
inc
sub
in
xchg
cmp
mov
subl
out
sub
pop
pushf
es
xor
push
pusha
imul
sbb
imul
add
in
lods
ja
daa
inc
gs
or
mov
fs
pushf
int3
jbe
gs
js
push
xorl
adc
js
add
shll
in
test
pop
xchg
cmp
stos
adc
cmc
ds
sahf
jl
xor
dec
movsb
dec
pop
push
add
cmpsb
cld
jmp
jp
out
push
out
xchg
movsb
push
add
ljmp
pop
sub
inc
mov
insl
push
sub
loopne
xor
jmp
stos
jl
jge
xor
xchg
pop
inc
aas
push
and
fsubrp
imul
lret
mov
mov
xor
cmp
scas
test
jnp
sbb
out
sub
dec
scas
xchg
ljmp
in
scas
in
loopne
mov
add
mov
jp
sbb
jmp
sbb
shl
cmp
rorb
mov
lahf
sub
jno
xchg
cli
adc
ret
add
loop
test
repnz
xor
adc
dec
jne
pushf
js
test
cmpsl
sbb
jmp
rorl
push
jo
push
rcrb
loopne
or
in
adc
mov
jo
xor
sub
aaa
rolb
imul
bound
xchg
lcall
xchg
add
inc
icebp
jnp
xor
sbb
data16
repz
outsl
push
xor
cmp
mov
outsb
loop
lods
cmpsl
icebp
es
shlb
cwtl
mov
dec
icebp
or
and
adc
lods
bound
pop
mov
or
aaa
jnp
push
sbb
stc
ss
fwait
mov
pop
lods
in
mov
lret
in
repz
fisubr
ja
aad
push
pop
daa
mov
fidiv
push
adc
int3
inc
fwait
in
mov
call
mov
xchg
lret
mov
fbstp
pop
icebp
movsl
es
decl
jns
sbb
sahf
stos
mov
sbb
mov
cmp
lock
pop
adc
mov
ljmp
lea
mov
inc
fisubrl
aad
leave
iret
mov
enter
xor
xchg
or
and
scas
push
ljmp
jb
fbld
repz
stc
add
sarb
rorb
sbb
pop
sbb
push
xchg
sub
cmp
sbb
mov
cmpsl
push
inc
jne
sbb
ds
cmp
sub
adc
xor
and
jne
inc
cmp
lahf
xor
jne
scas
dec
stc
adc
inc
clc
in
out
adc
repnz
and
out
fistp
cmp
stc
adc
dec
lock
sahf
lods
xor
push
xor
imul
and
add
ss
xor
adc
push
jns
aad
jns
fiadd
xor
jnp
sbb
ficom
xchg
pop
js
and
dec
pop
enter
lcall
pop
cld
test
loop
out
and
mov
mov
add
mov
mov
pop
nop
dec
insb
sub
xchg
mov
xorb
lds
cmpsl
or
add
jge
mov
cli
fmuls
xchg
repz
jp
jo
out
mov
les
and
int3
lahf
gs
and
fdivrs
xor
adc
sub
mov
xchg
push
js
inc
cmpsb
jmp
jmp
lret
mov
lock
stos
sub
pushf
add
mov
pop
jns
dec
movsb
test
mov
lds
insl
fcomps
adc
cli
arpl
pop
sub
cld
jp
inc
scas
fldenv
xchg
sub
movsl
inc
dec
add
jne
push
imul
mov
notl
fldcw
loopne
sub
mov
mov
lods
xchg
idivb
pop
cld
sbb
push
lock
jns
xor
fabs
xor
into
sbb
adc
movb
mov
lret
mulb
sbb
fisubrl
out
add
inc
jmp
mov
xor
mov
rcl
pop
hlt
sahf
inc
xor
fs
xchg
sub
cs
sub
lds
mov
notb
inc
stc
dec
movsl
out
sub
mov
mov
in
and
xchg
cli
sub
adc
mov
push
mul
mov
xchg
and
rcll
or
push
pushl
mov
scas
lds
cmp
in
lods
aad
out
jb
xchg
sbb
lret
add
in
cmpsb
gs
pop
dec
lods
or
jmp
mov
inc
ljmp
push
jge
scas
dec
push
and
dec
add
cmp
jnp
and
cmpsl
mov
dec
scas
fcmovb
mov
push
sarb
pop
add
movsb
out
ret
scas
lcall
fstpl
stc
mov
adc
fnop
arpl
scas
mov
dec
mulb
adc
jbe
mov
cmp
push
mov
loopne
push
mov
jmp
loop
mov
test
testl
dec
inc
addr16
in
les
mov
cmp
loop
dec
pxor
mov
mov
out
aad
mov
inc
push
jl
rcr
stos
rolb
test
es
out
cwtl
fisubr
xchg
lods
jmp
ss
mov
pop
test
mov
outsb
jnp
cmpsb
sbb
imul
jl
cltd
lcall
fbld
imulb
lahf
pop
andb
inc
ficom
insl
lahf
pop
mov
xchg
js
xor
pop
call
cmpsb
mov
add
adc
ljmp
arpl
add
sbb
push
jmp
xchg
mov
fbld
sub
icebp
push
repnz
mov
sahf
and
lock
aam
addr16
hlt
notb
lods
inc
sahf
push
mov
mov
sub
push
jno
push
imul
je
mov
sub
mov
shrl
push
test
sub
decl
pop
das
sti
mov
repnz
dec
repz
and
jl
jg
jle
mov
mov
inc
xor
in
sti
mov
push
in
mov
mov
push
lahf
daa
pop
jmpw
rolb
lret
stos
fidivrl
and
stos
in
fwait
pusha
push
or
mov
rclb
mov
cs
popf
add
jbe
mov
mov
icebp
and
adc
inc
dec
into
movsl
adc
stc
dec
fisub
fisttpll
cmp
and
sub
jmp
pop
sahf
add
jl
sahf
hlt
stos
fmull
into
xlat
lods
push
xchg
in
jp
inc
pop
jne
cmp
xchg
fstps
sub
scas
xor
gs
pop
inc
jge
test
in
ljmp
push
dec
test
loop
insb
movsl
sbb
lahf
xchg
pop
adc
jns
stos
and
out
sub
inc
in
and
sti
add
pop
fcomps
xor
cli
movsb
lcall
scas
jns
push
fstps
or
sub
add
aad
jle
lock
fsubr
push
pop
repz
push
fwait
addr16
cmp
aad
and
cwtl
or
mov
iret
push
scas
push
jbe
or
xor
out
xlat
ficoml
leave
inc
cld
mov
and
lret
xchg
push
in
mov
xor
lock
test
mov
ja
dec
push
je
scas
adc
inc
jns
add
and
cli
lret
pop
dec
mov
xor
rclb
fisubrl
xor
jno
inc
outsb
add
pop
or
add
jno
out
cmp
mov
lret
femms
cmc
push
jl
and
jns
dec
ret
cltd
jle
popa
das
divb
jns
sub
push
fcmovu
push
inc
out
in
hlt
dec
xor
mov
mov
jne
xor
xchg
subb
iret
sbb
and
push
xlat
mov
inc
jp
out
dec
scas
push
test
aaa
jle
icebp
pop
mov
or
push
imulb
cmpsb
jnp,pn
insb
inc
outsb
push
fcomp
inc
push
leave
jne
call
cmpsl
lea
ret
fdivl
adc
daa
or
outsb
cltd
fcompl
inc
mov
jo
xor
mov
mov
xlat
test
xor
mov
push
jg
pop
or
adc
loop
leave
inc
cmp
call
movsl
into
lock
sub
lret
ja
dec
popa
dec
lods
aaa
lods
pop
mov
mov
in
cmpsw
jmp
cmp
nop
into
mov
pop
jno
fdivr
inc
movsb
outsb
cmpsl
imul
daa
popa
fiaddl
insl
into
xor
pusha
cli
jbe
lret
loop
pusha
mov
repnz
ss
mov
addr16
mov
inc
push
add
mov
lret
movsb
stos
popa
fdivp
sarb
mov
aas
lcall
fidivl
mov
push
push
scas
inc
enter
pop
jbe
xchg
test
jbe
fsts
dec
loop
dec
mov
loope
aas
out
cli
add
cmp
iret
pop
jbe
mov
inc
fucomp
arpl
iret
adc
push
andps
leave
outsb
dec
push
pop
adc
push
mov
out
adc
mov
add
jns
mov
sbb
insb
mov
mov
push
les
shr
sub
jb
or
push
cmp
and
and
lcall
loope
pop
call
aaa
ja
sub
leave
xor
inc
pop
in
sbb
and
mov
cmp
pusha
sti
fucomp
lret
and
xchg
gs
je
bound
out
aam
add
pop
testl
inc
lcall
xchg
into
xchg
xor
jne
pushf
pop
cmp
inc
jbe
clc
xchg
cwtl
fnstenv
xchg
loope
ds
mov
jp
ret
mov
outsb
fs
dec
pop
scas
das
stc
sub
jne
lret
loop
add
push
dec
push
int
xor
call
fdivrl
jae
mov
bnd
into
dec
fcomp
sbb
fsubl
test
dec
mov
cmp
sub
inc
jb
fcoml
add
cmpsb
pop
or
dec
cwtl
sti
add
test
inc
out
lods
pop
inc
jns
sahf
movsl
jnp
icebp
sub
xor
inc
cmpsb
xchg
stos
mov
call
xor
das
push
or
push
cmp
fsubrl
xor
pop
adc
stc
cmp
stos
push
push
jnp
adc
sub
sub
out
push
fstpt
mov
cld
add
fmull
out
pop
or
scas
push
dec
test
jl
inc
jnp
fstpt
mov
fwait
add
push
data16
das
mov
imul
fcmovb
cmc
xor
scas
xor
jb
jb
fist
lcall
push
sub
mov
cmp
mov
inc
lret
mov
xchg
inc
sbb
xor
cld
dec
lods
push
push
movsl
mov
pusha
xchg
js
fs
xchg
adc
mov
ja
hlt
adc
xor
in
jmp
xchg
fisubl
xor
mov
aaa
jne
inc
pop
xor
cwtl
adc
rolb
in
jmp
sahf
icebp
xchg
test
xchg
rclb
sbb
mov
mov
mov
nop
popf
mov
xor
jle
scas
inc
mov
dec
repz
dec
in
into
std
aas
mov
adc
xor
and
mov
pop
test
mov
fs
push
jp
xor
fidivr
mov
xor
test
push
in
adc
and
inc
inc
jecxz
jb
jmp
mov
fisub
mov
loop
pop
lret
sahf
aaa
jl
xor
cmp
movsl
cli
jne
repnz
inc
std
adc
mov
pop
jge
dec
fdivl
xchg
sub
xchg
xchg
push
xchg
mov
mov
mov
sbb
or
sub
push
push
jge
or
xor
outsb
icebp
stos
jo
jo
aad
pcmpgtw
sub
sub
jg
push
xchg
and
fdivr
inc
js
dec
jae
cmpsb
jg
jb
or
pusha
push
sub
or
push
xchg
in
cmp
bnd
mov
in
lcall
mov
cmpsl
sub
inc
sahf
cmp
iret
cltd
mov
rcrl
js
clc
inc
or
xchg
mov
cmp
sti
sub
cs
mov
mov
imul
mov
xchg
push
imul
movsb
enter
mov
popf
hlt
cmp
das
repnz
adc
mulb
mov
adc
icebp
ds
mov
xchg
jle
icebp
pop
fisubr
movsl
popf
pop
imull
xor
je
fwait
or
or
jo
cmp
lret
pop
xchg
aaa
mov
jo
mov
mov
sub
icebp
imul
fiaddl
leave
pop
push
mov
mov
pop
jno
out
xchg
xor
lock
in
sahf
lods
xchg
inc
out
imul
add
sbb
jle
mov
ss
jne
negl
enter
mov
pop
or
pop
mov
mov
mov
shrb
pop
pop
test
and
rclb
dec
out
fcmovne
movsl
push
adc
popf
xchg
dec
mov
int3
dec
mov
out
fnstsw
xor
jmp
out
pop
sahf
scas
jb
push
int3
sub
ss
notb
jge
pop
es
inc
outsb
jbe
outsl
mov
inc
rorl
add
push
mov
dec
cmp
push
cmpsb
pop
stc
jb
pusha
sbb
xor
xchg
or
mov
loopne
aaa
or
xor
inc
repz
mov
cmp
mov
or
ja
insb
andb
cld
inc
movsb
mov
test
mov
push
or
notb
ljmp
cmp
jno
jp
scas
dec
cmp
xor
bound
mov
sbb
pop
mov
int
dec
divb
and
jp
xor
inc
jl
lahf
stos
notl
mov
adc
cmp
and
pop
mov
jb
dec
or
mov
addr16
arpl
fimul
fdivl
inc
or
xchg
adc
data16
and
dec
cmp
out
cltd
pop
adc
and
lods
sub
into
push
sbb
jae
sub
add
xor
inc
outsl
repnz
mov
and
cwtl
xchg
aam
inc
jmp
lods
push
aad
xor
xorl
jmp
je
jne
cli
fcoml
xor
fidivl
pop
decb
add
jbe
or
in
call
push
cmp
inc
test
sub
pop
outsb
or
loop
mov
xor
jecxz
xchg
test
scas
je
fistpll
inc
jl
jg
les
in
adc
movnti
or
rclb
push
mov
lahf
dec
push
xchg
pop
adc
push
cmp
mov
outsb
cmpsl
int3
int3
jmp
ja
enter
lcall
adc
arpl
pop
cmp
jb
mov
mov
out
adc
dec
out
lahf
dec
cmp
sets
fdivs
add
es
jns
cmp
inc
inc
lock
inc
ret
xchg
mov
jp
xlat
inc
mov
push
int3
iret
movq
ss
adc
std
cli
fildll
push
sub
fcompl
xor
lock
idivb
inc
dec
jle
jbe
ficom
out
scas
into
outsb
or
inc
fisubr
push
stos
jmp
cmpsl
sarl
adc
xor
je
mov
fucomp
push
cmpsb
stos
pop
aaa
lods
xchg
inc
fsubrs
scas
pusha
mov
dec
jb
mov
sbb
sub
bound
fstpl
repnz
mov
cmpsb
dec
shrb
jmp
inc
mov
cld
mov
fldenv
sub
mov
adc
xchg
aam
xchg
cs
xor
daa
xor
daa
test
mov
aaa
fwait
js
mov
insb
xchg
cmp
sub
mov
jecxz
loopne
push
sbb
adc
in
fs
jnp
pop
adc
fs
loop
xchg
out
jb
je
jmp
lock
push
aad
sub
notl
sbb
fcomps
add
mov
and
cs
ss
fs
and
and
jb
jmp
dec
shrl
jo
cmp
push
jp
xchg
enter
dec
cmpsb
jbe
fucomip
clc
in
das
mov
movsl
xchg
shlb
nop
fldl
and
sub
jno
fcmovbe
popl
ret
jg
lock
sub
dec
sahf
push
aad
inc
sub
cmc
gs
in
jne
lods
xchg
fsubl
xor
cmp
xor
pop
scas
jne
fucomp
xchg
jp
and
mov
pushf
repnz
leave
jp
fdivs
testl
es
call
mov
mov
stos
pop
add
pop
movsl
in
scas
out
dec
scas
imulb
pop
hlt
sbb
xchg
sub
mov
dec
sbb
push
je
cmpsb
fsubs
xchg
mov
adc
xchg
aaa
int3
jl
lret
pop
leave
push
pop
push
xor
inc
fs
popf
out
mov
jbe
xor
dec
shl
xor
lret
ret
mov
push
dec
out
and
mov
fs
push
in
mov
loop
fldcw
or
lret
out
sbb
cmp
das
cltd
pop
xor
int3
jb
or
jb
loopne
dec
sub
popa
sub
in
aas
xor
inc
les
out
cmpsl
nop
and
jmp
es
dec
xchg
int3
jo
je
test
mov
lret
or
imul
js
hlt
into
out
mov
mov
movsl
xchg
sub
sub
fcmovnbe
outsb
int
push
lret
push
shr
scas
push
inc
push
push
push
roll
mov
in
push
dec
inc
in
sbb
dec
inc
lods
outsl
adc
jns
lds
or
xor
xor
jb
add
rorb
sub
jae
push
push
negb
mov
pminub
fsubp
inc
mov
mov
inc
mov
into
bound
jg
pusha
push
gs
pop
test
in
aas
xor
test
rcrl
daa
dec
pusha
repz
pop
pop
xor
je
repnz
fimul
fmul
inc
cmp
and
les
scas
xchg
imul
jecxz
out
add
jmp
mov
mov
inc
cwtl
bound
jb
notb
push
xchg
inc
scas
and
ficompl
xchg
movsb
or
adc
lods
mov
inc
in
das
pop
movsl
xlat
mov
shrb
fs
popf
aaa
or
sysenter
addr16
test
cmp
inc
cmp
int3
inc
inc
mov
cwtl
leave
jae
xchg
jge
test
outsb
push
push
push
mov
xor
adc
pushf
cwtl
in
fisttp
xchg
in
jp
cmpsl
xlat
cmp
add
or
dec
insl
mov
mov
nop
mov
dec
aad
dec
jmp
xor
imulb
xchg
sahf
popa
jbe
jb
or
imul
xchg
hlt
out
ficompl
and
mov
dec
fldl
test
mov
repnz
iret
adc
cli
sub
stos
xor
stc
xor
cmc
fstpl
inc
stc
and
shrl
add
cmpsb
sbb
movsl
inc
adcl
cmp
mov
or
mov
jbe
pop
xchg
push
scas
stos
lds
add
ret
xor
call
test
outsb
ljmp
out
sub
jnp
cmp
loopne
and
lret
call
mov
mov
lds
adc
inc
ds
ret
push
jmp
bndstx
ja
dec
push
xor
clc
cmp
loop
xchg
push
sbb
pushf
cs
dec
add
xchg
push
aad
inc
aaa
fiadd
test
sahf
cld
mov
hlt
enter
add
ds
movsb
loop
sti
sti
stos
pop
mov
outsl
cli
dec
stos
push
sarb
push
adc
and
fbld
xor
lret
popf
push
adc
mov
loop
cltd
pop
mov
mov
add
push
mov
mov
mov
lods
aas
mov
shlb
inc
fstpt
inc
mov
mov
sbb
leave
sub
mov
leave
inc
push
dec
and
sbb
xor
pop
mov
lods
int
pop
adc
sub
dec
lock
mov
xchg
fnstsw
jb
jbe
push
dec
xchg
inc
mov
cmp
dec
sub
pushf
push
xor
rclb
xor
cmpsb
sub
jo
jecxz
mov
fs
daa
push
xor
fiadd
insl
xor
or
xor
loopne
xchg
pop
popf
inc
jl
dec
hlt
jmp
fsubrs
je
test
addr16
and
push
inc
popf
mov
jno
stc
sbb
aaa
inc
stos
adc
out
insb
add
mov
dec
mov
mov
pop
and
mov
lods
inc
inc
mov
fwait
pop
lcall
push
mov
jl
dec
xlat
xlat
nop
xchg
sub
xor
in
or
inc
mov
out
imul
cmp
jne
movsl
fbstp
push
pop
jmp
push
lcall
mov
scas
sub
sub
xchg
jb
lods
or
sti
mov
mov
daa
psllq
lcall
pushw
pop
mov
mov
fs
push
das
insl
ljmp
add
stos
mov
repnz
fist
cmp
outsb
mov
mov
xchg
lods
jmp
xlat
add
inc
inc
imul
js
stc
dec
pushf
fsubrp
jg
inc
aad
aam
repz
loope,pn
jbe
cli
xor
mov
jg
xor
mov
dec
pop
and
repz
out
push
fcmovnu
ds
xchg
fmul
ja
divb
outsb
cmpsb
cmp
add
out
scas
sarl
lret
mov
je
push
in
movsl
or
dec
and
lahf
mov
pop
lret
negl
ud2
cmpsb
dec
dec
jae
mov
loop
pushf
leave
aaa
push
dec
jmp
stc
aad
je
inc
test
xchg
ss
jno
les
inc
push
dec
jnp
test
out
xor
xor
loop
mov
inc
cmpsb
push
push
xor
pop
in
pop
lock
stc
lret
jle
xor
xchg
inc
int
bound
add
mov
dec
dec
jno
lss
mov
xlat
inc
repz
cs
jns
hlt
xlat
call
les
stc
popa
mov
insb
xchg
fidiv
addr16
mov
mov
add
enter
jle
mov
mov
ja
fistpll
xchg
mov
fldenv
mov
lock
xchg
addb
in
pop
popf
xchg
hlt
pusha
jae
das
xchg
jbe
js
je
push
jl
movsb
jle
xor
sbb
sahf
cli
jno
adc
mov
xor
adc
xor
xchg
sbb
lcall
jne
loope
lahf
dec
mov
xor
fcomps
test
mov
xchg
leave
decl
or
cmp
pop
mov
push
sti
mov
inc
xor
jmp
add
movlps
cmp
push
rclb
xchg
test
fdivl
add
mov
test
mov
aad
pop
clc
mov
sub
and
mov
mov
ljmp
mov
aaa
pop
inc
in
push
roll
mov
movsb
loop
mov
daa
push
cmp
dec
xchg
xchg
lret
xor
clc
fwait
data16
xchg
lods
jle
jno
cmp
mov
cmpsb
inc
cld
cwtl
cmc
cmp
insl
or
in
sarl
dec
insl
mov
sbb
scas
gs
scas
dec
mov
cmp
sbb
cmp
gs
jns
cld
jae
or
insb
in
cmp
std
inc
mov
push
jle
inc
int3
xor
fxch
cmp
je
mov
jno
stos
sub
call
out
or
bound
inc
push
sbb
add
sub
mov
dec
pushl
mov
jge
ret
lret
or
cltd
int3
out
xchg
pushf
xchg
test
lahf
fmull
cmp
xchg
sahf
and
xchg
add
mov
jne
or
pop
scas
mov
push
imulb
adc
mov
and
sbb
scas
sub
mov
cmp
ss
insl
fsubrs
mov
sub
into
sub
mov
add
jns
xor
add
or
adc
leave
cmp
es
lods
test
cltd
push
xchg
mov
mov
xchg
fldcw
inc
xchg
out
loop
fsin
cmp
ja
insb
pop
aad
js
xchg
xchg
push
mov
jle
pop
addl
mov
push
jbe
sub
arpl
inc
jne
sarb
mov
dec
fs
xchg
jp
es
mov
in
repz
das
test
mov
mov
in
inc
sbb
cmp
sub
stos
loopne
dec
adc
mov
in
js
out
inc
aad
pusha
and
push
dec
add
lret
cmpsb
jo,pn
push
push
shll
cmp
test
pop
cwtl
mov
push
mov
dec
lods
movsl
dec
dec
idivb
inc
clc
dec
mov
imul
xor
je
cld
push
fldenv
sti
cmc
aam
stos
sahf
pop
pop
adc
pop
int3
pop
test
call
lods
mov
in
and
stos
lods
fdivs
mov
nop
dec
cmpsl
push
pop
cmp
loop
mov
add
test
mov
adc
icebp
pop
mov
mov
push
stos
negb
mov
leave
fsubr
sub
negb
bswap
jne
xchg
and
in
addr16
mov
dec
cmpsb
sbb
xor
std
cli
cmp
rcl
sbb
push
lcall
stos
loop
mov
dec
mov
bound
sub
dec
cmp
xor
addr16
fisub
aaa
push
aad
add
push
sub
loop
lcall
mov
or
dec
inc
ret
in
pop
in
imul
and
test
popf
jo
jno
adc
popa
adc
sahf
jmp
jo
inc
imul
outsl
xor
jle
cld
mov
mov
cmpsl
xor
fnstenv
fisub
lret
mov
mov
xor
xor
mov
loop
movsb
iret
pop
xchg
hlt
repz
pop
jb
out
mov
rcrb
leave
xlat
xchg
and
xchg
cli
ljmp
popf
insb
es
adc
cwtl
xor
jno
xchg
fs
inc
lods
fsts
mov
out
cmc
outsb
cltd
xlat
sbb
dec
gs
scas
sarl
and
ss
fstl
inc
jne
repz
xor
and
mov
push
fdivp
add
je
add
cld
adc
jb
in
push
pushf
adc
and
sub
mov
and
bound
xchg
in
pop
aaa
xor
add
push
loope
lock
jb
add
xchg
fsubl
std
das
mov
mov
xor
sub
jb
push
push
inc
fcompl
lret
xor
incl
leave
insl
sub
aam
mov
fidivr
pop
mov
mov
outsb
sbb
adc
push
mov
insb
cli
add
xchg
and
pop
movl
fnstenv
sti
cltd
dec
jns
loop
in
or
and
sbb
jge
scas
jne
sti
shlb
or
sub
lcall
orb
mov
pop
fs
push
in
mov
das
or
and
pop
pop
aad
sti
dec
and
sub
dec
sub
out
cwtl
lcall
mov
rcll
sbb
divb
mov
das
mov
sahf
daa
in
or
xor
xchg
mov
xchg
stc
rcll
gs
push
sub
push
pop
jns
loopne
scas
mov
dec
hlt
out
mov
xchg
jb
testb
jp
leave
rorl
test
mov
jle
mov
outsb
mov
push
mov
mov
push
jne
scas
stos
mov
or
adc
mov
adc
ret
out
push
add
cltd
jns
jo
stos
mov
dec
out
jbe
mov
jne
inc
aam
pop
out
xchg
popf
or
xchg
aas
mov
movsb
inc
ljmp
out
or
dec
xor
in
movsb
aad
ljmp
stos
movsl
cmpsl
outsl
cmp
xchg
push
je
or
xor
add
lods
lret
xchg
jge
js
loope
out
popa
dec
daa
xor
and
sub
stos
xchg
int3
xchg
push
test
jle
lret
jg
push
jne
scas
push
bound
fwait
or
mov
cmpsl
sbb
xchg
sahf
mov
dec
mov
pop
insb
push
xor
outsb
sbb
xlat
iret
popf
ret
imul
mov
sahf
cmpsl
pop
push
mov
mov
inc
jle
pop
cmc
cmp
mov
sti
cwtl
inc
add
out
dec
cmc
push
scas
popf
push
xor
lahf
sub
in
mov
mov
pop
loop
sar
push
push
pop
inc
insb
imulb
jbe
popa
mov
les
mov
xor
adc
sti
ret
popf
fsubrl
std
pop
mov
fildll
loop
mov
insl
push
xchg
mov
mov
sub
inc
movsb
leave
push
stos
into
mov
mov
stos
aaa
push
dec
xchg
incb
and
js
pusha
mov
or
gs
push
mov
pop
mov
sub
xchg
add
mov
jo
xor
cmp
mov
xchg
mov
xchg
fisub
loop
push
dec
insb
jl
xor
mov
push
repz
inc
mov
lret
lods
cltd
dec
dec
nop
mov
std
jle
loopne
icebp
lds
aam
fcoml
or
cli
aad
fnstsw
in
sub
fs
stos
mov
pop
sbb
test
xchg
push
pop
mov
mov
add
and
dec
or
jbe
lea
push
mov
push
sub
push
loopne
push
mov
stos
scas
inc
mov
add
aaa
lret
push
and
stos
cli
push
pop
mov
adc
inc
xchg
shl
push
pop
fnsave
sub
jae,pn
insb
jle
adc
sub
push
push
loop,pn
loop
cmp
xor
jg
inc
push
or
mov
das
clc
adc
inc
test
push
cmpsb
dec
inc
cli
inc
cmpsb
inc
int
push
xor
test
mov
popa
pop
xchg
mov
jbe
into
inc
xchg
xor
loop
cwtl
sub
stc
sub
dec
insb
fwait
or
fs
out
rcll
pop
scas
and
negl
pusha
mov
out
jecxz
out
mov
dec
cmpsb
jle
xor
int3
inc
inc
rclb
xor
fildll
repnz
push
cmp
rolb
fisub
stc
lret
cmpsl
inc
mov
sbb
clc
cmpsl
cld
out
ret
jmp
addr16
pop
stos
scas
mov
mov
dec
test
std
inc
jle
arpl
dec
subl
aad
imul
fmul
dec
jae
adc
mov
test
mov
cli
hlt
stos
cmpsl
mov
xor
xor
jge
jno
jnp
imul
cmp
incl
xor
leave
jg
sub
fadds
movsl
pushf
repnz
mov
mov
sub
std
cmp
cmpsb
add
ljmp
sahf
dec
push
inc
or
jle
dec
lods
leave
add
push
xor
dec
scas
pop
mov
push
ljmp
ljmp
push
ds
fidivl
cmp
rcrl
js
je
aad
mull
or
jge
cwtl
rorb
in
dec
inc
cltd
jno
int
aam
aad
push
xor
fs
lahf
pusha
inc
jle
adc
pop
shl
insb
xor
lds
cmp
leave
xor
pop
das
gs
fucomp
test
push
push
sub
stos
or
mov
cmp
inc
mov
push
fistl
into
cmpsl
push
mov
js
je
fsts
imul
int3
daa
das
inc
sar
adc
mov
push
sub
cmc
out
dec
xchg
sbb
stc
or
mov
movsl
mov
mov
and
pop
fsubrl
xor
xchg
stos
inc
mov
iret
mov
mov
mov
xchg
sbb
ss
pop
inc
dec
mov
sub
dec
test
mov
aam
mov
adc
pushf
adc
mov
stos
jno
repz
lcall
ret
fldcw
dec
sbb
insl
test
popf
daa
rorl
xor
iret
mov
xchg
push
aas
lds
xchg
add
ficoml
xchg
inc
push
popf
cli
gs
into
fwait
repz
cmpsb
scas
xor
rcl
int3
je
sti
jp
cmp
test
mov
adc
inc
push
push
mov
out
push
add
cmp
rcrb
jbe
cmp
dec
mov
insb
sub
mov
xchg
fcoml
lret
push
lret
sub
mov
xchg
cmp
stos
xor
push
ljmp
jne
jo
push
cmp
or
xchg
out
xchg
jae
fmuls
aas
gs
xchg
loop
mov
imul
aam
jmp
out
movsb
sbb
lcall
jg
in
shrl
jno
das
jb
adc
xor
pop
mov
xchg
push
and
test
mov
fldt
xor
jno
add
xchg
imul
pop
mov
lds
jae
into
xchg
fsubr
inc
mov
mov
mull
jle
pop
sti
xor
mov
test
adc
mov
jb
je
xchg
jle
push
mov
xchg
cltd
scas
fisttpll
xchg
push
pop
inc
push
inc
lods
lahf
or
or
lret
js
cld
sbb
lret
jbe
push
daa
fcmovne
xchg
add
outsb
mov
dec
mov
mov
or
xor
adc
mov
xor
ss
pop
mov
inc
jp
movsb
cltd
cli
xor
adc
xchg
aam
pop
test
mov
cmp
lahf
aam
stos
popa
std
enter
adc
sbb
mov
sbb
xchg
sti
push
ficoml
sbb
push
into
cld
jl
mov
adc
push
sbb
movsb
fldt
stos
lret
sti
push
enter
scas
sti
test
in
rcr
jnp
add
jbe
fstl
mov
aam
pop
in
sub
ja
pop
cmpsl
pop
add
cli
lcall
adc
repnz
mov
in
out
jne
mov
mov
aam
xor
fnstcw
jne
scas
ret
movsl
mov
daa
fidiv
dec
pop
push
scas
xchg
mov
scas
leave
adc
dec
push
in
out
dec
cmpsl
push
xchg
je
lret
mov
sub
out
loop
sahf
xchg
or
dec
jb
cmp
btl
fucomip
mov
call
testb
inc
mov
push
cmp
daa
xlat
mov
jl
scas
push
pop
ja
outsl
std
dec
mov
pop
es
mov
xchg
mov
xor
ljmp
push
leave
popf
loop
in
fs
in
int3
repnz
fwait
jns
mov
hlt
xor
xchg
cmp
mov
lret
mov
mov
mov
lret
pusha
sbb
or
lods
fstpl
xchg
mov
xor
inc
ljmp
jg
cmpsb
les
sub
outsb
push
enter
mov
fsubrp
jns
leave
out
jb
jno
dec
push
inc
xchg
jmp
lret
ss
inc
dec
ss
xchg
stos
mov
push
scas
xchg
pop
pop
pushf
sti
ljmp
pop
ss
fistp
loop
cmpsl
test
outsb
pop
jno
aad
in
adc
add
mov
mov
fs
cmp
inc
xlat
and
sbb
pop
push
or
adc
dec
cmpsb
mov
out
dec
or
scas
inc
loopne
ja
adc
lret
add
jno
jns
pushf
pop
dec
addr16
cmp
psadbw
mov
mov
fnstcw
or
scas
lahf
pop
push
mov
sbb
sub
out
push
inc
popf
ds
enter
inc
mov
adc
sbb
push
xchg
xchg
adc
insb
loopne
sbb
xchg
and
arpl
pop
or
push
push
xor
xchg
jp
inc
out
rolb
divb
pop
inc
aad
mov
mov
test
pop
shlb
mov
les
jmp
cmp
xor
les
push
adc
call
mov
imul
cs
adc
pop
out
mov
call
dec
mov
jns
pop
sti
push
stos
ds
jecxz
ljmp
imul
add
sub
dec
mov
fs
out
cmp
inc
outsb
fstpt
add
ljmp
or
sub
lods
pop
mov
mov
je
jo
pop
xchg
pusha
or
outsb
shll
sub
mov
xor
add
lods
cmpsb
movsl
cli
jb
xor
repnz
enter
cmp
frstor
out
gs
sti
push
and
stc
cmp
enter
daa
xor
adc
mov
xor
arpl
lods
popf
fwait
adc
adc
inc
sbb
aaa
sub
test
out
lods
sbb
ja
lock
mov
pop
lods
mov
adc
std
rcl
inc
ret
dec
pop
pop
out
out
push
mov
scas
out
imul
cwtl
shlb
pop
jno
mov
jnp
push
inc
xor
insb
pop
push
test
cmp
adc
lods
out
dec
fisttpl
jmp
sub
cmp
dec
ljmp
and
lahf
icebp
mov
test
pop
cs
insb
pop
mov
pop
mov
jne
dec
push
jnp
add
pop
or
data16
or
lods
aad
decl
inc
jg
jp
cmp
cmp
pop
lret
sub
jmp
sbb
or
jl
gs
mov
pop
push
int3
in
mov
xchg
pop
clc
add
xchg
rcll
ret
mov
imul
xchg
pop
jne
mov
lret
xor
lahf
mov
push
mov
cmp
lcall
pop
cmp
inc
jge
hlt
xchg
cmp
test
leave
test
and
ja
add
mov
and
or
outsb
dec
idivl
xor
push
test
mov
push
pop
mov
loop
xchg
inc
pop
inc
insb
dec
jg
pusha
pop
mov
pop
sub
lds
mov
xor
push
push
rolb
loope
jno
xchg
idivl
xchg
movsl
ds
or
jge
inc
aam
push
push
inc
xchg
lret
cmp
out
dec
jge
fucom
xor
sub
adc
rolb
pop
cmp
imul
nop
xor
push
sbb
out
popf
jl
mov
and
and
les
mov
inc
call
xchg
push
imul
jae
mov
xor
pop
push
in
daa
cmp
sbb
loopne
std
xchg
out
ret
jp
sub
iret
popf
out
ss
add
mov
mov
sub
cli
mov
mov
jae
adc
cld
push
push
inc
imul
sub
mov
pushf
jb
push
inc
in
jb
xor
cwtl
add
stos
cmpsl
dec
adc
push
and
dec
push
cmpsb
ljmp
cmpsb
pushf
cmpsb
je
in
mov
mov
gs
jle
stc
incb
xor
sub
xchg
cmp
xor
xchg
test
jb
push
das
sbb
cs
je
inc
lods
cmc
movsb
stos
cwtl
pop
jae
dec
inc
sar
rcl
gs
cmp
mov
push
ja
jbe
dec
mov
add
roll
nop
pop
add
inc
pop
ljmp
xlat
mov
lret
and
hlt
push
xor
cli
adc
ljmp
movsl
jbe
js
or
out
adc
xor
lods
jne
mov
mov
pop
xlat
stos
movsl
mov
lret
ss
rorl
shrl
xchg
push
jb
jb
gs
push
jno
popf
add
mov
psubsw
int
mov
test
orl
lahf
jmp
out
xlat
and
ja
mov
lods
jae
mov
jo
mov
xor
aas
rcrl
push
xor
repnz
sub
sti
sub
je
jns
pop
icebp
mov
xor
xlat
gs
mov
lods
push
jge
xor
jb
jne
dec
mov
in
mov
sbb
pop
decb
xchg
sahf
cli
movsl
popf
pusha
sub
cmc
lret
or
pop
cmp
mov
dec
sarl
push
loopne
cmp
mov
jns
mov
call
insb
jl
stc
sbb
push
push
xor
cli
notl
out
fs
out
pop
loop
and
aam
movsl
jg
mov
dec
mov
ss
inc
mov
mov
pop
inc
xor
xchg
mov
aas
bsf
push
ret
or
js
mov
mov
sub
jg
dec
adc
xor
add
add
fs
xor
sub
in
push
add
mov
cwtl
ss
mov
xor
movsl
loopne
mov
sahf
sahf
fsubr
push
call
fldt
mov
test
add
pop
insb
dec
pushl
es
mov
push
fisubl
push
xor
shrb
jmp
sarb
pop
mov
dec
xor
out
pop
insb
pop
bound
add
mov
add
fdivs
mov
in
adc
sbb
stos
jae
pushf
and
ss
pop
adc
int3
dec
mov
jnp
in
adc
jg
shr
shll
cmp
test
push
mov
dec
and
sbb
mov
push
jbe
cmpsb
xchg
sbb
add
dec
rcrb
add
add
cmpsb
push
dec
out
push
add
sbb
add
in
loopne
stos
ljmp
inc
cmc
mov
dec
jns
mov
adc
mov
mov
adc
sbbl
call
jb
ljmp
mov
je
jbe
fstpl
pop
xor
push
test
xchg
xor
sbb
int3
cmc
clc
sti
out
pop
lock
mov
inc
pop
and
jb
pop
pushf
mov
stos
ljmp
scas
mov
or
lret
lcall
xchg
and
push
inc
mov
inc
xor
mov
push
mov
add
stos
gs
cmpsb
xor
pop
cmp
pusha
movsl
jbe
pop
mov
mov
hlt
test
stos
lods
into
push
out
sti
mov
push
fwait
push
leave
or
xchg
mov
sbb
pop
cmp
fstpl
ja
jp
jo
or
ss
jnp
add
xchg
in
xor
sub
lock
jno
test
ds
and
je
jnp
loopne
lods
pop
mov
shlb
aaa
sbb
cwtl
dec
insb
push
mov
mov
inc
cmp
xor
out
sbb
loop
outsl
jno
push
cltd
stc
fidivr
stos
sub
cmp
lret
les
pop
cmpsb
mov
imul
jnp
xchg
or
icebp
movq
jge
cmpsb
fisubr
xor
push
imul
cmp
mov
or
mov
mov
push
and
xchg
mov
fldl2e
xor
add
into
xor
inc
jne
fcmovne
xlat
add
sub
loop
int3
mov
mov
mov
fs
rorb
leave
mov
xor
aad
mov
push
das
xlat
add
bound
cmpsl
cltd
scas
push
inc
push
sahf
mov
push
xor
dec
jl
sahf
xlat
push
push
jb
inc
imul
arpl
scas
popf
mov
outsb
lret
ja
cli
xor
mov
lret
mov
enter
mov
inc
jmp
cmp
into
decb
cmpsl
add
jne
divb
outsb
pop
xor
imul
cwtl
jg
xchg
test
add
in
daa
jnp
cmpsl
inc
mov
xlat
cs
xorl
stos
jg
cwtl
xchg
jmp
daa
inc
push
lret
test
popf
cmpsl
and
adc
jp
inc
pop
mov
dec
xor
push
pop
jmp
dec
test
aas
dec
cltd
out
adc
insb
mov
fwait
repnz
xor
loope
stos
fnsave
jle
cs
out
je
lods
stos
je
stc
jbe
jno
addr16
test
scas
sub
sar
repz
inc
test
dec
adc
sarl
and
movsb
nop
adc
clc
movsb
pop
jb
add
cmp
fildll
push
mulb
xor
aaa
mov
roll
xor
push
mov
dec
xchg
dec
ja
cmpsb
ffreep
inc
hlt
cwtl
gs
sbb
aas
dec
mov
ja
dec
cmpsl
push
imul
in
mov
add
jl
xchg
inc
popf
mov
cli
mov
outsl
out
mov
outsl
aas
push
inc
push
sub
jae
mov
inc
adc
stos
pop
lds
insb
jb
jbe
pop
fs
in
xorl
fstps
xor
sbb
aam
jne
push
xor
adc
ljmp
gs
inc
pop
mov
lret
inc
cmp
sbb
dec
imull
mov
inc
xchg
push
push
mov
cs
add
inc
cmp
add
mov
xchg
push
cmp
dec
leave
rorl
fwait
hlt
mov
sbb
xor
hlt
rolb
fldcw
jnp
imulb
pop
pop
inc
cld
jno
xchg
ds
cli
inc
dec
xchg
sub
aaa
jbe
in
or
cmpsl
lret
fwait
pop
sbb
cmp
f2xm1
imul
stos
stos
das
jbe
popa
cmp
mov
out
inc
jnp
stos
pop
mov
nop
adc
mov
in
pop
jmp
sahf
and
test
pop
sbb
or
fisub
xlat
roll
pop
ret
movsb
sbb
inc
cmp
cmp
xchg
outsb
ljmp
icebp
in
dec
out
xchg
jnp
or
mov
rcr
cmp
in
neg
or
mov
cmp
and
push
cmp
outsb
pop
out
pop
xor
xor
insl
gs
cltd
xor
sub
mov
rolb
pop
mov
lret
mov
int
push
pop
hlt
xor
lret
mov
adc
adc
mov
mov
clc
lcall
cld
cmpsl
sub
xchg
xchg
flds
ss
mov
mov
add
test
jecxz
mov
push
xorb
lret
xchg
push
add
cmpsl
mov
fldl
lcall
scas
mov
scas
insl
xor
xchg
scas
repnz
and
repnz
test
adc
add
test
sub
pop
std
mov
test
sub
sub
loop
cs
or
mov
aaa
lahf
inc
mov
mov
cmp
imulb
mov
mov
icebp
ret
in
and
in
sti
jmp
pop
dec
push
or
or
ja
stos
aad
and
xor
outsl
repnz
xor
loop
jns
jbe
scas
cmp
lret
dec
stc
pop
leave
sbb
in
mov
imul
mov
stc
cmc
cmp
xchg
in
cld
fcomps
cmp
gs
aam
rorb
push
lcall
inc
jnp
test
jae
xchg
jmp
sub
in
jle
lret
call
inc
in
aaa
pop
jecxz
lret
divb
inc
pop
cmp
ja
je
jne
mov
stos
cwtl
cmp
lret
inc
fildl
xor
mov
es
xor
insb
push
dec
mov
aam
push
jmp
add
mov
cltd
jp
std
movsb
ss
jns
push
cmp
rol
leave
xor
mov
push
cli
frstor
fimul
out
adc
mov
lods
lds
call
dec
stc
aam
stc
int
scas
xchg
je
mov
or
fs
add
pop
or
js
jae
ja
jmp
xchg
dec
fnsave
cmp
scas
notl
pop
cmp
dec
lds
mov
dec
xor
test
out
leave
cmp
jno
cmp
iret
stos
out
in
jne
xor
incb
test
push
or
mov
shrl
add
lret
xor
in
mov
jge
aad
mov
and
mov
sbb
stos
mov
jl
std
call
sub
cmp
pop
fist
mov
fisubrl
push
or
in
outsb
adc
lcall
scas
je
pop
add
dec
inc
jno
xchg
mov
xor
test
mov
jmp
lods
into
dec
repnz
int
jge
out
cmc
push
cmp
pop
aaa
cmc
xor
dec
mov
lahf
mov
outsb
dec
cmc
aas
mov
jle
ja
inc
cmpsl
sbb
add
cld
mov
fnstcw
adc
jmp
and
mov
js
cmpl
jbe
call
adc
mov
movsl
mov
fild
loop
shr
jb
xor
pop
test
ja
mov
mov
movsl
and
ljmp
and
out
and
pop
jl
loop
out
jp
sub
mov
xlat
xchg
add
jne
and
mov
jnp
pop
xchg
cltd
aaa
cli
xor
mov
xor
in
cld
mov
xchg
push
adc
mov
test
lcall
xor
das
out
xor
xchg
orl
adc
jp
pop
test
scas
into
in
dec
test
cmp
cli
popf
inc
fwait
xchg
add
jmp
inc
daa
xchg
jp
inc
lret
cmp
mov
ja
in
push
dec
scas
xchg
fildll
lea
fcomip
push
or
cmc
xchg
aad
sub
or
dec
fdivl
ljmp
shrb
repnz
gs
pop
add
aam
fcomi
xor
cltd
repz
inc
sar
cwtl
xor
xchg
or
sub
dec
push
aad
jae
cmpsl
mov
scas
dec
fyl2x
push
sahf
iret
fistp
outsb
cmc
xor
fmuls
jb
push
stos
loopne
pop
out
mov
push
mov
out
sub
push
aad
jae
mov
shr
shrb
or
xor
pop
lods
push
loopne
cmp
stc
xchg
xchg
mov
jge
dec
and
adc
insb
enter
dec
xchg
inc
dec
xor
push
jo
orl
pusha
iret
daa
jbe
test
int
jmp
fsubr
pop
stos
hlt
push
aam
pop
loop
xor
jns
std
aaa
ret
dec
mov
in
fcoms
adc
cmp
add
mov
inc
mov
lret
mov
cld
fld
lods
xchg
adc
pop
xchg
insb
xchg
xchg
sbb
shr
pop
push
mov
es
movsl
cmp
pop
push
jne
outsb
jecxz
xchg
stos
scas
mov
mov
leave
mov
les
out
sub
jge
jo
lahf
mov
in
ljmp
cmp
push
push
add
fxch
lret
cmp
mov
inc
fldenv
or
xchg
adc
inc
add
mov
lahf
aam
pop
xor
aam
in
mov
int3
out
lret
ret
sarl
cmp
mov
dec
sar
out
out
shrb
stc
mov
jbe
push
mov
fsubrl
xor
and
aad
inc
pop
enter
popf
fidivl
sub
fidivrl
addb
jbe
jb
clc
scas
pop
aad
es
test
cli
imul
push
add
and
in
das
jg
divl
mov
in
mov
dec
into
fmul
jno
sub
stos
sarl
std
mov
call
imul
dec
xchg
out
and
aaa
lret
adc
pushf
jg
ja
mov
pop
pop
mov
dec
fiaddl
fs
jge
add
push
push
pop
ret
sub
xchg
add
outsb
movsb
leave
addr16
mov
cwtl
insb
je
cltd
push
jno
pop
pop
inc
pushf
cmp
push
pop
aas
dec
loop
xchg
test
inc
outsb
subb
mov
arpl
leave
fisubl
sahf
cmp
sub
test
xchg
xor
xor
popf
into
outsb
loop
pop
mov
adc
mov
mov
dec
mov
rcrb
mov
jl
xchg
xor
mov
xor
lods
int3
inc
jge
div
adc
push
lock
mov
lahf
fiadd
add
leave
cltd
dec
cmp
cmp
adc
or
popf
pop
pop
xor
repnz
mov
lcall
insb
cmp
mov
xchg
dec
in
mov
icebp
sub
xlat
pop
mov
xchg
js
out
push
sbb
aaa
sbb
popf
mov
lods
rorl
inc
xor
sti
push
out
hlt
lahf
mov
pop
pop
xchg
loopne
or
fsubrp
push
inc
jl
cmp
lods
mov
dec
xchg
jp
xchg
add
lds
jne
mov
imul
push
outsb
or
scas
mov
leave
adc
pop
popf
stc
add
add
pusha
das
mov
and
mov
xor
cmpsl
outsb
jbe
aam
jmp
or
mov
inc
cli
outsb
ss
dec
jne
xor
cmp
mov
dec
popf
test
movsb
enter
ret
mov
jmp
sub
jne
in
push
sbb
jl
inc
xor
aaa
cli
sub
push
fcmovnbe
cltd
jbe
sub
jl
or
inc
fcoml
fadd
enter
push
adc
imul
ljmp
cli
sub
rclb
je
sbb
xchg
pop
add
stos
js
aam
icebp
jle
push
mov
push
mov
into
cld
stos
and
sbb
aaa
push
movsb
hlt
mov
mov
or
mov
xchg
sub
rcrb
pop
fxch
imul
pop
and
sti
lret
aam
outsl
test
cmpsl
aad
fstl
int3
cmp
lds
xor
and
pop
ficom
jmp
pushl
aaa
aas
xchg
mov
xor
mull
fsubrp
in
fidiv
cli
cmp
lock
flds
cld
xchg
sti
imul
out
cltd
push
push
xlat
jp
jnp
mov
xchg
into
scas
sbb
push
lret
pop
cmp
mov
aam
cli
jmp
gs
stos
or
push
cwtl
scas
sub
sub
es
les
jle
pop
dec
mov
aaa
out
cli
popf
sub
in
lods
or
cmpsl
mov
cmp
fwait
jb
add
lcall
enter
loope
pop
xchg
aad
aam
xor
xor
jb
mov
cmp
cmp
jae
daa
or
xchg
cs
push
in
mov
mov
cltd
pusha
leave
faddp
in
rcll
mov
push
je
sarl
mov
mov
outsb
or
or
leave
aaa
jnp
sub
mov
jmp
cld
sub
pushf
subb
lds
mov
mov
xchg
pop
lcall
fst
out
jbe
adc
ret
mov
inc
scas
fwait
mov
imull
leave
xchg
int
fs
repnz
xor
mov
push
jne
scas
xchg
push
sahf
ljmp
loopne
insb
xchg
xchg
ret
psrlw
push
js
rorb
mov
mov
scas
popf
cmpsb
lahf
inc
pop
sbb
mov
mov
lods
and
mov
inc
in
push
cmp
pop
int3
mov
pusha
stc
ds
fwait
daa
add
inc
hlt
dec
pop
inc
aaa
test
fstpl
pop
xor
mov
cmp
data16
mov
in
mov
inc
dec
aam
inc
push
lret
or
fcmovnu
sahf
xchg
enter
jmp
out
ja
leave
aam
addr16
sbb
push
push
xchg
imul
imul
push
loopne
lcall
cmc
xchg
adc
xor
inc
mov
pop
xor
or
push
call
mov
mov
mov
notl
sub
into
scas
scas
out
push
cwtl
gs
fnop
inc
and
lock
jne
lock
push
jne
cmpsl
mov
cwtl
loop
scas
mov
jns
and
push
jno
das
fbstp
pop
push
loopne
xchg
loope
fdivr
cmp
in
daa
xor
inc
dec
mov
add
jne
fstl
repz
clc
out
in
dec
je
xlat
aad
cmpsl
xchg
jl
inc
jno
insl
mov
std
adc
jnp
lea
repnz
fnstcw
cmp
dec
push
pop
mov
xchg
sub
lds
push
nop
lea
adc
inc
mov
xchg
jo
fnstsw
xorl
adc
dec
stos
call
dec
sub
rclb
cltd
and
fdivrs
js
mov
rclb
fnstenv
cmp
int3
leave
inc
jns
dec
mov
jae
mov
in
sbb
dec
call
repz
sbb
sbb
aad
push
dec
adc
jae
adc
sub
adc
mov
dec
mov
dec
mov
and
adc
pop
inc
push
push
xchg
out
mov
es
xchg
leave
pop
push
pop
jo
enter
and
out
icebp
pop
ds
adc
hlt
sbb
aam
stc
cmp
jbe
cltd
xchg
cmp
out
fildll
fnstenv
adc
inc
pushf
mov
mov
leave
xor
inc
stos
xor
insb
jg
scas
leave
jne
dec
movsb
mov
movsl
jp
enter
lret
dec
in
and
iret
push
out
push
lcallw
push
loop
inc
sbb
dec
jge
addr16
inc
mov
jmp
mov
dec
push
adc
xchg
add
inc
pop
push
push
add
sub
xchg
int
jb
fsubrp
insb
cs
push
xchg
aam
cli
mov
push
rcrb
pop
adc
sbb
xchg
adc
loopne
and
jnp
xchg
jg
mov
push
mov
mov
xorl
cmp
push
stos
outsb
cli
mov
mov
lods
cwtl
sub
jp
dec
cmpsl
repz
add
inc
dec
std
dec
aad
stos
xchg
mov
aam
lret
pop
cmp
push
enter
lds
outsb
xor
inc
fsts
fisubr
test
cmc
xchg
xchg
enter
data16
test
cmp
adc
add
xchg
jns
cmpsb
xor
push
into
push
jge
push
fdivrs
ljmp
in
cmp
push
hlt
stos
and
fs
mov
repz
xor
test
add
pop
mov
add
cmpsl
or
mov
rorb
je
mov
clc
sub
inc
pop
adc
sahf
adc
rcll
dec
mov
ss
jle
jmp
push
mov
lret
jbe
sbb
add
data16
out
je
push
push
push
out
push
jnp
imul
ljmp
cmp
xchg
dec
std
mov
push
sti
cmp
dec
inc
mov
outsb
jmp
mov
or
mov
sub
in
fldcw
xchg
jl
inc
mov
inc
ss
roll
addr16
je
aad
mov
fwait
pop
or
or
inc
ss
out
dec
mov
xor
aaa
insb
rclb
push
popf
xor
ss
pop
aam
xchg
push
dec
adc
in
mov
inc
out
cmp
outsb
fs
push
inc
jo
jne
pop
in
enter
push
mov
cmp
xchg
inc
aaa
cld
jo
xor
xchg
push
dec
sub
aam
cmp
sub
xchg
ljmp
xchg
push
sub
int
add
add
dec
cld
daa
xor
loopne
push
fiadd
jle
and
movsl
mov
jno
inc
jl
dec
test
cmp
jb
add
out
or
pop
fisub
xor
ds
add
fldt
pop
mov
pop
jno
jne
aam
std
or
sbb
ja
out
sbb
jo
mov
dec
mov
pop
psllq
scas
div
and
fs
mov
stos
sti
sbb
cmp
add
andb
les
mov
fs
mov
mov
jp
inc
inc
cld
xchg
dec
sbb
ja
out
addr16
lret
or
aas
movsl
add
or
jnp
cmpsb
pop
movsl
inc
mov
js
ja
in
or
mov
dec
pop
cmp
rdmsr
lock
pop
jmp
insb
mov
push
pop
push
or
cmp
xchg
xchg
mov
pop
mov
stos
in
aam
mov
push
dec
push
and
mov
frstor
aad
adc
bnd
lea
xor
aas
gs
jne
std
lret
mov
mov
out
fs
pop
dec
and
lcall
das
cld
jo
xor
mov
push
icebp
mov
cmp
jb
lret
inc
lret
scas
std
std
mov
mov
pushf
sahf
cmpsl
add
mul
xor
xchg
inc
or
sub
dec
mov
movsb
pusha
pop
xor
int3
and
mov
mov
lods
mov
inc
jns
mov
pop
fnsave
rorb
ds
pop
sti
push
mov
pushf
cmpsb
jbe
out
std
inc
test
repnz
aaa
fcompl
pop
jmp
sub
outsb
fcoms
sbb
inc
fsubrl
imulb
xchg
insb
xor
push
mov
jno
cmp
sahf
dec
xchg
jp
sub
mov
std
cmp
loopne
jae
sub
pusha
cmp
out
sub
push
aam
fs
mov
ljmp
scas
mov
daa
jb
mov
jbe
inc
sub
sub
into
push
stos
mov
jb
adc
push
das
mov
xor
mov
dec
mov
mov
insb
jns
and
lods
fcmovbe
leave
cli
cmp
add
mov
adc
sbb
js
mov
mov
fiaddl
lret
lcall
inc
dec
clc
mov
jmp
rorl
ss
mov
cmp
lret
repz
mov
mov
jae
pop
inc
cltd
or
mov
outsb
imul
mov
fwait
idiv
fldcw
and
pushf
push
mov
inc
ss
ljmp
dec
popf
adc
mov
sbb
cmp
xor
cli
push
data16
repnz
mov
jb
mov
fsubl
in
mov
stc
fcmovnb
push
aaa
xchg
dec
mov
jo
xor
sub
sbb
mov
push
jnp
stos
fsub
ja
aad
adc
test
jb
add
test
push
fidivrl
add
inc
or
mov
aam
add
shrb
cmp
inc
xchg
fnsave
inc
sti
scas
sub
mov
or
sbb
mov
mov
sub
or
and
dec
scas
mov
sbb
xchg
pop
sar
mov
jo
push
in
add
and
xchg
in
jg
das
xchg
aaa
sub
push
sahf
loop
push
mov
into
shll
into
push
outsl
inc
mov
pop
dec
mov
bound
cmp
pop
push
or
jmp
int3
cmp
rcl
popf
add
adc
fstpl
lcall
lret
ja
pop
jg
mov
shrb
leave
cmp
adc
gs
lret
rclb
int
stos
repnz
xchg
icebp
jns
push
loopne
jae
jo
aad
push
mov
xchg
mov
dec
mov
insl
xor
jb
mov
pop
lock
imul
nop
and
jbe
std
sub
xchg
lcall
addr16
jp
and
pop
scas
nop
push
clc
lret
and
outsl
sbb
jl
pushf
rolb
lahf
xor
ja
sub
in
popf
fmuls
fidiv
sub
subb
ds
mov
push
jp
xchg
xor
add
dec
cmp
xor
iret
ficompl
sbb
pushl
add
mov
mov
or
out
fidiv
fistpl
xor
pop
movsb
out
sbb
cmc
sti
pop
xchg
push
xchg
and
sbb
mov
mov
or
jnp
repz
add
and
push
dec
jle
or
mov
xor
popa
fsubrs
lds
sti
imul
mov
adc
stos
sub
adc
addl
testb
jnp
call
push
cmp
call
push
sub
movsb
rcrb
xchg
repnz
fld
lret
inc
xor
decl
pop
push
ss
xchg
push
dec
push
dec
rclb
lods
inc
xchg
je
in
mov
jg
addl
insb
mov
lock
xchg
push
fnstenv
dec
xchg
stos
sub
mov
lret
sbb
adc
jp
scas
ja
mov
inc
bound
int3
ja
gs
jne
push
rclb
mov
xor
fisubl
sub
imul
shr
jno
pop
xor
sub
jmp
loopne
mov
int
das
lret
inc
pop
cmp
pop
loopne
fmuls
sub
cli
mov
dec
loop
mov
notl
push
stc
pop
insb
insb
stc
mov
stc
ds
scas
jecxz
push
push
pop
sub
mov
sub
push
cwtl
scas
lret
xor
in
jns
insb
jnp
test
xchg
sbb
pushf
lock
pop
insb
adc
js
jl
in
mov
cli
inc
pop
leave
pop
pusha
jns
mov
stos
cmpsb
out
stos
in
mov
push
sbb
movsb
inc
aaa
mov
xor
sub
xchg
icebp
and
outsb
xchg
mov
pop
or
inc
stos
add
mov
fdivrs
mov
testb
test
sub
adc
js
cmp
stos
arpl
aaa
mov
mov
xor
inc
xchg
pop
inc
repnz
pop
sti
ja
imul
push
test
xchg
into
in
enter
xlat
or
pop
sarb
inc
add
ja
lds
mov
xor
dec
inc
sub
mov
nop
rclb
fs
scas
cmp
xor
cmp
ja
dec
pop
pop
je
das
mov
movsb
mov
dec
fildll
jb
push
push
loop
mov
push
cmc
call
out
xor
cmpsl
cld
xchg
push
inc
adc
mov
insb
inc
jg
jmp
push
fnstsw
sub
loop
cmp
jnp
jne
sahf
idivb
adc
jae
xchg
icebp
lret
roll
daa
outsb
cmpsb
pop
mov
xchg
mov
jae
and
pop
test
test
xor
out
jb
jb
sbb
push
mov
xchg
sbb
push
hlt
scas
cmpsl
call
dec
push
pushf
jl
or
jbe
sbb
movsl
mov
adc
mov
fucomp
in
push
scas
mov
outsb
test
in
inc
xchg
incl
je
xchg
push
sbb
repnz
pop
popf
sub
lods
ljmp
inc
pop
xchg
ffree
repnz
and
xor
mov
sbb
test
mov
jno
or
jae
mov
movsl
enter
in
imul
fcom
mov
dec
aam
movsb
cmp
lods
mov
into
je
sub
stc
cmpsl
scas
cwtl
in
mov
testb
mov
dec
mov
loop
int3
dec
lds
cmpl
push
les
stc
rcll
popf
pop
xor
jns
cltd
or
xor
push
jmp
cmp
fsubrs
lock
inc
ror
movsb
mov
ja
sub
mov
popa
repz
mov
xchg
dec
in
ffree
movsl
popf
xchg
cwtl
lahf
in
lods
cmp
jne
cmp
call
jnp
push
lret
cli
out
xchg
sbb
stc
or
fnstsw
stc
xor
xor
pop
push
je
lret
pop
push
frstor
push
aad
mov
jb
pop
cmp
bound
jns
aam
cs
mov
int
jmp
jno
insl
ficompl
aas
or
or
xchg
dec
in
into
ljmp
in
ds
cltd
jp
divb
pop
into
rclb
xchg
push
cmp
bound
out
int3
shll
ja
out
lret
mov
dec
into
push
dec
out
add
jne
ficomp
sub
sbb
fs
mov
dec
xchg
jl
lods
inc
je
dec
cld
dec
xor
fidiv
dec
loope
and
xor
xchg
or
sbb
repnz
mov
sbb
push
stos
mov
mov
fdivl
fbld
es
scas
sbb
leave
imul
jl
inc
fsubl
stos
imul
and
dec
out
negl
dec
and
sub
out
sahf
lods
add
dec
scas
push
mov
sbb
movsl
rcrb
cltd
test
xlat
xor
hlt
mov
ss
add
mov
mov
dec
outsb
xchg
fsubr
and
xlat
jns
xor
in
out
popf
pop
movsb
leave
push
mov
xor
outsb
adc
cltd
and
fsubs
out
inc
xchg
add
cmp
inc
ljmp
push
in
lret
mov
mov
dec
fcompl
int3
insb
or
sbb
jp
pop
mov
add
test
sahf
loop
gs
incl
gs
cmp
push
inc
fisub
imul
nop
dec
push
sahf
lret
je
jmp
xor
loop
lret
or
hlt
mov
clc
or
popa
inc
adc
in
cmp
ja
stos
pop
out
sti
leave
dec
es
shrb
lret
xor
pop
pop
jg
push
mov
push
mov
cmp
test
in
sbb
fidivl
push
es
pop
push
repnz
jnp
mov
addl
addr16
jnp
mov
mov
or
movsl
out
inc
hlt
push
out
cltd
cmp
xor
lds
adc
iret
pop
mov
cs
lret
push
loope
lock
stos
cli
js
mov
enter
pusha
in
std
dec
push
inc
xchg
stos
cmp
ss
les
mov
lss
scas
repnz
xor
gs
xor
xchg
cmp
nop
test
or
lods
cmp
scas
push
cmp
daa
sub
xlat
outsb
dec
in
dec
gs
stos
fdivrl
sbb
jp
pop
cmp
jl
push
ss
cwtl
scas
pushf
fidiv
xchg
jne
adc
add
xor
mov
fistp
fucomp
jnp
stc
xchg
addl
or
fisub
push
pop
popf
in
push
or
push
jae
and
push
stos
test
les
cmp
xlat
outsb
inc
dec
inc
gs
mov
jl
and
push
repz
mov
popf
stos
mov
sbb
mov
pop
ss
shlb
push
sbb
sti
pusha
lods
push
mov
pop
push
jg
stc
movsl
push
stc
fwait
xchg
sahf
add
jle
sbb
or
ljmp
lcall
sbb
outsl
mov
scas
vpunpckhdq
cmpsb
sti
add
dec
out
sub
xchg
jb
xchg
xchg
test
xchg
into
fwait
sbbl
jbe
fisttpl
xor
push
pop
jnp
movsl
add
mov
jmp
mov
xchg
gs
ss
jmp
cmp
push
rclb
stc
pop
lahf
and
out
sbb
dec
and
jo
bound
jb
ljmp
iret
ljmp
push
inc
cs
ja
lret
leave
jle
insb
or
mov
scas
sub
jae
loop
in
and
pop
or
enter
inc
insb
fs
cmpsl
and
mov
push
in
decb
add
aad
dec
rorb
les
out
sbb
stos
repz
or
ror
dec
in
push
push
xchg
sub
push
cwtl
lret
xor
int3
cmp
or
push
repnz
mov
cli
xchg
and
xor
ljmp
inc
outsl
in
push
mov
mov
fs
in
add
in
or
aas
in
push
jne
je
clc
call
loop
cmpsb
push
and
cli
sbb
pop
and
outsb
scas
cltd
repz
cmp
mov
jb
xor
insb
cmpsb
pop
xchg
inc
cmp
ss
fstp
int3
xlat
shll
cwtl
sbb
adc
repz
mov
jb
ja
inc
fs
xor
or
fstps
int3
jle
mov
lahf
add
fldl
pop
rcll
push
push
cmp
inc
js
fisubrl
pop
add
scas
mov
sbb
lret
cmp
jmp
jns
stc
data16
jno
es
mov
icebp
mov
xchg
jo
dec
mov
push
adc
sar
mov
adc
xor
xchg
jno
xchg
sar
pop
jle
add
je
outsb
inc
add
shrb
out
lods
ficompl
imulb
mov
add
repnz
enter
xor
jp
dec
push
rcrl
repnz
xchg
les
xchg
mov
out
cli
jmp
cli
rorb
popf
push
inc
cwtl
and
lods
xor
push
sbb
scas
adc
mov
mov
int3
pop
mov
je
push
mov
push
imul
xchg
shrb
cmp
repnz
mov
jnp
and
mov
add
out
testb
mov
rclb
sti
sub
pop
xchg
testl
stos
xchg
pop
xchg
fdivrl
cli
mov
jne
es
jmp
cwtl
movsb
inc
jmp
jle
or
xor
push
popf
inc
dec
scas
sub
ds
jge
call
ss
insl
xor
mov
push
pop
sti
je
in
push
xchg
call
rclb
ds
sbb
leave
jns
cld
jno,pn
es
jne
adc
mov
call
imul
ljmp
je
mov
jbe
gs
stos
hlt
test
or
rcr
dec
lds
or
mov
sbb
int3
dec
cwtl
iret
rcrl
pusha
int
insl
fsubs
push
loopne
add
fcoml
fcmovnbe
flds
leave
xor
or
add
mov
add
ja
xor
aas
dec
and
out
popf
or
pop
push
inc
jbe
push
xchg
repz
inc
xchg
in
mov
dec
popf
mov
mov
jmp
lea
sub
adc
call
xchg
aad
xor
xchg
lcall
adc
xchg
pop
xor
sub
js
adc
imul
xchg
add
mov
inc
out
lods
repnz
xchg
mov
lods
fiaddl
ljmp
mov
xchg
pop
loopne
xchg
cwtl
ds
insl
lcall
rorb
xor
jae
icebp
sub
cwtl
loopne
mov
dec
in
pop
xor
push
jnp
rcll
cwtl
adc
xlat
pusha
or
xor
cmpsl
movsl
jg
lcall
adc
pushf
in
inc
xchg
cmp
iret
cmp
jl
xchg
mov
and
adc
add
out
loop
xchg
push
sbb
popf
add
mov
popa
add
xchg
xchg
pushf
mov
xchg
rorl
add
xorl
cmpsl
sbbl
mov
inc
mov
xor
inc
lret
inc
fs
push
xlat
sbb
push
lock
adcl
shlb
inc
std
cmp
add
pop
jno
adc
dec
inc
call
pop
adc
adc
in
loopne
jle
adc
xchg
xor
sub
push
cltd
xor
pop
pop
stc
cmp
lahf
dec
jl
pop
test
pop
cmp
ja
fnstenv
push
cli
push
clc
cmpsb
jnp
mov
adc
jmp
outsb
aaa
xlat
cs
jno
repz
pop
sahf
sub
mov
notb
jp
inc
rcrb
bound
push
adc
iret
push
imul
pop
cmpl
inc
mov
loop
jg
in
sbb
cmp
sbb
lret
fist
lret
insl
inc
scas
loopne
cmp
sub
sub
push
mov
sbb
clc
inc
nop
fisttpll
add
or
mov
aam
adc
sub
xor
sub
pop
xor
je
mov
les
and
cld
mov
xchg
mov
std
push
shrb
and
cltd
sub
ljmp
add
cltd
int3
cmp
negl
push
dec
push
xor
add
xor
push
sbb
xor
cmpsb
add
xor
out
rclb
jmp
call
scas
sub
aam
clc
push
xchg
xchg
pushf
lcall
add
subl
xchg
jmp
je
je
bound
mov
in
lret
add
pop
shl
test
iret
dec
push
stos
jecxz
mov
out
sbb
sub
jbe
push
jle
push
lret
inc
in
or
es
cmp
mov
roll
xchg
mov
ficomp
ss
mulb
cmpsb
xor
pop
repnz
xlat
xchg
xor
jne
loop
push
sbb
mov
lods
repnz
adc
insb
fbld
shrb
pop
es
jae
aas
pop
mov
test
scas
add
pop
jle
adc
sub
mov
stos
daa
push
incb
test
cmpsl
or
and
cmp
pop
jne
dec
or
mov
mov
fs
sti
cmp
pop
std
pusha
scas
and
cmp
lcall
lea
inc
jge
mov
gs
mov
xchg
mov
cmp
and
jbe
xchg
adc
cmp
lods
popf
sbb
pop
lret
cmpsb
inc
movsb
inc
popf
call
inc
jg
and
fdivr
les
mov
rcrl
out
lahf
int
into
cwtl
hlt
add
mov
inc
mov
insb
ficomp
mov
xchg
gs
ja
pop
fisttpl
ret
stos
sub
int3
push
xor
test
xchg
sti
pop
mov
pop
out
push
into
push
popf
out
ds
movsl
mov
jne
mov
push
xchg
mov
sti
rcrb
movsb
cmp
xchg
jnp
mov
ljmp
mov
pusha
pushf
insb
push
xchg
jo
jae
jne
mov
aam
mov
xchg
mov
inc
dec
mov
fildl
dec
negb
les
push
mov
enter
dec
and
xlat
inc
or
mov
ds
mov
xchg
xchg
outsl
or
fnstenv
lret
dec
xchg
jb
adc
adc
adcb
iret
fnstsw
out
jo
stc
or
insb
push
stos
mov
incb
stos
sub
xor
mov
push
xor
xor
jbe
sub
push
in
sub
jb
inc
xor
xor
mov
mov
mov
clc
lcall
mov
fimull
call
or
inc
inc
mov
sbb
dec
xchg
loope
cmp
lods
negl
push
shrl
push
aaa
ds
repnz
inc
jp
jb
in
pushf
lcall
call
mov
stos
push
push
xor
std
outsb
leave
cmp
mov
cmpsb
adc
icebp
sub
jno
mov
lods
mov
ja
aad
pop
lods
jbe
lods
inc
xlat
cltd
inc
stos
mov
lcall
mov
cmp
cmp
cwtl
mov
lahf
push
fsubrl
fimull
and
mov
mov
pop
mov
je
pushf
cmp
mov
jae
out
loopne
ffree
repnz
je
inc
gs
cmp
cmp
mov
icebp
pop
dec
sub
mov
pop
mov
cwtl
movsl
std
mov
mov
pop
push
or
mov
iret
xor
cmpsl
mov
xlat
add
sub
aaa
xor
sub
cmp
sub
and
out
sbb
lods
jmp
sbb
or
mov
xchg
mov
jl
xor
rcll
cmp
xor
out
cmp
nop
clc
repz
out
pop
cmp
inc
or
dec
loop
sahf
sub
mov
sub
xchg
cmp
lds
mov
and
test
mov
mov
xchg
mov
inc
mov
dec
jmp
daa
aam
jp
or
inc
push
mov
lret
mov
aaa
enter
push
rolb
jmp
nop
jp
xchg
mov
scas
xor
mov
sti
inc
fdivl
jae
xor
and
cs
adc
out
popa
sub
xlat
test
inc
jmp
sub
bnd
sbb
cmpsl
push
jp
outsl
inc
push
cmp
fs
out
sub
sbb
dec
cmp
pushw
lret
rclb
xlat
mov
lea
jl
cmp
scas
sub
fwait
sarb
mov
push
lds
mov
lods
out
push
push
xor
jb
cmp
clc
pusha
sub
cmp
shl
imul
jge
out
sbb
es
cmpsb
clc
fiaddl
inc
in
fs
scas
inc
mov
fimull
les
out
sti
mov
xchg
pop
xor
xlat
mov
xor
rcrb
sub
std
xchg
sahf
add
je
lret
jae
sbb
lods
ret
xchg
clc
sbb
jne
pop
xchg
repz
cmpsl
pop
sub
push
lret
ret
xor
push
repnz
or
outsb
jmp
jbe
loopne
cld
sbb
sub
jmp
and
ds
inc
mov
mov
test
je
mov
ret
stc
mov
pop
cmp
aaa
outsb
les
and
push
pop
lcall
xorl
shrb
cltd
je
pop
fdiv
mov
ss
notb
bound
aad
dec
push
mov
rorb
cmpsl
mov
sbb
pop
mov
sbb
lods
xor
jns
lods
hlt
dec
fildll
das
mov
fsts
hlt
xlat
enter
push
dec
push
xchg
iret
rcrl
in
sbb
xchg
xor
xchg
dec
xchg
pop
mov
fstpl
add
mov
loop
inc
ss
imul
in
mov
xchg
add
testb
popf
ds
imul
scas
sub
mov
out
scas
pop
lret
fsubp
in
cmp
lea
scas
cmpsl
cmp
xchg
mov
sbb
imul
imul
cmpsl
xchg
rcl
out
popa
fidivrl
out
xchg
scas
jb
jne
xchg
adc
daa
or
out
pop
das
add
lods
aam
scas
pop
in
js
inc
das
lret
scas
mov
jae
pop
lods
shlb
dec
sbb
or
shr
jnp
je
movsl
aas
scas
aad
addr16
dec
sahf
pop
inc
loop
cmpsb
stos
repz
pop
push
pushf
mov
adc
xor
cmp
repz
stos
mov
cmp
dec
mov
inc
lahf
push
or
jl
flds
mov
pmullw
sbb
cmpsb
test
mov
lcall
loop
sbb
cld
imul
or
fadds
icebp
out
out
xchg
push
dec
cli
sub
mov
scas
mov
pushf
xchg
cmp
pop
xchg
int3
jnp
pop
fidivrl
sbb
lret
ljmp
xlat
jmp
mov
mov
add
dec
jno
push
mov
pop
aaa
xchg
int3
cmp
xchg
xrelease
sbb
sub
lret
popf
fimul
adc
aad
lret
pop
rorl
imul
mov
and
cltd
jp
fs
push
gs
bound
imul
and
test
inc
adc
mov
psubw
jle
pop
in
sub
xchg
jno
jge
lret
ja
faddp
mov
cmpsl
insl
in
or
imul
sub
rorb
jmp
lcall
mov
mov
push
dec
inc
mov
sub
mov
lcall
xchg
repnz
mov
jae
sarl
bound
mov
cmpsb
les
pop
push
out
jnp
es
je
nop
xchg
mov
pop
loopne
ret
imul
jns
jne
jmp
pop
test
out
icebp
popa
jg
jl
in
mov
pop
adc
sti
sub
sti
push
rcrl
ss
pop
sub
push
cmp
inc
cmp
inc
insb
push
cmpsb
mov
mov
dec
aam
xchg
add
mov
movsl
out
dec
pop
xchg
xchg
cmp
mov
in
in
inc
fcomps
mov
ret
mov
adcb
ljmp
add
incl
push
xor
clc
xchg
push
shl
stos
fcoms
jl
pushf
cmp
inc
sub
add
jo
pusha
cwtl
lret
sarb
pop
push
aam
scas
mov
mov
imul
xchg
fadd
xchg
ficomp
lret
jmp
cmc
cmpsl
mov
jmp
lahf
rcrl
ljmp
xchg
pop
adc
cmp
stc
mov
std
inc
push
xchg
lret
lods
hlt
mov
mov
push
adc
push
and
xor
xor
or
orl
jne
outsl
movsl
jg
xor
ljmp
dec
dec
fcompl
movsl
xlat
push
or
mov
jnp
mov
sub
ljmp
inc
les
popf
je
lret
cmc
push
cmp
insb
rolb
insb
gs
mov
movsb
les
mov
xor
adc
int3
movsb
mov
cmp
scas
dec
mov
and
or
dec
lahf
dec
pop
adcb
jg
fcompl
les
mov
fisubrl
mov
outsl
rclb
sbb
xor
sbb
movsb
xchg
cmpsb
mov
sbb
jle
mov
fsubl
sbb
sub
aas
repnz
xor
andl
cmp
cmpsl
stc
xchg
mov
xor
mov
cmpsb
ljmp
cld
pushf
jp
in
negb
xchg
or
push
scas
cmpsl
inc
dec
mov
inc
mov
mov
add
adc
scas
pushf
sarb
adc
leave
mov
inc
mov
cltd
and
mov
sub
imul
andb
in
mov
pop
xlat
add
out
test
pusha
cmp
mov
lods
lcall
push
out
mov
fdivs
cltd
ljmp
sub
out
cmpsb
dec
or
movsl
addr16
xchg
cmc
mov
pop
lock
push
rol
aaa
ss
jae
xchg
jb
sub
xchg
push
daa
jle
lods
mov
mov
lcall
jp
xor
inc
js
into
cmp
sbb
test
movsl
jne
dec
mov
jle,pn
xor
cmpsl
mov
mov
pop
mov
adc
movsl
adc
mov
push
add
or
or
cwtl
fsubrp
iret
mov
inc
cmpsl
xchg
inc
lods
sub
insl
cmp
pop
dec
movsl
cmp
pop
inc
adc
outsb
decb
mov
xchg
jnp
xchg
inc
mov
mov
inc
fildl
adc
out
jne
cs
rcr
call
adc
mov
leave
adc
das
adc
out
test
mov
jp
cmp
mov
out
and
cmp
lea
shrl
cmpsl
stos
lahf
cmp
sbb
adcl
fst
push
cli
pop
mov
and
out
push
sti
lods
jb
test
push
fisttp
xchg
dec
inc
cltd
aaa
mov
ss
dec
jb
jno
imul
notb
test
xor
jne
push
jb
hlt
sub
add
jl
imul
stos
inc
jae
mul
out
xchg
ja
fstp
dec
test
inc
in
or
sub
jp
add
cwtl
test
cli
cmpsl
sahf
sub
jle
pushl
lret
jl
cmpsb
insb
inc
ds
pop
xchg
jmp
insl
mov
ds
ljmp
inc
pop
pop
out
roll
inc
pop
mov
pop
cmpsl
adc
mov
jge
frstor
pop
jmp
inc
jae
call
sub
mov
jne
ret
fxch
sbb
and
xor
mov
outsl
mov
mov
jne
dec
gs
scas
push
scas
aaa
mov
in
lahf
fbld
cmp
sub
add
cwtl
mov
fcoms
ss
js
mov
imul
xor
xor
inc
jns
dec
xor
mov
mov
add
mov
inc
ss
lret
inc
stos
xor
sbb
add
mov
inc
sbb
ss
jle
jns
or
cwtl
rcl
sub
popf
stos
add
push
out
mov
cmp
mov
inc
push
xor
popf
js
and
pop
insb
push
loopne
and
mov
push
movsl
dec
push
xlat
inc
lret
xor
pop
scas
pop
stos
nop
pop
pop
movsl
jo
lret
ficomp
cmp
fldt
jmp
xor
jbe
and
int
or
xor
add
add
xor
inc
or
stos
dec
push
rcll
push
mov
dec
ret
sbb
fidivl
or
xor
or
cmp
pop
fs
std
scas
imul
add
sub
ds
cmpsb
es
out
mov
int3
fnsave
sysenter
dec
add
lods
fs
adc
ret
sbb
adc
xchg
mov
pushf
push
mov
cli
push
ficomp
xor
or
cwtl
mov
sub
fstl
ja
mov
gs
enter
dec
clc
movsb
xchg
fnstsw
xchg
sub
xlat
cmc
stc
setl
push
fadds
shrl
xor
icebp
xor
xor
into
popf
push
push
outsl
cmp
popa
push
test
pop
push
sbb
outsb
dec
sbb
stc
inc
insb
jb
jbe
adc
ljmp
adc
test
pop
jmp
and
or
lret
mov
mov
lods
hlt
dec
dec
lock
jne
aad
clc
lock
repnz
and
inc
negb
xor
lea
testb
jmp
outsb
adc
or
imulb
loope
fwait
lds
out
sub
mov
lods
mov
mov
movsl
jo
add
cmp
xchg
and
insl
data16
sbb
adc
push
add
sbb
je
int3
movsl
push
ffree
out
jo
mov
and
sub
loop
imul
pop
mov
inc
cltd
scas
push
xor
jne
lock
cmp
mov
sbb
movsl
inc
std
dec
xor
jl
pop
mov
lret
or
xchg
mov
jmp
xor
sub
loopne
mov
divb
add
or
pop
push
addr16
inc
add
sub
dec
pop
loopne
xor
insb
outsl
jbe
js
inc
dec
push
push
xor
jge
jge
dec
sub
adc
adc
pushf
jno
add
hlt
in
jle
loope
pop
push
push
mov
jb
mov
and
lods
inc
cmpsb
push
push
out
adc
sub
push
cmp
iretw
outsb
mov
lcall
cmp
adc
inc
adc
flds
add
aad
lods
inc
scas
imul
popa
je
cmp
imul
fsts
xchg
inc
jae
sub
xor
outsl
lret
or
fcomip
cmp
push
out
cmp
ss
jb
xor
add
add
or
jbe
jo
add
push
popa
lahf
push
cmp
sub
shrl
xor
je
cltd
cli
aas
gs
jle
jnp
dec
pop
lret
je
fwait
lret
xor
xchg
scas
jne
adc
das
adc
jb
inc
push
scas
in
movsl
subb
rcll
mov
addr16
and
xchg
dec
xlat
dec
loop
notb
rcrl
sahf
pop
cld
outsl
sarb
lret
cmp
inc
scas
xchg
xor
bound
xlat
cmc
mov
sahf
adc
sub
mov
sbb
adc
aad
and
jae
fadds
in
add
push
jb
xor
int3
outsl
pop
fbld
rorb
nop
mov
jne
insb
gs
cwtl
and
pop
dec
das
fldt
ret
int3
pop
add
enter
push
mov
cmp
fisub
stc
fwait
movsl
xor
jp
inc
imul
cmpsl
pop
add
push
gs
lret
sbbl
jnp
insb
mov
sbb
int3
ljmp
push
xchg
xchg
arpl
not
dec
xor
pushf
xchg
jne
lcall
sti
and
out
jg
inc
std
fwait
inc
lods
outsb
push
mov
into
xchg
fsubl
adc
pop
bound
gs
imul
inc
lahf
mov
fmull
scas
movsb
cmpsb
xor
std
mov
add
push
iret
outsb
sbb
sub
xchg
inc
sub
fs
add
xchg
jl
pop
push
pop
pop
loop
lods
bound
sbb
add
push
cmp
cmp
ss
sbb
pop
incl
and
jl
js
dec
sub
sub
add
xor
add
in
or
push
das
fwait
sarl
jge
test
mov
push
shll
cld
push
xchg
inc
ss
push
movsb
cmc
scas
xchg
fwait
sub
jae
jl
xor
inc
das
lods
jbe
adc
lret
nop
push
xchg
mov
fsubrl
push
jg
mov
out
pop
xchg
stc
inc
xor
lods
out
xchg
add
lret
lcall
mov
dec
inc
dec
ficompl
and
xor
imul
stos
mov
lods
xchg
in
dec
dec
loop,pt
icebp
test
stos
fld
xlat
dec
aaa
push
jnp
push
hlt
je
fiaddl
push
scas
xlat
inc
push
rorl
inc
lcall
cs
mov
pop
pop
pop
push
mulb
lahf
in
imul
shrb
pop
fidivrl
fist
xchg
mov
std
cwtl
jno
icebp
das
loope
les
push
sub
mov
cs
mov
dec
add
clc
pop
adc
in
ja
mov
lea
out
mov
int3
dec
pushf
scas
add
fnstenv
pop
cmp
loopne
clc
mov
mov
sti
and
adc
hlt
push
mov
js
aas
cld
faddl
mov
mov
ret
mov
dec
in
adc
jae
std
pop
in
pop
push
pop
out
xor
scas
add
addr16
sub
lods
cmp
jge
jb
mov
add
or
mov
sub
aam
dec
xor
in
inc
scas
and
bound
cmp
mov
popa
push
gs
jne
xchg
mov
sub
es
fldt
cmpsb
aaa
dec
adc
call
mov
loop
jle
push
jae
ficompl
mov
mov
xchg
stos
in
sub
add
jns
pop
fnstsw
test
cmp
inc
xor
movsl
enter
js
add
ror
xchg
cmp
ja
push
daa
repnz
lods
push
or
xor
pop
ss
push
js
xor
test
and
mov
mov
lds
xchg
enter
mov
fucomi
dec
insl
xchg
push
iret
cmp
hlt
push
cmpsb
cmpsb
mov
shrb
aas
cmp
pop
xlat
popw
sub
mov
movsb
out
mov
je
pop
mov
jno
sub
or
fstpl
aaa
xchg
imul
aaa
ljmp
out
jno
ja
fildll
inc
repnz
and
and
imul
stos
push
cmp
or
ljmp
push
inc
stc
ss
push
pop
rcrl
jge
jp
or
push
mov
mov
fimull
test
cmpsl
pop
sbb
incl
mov
test
mov
inc
fcomip
xorl
dec
popf
scas
push
or
dec
inc
xor
ss
outsb
mov
add
lret
and
sub
xor
or
sub
sbb
test
popa
xchg
mov
dec
lret
out
imulb
out
sub
add
jg
pop
lods
push
repnz
push
sub
ds
xchg
push
lahf
testb
dec
in
cmp
cs
insb
fiaddl
mov
jbe
ret
inc
xor
icebp
jno
mov
out
mov
sbbl
lock
aaa
mov
and
aam
sbb
popf
fistl
adc
xchg
pop
jb
push
push
inc
inc
fisubr
dec
ja
sub
push
int
xor
inc
inc
jb
and
push
lcall
dec
xchg
rolb
dec
cmovne
push
sbb
mov
mov
lahf
lods
dec
jmp
call
mov
sahf
bnd
popf
sub
popf
mov
out
xchg
lret
shlb
stos
xchg
movsl
es
daa
pmullw
sub
gs
mov
int3
xlat
mov
jne
xchg
insb
xchg
adc
push
out
xlat
or
mov
aam
imul
sub
pushf
enter
dec
rcrl
adc
into
sub
fadds
insb
adc
adc
jo
inc
inc
fldenv
xchg
test
add
cmp
leave
jns
lods
imul
data16
movsl
sbb
in
xchg
into
or
ret
fs
cmpsb
ds
cmpsl
pop
imul
jns
cmc
jg
fs
jl
xor
xchg
jo
adc
scas
sub
test
les
push
bound
fs
and
fstl
xor
pop
jnp
sub
push
sub
nop
adc
dec
push
dec
mov
jg
sub
mov
dec
cld
xor
cmp
or
imul
mov
dec
mov
sbbl
adcb
push
inc
sub
js
xchg
test
xchg
cmp
jg
lret
pushf
pop
std
mov
dec
push
push
cmc
out
jo
mov
lret
mov
pop
dec
or
int3
popf
call
xorb
bswap
dec
adc
stos
sbb
ja
mov
xchg
push
lcall
movsb
dec
mov
sub
dec
and
pop
imul
lock
mov
arpl
adc
lods
inc
push
push
sbb
add
cmp
movsb
and
idivl
xchg
fsubl
fmul
das
pop
aas
and
into
pop
dec
mov
and
push
mov
and
xchg
cmp
mov
adc
xchg
cmc
pop
add
mov
lds
cmp
jp
add
push
inc
jle
je
sahf
fsubs
pop
es
outsb
jne
push
out
leave
and
add
sbb
sub
movsb
sbb
xor
and
sbb
sub
dec
sbb
sahf
movsl
add
arpl
outsl
adc
cwtl
dec
push
or
pop
out
cli
cmp
mov
push
bound
xor
adc
lahf
hlt
jbe
addr16
jno
setns
stos
adc
jnp
scas
push
sub
cwtl
mov
fcoml
and
xor
fstl
jp
jae
in
jg
push
mov
push
cmc
xchg
push
xchg
repnz
dec
inc
inc
fadds
inc
pop
pop
popa
jae
in
sub
add
push
inc
loop
sbb
jp
cmp
xchg
jl
fstpl
jb
bound
push
and
out
jne
movsb
mov
pop
fs
xchg
dec
cwtl
jl
aaa
cmp
xchg
scas
mov
mov
jle
jbe
es
ds
mov
loopne
mov
dec
mov
clc
pop
inc
and
and
push
push
icebp
lds
mov
icebp
sub
mov
mov
movsb
mov
movsl
mov
fwait
jbe
inc
into
pop
adc
int3
mov
or
mov
or
pop
fdivrl
mov
pop
cmp
jb
push
inc
inc
into
push
test
in
push
das
mov
out
daa
shrd
fbld
stos
aam
call
imul
repz
mov
mov
sbb
sub
in
stc
out
clc
jle
mov
imul
or
xlat
push
aas
jle
lods
push
aam
push
ret
xchg
sbb
mov
and
stos
bound
push
jmp
insb
jmp
aas
xchg
les
sbb
dec
lock
cmp
adc
or
mov
in
jo
and
xor
lret
aaa
xchg
ficom
xchg
dec
add
aas
dec
fdivl
push
mov
push
cwtl
insl
sbb
push
or
inc
in
mov
add
imull
xor
add
pop
nop
pop
mov
and
cmp
or
add
inc
ja
inc
xchg
stc
xchg
jge
or
dec
cmp
mov
jge
pop
arpl
leave
pop
xchg
out
jb
dec
ficoml
push
and
stos
lock
fisubr
inc
mov
leave
nop
xchg
cwtl
out
mov
dec
insb
pop
push
jae
mov
mov
fisubl
shr
dec
push
mov
xorl
lahf
jo
out
clc
cmp
mov
or
or
and
and
in
pop
mov
cli
sub
adc
dec
or
int3
shrb
mov
sub
or
or
ret
nop
pop
mov
mov
mov
repnz
mov
inc
scas
sti
or
lods
jae
mov
or
pop
ja
mov
pop
ffree
lods
dec
push
push
push
js
sti
jne
addr16
loop
mov
stc
fs
decb
pop
mov
sahf
xchg
cld
and
mov
dec
push
push
mov
xchg
jge
les
add
xor
sbb
and
mov
lods
push
lahf
aaa
stos
jp
mov
sub
cmp
mov
sbb
xor
les
fwait
mov
cmpsb
js
xor
inc
cmpsb
mov
aad
ds
loop
sub
or
xor
ficomp
mov
movsl
mov
or
fldl
jmp
inc
fcoml
sub
push
test
pushw
sbb
cli
je
xchg
xor
mov
pop
sbb
cmp
mov
mov
bound
lods
inc
inc
push
xor
je
xchg
dec
imul
popa
arpl
aaa
and
mov
insb
push
jns
insl
inc
pop
push
mov
mov
inc
pop
xchg
or
pop
mov
fildl
inc
pop
xor
repnz
add
adc
movsl
cli
cmpsl
mov
les
shr
mov
and
scas
insl
dec
sub
pop
in
jl
xor
fild
adc
ljmp
and
js
cltd
sub
test
push
mov
cmp
mov
sbb
mov
jne
in
or
and
mov
test
into
pop
inc
jbe
ss
sub
inc
xchg
dec
pop
or
xor
pop
fiaddl
int3
xchg
pop
push
stos
mov
ljmp
subb
jo
cli
outsl
cld
sub
adc
arpl
mov
outsl
sbb
jno
mulb
fucomip
inc
cmpsl
jnp
jp
sub
add
sub
inc
in
jns
pop
lret
pop
xchg
add
imul
add
xor
imul
je
stos
add
mov
pop
mov
ret
jns
or
lods
jle
and
push
daa
dec
nop
gs
jb
mov
es
jo
cltd
or
cmp
inc
mov
jmp
xor
pop
movsl
scas
cwtl
aam
rcr
and
mov
add
jae
cmp
xor
cmp
sbb
pop
lods
cmp
and
adc
fst
mov
sub
je,pt
push
and
and
popf
add
pop
pop
pop
sub
cmp
or
scas
lods
aas
out
cvtps2pd
inc
cmp
stos
push
and
jo
sub
cmp
popl
inc
ret
pop
sub
xor
test
pusha
cmp
loop
mov
xor
inc
mov
aam
inc
popf
sub
mov
inc
dec
aaa
mov
in
push
jl
jl
jg
hlt
mov
enter
ror
insb
pop
shrl
jmp
movsb
inc
adc
icebp
xor
hlt
push
adc
jo
push
dec
xor
fcomi
pop
jmp
jl
mov
xor
lds
in
adc
and
jle
dec
jbe
jge
pop
lods
lea
add
mov
int3
push
or
add
mov
lods
lret
or
adc
pushf
and
fs
xchg
push
or
je
or
dec
nop
jo
jecxz
mov
adc
out
das
sub
jb
add
aam
les
scas
inc
and
fwait
lahf
pushf
add
shrb
int3
xor
sbb
call
add
stc
jg
shrl
jp
or
xlat
jne
je
xorl
imul
sub
push
or
adc
cltd
pop
insl
adc
fisubr
jp
sub
inc
and
jl
imul
insb
mov
pop
jge
jbe
cmpsl
daa
insl
daa
inc
jns
inc
dec
popa
pop
lret
xchg
xchg
inc
mov
pop
pop
xor
pop
je
enter
cmpsl
adc
jnp
push
mov
jp
or
ss
fisubr
dec
sub
sbb
dec
dec
fs
dec
insb
movaps
sub
fstps
pop
adc
sub
cs
rcrb
xchg
or
add
lock
dec
push
push
inc
push
xor
or
pop
xor
lods
add
popa
push
mov
je
aaa
pop
fldenv
add
mov
pop
add
push
imul
in
data16
dec
cmp
fnstenv
out
add
inc
test
jnp
inc
add
jle
mov
movb
xchg
clc
bound
mov
pop
int
pop
and
dec
lret
cwtl
test
and
sbb
push
loop
sub
push
cmp
or
jo
inc
jns
mov
dec
inc
arpl
ja
sub
add
and
cmpsb
xor
push
push
or
jns
xor
dec
pop
xorl
sub
pop
inc
pop
xor
jns
adc
push
push
adc
jne
cmp
mov
or
js
cmp
mov
inc
xchg
dec
test
negl
mov
cld
xor
mov
xchg
in
sub
movsl
leave
jae
dec
test
dec
dec
dec
stos
pop
in
adc
je
fcomps
mov
push
stc
add
gs
arpl
aas
fwait
jle
rcl
sub
push
outsb
mov
bound
sub
and
das
cltd
push
pop
shrw
jnp
mov
cmpsl
rcr
lock
jmp
adc
inc
ljmp
mov
aaa
push
sub
aaa
call
xor
and
in
insb
pusha
jmp
push
push
lcall
mov
cli
aaa
mov
dec
mov
jge
mov
xchg
push
xchg
or
sbb
loop
pop
push
xor
in
dec
test
arpl
bound
gs
pop
jbe
and
add
jb
lret
and
hlt
imul
ja
movsb
jne
cmp
xor
add
enter
cmp
adc
jae
mov
push
rorl
mov
pop
mov
jns
pslld
add
scas
dec
movsb
xlat
mov
sbb
fisubl
xchg
mov
inc
push
je
in
imul
push
es
cli
xor
jp
movsb
dec
fisubr
in
xor
ss
fst
add
add
sarb
push
or
imul
adc
inc
hlt
push
bound
insl
mov
ljmp
and
hlt
xor
add
push
int
dec
pop
dec
adc
pop
or
je
jne
xor
out
adc
cmp
mov
push
pop
mov
cmp
dec
sti
sbb
inc
std
sub
ja
adc
add
mov
sbb
int
push
mov
dec
jmp
stos
cmp
dec
lcall
xor
mov
and
or
mov
pop
shll
adc
push
adc
xchg
push
adc
push
add
mov
dec
push
jp
cmp
inc
or
inc
sbb
adc
xor
xchg
sbb
xor
and
mov
lods
sbb
xor
setno
xor
aaa
loop
inc
mov
adc
xor
adc
jb
mov
mov
inc
and
repz
into
outsl
or
js
mov
xor
dec
inc
mov
dec
daa
xor
and
push
mov
arpl
jae
and
into
std
adc
cmp
add
push
clc
mov
inc
cmpsb
js
ss
adc
dec
dec
sbb
cmp
push
add
jns
jnp
inc
mov
sub
mov
addr16
dec
push
sbb
mov
popa
stc
push
mov
jle
mov
je
out
daa
push
and
data16
inc
je
addb
mov
mov
cltd
das
jae
push
mov
fbstp
je
and
pusha
adc
mov
insb
pop
cmp
scas
inc
and
pop
int
xor
sbb
mov
add
push
mov
push
pusha
jno
add
fcoml
pop
pop
add
repnz
push
in
cli
lret
push
jnp
ficomp
loop
jmp
incl
add
subb
inc
lret
ja
xor
add
enter
or
jne
xchg
or
aas
add
pop
jb
js
xor
or
cmp
inc
inc
ret
faddl
dec
inc
repnz
add
jae
xor
imul
add
aaa
nop
sbb
adc
mov
leave
or
cmp
bound
cld
dec
jnp
sub
jns
inc
or
out
push
mov
push
aaa
jae
comiss
jno
es
pop
push
rol
mov
dec
and
adc
xor
xor
out
cmpsl
sbb
popf
or
insb
jno
pop
jmp
bound
test
dec
xor
and
mov
movsb
das
jb
scas
or
dec
pop
adc
fistl
or
pop
rolb
loopne
movsl
lahf
push
orl
loop
jne
out
or
repnz
adc
push
dec
bound
rolb
xchg
jbe
daa
dec
and
cmp
fnstenv
xchg
dec
aaa
xchg
inc
incl
and
dec
xor
in
nopl
pop
loopne
add
les
jns
or
addl
popa
pusha
std
sub
repz
daa
ret
xchg
pop
adc
and
and
pop
xor
push
repz
push
push
push
cmp
add
pop
data16
add
ss
add
cmpsl
or
in
arpl
fcoms
pop
cli
sbb
cmpsb
add
sub
mov
and
mov
test
dec
inc
push
or
jl
sbb
mov
push
lods
scas
ja
push
add
or
pop
je
xor
adc
mov
add
fs
shrl
jne
shll
jns
push
mov
cmp
scas
pop
pop
or
jns
lcall
notl
dec
jae
out
and
dec
push
mov
xor
ret
inc
popf
pusha
and
mov
ja
dec
cltd
dec
out
ss
cmp
repnz
sub
and
dec
mov
inc
out
cli
rclb
sub
repz
out
sub
mov
mov
inc
fadds
adc
cvtps2pd
pop
and
push
inc
or
push
in
add
jae
es
pop
and
sbb
inc
aas
xor
movsb
mov
cmpsl
cwtl
cwtl
mov
stc
jae
xor
fwait
cwtl
add
icebp
dec
jmp
push
mov
mov
lea
adc
lret
add
out
loop
xor
rcrb
fistpll
fildll
xchg
pop
push
mov
repz
cmpsb
push
leave
enter
jo
rclb
or
dec
fs
pop
sub
into
decb
ret
mov
xchg
inc
and
hlt
adc
adc
pop
cmp
cmpsl
xor
jg
push
jne
sbb
pop
ja
ss
adc
cmp
xchg
pop
xlat
cs
out
pop
ja
adc
sbb
lea
and
xor
and
icebp
packssdw
adc
leave
js
stos
push
or
sub
pop
jmp
inc
inc
addr16
dec
dec
movsb
cld
pop
fwait
mov
dec
add
and
or
sbb
test
adc
pop
aas
xchg
dec
and
dec
lods
movsl
outsb
or
mov
sub
ja
xchg
dec
sub
add
xchg
add
inc
cmp
test
sbb
xchg
lods
mov
inc
inc
popf
into
mov
adc
inc
or
adc
inc
add
test
pop
xchg
daa
jne
in
mov
adc
call
xor
jge
lods
mov
lahf
adc
insl
push
mov
sub
jl
add
xchg
pop
and
sbbb
jnp
pop
int
or
movb
pusha
jl
mov
imul
xchg
jns
dec
test
in
dec
jo
or
sahf
fcomi
and
scas
fldcw
cmp
loope
popa
inc
xor
push
xchg
or
inc
push
sbb
gs
sub
and
add
inc
xor
or
out
mov
inc
cmp
decl
lods
fadds
add
mov
or
in
add
jnp
shrb
cmp
invlpg
add
jne
push
test
push
inc
and
inc
mov
adc
inc
and
sbb
mov
sub
jne
faddl
movsb
inc
mov
push
bound
xchg
or
xor
add
clc
sub
leave
add
mov
adc
xchg
push
push
push
aad
enter
jle
inc
xor
ds
mov
push
add
sub
outsl
mov
xor
adc
jnp
inc
add
mov
cmp
lds
leave
pop
push
adc
push
xor
loop
cmp
popf
inc
sbb
out
jecxz
sbb
jae
or
add
inc
sub
pop
lea
pop
xchg
push
popa
push
mov
and
aad
test
sub
sbb
or
dec
imul
adc
xchg
mov
adc
sub
popa
aam
cmp
lods
inc
outsb
hlt
loopne
dec
xor
clc
inc
aad
aas
rolb
or
adc
es
sub
cmp
in
repz
jg
xor
cs
rcll
and
lret
cmp
les
mov
push
push
sub
int3
lret
jo
add
sub
push
mov
add
push
xchg
or
pop
jg
push
adc
out
inc
sub
pop
je
sti
sub
push
add
sub
sub
or
jae
je
mov
sub
dec
jl
shrb
push
cmc
sbb
stos
test
and
cli
fsubrs
and
dec
repz
add
dec
sub
pop
lret
add
mov
das
mov
sub
mov
dec
dec
push
sarb
push
mov
int3
xor
je
cmp
adc
scas
sub
pcmpgtw
ja
popf
sarb
add
data16
dec
inc
pop
sub
add
pusha
push
lea
xor
pop
adcl
rorl
sbb
push
lret
lods
inc
mov
test
hlt
pop
test
pusha
mulb
add
out
add
js
lcall
dec
movsb
mov
jnp
sbb
dec
push
das
in
ret
and
lcall
call
fisttpl
or
jg
cmpsl
loope
mov
cmp
sbb
pop
adc
imul
mov
enter
push
pop
les
push
cwtl
adc
repz
aam
or
push
daa
dec
icebp
pop
pop
xchg
inc
sub
divl
and
sub
aad
pusha
movsb
dec
mov
push
push
mov
mov
shrb
comiss
inc
sbb
xor
jbe
push
out
mov
and
je
dec
fildl
inc
jnp
test
leave
adc
fwait
dec
inc
pop
xchg
mov
icebp
stc
mov
mov
or
insb
rcrb
cmp
rolb
cmp
add
fsubl
addr16
inc
out
xor
inc
add
ret
mov
fs
pop
mov
jno
outsb
mov
xor
and
push
push
dec
push
cs
and
push
sbb
inc
nop
dec
lds
lock
sub
pushf
aad
push
enter
insl
push
dec
mov
push
pop
iret
xchg
add
adc
inc
arpl
insl
sbbb
and
ret
sbbl
add
jecxz
sub
subl
pop
lods
aad
xchg
imul
montmul
cmpsb
pop
cmp
or
sub
push
fiadd
add
dec
add
sub
or
arpl
fwait
int3
es
sbb
lock
inc
push
imul
or
or
or
imul
call
pop
adc
inc
sbb
insl
scas
cmp
cmc
inc
stc
fidivl
movsb
push
push
or
push
dec
addb
or
jle
push
jb
gs
or
loopne
pop
movsl
mov
je
fs
rorl
lods
andnps
imul
sub
adc
xor
xchg
xor
and
and
or
mov
sahf
push
jae
jp
outsl
push
movsb
lret
dec
jl
imul
xor
push
inc
xchg
lcall
sub
out
mov
xlat
inc
mov
sub
data16
dec
loopne
mov
cmp
pop
or
push
repnz
push
das
rcrl
out
int3
push
sbb
sub
leave
pop
jns
aaa
mov
movsb
cmp
sbb
loop
jmp
in
enter
jg
idiv
add
or
and
sbb
jl
and
xor
daa
push
pusha
stos
stos
sbb
outsb
rclb
pop
in
sbb
sbb
pop
add
in
andl
movsb
sbb
sub
js
rcr
cld
mov
divl
shlb
leave
rorb
push
adc
cmp
and
dec
insb
rorl
cmp
mov
add
loopne
xorl
scas
and
pop
pop
and
xchg
xor
pop
jb
xchg
sbb
dec
xchg
jns
add
shll
aaa
mov
sbb
cltd
pop
xchg
xchg
xchg
or
jmp
adc
out
test
sti
push
xchg
push
hlt
pop
repz
or
cs
cmp
sahf
daa
push
xchg
fisubr
cli
nop
add
jge
sub
pop
and
sub
fsubrs
ds
inc
insb
lock
mov
fadds
mov
xor
pusha
add
leave
adc
fdivl
sti
out
fldcw
in
out
lods
push
mov
aad
outsb
loope
fs
insb
lret
and
and
push
sub
fsubrs
test
sar
add
dec
pop
les
call
adc
mov
ss
push
add
add
push
dec
call
mov
mov
dec
cltd
inc
sub
dec
inc
pop
out
cltd
xchg
adc
push
jno
push
sub
inc
jne
mov
mov
adc
cmp
adc
dec
mov
pusha
enter
js
inc
js
pop
adc
inc
xchg
mov
xor
sahf
imul
or
push
je
movb
adc
push
call
sbb
adc
cmp
inc
repnz
in
pop
dec
dec
lret
push
jle
inc
xchg
ljmp
xchg
xchg
jp
stos
jmp
push
orb
dec
push
cmp
mov
xchg
inc
out
outsl
out
add
adc
cmc
arpl
les
sbb
lods
inc
lret
adc
xor
add
jno
push
xchg
shl
icebp
and
ja,pn
and
sub
push
mov
ficom
mov
sahf
mov
cmp
js
mulb
inc
dec
fisttpl
pusha
inc
in
sbb
push
jo
mov
or
adc
data16
jno
cmp
dec
dec
sar
inc
ljmp
aad
repnz
mov
nop
adc
rcrl
lret
inc
xchg
fwait
movsl
xchg
test
cmp
rcl
xchg
mov
push
dec
mov
dec
cmc
dec
mov
lods
hlt
lahf
daa
pop
je
push
cmp
adc
pop
mov
fwait
pop
fild
jp
jns
bound
fadd
add
aam
das
pop
loope
xchg
mov
push
cmp
pop
sub
stos
inc
cmp
aam
adc
test
push
pop
and
add
sub
jmp
push
aas
push
push
adc
fdivl
imul
cld
push
sub
pusha
lret
xchg
movsl
xchg
jno
and
sahf
mov
add
sbb
std
xchg
cmp
mov
pushf
in
ret
push
pop
loop
fs
cmp
test
pushf
dec
or
or
mov
std
jne
cmp
and
hlt
xor
push
outsb
rcl
test
mov
xchg
cmp
data16
xor
xor
mov
push
in
bound
sub
cmp
or
adc
fwait
adc
in
stos
jecxz
rclb
push
sbb
and
mov
int
xor
pop
add
or
inc
pop
sbb
or
inc
inc
xchg
lcall
xlat
enter
add
scas
sub
adc
cs
incb
test
adc
fsubl
push
sub
sub
fsub
adc
sub
pop
in
pop
bound
mov
or
push
inc
fmuls
nop
imul
jg
rorb
and
mov
mov
popa
mov
or
out
sub
sbb
jo
call
aas
mov
mov
stos
repnz
stos
pop
and
jo
int3
push
outsl
cs
xchg
jp
ret
push
add
sbbb
sub
add
and
shrl
push
sbb
mov
jno
loope
cmp
sub
mov
or
cmp
xor
adc
and
jmp
movsl
sub
inc
enter
scas
inc
mov
in
clc
push
adc
mov
ds
push
aad
xchg
mov
pop
stc
mov
dec
xchg
and
cmp
loopne
les
out
mov
and
xor
push
fwait
push
sub
cmp
dec
movsb
push
arpl
sbb
repnz
jo
es
outsb
lods
xor
add
mov
std
mull
data16
pop
mov
sbb
mov
das
stos
call
in
add
add
push
xor
pop
ss
add
push
push
insl
push
pop
test
mov
or
fnsetpm(287
adc
adc
test
push
add
dec
cwtl
and
push
mov
ja
push
push
push
insl
cmp
inc
jo
sbb
stos
das
std
out
push
push
cmp
imul
ficompl
sub
repnz
fdivl
arpl
xor
mov
jo
outsl
loope
pop
or
jb
jae
mov
xchg
mov
or
xchg
sub
mov
adc
das
fisubl
movsl
xchg
push
dec
cmp
setno
negl
push
mov
jo
inc
inc
ss
or
add
lcall
mov
sub
jg
data16
pop
dec
notl
inc
cwtl
mov
arpl
or
minps
bound
fsts
gs
sub
add
push
dec
mov
ja
lods
cmpsb
adc
lret
push
sbb
add
testb
or
or
fstpl
lods
jle
cld
cmp
repnz
dec
adc
mov
add
fs
clc
mov
mov
add
cmp
sbb
dec
rorb
cmp
xchg
sub
mov
inc
pop
push
sub
jmp
inc
enter
in
mov
adc
pop
enter
push
enter
or
fs
add
or
enter
faddl
adc
adc
or
sub
sbb
in
mov
stos
mov
jmp
out
jmp
push
add
pop
adc
jno
int3
or
icebp
mov
jmp
push
repz
xor
sbb
dec
pop
inc
addr16
xor
mov
lahf
jns
push
xor
les
cmpsb
push
mov
out
nop
cmp
pop
sbb
stc
out
pusha
add
insl
and
jo
sbb
xor
mov
cld
sub
mov
inc
inc
push
jb
sub
fwait
gs
or
push
in
xchg
pop
les
test
sub
sbb
daa
pusha
pop
test
cs
sbb
clc
jno
dec
ljmp
aam
std
arpl
call
push
add
nop
es
addr16
iret
call
xchg
in
mov
je
fs
pushf
stc
mov
ret
push
lret
xchg
mov
pusha
std
daa
xchg
add
mov
sub
gs
and
movb
daa
jbe
or
jp
sbb
je
popf
xor
dec
jae
cs
add
push
and
mov
scas
add
or
dec
js
fs
mov
decl
xor
sahf
jl
pusha
xchg
inc
sub
pop
sub
adc
mov
dec
sub
jae
scas
ret
sub
push
mov
adc
xchg
push
mov
mov
shrl
lcall
aam
arpl
rcll
sub
mov
push
xor
lds
mov
enter
ljmp
pop
mov
inc
arpl
rclb
pop
pop
fs
inc
or
setno
cld
xchg
mov
ds
push
lds
push
insb
mov
and
and
scas
outsb
mov
insb
inc
push
loop
sub
jmp
test
arpl
jno
dec
lds
test
add
pop
and
jno
aas
mov
xor
shrb
xchg
dec
pop
dec
stos
mov
mov
sahf
jbe
daa
nop
gs
push
ret
in
sub
push
cmpsb
xor
sbb
lret
inc
xchg
sub
jo
push
jecxz
rorl
push
add
nop
jle
push
inc
mov
mov
push
faddl
dec
pause
loopne
mov
in
bound
add
aaa
bound
or
inc
and
mov
enter
enter
nop
mov
cld
cmc
jo
aaa
imull
and
inc
push
sbb
or
adc
jl
imul
xor
ret
sub
gs
xchg
mov
dec
cmp
cmp
or
hlt
enter
sub
hlt
adc
aad
cmpsl
xchg
cld
mov
mov
and
hlt
and
sbb
hlt
and
addr16
jno
dec
sbb
jae
insl
jbe
mov
in
jecxz
cmpsb
in
xchg
hlt
jl
fmuls
hlt
loope
push
fisubrl
test
sub
test
xchg
in
insb
loopne
movsl
in
pop
hlt
add
mov
mov
inc
cmp
mov
xchg
sahf
add
push
cmp
sti
sub
in
je
xchg
cmpsl
mov
shr
stos
rcrb
iret
push
adc
mov
push
push
movsb
mov
loope
rol
mov
xchg
sbb
cli
and
adc
sti
repnz
enter
sub
cmpsb
or
bound
je
lods
imul
bnd
rolb
clc
add
arpl
dec
in
loope
cmp
mov
mov
or
das
rcr
cmp
inc
out
ret
sbb
movsl
aam
lret
and
test
push
inc
mov
add
sub
and
lret
sbb
cmp
loope
dec
test
xchg
pop
pop
scas
jnp
mov
or
pop
adc
jle
cmp
dec
rorb
mov
mov
repnz
test
adc
mov
loopne
fs
repnz
sbb
repnz
enter
les
adc
lret
fs
sbb
les
and
cmpsb
out
loop
fbld
fs
test
frstor
mov
mov
xor
sub
xchg
add
sub
xor
and
sub
add
inc
and
int3
xchg
idivb
push
in
xchg
ret
lock
jecxz
notb
out
fsts
jbe
mov
inc
cwtl
or
mov
mov
ja
mov
insl
sbb
pop
and
in
ret
imul
sti
sub
outsb
lods
cltd
push
push
push
or
outsl
sbb
mov
cmp
mov
adcb
jo
xor
xchg
or
xchg
mov
cmp
jl
stos
sbb
sbb
das
loop
cwtl
mov
int
std
add
scas
or
int3
pop
cmpsb
mov
mov
fistpll
and
mov
or
movsb
xorl
dec
lcall
aas
adc
cld
adc
adc
es
aas
pop
gs
loop
add
or
std
xchg
ds
sub
sbb
outsl
mov
adc
out
adc
mov
sbbl
insl
push
les
jle
inc
push
xor
insb
and
repz
and
dec
es
xchg
sahf
fwait
adc
jl
mov
pop
aad
xchg
std
sbb
jge
cmpsb
and
sub
jle
xlat
cmp
ljmp
sbb
loopne
jo
adc
and
pop
adc
call
mov
cmp
lds
dec
mov
or
jp
xchg
sub
add
imul
sbb
sub
fs
cmp
add
mov
adc
out
out
sub
pop
cmp
sub
adc
xchg
dec
in
notl
call
repz
nop
loopne
and
cmpsl
loopne
movsl
in
push
or
pop
es
inc
int
in
test
xchg
test
bound
inc
cmp
inc
lret
sub
hlt
roll
fidiv
pop
inc
mov
inc
mov
fmull
stos
inc
fscale
fidivl
int
movsb
dec
aaa
in
insl
repnz
or
mov
leave
or
or
cmp
arpl
adc
inc
xor
ret
pop
dec
pop
add
pop
arpl
enter
call
inc
push
adc
cmp
dec
or
or
sub
or
aas
lods
ljmp
sub
pop
ds
cmp
jno
dec
dec
add
mov
fisttp
dec
sub
cmp
movsb
jns
jne
nop
xchg
insb
jb
nop
or
aam
das
sub
mov
ret
mov
mov
push
movsb
sub
cmp
jmp
int3
xchg
not
ljmp
sub
or
enter
movsb
dec
loopne
nop
add
dec
sub
add
je
mov
or
rcl
scas
mov
repz
sbb
jge
imul
add
orb
push
in
pusha
push
xchg
in
adc
push
ljmp
mov
and
add
or
xchg
jp
popa
mov
popa
lcall
in
push
or
push
mov
jae
inc
int
movsb
cmp
push
mov
inc
pop
cmpsb
pop
push
add
adc
jbe
aas
mov
inc
fstpl
jb
adc
cmp
daa
sti
adc
mov
sbb
xchg
pop
xor
ret
aaa
jns
das
and
outsb
sbb
and
sbb
nop
hlt
add
and
lret
sbb
mov
je
cmc
movsl
fcoms
roll
add
pushw
es
sub
std
push
dec
mov
sub
adc
imul
cmp
pop
outsb
xor
adc
sub
push
xchg
sbb
sarb
les
mov
fsts
jae
mov
jnp
or
inc
push
xchg
fwait
aam
nop
mov
cld
ret
sub
mov
in
sbb
push
cmp
and
pop
cmpsb
or
pop
mov
lods
bound
add
mov
fnstcw
and
push
pop
iret
bound
add
imul
aas
ss
imulb
xchg
mov
inc
dec
add
mov
inc
test
cmpsb
enter
lcall
mov
pop
sub
inc
pop
or
dec
jae
icebp
lods
lret
pop
loop
enter
enter
je
data16
das
lods
xor
mov
lret
in
pushf
test
rcrl
aas
adc
xchg
test
orl
lret
cmp
push
push
mov
scas
inc
cli
pop
enter
xlat
std
lock
add
cmp
pop
fisttpll
mov
ret
fisttpl
mov
cmp
stos
loop
mov
push
mov
mov
sbb
inc
adc
xchg
push
push
in
push
xchg
icebp
fs
mov
cmc
inc
inc
push
aas
mov
sbb
imul
das
and
pushf
cs
subl
dec
mov
aaa
mov
lods
dec
mov
mov
push
fisubr
adc
nop
and
ret
enter
int3
bound
mov
sbb
xor
xchg
gs
outsl
roll
aam
in
sub
ret
sub
shlb
stos
add
jne
jbe
rcrl
lret
mov
sbb
lods
dec
cld
and
mov
xor
sub
out
xchg
pusha
inc
xchg
mov
adc
dec
mov
stos
sub
mov
xchg
ficoml
xchg
mov
movsl
inc
and
jmp
dec
add
outsb
xchg
pushf
adc
rolb
mov
xor
sbb
sbb
xorl
push
add
mov
push
movsb
pop
insl
sub
xor
add
je
js
mov
adc
inc
fnstsw
jnp
lcall
scas
sahf
mov
xor
push
xor
insb
xchg
and
jecxz
push
push
test
cs
inc
stc
aaa
fnop
add
push
push
push
inc
sahf
push
sar
add
sbb
sarb
xchg
cld
addl
or
cmpsl
insl
pop
std
mov
jecxz
imul
roll
jns
sbb
cmp
sbb
add
push
nop
mov
xlat
stos
push
enter
xor
inc
dec
pop
ja
mov
rorl
or
inc
pop
push
ret
mov
sbb
movsl
mov
push
addr16
mov
imul
cwtl
mov
mov
or
adc
leave
repnz
les
jno
pop
jge
es
addr16
in
stos
dec
mov
inc
jp
cwtl
inc
loop
jbe
add
stc
cmp
push
xor
cmp
adc
pop
xor
sbb
add
fild
mov
mov
add
sub
pop
xchg
pop
enter
inc
add
add
xchg
mov
add
iret
xchg
adc
xor
add
inc
mov
push
push
mov
add
dec
pop
cmp
cwtl
fucom
jne
ret
sub
pop
fdivl
cs
adc
xor
test
xor
enter
outsb
arpl
add
push
or
or
mov
adc
push
imul
adc
and
push
or
jl
in
jae
popf
sbb
sbb
pop
pop
and
and
push
je
enter
or
and
aam
dec
insb
lds
das
xor
enter
or
xor
test
or
pop
sbb
or
jge
ds
aas
lds
inc
jne
inc
pop
add
and
inc
sub
shlb
dec
orl
sub
dec
insb
push
and
nop
adc
enter
or
fs
sbb
test
jno
enter
inc
inc
pop
fwait
pop
and
mov
inc
enter
aas
and
push
sub
mov
push
push
cs
hlt
addr16
cmc
sub
outsl
push
add
add
or
jae
je
inc
mov
jbe
inc
push
sti
cmp
jns
aas
sbb
mov
add
lods
cmp
mov
ret
test
jne
enter
or
mov
mov
mov
mov
cmp
hlt
and
test
xchg
mov
push
inc
xchg
jmp
cltd
fs
sub
test
stos
mov
and
sbb
outsb
arpl
stos
insb
scas
test
movsb
repnz
push
inc
cmpsb
enter
or
in
push
stos
sub
test
inc
popf
lea
aam
dec
sub
lds
inc
mov
mov
mov
sbb
test
je
enter
or
sub
test
enter
or
push
lret
mov
int3
int
inc
mov
iret
pop
jecxz
and
das
xchg
pusha
mov
outsl
aam
xchg
sbb
enter
or
fldenv
fildl
es
fmulp
lcall
loop
mov
in
por
fimul
and
fstpl
jmp
aam
mov
es
out
enter
or
mov
repnz
cmc
mov
cmc
push
add
enter
or
stc
fs
sub
mov
cld
int
dec
into
push
mov
outsb
cmp
addr16
leave
cmc
inc
dec
add
add
enter
or
cld
pop
or
sti
mov
mov
dec
idivl
pop
fbld
cltd
inc
mov
pop
or
les
mov
dec
add
scas
xor
lcall
cmp
add
stc
jp
xchg
int3
inc
or
or
jnp
add
push
mov
js
cmp
int3
fisttp
and
xor
jae
pop
sub
pusha
lods
pop
jnp
lea
or
add
pushf
and
and
inc
mov
stos
jo
sbb
adc
and
inc
data16
fs
mov
add
pop
fs
dec
sbb
dec
inc
dec
mov
arpl
inc
insb
xlat
and
jae
xlat
repnz
lock
popa
adc
bound
inc
dec
sub
je
js
int
push
lds
cmp
dec
dec
stos
testb
or
add
add
add
aaa
xor
add
add
add
add
add
xor
add
dec
gs
incl
.byte
dec
orl
mov
inc
cwtl
add
orb
and
sub
add
sbb
das
adc
insl
lds
negb
push
inc
enter
fmuls
pop
xor
mov
add
xor
pop
inc
push
jecxz
inc
lock
pushw
add
push
push
pop
ss
mov
or
or
clc
xor
jne
jle
clc
push
dec
outsl
dec
adc
xchg
jae
add
pushf
lods
popa
sbb
pop
shrl
test
sub
and
stos
adc
and
out
je
jl
push
push
test
js
or
dec
sub
push
push
and
mov
sub
jl
outsb
or
push
xor
pusha
roll
and
dec
sub
gs
push
jae
inc
js
mov
popa
push
fsts
in
test
push
mov
aam
mov
push
or
popl
cmpsb
add
push
mov
adc
xor
sbb
repnz
pop
pusha
je
lods
cld
and
icebp
and
sub
lods
push
mov
cltd
in
and
dec
jbe
jo
lods
jnp
dec
mov
movsl
xor
outsl
insl
xor
adc
sub
cltd
cmp
adc
or
es
add
call
push
sub
add
repnz
faddl
mov
sbb
inc
xchg
adc
stc
sub
es
xor
add
sub
sbb
in
fwait
sbb
cmp
add
arpl
add
mov
aas
add
ret
xor
dec
or
dec
or
mov
add
pop
bound
pusha
mov
dec
inc
aas
clc
push
push
inc
adc
fs
push
xchg
addr16
or
dec
dec
add
dec
popf
lahf
jne
out
out
and
cmp
push
loop
out
testb
scas
sub
mov
inc
dec
inc
push
push
sbb
pusha
lea
add
xchg
push
and
dec
jae
xor
aaa
and
adc
pop
popa
jle
cs
push
sub
mov
mov
adc
imul
pop
cmpsb
ljmp
popf
xchg
pop
in
or
int3
adc
adc
loopne
cmp
test
addl
pop
and
das
mov
xor
or
and
rolb
in
add
addr16
pop
adc
add
ds
sub
sbb
mov
testb
mov
pop
arpl
cmp
adc
movsb
adc
inc
shlb
dec
dec
jmp
dec
add
testb
movl
adc
add
dec
add
and
add
add
add
add
add
xor
add
dec
gs
incl
or
add
inc
add
add
add
aaa
xor
add
add
add
add
add
xor
add
dec
gs
incl
or
add
inc
add
add
add
aaa
xor
add
add
add
add
add
xor
add
dec
gs
incl
or
add
inc
add
add
add
aaa
xor
add
add
add
add
add
xor
add
dec
gs
incl
or
add
inc
add
add
add
aaa
xor
add
add
add
add
add
xor
add
dec
gs
incl
or
add
inc
add
add
add
aaa
xor
add
add
add
add
add
xor
add
dec
gs
incl
or
add
inc
add
add
add
aaa
xor
add
add
add
add
add
xor
add
dec
gs
incl
or
add
inc
add
add
add
aaa
xor
push
call
pop
sub
mov
push
pusha
mov
sub
mov
cmpb
jne
movb
jmp
popa
pop
mov
pop
jmp
jmp
jmp
mov
mov
test
je
add
jmp
add
call
push
push
push
push
call
mov
push
mov
add
call
mov
add
pop
call
push
push
push
push
call
mov
push
mov
add
push
call
add
mov
mov
add
mov
rep
mov
aad
ret
push
add
rorb
mov
int
mov
jbe
add
xor
shrb
or
add
mov
mov
inc
div
add
nop
call
int3
mov
cmpsb
mov
or
sub
sbb
mul
inc
pop
enter
push
outsb
push
sub
rorl
mov
sub
lret
or
cmc
cmp
sarb
pop
add
testb
mov
inc
add
out
adc
pop
add
add
call
enter
pusha
sbb
inc
sub
andl
mov
cmp
add
out
out
sti
loopne
push
lock
jmp
js
add
or
push
pop
pop
mov
ljmp
or
jmp
lock
in
adc
sbb
add
add
out
mov
push
push
xor
ret
rorb
xorl
jne
fsubs
stos
dec
mov
sbb
pop
nop
push
fdivl
push
mov
cld
inc
cld
mov
mov
inc
aaa
push
push
push
jns
popa
add
pop
pop
pop
and
sub
test
sarl
or
and
call
sub
rorl
popf
das
mov
add
sbb
sub
xor
pop
mov
adc
movsb
dec
dec
test
mov
cltd
dec
in
add
loop
add
xchg
mov
xchg
mov
inc
and
clc
pop
push
sub
movsb
pop
mov
data16
lea
inc
and
mov
cmc
cmpl
aam
mov
inc
fbstp
in
push
or
mov
int
roll
pop
sbb
cwtl
movsb
jmp
sbb
pop
pop
mov
dec
mov
add
je
and
je
jecxz
inc
sub
inc
lds
je
or
lea
lret
sbb
push
inc
adc
push
rclb
adc
adc
pop
bound
push
mov
or
add
adc
adc
sub
mov
ljmp
sbb
mov
adc
test
test
incl
dec
mov
out
push
sub
movsb
stos
push
pop
dec
jmp
das
or
or
push
jp
mov
push
fstl
pop
jmp
jne
mov
add
and
add
jmp
or
addb
std
inc
clc
out
rcll
adc
sub
adc
mov
push
pop
dec
inc
dec
xor
fwait
and
int
scas
dec
and
inc
call
adc
cmpb
pop
add
sbb
adc
std
or
dec
dec
pusha
add
or
push
add
pop
lds
iret
push
xchg
xchg
cld
bound
test
sub
sub
bound
test
or
leave
add
adc
sbb
cltd
xchg
mov
enter
and
or
roll
cmp
adc
push
dec
cltd
jo
adc
cmp
mov
sub
sbb
push
and
cmpb
je
inc
es
sub
sub
sub
jne
mov
inc
and
mov
dec
xchg
mov
push
adc
adc
dec
jge
ret
mov
aaa
je
in
mov
cmp
cmp
xchg
les
adc
adcl
ds
in
mov
cli
std
xchg
icebp
ja
mov
mov
mov
mov
inc
pop
or
adc
es
mov
cmpsb
daa
ds
repnz
or
ret
push
push
mov
stos
dec
jne
cld
pop
pop
in
pop
shrb
or
je
inc
add
ret
mov
xor
jp
decl
xor
arpl
and
adc
sbb
div
or
jne
jmp
movsb
cmp
lds
add
jae
lds
or
cmp
and
jecxz
push
sub
ret
mov
insl
mov
xor
mov
push
xchg
cmp
adc
shl
dec
adc
jne
daa
mov
pop
jmp
scas
imul
outsb
add
gs
adc
mov
in
loop
lret
scas
sbb
outsb
mov
cmc
data16
cli
xor
adc
sbb
aas
xchg
and
or
daa
sub
sahf
cmp
cmc
jmp
and
test
adc
mov
inc
sbb
sti
inc
adc
or
cmp
cmp
out
xchg
push
dec
jae
push
shr
mov
mov
in
call
dec
lock
add
xor
pop
inc
lret
hlt
pop
inc
add
in
pop
mov
dec
fnstsw
in
dec
adcb
cmp
cmpsl
or
ficomp
rcrl
mov
mov
daa
mov
out
adc
add
pop
sub
push
push
lods
xchg
out
js
mov
mov
jmp
sub
mov
mov
add
add
fs
pushf
jl
lret
jnp
jmp
sub
push
push
pop
pop
imul
or
rcrl
enter
or
inc
shl
push
ret
push
mov
dec
int
in
push
fnsave
add
pushl
and
add
push
scas
push
jp
js
push
jmp
pop
mov
xor
orb
stos
sub
dec
pop
cmp
aaa
xorl
add
lret
or
push
xor
pop
adc
lea
repnz
in
add
imul
add
ret
mov
add
mov
cmp
je
cmp
je
ret
mov
imul
jmp
mov
imul
add
ret
mov
mov
shr
xor
mov
div
or
jne
jmp
mov
add
sidtl
mov
add
mov
add
mov
and
and
sub
ret
mov
ret
xor
mov
add
mov
add
mov
cmp
je
shl
dec
cmp
jne
add
mov
cmp
je
shl
shr
sub
cmp
jne
ret
mov
mov
mul
mov
xchg
scas
sbb
outsb
xchg
mov
cmp
jb
cmp
jb
cmp
jb
cmp
jb
add
mov
jmp
add
mov
jmp
add
mov
jmp
add
mov
jmp
add
mov
push
push
mov
mul
pop
shr
mov
add
xor
xor
xor
push
xor
mov
mov
shr
inc
cmp
jne
inc
add
add
cmp
jne
pop
pop
mov
ret
mov
mov
mov
shr
xor
mov
div
or
jne
jmp
mov
push
push
add
sidtl
mov
add
mov
add
mov
and
and
sub
mov
mov
pop
add
xor
mov
add
mov
add
mov
mov
shl
add
mov
pop
ret
mov
mov
mov
add
xor
mov
add
mov
add
mov
mov
shl
add
mov
ret
mov
push
mov
mov
shr
xor
mov
div
or
jne
add
call
mov
jmp
add
sidtl
mov
add
mov
push
push
add
mov
and
and
sub
cmp
mov
je
add
mov
add
mov
inc
cmpb
je
sub
mov
pop
pop
nop
add
mov
and
and
sub
mov
mov
mov
add
xor
mov
add
mov
add
mov
mov
shl
add
mov
mov
test
je
pop
ret
pop
sub
ret
add
add
add
scas
sbb
outsb
xchg
xchg
inc
shl
ret
push
mov
mov
mov
push
mov
add
push
pushl
mov
mov
jmp
mov
mov
add
mov
sub
add
mov
mov
mov
rep
sub
movl
movb
jmp
add
movb
sub
add
mov
mov
mov
rep
sub
movl
movb
mov
mov
popl
mov
pop
ret
xor
mov
xchg
mov
mul
mov
shr
mov
mov
shr
push
xor
xor
mov
div
or
pop
je
inc
mov
ret
xor
mov
xchg
mov
mul
mov
shr
mov
mov
shr
push
xor
xor
mov
div
or
pop
jne
inc
mov
ret
push
mov
pusha
push
mov
mov
cld
mov
mov
inc
mov
inc
add
jne
mov
inc
adc
jae
add
jne
mov
inc
adc
jae
xor
add
jne
mov
inc
adc
jae
add
jne
mov
inc
adc
adc
add
jne
mov
inc
adc
adc
add
jne
mov
inc
adc
adc
add
jne
mov
inc
adc
adc
je
push
sub
mov
pop
mov
inc
jmp
mov
add
jne
mov
inc
adc
adc
add
jne
mov
inc
adc
jb
sub
jne
mov
add
jne
mov
inc
adc
adc
add
jne
mov
inc
adc
jb
push
mov
sub
rep
pop
jmp
dec
shl
mov
inc
mov
mov
add
jne
mov
inc
adc
adc
add
jne
mov
inc
adc
jb
cmp
jae
cmp
jb
inc
push
mov
sub
rep
pop
jmp
cmp
ja
add
push
mov
sub
rep
pop
jmp
mov
inc
xor
shr
je
adc
mov
push
mov
sub
rep
pop
jmp
pop
sub
mov
mov
mov
popa
pop
ret
mov
mov
mov
mov
nop
nop
mov
inc
dec
cmp
jne
ret
mov
mov
add
push
push
push
mov
add
push
push
push
call
ret
xor
mov
mov
xor
mov
mov
nop
nop
nop
mov
inc
inc
dec
cmp
jne
ret
xor
xor
xor
mov
mov
mov
mov
add
inc
dec
cmp
jne
cmp
jne
inc
cmp
je
jmp
mov
mov
rdtsc
add
mov
dec
inc
cmp
jne
ret
xor
mov
mov
add
mov
add
mov
sub
xor
lods
add
dec
inc
cmp
jne
cmp
jne
inc
cmp
je
jmp
push
call
ret
mov
add
push
push
push
push
call
pusha
cmpb
je
cmpb
je
nop
nop
nop
nop
push
mov
add
push
push
call
mov
add
mov
xor
cmpb
je
inc
inc
jmp
sub
mov
test
je
mov
cmp
je
add
mov
dec
jmp
nop
mov
cmp
je
mov
dec
jmp
inc
mov
add
xor
xor
mov
cmp
je
cmp
je
cmp
jne
inc
inc
inc
jmp
xor
div
mov
add
push
call
cmp
jne
mov
add
push
call
cmp
je
popa
mov
add
jmp
lea
mov
mov
cmpl
je
mov
mov
jmp
cmp
je
addl
jmp
ret
xor
mov
ret
mov
jmp
pusha
cmpb
je
cmpb
je
nop
nop
nop
nop
push
mov
add
push
push
call
mov
add
mov
xor
cmpb
je
inc
inc
jmp
sub
mov
test
je
mov
cmp
je
add
mov
dec
jmp
nop
mov
cmp
je
mov
dec
jmp
inc
mov
add
xor
xor
mov
cmp
je
cmp
je
cmp
jne
inc
inc
inc
jmp
xor
div
mov
add
push
call
cmp
jne
mov
add
push
call
cmp
je
popa
mov
add
jmp
mov
mov
add
mov
sub
je
mov
or
je
mov
sub
shr
mov
add
add
movzwl
ror
dec
js
sub
je
jmp
shr
add
jmp
shr
add
jmp
push
shr
mov
shl
mov
and
mov
pop
lea
mov
add
dec
jmp
shr
add
add
loop
jmp
jmp
push
push
pushl
call
mov
mov
add
mov
or
je
add
mov
push
call
or
jne
push
call
or
je
mov
push
popl
mov
or
mov
jne
mov
add
add
mov
mov
add
add
or
je
test
jne
lea
jmp
and
movl
movb
mov
push
pushl
call
or
je
nop
nop
nop
nop
mov
cmpb
je
mov
pusha
mov
mov
mov
cmpb
je
inc
jmp
movb
dec
cmp
ja
popa
movb
addl
jmp
mov
mov
mov
rep
add
mov
jmp
mov
add
jmp
ret
add
nop
mov
add
add
add
add
add
dec
inc
push
dec
inc
dec
xor
cs
dec
dec
add
loope
add
add
push
loope
add
add
add
and
add
sahf
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loop
add
add
add
add
xor
add
inc
loope
add
add
fs
add
add
and
add
sahf
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loop
add
add
add
add
add
inc
gs
jb
arpl
fs
jae
add
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
add
fs
imul
add
add
imul
jae
add
inc
jb
popa
je
push
push
add
add
jb
jne
insb
inc
insb
insb
outsl
arpl
add
push
imul
jb
add
add
imul
add
add
je
jns
je
insl
inc
imul
jns
add
add
gs
je
inc
imul
jb
je
inc
imul
outsl
jae
dec
popa
outsb
fs
add
add
gs
imul
add
inc
gs
imul
add
inc
outsl
insl
jo
jb
inc
imul
add
inc
gs
outsl
fs
gs
imul
add
add
je
outsl
insl
insl
popa
outsb
fs
imul
inc
add
add
add
imul
arpl
add
add
add
mov
jecxz
push
sub
add
xor
xor
add
add
add
add
rolb
add
and
add
add
add
les
add
xor
js
add
add
add
sti
dec
dec
inc
dec
gs
incl
or
add
inc
add
add
add
aaa
xor
add
add
add
add
add
xor
add
add
add
je
jb
jae
gs
insb
jne
je
outsl
outsb
outsl
arpl
bound
popa
jb
jae
gs
insb
jne
je
outsl
outsb
cs
insb
add
je
jb
jae
add
add
add
add
add
add
add
add
je,pn
js
fs
je
jb
jb
add
add
add
add
rolb
add
add
add
add
add
add
push
xchg
add
add
les
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
hlt
add
add
add
add
add
add
or
dec
gs
gs
xor
add
jb
jne
insb
inc
insb
insb
outsl
arpl
inc
insb
insb
push
imul
jb
gs
inc
jb
outsl
jb
outsb
arpl
outsb
je
jb
and
jae
insb
jbe
outsb
and
jo
jb
jae
or
and
fs
ja
insb
insb
and
and
insl
imul
add
je
insb
and
arpl
je
outsl
outsb
add
and
jp
add
add
or
add
add
popa
pop
mov
pop
jmp
mov
add
xor
lods
cmp
je
shl
inc
cmp
jne
mov
shr
dec
cmp
jl
shl
jmp
mov
popa
pop
mov
pop
jmp
mov
mov
popa
pop
mov
pop
jmp
xor
mov
inc
mov
inc
mov
inc
mov
shl
mov
shl
mov
shl
mov
mov
popa
pop
mov
pop
push
ret
nop
jmp
int3
int3
int3
int3
int3
mov
xor
mov
add
add
mov
mov
add
push
mov
dec
mov
inc
dec
cmp
jne
mov
mov
popa
pop
mov
pop
push
ret
nop
nop
inc
add
add
xor
mov
add
mov
push
mov
add
mov
xor
dec
inc
inc
cmp
je
cmp
jne
xor
mov
jmp
pop
jmp
nop
js
adc
mov
add
add
add
mov
add
add
add
or
add
adc
add
pop
sbb
add
add
push
xchg
dec
dec
add
add
add
add
add
pop
add
orb
add
inc
add
adcb
add
sub
add
push
xchg
dec
dec
add
add
add
add
add
jo
add
push
xchg
dec
dec
add
add
add
add
add
mov
add
push
xchg
dec
dec
add
add
add
xor
add
add
add
sti
dec
dec
add
add
add
or
add
add
add
sti
dec
dec
add
add
add
add
add
enter
add
add
push
xchg
dec
dec
add
add
add
add
add
fadds
add
fstps
add
add
add
add
add
pop
add
adc
add
mov
add
add
add
sbb
add
test
add
mov
add
sbb
xor
add
push
add
pop
add
inc
add
push
add
dec
add
pop
add
dec
add
dec
add
add
add
add
add
mov
mov
add
add
mov
mov
add
add
add
add
add
inc
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
or
add
add
add
add
je
jb
imul
inc
add
insb
add
dec
add
data16
add
push
add
add
add
add
xor
cmp
xor
xor
inc
add
add
add
add
add
add
outsl
add
jo
popa
add
jns
dec
add
insl
add
add
add
jae
jae
jae
jae
jae
jae
jae
add
sub
or
add
push
add
outsl
add
add
je
dec
add
insl
add
add
add
outsb
add
ja
add
cmp
sbb
add
inc
add
insb
add
push
add
jb
jae
imul
add
add
xor
add
add
add
add
add
sbb
add
push
add
outsl
add
add
je
push
add
jb
jae
imul
add
xor
add
add
add
add
add
or
add
dec
add
je
add
outsb
add
insb
add
popa
add
add
add
je
jne
bound
xor
add
cmp
adc
add
dec
add
imul
outsb
add
insb
add
imul
outsb
add
insl
add
add
push
add
add
xor
add
js
add
add
add
add
add
and
add
add
add
jne
add
add
add
add
add
add
or
es
push
push
add
push
add
add
add
faddl
add
incl
add
xchg
add
sbb
sbb
add
add
add
addb
add
add
add
add
add
add
push
push
add
mov
jae
add
faddl
add
incl
add
push
add
addb
add
add
add
add
add
push
push
pop
add
add
add
add
add
add
add
add
push
push
push
push
add
add
or
or
add
add
add
add
push
or
add
add
push
push
push
push
add
add
push
push
or
add
or
add
push
push
add
add
add
push
push
add
add
push
add
add
add
add
add
add
add
add
or
or
add
or
add
pop
add
add
add
push
push
push
or
add
add
add
add
or
or
or
add
pop
push
push
push
push
push
push
add
add
add
add
or
or
or
sldt
add
add
add
add
push
push
push
push
push
push
add
add
add
add
femms
or
adc
adc
add
add
push
push
push
push
push
push
pop
add
add
or
or
or
adc
adc
add
add
or
or
add
adc
adc
adc
add
add
add
add
add
push
add
push
push
push
push
push
add
adc
pop
add
add
add
add
add
add
push
push
add
add
push
push
add
add
add
add
or
push
push
push
push
or
add
add
add
add
add
add
add
push
push
add
add
add
add
pop
add
add
or
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
push
add
add
push
push
push
pop
add
add
add
add
add
push
push
add
add
push
push
push
add
add
add
push
push
add
add
push
push
push
add
add
add
push
push
add
push
push
push
push
push
add
add
push
push
add
add
add
push
push
push
push
add
add
pop
add
add
add
or
push
push
or
add
add
pop
or
add
incl
incb
incb
add
incb
add
incb
add
incb
add
clc
add
add
pop
loopne
add
loopne
add
loopne
add
lock
add
add
pop
loopne
add
rolb
pop
rolb
xadd
add
rolb
pop
rolb
pop
loopne
add
lock
add
incl
add
incl
add
incl
add
incl
add
incl
cmp
incl
add
add
add
and
add
add
add
jne
sbb
xor
add
push
add
pop
add
inc
add
push
add
dec
add
pop
add
dec
add
dec
add
add
add
add
add
mov
mov
add
add
mov
mov
add
add
add
add
add
inc
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
or
add
add
add
add
je
jb
imul
inc
add
insb
add
dec
add
data16
add
push
add
add
add
add
xor
cmp
xor
xor
inc
add
add
add
add
add
add
outsl
add
jo
popa
add
jns
dec
add
insl
add
add
add
jae
jae
jae
jae
jae
jae
jae
add
sub
or
add
push
add
outsl
add
add
je
dec
add
insl
add
add
add
outsb
add
ja
add
cmp
sbb
add
inc
add
insb
add
push
add
jb
jae
imul
add
add
xor
add
add
add
add
add
sbb
add
push
add
outsl
add
add
je
push
add
jb
jae
imul
add
xor
add
add
add
add
add
or
add
dec
add
je
add
outsb
add
insb
add
popa
add
add
add
je
jne
bound
xor
add
cmp
adc
add
dec
add
imul
outsb
add
insb
add
imul
outsb
add
insl
add
add
push
add
add
xor
add
js
add
add
pop
add
push
add
jne
jb
arpl
add
add
outsb
add
add
add
je
outsl
add
and
xor
add
add
add
add
add
sub
add
cli
out
jmp
hlt
xchg
leave
add
sub
add
add
add
add
add
add
add
add
add
add
add
add
add
add
dec
add
push
add
inc
add
xor
add
pop
add
push
add
jne
jb
arpl
add
add
outsb
add
add
add
je
outsl
add
pop
add
add
popa
add
add
je
pop
add
add
js
add
add
add
add
add
add
xor
jge
loopne
xor
add
sub
sahf
cltd
cvtps2pi
add
mov
add
add
add
mov
add
add
add
add
add
add
je
jne
bound
xor
add
js
add
add
add
add
add
daa
ja
lock
add
shr
or
sub
lock
add
lock
add
add
add
add
add
add
add
add
and
add
and
add
add
add
sbb
push
add
inc
add
push
add
jle
xor
add
add
push
add
inc
add
push
add
add
imul
push
add
insb
add
add
add
js
jbe
imul
data16
add
add
add
jo
jne
add
add
add
add
add
add
add
or
push
dec
cmp
cmp
data16
jno
cmpl
or
pop
mov
int
mov
push
push
jo
outsl
addr16
insl
xchg
outsb
pop
dec
je
bound
iret
jne
cwtl
imul
add
fs
inc
fild
dec
into
fistpl
add
ds
scas
xor
xchg
inc
lods
cmp
and
mov
mov
inc
sub
or
sti
dec
adc
loopne
sahf
and
add
push
int
rol
inc
adc
mov
adc
sbb
xchg
and
or
sbb
inc
push
nop
sub
fistpl
popf
cmp
dec
pop
jo
mov
mov
pusha
and
sbb
aam
add
cltd
gs
je
js
and
xor
imul
popa
je
and
or
add
jb
inc
arpl
data16
jp
or
xor
in
pop
fsubrl
inc
inc
in
iret
cmp
pop
popl
dec
push
push
inc
mov
dec
jecxz
mov
aad
add
mov
data16
push
rorb
adc
or
mov
cmp
adc
std
xchg
in
pushf
or
adc
sbb
lds
xchg
outsb
mov
push
xchg
xchg
lcall
adc
mov
and
sbb
sti
or
mov
jne
out
inc
stos
int
mov
popa
or
les
sub
push
das
in
pop
add
cmp
jge
cmp
inc
cmp
outsb
jo
xchg
push
jecxz
les
mov
daa
push
mov
rolb
or
in
sub
adc
or
sbb
das
dec
or
or
std
sub
or
adc
adc
xor
or
xor
push
push
mov
mov
or
pop
aaa
mov
cmp
inc
or
test
inc
shl
mov
adc
and
xlat
cmp
mov
adc
cmp
xor
lock
inc
push
and
xor
and
insb
xor
sbb
xchg
and
pop
enter
xor
add
pushf
xchg
or
xchg
and
nop
dec
enter
xor
adc
cwtl
xchg
and
nop
mov
loope
fs
xor
sbb
mov
push
nop
inc
enter
xor
xchg
cmp
rcl
mov
push
jmp
loopne
enter
inc
and
add
cwtl
stos
dec
add
popf
pop
shll
mov
pusha
dec
outsl
arpl
pop
or
add
nop
test
test
cmp
rcrb
mov
jne
adc
xchg
dec
inc
and
add
xor
mov
or
or
repnz
comiss
mov
and
pop
fistpl
addl
push
mov
inc
mov
xor
aas
dec
jbe
mov
ss
iret
enter
mov
mov
lds
adc
inc
xor
cmp
jle
push
cmp
adc
add
je
xor
lock
xor
add
mov
adc
adc
js
xchg
lea
mov
inc
jo
insb
and
test
xor
hlt
adc
or
adc
cwtl
inc
or
mov
sub
adc
or
push
jo
jo
int3
insb
push
adc
push
push
push
arpl
adc
pop
jo
push
mov
push
and
outsb
xor
jb
insb
xor
pop
xor
or
imul
jo
imul
inc
pop
cmp
inc
jo
pop
pop
push
fs
inc
loope
xor
and
mov
test
dec
xchg
js
fisttpll
or
xor
xor
sbb
lds
sbb
and
sub
xor
mov
sbb
xor
xor
push
loop
push
fcoms
int3
sub
int3
jns
or
mov
xor
in
sbbb
fsubrl
adc
sbb
mov
xchg
lock
push
or
pop
enter
xor
ds
dec
pop
mov
jb
jg
mov
mov
or
mov
mov
xchg
adc
lcall
movsb
jno
jg
into
shll
cmpb
rolb
jmp
enter
adc
mov
xchg
dec
xor
in
icebp
sbb
movaps
ret
push
and
push
in
push
pop
jns
sbb
inc
and
mov
and
and
jns
in
lea
aas
and
sbb
add
push
js
sbb
add
add
inc
add
fwait
call
enter
xchg
mov
nop
and
shlb
pop
sbb
rcrl
xor
insb
adc
and
sbb
call
adc
inc
add
and
dec
enter
in
clc
or
leave
and
sub
cmp
dec
mov
cmp
mov
stc
fild
mov
fadd
inc
adc
push
daa
fcomip
dec
jge
cmp
adc
push
lods
xor
jo
jo
add
xchg
push
jae
jb
sbb
pop
hlt
add
cmp
push
or
sub
jno
inc
pop
cmp
int3
add
insb
gs
dec
mov
ja
in
push
je
push
mov
out
push
pop
sahf
fs
outsl
pop
ret
inc
cmp
pop
or
cs
dec
test
or
adc
xchg
or
xor
push
adc
rclb
push
add
gs
nop
push
inc
jno
insl
insb
les
mov
adcl
aad
jmp
dec
jns
mov
mov
fs
pop
loope
sbb
lods
sbb
inc
xchg
adc
out
or
xchg
movsb
xor
imul
dec
jne
insl
bound
sub
dec
outsb
jae
std
xorl
and
sbb
outsb
sub
adc
or
xor
out
outsl
je
cmp
and
add
adc
loopne
insb
pushf
mov
je
adc
or
dec
push
jo
insb
sub
push
dec
jno
adc
inc
add
rcll
cmp
or
sbb
fs
dec
je
in
jp
fimull
sbb
jae
je
xlat
xor
xor
xor
ss
push
mov
xor
in
bound
jbe
popa
inc
and
mov
xor
lods
pushf
and
jne
je
adc
sbb
ja
adc
je
insl
or
push
or
imul
jmp
jge
push
dec
inc
mov
test
pop
dec
pop
xchg
sub
mov
outsb
test
push
popa
sub
sub
or
cs
nop
outsl
loopne
movsb
lahf
dec
sbb
sbb
sub
dec
nop
jbe
sub
push
push
movsb
or
mov
push
xchg
push
insl
cltd
enter
lods
lcallw
sbb
movsl
cld
lds
test
add
jmp
js,pn
inc
ss
pop
jmp
stc
jne
dec
or
push
out
shlb
stos
and
cmpsb
loope
outsb
inc
add
dec
xor
cmp
pop
ret
adc
jo
insb
sbb
mov
push
int
outsl
dec
outsl
push
adc
or
js
jns
adc
int3
xor
lods
jb
movsl
lret
mov
insb
leave
add
or
js
sbb
ds
insb
xor
ss
push
inc
sub
xor
adc
jmp
or
sbb
cmpsb
dec
dec
out
adc
add
subb
mov
rcl
lock
add
bound
xchg
add
test
clc
sub
or
adc
xchg
push
test
aad
pop
fdivl
das
lcall
ret
cmovp
out
fs
xchg
in
adc
mov
and
and
sub
mov
insl
adc
push
xorb
inc
inc
push
pop
adc
push
push
add
fwait
sbb
sbb
sub
push
fstpt
movsl
push
sub
push
stos
adc
lock
cmp
xstore-rng
cmpsl
subb
aas
leave
mov
inc
in
enter
arpl
or
mov
daa
cld
and
jg
clc
and
push
mov
push
popa
cmp
inc
adc
inc
icebp
test
loope
xorl
loopne
pop
clc
aas
jmp
adc
leave
mov
in
xor
into
rclb
xchg
andb
jmp
and
idivl
or
adc
ret
dec
inc
nop
jae
idiv
mov
and
mov
push
or
dec
mov
inc
repz
inc
pop
loopne
pop
adc
lock
icebp
sbb
popa
cld
aas
movsb
push
inc
xor
decb
call
push
cwtl
outsb
adc
mov
add
or
or
adc
and
hlt
sub
cmp
or
sub
pop
rorl
sbb
and
mov
push
sub
add
add
sub
xchg
js
xor
xor
loopne
test
add
xor
and
fs
jo
sbb
enter
out
fs
js
cmp
and
psubusw
cmpsl
and
push
dec
leave
test
jge
nop
dec
in
or
nop
mov
test
es
jmp
movsl
add
fnsave
lods
xchg
add
and
fdivr
adc
dec
dec
xchg
xor
xchg
xchg
pop
and
push
test
and
mov
movsl
mov
lods
sub
mov
test
adc
movsl
or
mov
mov
fsub
cld
fnstcw
or
leave
xor
xor
sub
add
pop
push
in
push
jmp
push
push
enter
sbb
mov
lds
test
or
arpl
test
and
mov
clc
push
cwtl
lods
and
mov
inc
hlt
int3
or
sbb
push
cmp
sbb
inc
sub
aam
sbb
sbb
sbb
imul
mov
mov
xchg
jae
les
jecxz
outsl
sbb
inc
bound
hlt
xor
fs
outsl
jg
gs
or
pusha
fwait
jo
cmp
xchg
dec
push
inc
inc
out
inc
jbe
arpl
pusha
outsb
rep
push
ja
mov
bound
jne
movsb
fs
outsl
into
insb
arpl
mov
and
int
jl
push
jns
cmpsb
xor
dec
cli
push
ljmp
inc
cmp
mov
gs
icebp
insb
jne
test
andl
das
jne
outsb
scas
xlat
das
fildl
stos
rcll
jb
or
cmp
pop
pop
fidivr
adc
fwait
outsl
xor
fimull
jb
insl
outsl
adc
popa
mov
stos
and
jmp
inc
movlps
fs
cli
sbb
and
ret
push
icebp
pop
movsl
fucomp
ret
sub
lods
pop
fsubl
add
lret
popf
sub
inc
adc
cwtl
xlat
enter
data16
ss
xor
or
pop
xchg
sbb
push
loope
repnz
lea
lcall
jne
fldt
dec
in
sbb
jle
jae
out
test
aad
fidivrl
or
loop
xchg
dec
inc
in
xchg
sbb
stc
dec
fs
movsb
not
xchg
ret
dec
dec
xchg
or
cmp
sub
jp
mov
loop
or
cs
ja
push
lcall
loop
pop
hlt
dec
or
fisubrl
dec
loop
data16
cltd
xor
mov
cld
movsl
les
dec
cs
popa
fcoms
pop
insb
jo
data16
mov
push
push
in
sahf
mov
jno
shrb
jnp
jecxz
mov
cmc
sub
add
lds
xchg
int3
add
push
mov
jb
sub
mov
mov
push
push
push
clc
gs
shr
push
mov
pusha
movb
in
out
push
loopne
push
call
daa
mov
dec
jnp
pop
adc
cld
cmp
out
or
ljmp
inc
and
dec
in
xor
test
adc
in
cmp
add
nop
add
fiadd
enter
push
jecxz
out
xor
lea
add
push
mov
xor
fdivl
rcrb
push
xor
cld
int3
mov
add
push
inc
or
aam
or
sahf
clc
test
fisttpl
loop
punpckhdq
push
ret
adc
push
lea
push
adc
or
data16
call
dec
jecxz
adc
mov
adc
and
loopne
addl
sub
movsl
jnp
fs
or
mov
roll
push
jmp
xorb
dec
jo
or
mov
fsubs
lock
inc
adc
pop
loope
jo
xchg
test
lret
dec
aam
push
jne
mov
ljmp
hlt
sub
push
shr
mov
mulb
cmp
pop
pop
or
mov
xor
test
adc
test
mov
cmp
cmovns
ret
and
addr16
sbb
into
shrl
add
push
or
inc
es
pushf
mov
sub
inc
jge
inc
in
add
or
loop
mov
dec
sbb
int3
pop
push
add
or
sahf
ret
nop
adc
fdivs
sbb
or
xor
mov
in
or
nop
mov
popf
and
fimul
push
test
cmp
rcrb
xchg
jge
lock
jg
cmp
xor
loopne
cld
xchg
mov
add
je
addb
push
xchg
push
sub
rorb
cmpb
aam
leave
adc
adc
leave
jbe
mov
mov
or
movsb
push
mov
insb
push
push
adc
icebp
fwait
push
fdivrl
mov
push
push
ret
scas
xchg
lock
sarb
sbb
jle
push
push
aam
xchg
push
and
adc
add
jmp
imul
and
jmp
xchg
or
and
inc
and
mov
les
push
xchg
xchg
std
push
js
inc
push
daa
rcrb
pusha
xchg
js
xchg
dec
xor
and
mov
into
xchg
pop
adc
mov
mov
adc
cmpsb
fcoml
and
cmp
int3
incb
ljmp
mov
adcl
loope
lahf
es
inc
inc
arpl
or
call
and
and
cltd
mov
test
xchg
xlat
cmp
mov
aam
add
int3
mov
jge
aaa
ss
mov
lods
int3
dec
rorl
fsts
push
seta
and
jb
in
adc
mov
daa
push
out
cli
in
xor
mov
mov
add
enter
sbbl
cmpb
call
out
add
call
push
stos
into
movsb
add
and
repnz
mov
bound
mov
enter
sub
push
mov
push
xchg
inc
mov
add
push
test
mov
sahf
adc
xor
or
out
push
push
ret
decb
push
inc
test
jbe
call
mov
test
push
repz
inc
es
mov
mov
mov
adc
and
jo
daa
fmuls
insl
pop
mov
sbb
ret
fdivl
adc
dec
mov
fadd
fsubr
push
or
inc
inc
xchg
push
dec
mov
repz
xchg
push
gs
mov
js
adc
je
push
pusha
mov
or
adc
sti
dec
insb
xor
cmp
in
pop
mov
push
xor
pushf
mov
inc
or
pusha
xchg
jo
sarl
sub
pop
dec
or
aas
fwait
out
fsub
xchg
xor
adc
adc
sbb
xlat
mov
jo
adc
and
pusha
cld
adc
inc
out
mov
pop
mov
ljmp
nop
loopne
nop
cwtl
out
aam
mov
gs
add
pop
int3
mov
aaa
clc
sbb
push
insb
ds
or
mov
adc
push
dec
fs
je
inc
lcall
mov
or
mov
adc
aas
add
and
dec
ss
push
and
jbe
mov
xchg
fsubs
call
test
xchg
or
push
inc
test
adc
and
dec
dec
lahf
pop
sub
inc
dec
arpl
outsl
jae
pop
popa
fs
data16
jbe
sbb
fdivl
pop
inc
and
dec
lahf
sahf
jbe
insl
ss
fs
dec
jp
ss
xor
push
push
xor
push
jns
pop
adc
jae
cmp
xchg
mov
inc
push
in
push
push
pop
push
dec
scas
dec
mov
add
xchg
into
iret
je
outsb
and
dec
mov
es
jno
je
mov
jb
iret
nop
inc
popaw
arpl
dec
sbb
dec
lcall
aam
test
mov
dec
clc
push
xchg
out
mov
sub
push
cld
mov
xchg
in
lret
mov
dec
jb
xor
mov
cmc
insl
or
ret
js
pop
xor
int
sub
movsb
mov
movsb
mov
mov
cwtl
and
fisub
adc
lret
fimull
in
mov
repnz
mov
xor
leave
or
loop
adc
mov
push
ja
inc
xlat
dec
mov
ret
sub
lods
push
imul
sbb
clc
aam
into
mov
adc
imul
mov
dec
loopne
js
push
sbbb
int3
int
icebp
cs
pop
add
push
push
adc
mov
adc
push
push
mov
mov
jne
enter
loopne
in
clc
xchg
adc
xchg
jp
scas
sbb
add
sbb
cld
push
loopne
add
adc
adc
cwtl
addr16
adc
loop
ds
rcl
push
cmp
cmp
push
pushf
inc
sbb
sbb
adc
enter
adc
fsts
and
roll
rorl
push
adc
sbb
or
or
lret
push
mov
inc
push
sbb
mov
bound
lods
adc
ss
xchg
xchg
mov
push
dec
lods
cld
stos
addr16
imul
dec
outsb
cld
xchg
add
and
push
cmp
inc
jne
push
mov
out
inc
add
xchg
xor
lods
sbb
and
xor
or
or
inc
jle
jo
xor
jo
push
jo
jns
pop
adc
add
sub
shrl
enter
gs
cmpsb
cmp
insl
adc
jo
pushaw
mov
push
insb
pop
pop
test
push
or
int3
nop
sub
nop
mov
xor
jp
and
jmp
movsb
cmp
push
test
pop
outsl
and
xchg
aam
cmp
xchg
sub
xchg
and
inc
pop
push
cs
dec
je
and
xor
stos
xor
xor
mov
pop
xchg
cmp
es
in
xchg
xchg
add
ficomp
daa
sub
movsl
cwtl
aas
push
xor
movsl
or
push
inc
jne
lcall
sub
jae
push
add
xchg
into
nopl
push
sbb
xchg
stc
jp
lcall
cmc
cmp
and
jg
add
sub
xor
xchg
push
mov
xor
pop
jno
test
lods
push
push
aad
pusha
jmp
dec
and
in
dec
jae
stos
push
ljmp
pop
in
pop
xor
arpl
adc
dec
pop
jae
push
sbb
adc
sub
inc
test
or
push
add
sbb
enter
mov
cmp
sbb
push
add
push
or
hlt
out
and
repnz
fs
dec
sub
push
enter
xor
into
stos
or
adc
and
and
sub
mov
adc
add
sarb
jge
adc
push
adc
in
pop
leave
pop
adc
enter
adc
jmp
adc
aaa
and
or
pop
add
adc
add
rorb
daa
cmp
xlat
movsl
sbb
lock
dec
add
mov
sbb
and
adc
movsl
mov
cmp
call
and
fs
nop
rcll
ret
cmp
sbb
and
add
pop
in
dec
fs
gs
or
mov
pusha
mov
pop
sbb
xchg
mov
dec
dec
xor
xor
jnp
push
imul
sub
daa
ficom
dec
sbb
mull
add
mov
aad
xchg
sbb
dec
nop
push
in
inc
enter
mov
add
in
gs
dec
movsl
stos
pop
add
lods
test
adc
in
cmp
fs
popf
and
out
cmp
sub
outsl
insb
xor
out
aam
push
rolb
insl
sbb
pop
pushf
icebp
cmp
sub
pop
inc
pop
adc
cmp
fs
jo
adc
in
aam
loopne
xor
mov
mov
in
add
dec
sub
add
cmp
dec
dec
cmp
sub
imul
enter
push
push
adc
leave
les
jl
add
js
push
adc
and
pop
adc
add
sub
mov
cltd
mov
loop
pop
and
cmp
insl
fnstsw
adc
sbb
sub
frstor
js
push
mov
out
add
scas
ja
cmp
hlt
mov
int
sub
in
ret
ja
push
test
jo
and
jno
and
add
jbe
adc
pop
and
lret
mov
fbstp
mov
adc
fist
adc
mov
push
push
or
aam
xchg
push
adc
cmp
xchg
ja
enter
out
adc
sbb
xchg
subl
in
icebp
call
push
and
leave
add
sub
add
in
add
mov
cmp
adc
push
jo
pop
or
adc
pusha
push
add
inc
jne
shrb
jb
push
pop
push
cmpsb
test
lret
mov
ja
xor
mov
ja
jnp
hlt
xchg
or
pop
out
sub
push
xchg
xchg
and
repnz
hlt
leave
test
ja
sbb
cmp
in
or
imul
or
dec
xor
adc
frstor
push
push
add
and
pop
imul
je
add
push
or
call
sbb
or
dec
add
sub
add
and
inc
and
add
cmp
sbb
cmp
movsl
pop
dec
adcl
or
push
adc
mov
sbb
or
xor
lods
pop
test
add
insl
sub
lods
out
fs
add
test
shr
movsl
pop
adc
mov
add
push
cld
dec
pop
and
push
push
cld
or
sub
mov
xor
lds
pop
pop
and
mulb
cld
adc
js
daa
sub
adc
pushf
or
or
test
sub
xchg
iret
test
sub
or
dec
sub
pop
loopne
push
nop
ficoml
inc
int
inc
or
dec
inc
add
rcrl
or
sub
or
aad
inc
or
lock
adc
and
es
sub
push
fnsave
movhps
pop
test
pcmpgtb
mov
push
cmpsl
sub
in
lock
or
in
push
pop
mov
push
inc
jmp
jo
sub
in
xor
sbb
nop
add
add
or
pop
nop
movups
xor
sbb
add
xor
or
cmp
jnp
sub
pushf
and
cli
and
adc
sub
jmp
cld
xchg
in
add
add
bound
add
mov
and
add
pusha
inc
mov
xor
or
adc
and
inc
and
push
push
adc
shrb
test
xorb
xor
pop
mov
sbb
fcomi
jb
sbb
sbb
dec
call
jns
js
xor
sbb
dec
lods
add
push
dec
adc
jo
xor
in
call
in
hlt
hlt
clc
cld
mov
or
adc
sbb
and
sub
xor
cmp
inc
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
pop
xor
daa
or
adc
xchg
cmpsl
and
sub
xor
ss
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
loopne
xor
xor
sub
xor
add
orb
mov
nop
iret
xchg
ret
test
mov
mov
ret
in
in
jecxz
repz
lock
or
sbb
sbb
sub
sub
xor
cmp
dec
cld
push
cld
pop
cld
pusha
cld
fs
push
cld
je
js
jl
cmp
cld
mov
mov
nop
cld
xchg
cld
cwtl
cld
pushf
cld
mov
cld
lods
cld
mov
mov
mov
cld
enter
in
jl
push
daa
push
inc
mov
mov
rcl
fldlg2
jecxz
cmp
leave
sbb
and
cmp
inc
jmp
push
stc
push
stc
pop
stc
pop
stc
pusha
stc
fs
push
stc
je
js
jl
cmp
stc
mov
insb
mov
in
hlt
xchg
imul
push
popf
pop
sbb
push
mov
cld
in
call
or
sub
xor
cmp
js
cwtl
aas
pushf
aas
mov
aas
in
add
or
mov
pshufw
mov
sub
out
and
dec
test
sahf
cld
mov
mov
out
out
out
out
out
out
pop
cmp
daa
or
adc
xchg
cmpsl
sbb
and
and
sub
sub
xor
xor
add
inc
cld
inc
std
inc
in
repz
je
js
xchg
cmp
in
call
cmp
jnp
xchg
cmp
mov
mov
aas
out
out
push
adc
sbb
mov
iret
cmp
inc
dec
dec
popl
iret
call
xchg
inc
mov
aad
repz
repz
cmc
push
in
loopne
fmul
wbinvd
cmova
mov
dec
out
out
ret
push
xor
xchg
and
inc
jno
mov
cld
int3
cld
add
xor
call
pop
hlt
popa
lcall
jle
sbb
xor
popf
pop
sbb
mov
xchg
xor
and
xchg
cmp
ret
icebp
rclb
xor
ss
inc
lock
jae
mov
cld
lret
std
ss
das
call
hlt
jp
mov
aad
daa
cmp
inc
cmp
or
xor
inc
dec
xchg
int3
iret
ror
fmul
out
daa
cmp
xchg
mov
xor
in
div
adc
xchg
cmp
cmp
push
push
cmp
dec
mov
aad
sub
pop
pop
int3
