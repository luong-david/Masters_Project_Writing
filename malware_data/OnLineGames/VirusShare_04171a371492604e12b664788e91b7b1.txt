mov
mov
push
push
push
mov
mov
pop
push
push
mov
add
sbb
push
push
push
mov
xor
mov
mov
incl
pop
mov
xor
lea
stos
stos
sbb
outsb
xchg
or
or
jmp
mov
out
pop
jmp
pop
cld
call
out
jbe
mov
add
lea
test
ss
movd
stos
inc
daa
loopne
idiv
fisttpl
mov
push
push
jp
sub
ja
lea
and
sbb
adc
push
incl
push
out
inc
sbb
sbb
fwait
adc
sbb
popf
fcompl
mov
mov
mov
dec
lahf
mov
jmp
test
ret
mov
adc
mov
sbb
or
ret
aas
sub
in
ficomp
mov
mov
add
faddl
out
insl
fcmovnu
pop
std
fwait
les
or
pop
cs
lret
lds
gs
popa
enter
cs
in
lret
lret
outsl
int3
int
into
push
iret
pop
rorb
jo
xor
xor
inc
aad
add
cmp
pop
fdivs
pop
xlat
insl
add
sub
aaa
fisttpl
push
add
jne
mov
pop
loop
jecxz
add
inc
in
out
mov
xlat
add
inc
call
imul
daa
in
pop
in
aaa
lock
pslld
pop
xlat
xor
sbb
add
aaa
clc
pushl
add
pop
sti
js
cld
je
mov
jo
xor
sub
mov
and
push
mov
mov
jmp
and
adc
or
add
fcmovnb
das
cld
rorb
lods
cmp
je
jg
push
mov
add
mov
in
ret
shrl
adc
mov
pop
push
out
neg
in
pop
je
cs
adc
or
nop
mov
xor
les
add
into
cmp
or
loope
sarl
outsl
jl
jae
fnop
out
cmp
jne
stos
or
add
daa
xor
pop
push
mov
sbb
cmpl
jl
jb
sbb
xor
push
push
push
inc
push
adc
mov
push
nop
nop
mov
xor
sub
cmp
repnz
or
sarl
push
mov
add
mul
sbb
fsqrt
mov
fildl
pop
or
sbb
nop
add
outsb
add
push
mov
sbb
mov
mov
push
push
daa
mov
or
push
je
mov
push
xor
mov
test
je
mov
sub
inc
inc
mov
test
mov
jne
andb
jmp
sbb
ss
xor
movzbl
inc
or
jg
clc
inc
jl
clc
pop
jg
add
adc
inc
cmp
insl
in
out
shll
add
je
sub
cmp
sub
add
pop
adcb
pop
dec
insl
lock
or
or
lahf
inc
clc
add
sub
neg
inc
ret
stos
shlb
rcrl
clc
or
in
inc
andl
mov
sbb
mov
push
push
imul
jge
add
or
cmpl
push
mov
inc
sub
fisubrl
inc
sbb
xchg
mov
inc
nop
lock
add
clc
fistp
icebp
jae
dec
sbb
cmpb
jbe
mov
cmp
lea
mov
add
scas
lahf
mov
pop
jecxz
insl
cmp
cmp
jl
jae
adc
dec
popa
pop
jbe
pop
sub
shl
dec
jbe
push
sbb
clc
jmp
jne
push
jnp
adc
lods
ficom
push
mov
xor
cmp
jbe
test
adc
ret
mov
jge
fist
lret
mov
push
or
shl
nop
mov
mov
insl
lea
sahf
sbb
insl
ret
pop
push
adc
xchg
sub
lret
cmpsb
mov
add
sbb
jle
hlt
lret
fmull
frstor
inc
or
fidivr
fist
gs
mov
push
add
out
faddl
xor
cs
insb
add
dec
cmpsb
outsl
cmpsb
imul
imul
and
pop
mov
jne
xlat
insl
add
and
dec
ret
imul
lds
push
xlat
dec
sbb
enter
push
insb
fildl
cltd
lock
mov
inc
and
dec
pushl
or
mov
lret
sti
inc
inc
test
add
jmp
sti
cmpsl
add
cmp
call
clc
pop
mov
lret
insl
cld
or
ljmp
jmp
mov
push
mov
sbb
test
test
add
inc
lods
mov
add
push
test
jp
jae
xchg
or
rcr
sbb
imull
mov
popa
adc
push
push
mov
repnz
movsl
popa
pop
adc
idivb
push
mov
push
js
push
das
cld
adc
jns
inc
js
iret
jmp
fdivrl
pop
sti
sub
jne
push
rclb
mov
insl
mov
scas
push
xchg
cmp
and
je
adc
movl
fdivrs
fisub
in
push
pop
jne
or
movsb
jb
add
or
fcoml
sub
jmp
pop
in
push
inc
je
decl
addl
sub
sti
cmp
aaa
clc
mov
xor
cmp
shl
lahf
push
into
in
movsl
ret
mov
cmp
sbb
movsb
inc
ds
pop
test
cld
ret
insl
aas
or
fsubs
jmp
mov
pop
dec
movb
jne
add
inc
sar
mov
xor
lcall
mov
lcall
cmp
xchg
hlt
enter
sar
rol
sub
lea
in
and
dec
insl
adc
imul
test
push
insb
call
add
inc
int3
jmp
dec
add
mov
jb
gs
pop
push
inc
sarb
jmp
xor
icebp
mov
pop
push
push
xlat
pop
rorb
loope
add
inc
je
mov
add
lods
jne
je
lods
pop
scas
adc
xlat
jne
xlat
and
pop
mov
mov
jb
pop
pop
mov
mov
fbstp
mov
mov
adc
rclb
movsl
push
adcl
movsl
sub
ret
repnz
push
and
pop
test
mov
lock
mov
jge
xchg
cs
mov
inc
dec
repnz
outsl
or
push
and
clc
idiv
and
mov
movl
pop
dec
xor
mov
ljmp
inc
cmp
pop
ret
mov
movl
mov
inc
mov
jns
sahf
aam
push
inc
push
push
loope
add
sub
jp
stos
push
das
loop
fcmovnb
mov
push
cld
jmp
xor
mov
icebp
ja
mov
pusha
or
mov
ret
loopne
outsl
das
push
adc
ss
dec
push
outsl
adcl
xlat
lds
fisubrl
cld
mov
jge
or
psrlq
sbb
jle
in
neg
push
or
pop
ret
adc
sub
daa
popf
pop
mov
leave
cmp
xlat
aad
sub
lock
sbb
test
fwait
inc
cmp
das
cmp
cmp
add
mov
mov
dec
pop
fistl
inc
lret
gs
dec
xor
jo
cmp
cmp
xchg
jmp
loop
jb
jmp
xchg
in
pop
out
pxor
pop
lock
mov
jb
je
inc
push
mov
imul
data16
cmp
aam
add
add
lods
pop
add
xor
popf
cld
push
sahf
fwait
mov
pop
std
adc
arpl
sub
adc
test
les
dec
push
loop
xor
push
into
push
sar
sar
or
inc
ret
orl
mov
insb
push
mov
clc
notb
ret
test
repz
xchg
in
lds
adc
fwait
adc
lods
roll
pop
insl
cmc
aam
rcrl
push
addr16
inc
xchg
sbb
or
and
mov
outsb
pop
je
daa
rclb
or
jnp
and
push
in
or
adc
shlb
imul
scas
push
add
movsl
movsl
xor
lock
movsb
push
inc
pop
ljmp
daa
sbb
dec
ljmp
lea
pop
xchg
inc
add
adc
insl
and
xchg
push
pop
test
mov
pop
and
jne
dec
xor
xchg
test
push
and
mov
jmp
aad
inc
mov
xchg
inc
mov
lock
jecxz
cmp
lea
aam
xchg
data16
cs
lods
and
add
sbb
jge
repz
sub
cltd
pop
idiv
cmp
jle
xchg
xchg
mov
add
jl
popa
jle
jp
add
mov
jl
pop
add
push
add
cmpsb
sbb
cs
pop
sbb
mov
xchg
cli
xor
xor
pusha
cmp
dec
fcoms
movsb
jl
enter
cwtl
sti
cltd
sti
pushf
cld
pusha
add
test
outsb
in
mov
pop
push
add
adc
and
adc
push
mov
test
stos
cmovne
test
cmp
sub
sbb
add
push
out
out
rorl
mov
pop
inc
jmp
mov
cmp
push
push
or
nop
stc
daa
inc
test
test
fnstcw
pushf
xchg
dec
and
add
mov
inc
pop
xor
adc
mov
sbb
cwtl
sti
ljmp
inc
jbe
cld
adc
and
das
jnp
das
aam
inc
add
sub
mov
sub
xor
xlat
or
jb
mov
or
inc
repnz
mov
cmc
scas
notb
dec
rol
ret
inc
clc
lret
insb
xor
xor
je
inc
imul
xor
outsl
jo
fcom
xor
shll
fcmovnu
fnsave
outsl
jo
inc
push
xor
imul
mov
cmp
jbe
test
lret
or
je
sub
cmp
into
push
xlat
push
ja
cmp
inc
shrb
rcll
les
dec
test
fisubrl
mov
or
ret
xchg
or
or
aas
mov
jo
negl
and
inc
sub
push
mov
xor
jp
pop
lahf
jmp
xor
call
push
adc
cmp
je
add
jne
notb
or
lea
call
pusha
or
mov
sti
sub
sub
ffreep
mov
xor
adc
push
int
das
xor
push
cmpsb
jbe
add
incl
push
icebp
int
xor
in
inc
inc
add
adc
push
adc
xchg
fildll
dec
adc
push
push
and
dec
xchg
dec
in
add
test
bound
in
inc
pop
sbb
outsb
int3
push
call
loope
aaa
js
adc
std
repnz
je
idivb
movsb
jl
xchg
lods
shrl
jae
fisttp
imul
mov
int
ljmp
pop
mov
pop
pop
shrb
popa
adc
jge
mov
jl
xchg
jge
jae
or
xor
fdivp
push
gs
roll
aaa
sub
or
adc
cld
andb
add
insl
jg
sub
outsb
sub
dec
jo
cmp
fimull
dec
sub
adc
push
xchg
mov
int3
push
movsb
add
and
add
mov
mov
jge
andb
rolb
divl
adcb
mov
test
and
or
ss
add
mov
and
call
pop
cmp
xchg
xor
dec
push
xor
jle
mov
dec
call
adc
mov
push
lret
sahf
mov
out
push
pop
or
push
cmpsl
loope
fsubl
mov
dec
fdivr
fld
cmpl
stos
shrl
sbb
xor
push
cld
jns
cmp
or
push
in
add
pusha
jg
adc
stos
or
dec
cmp
stos
in
test
adc
clc
into
mov
popa
push
negb
ret
push
or
or
xor
push
daa
add
add
push
lds
and
flds
mov
hlt
pop
adc
xor
mov
fist
mov
mov
fcoms
cmp
inc
adc
jnp
adc
jbe
or
inc
cmp
lods
dec
mov
push
fmuls
mov
cmp
popf
push
test
xor
sub
adc
adc
add
sub
fsubl
rorl
add
push
add
pop
gs
mov
or
add
or
xor
cmp
pop
inc
pop
fdiv
jge
out
push
adcb
mov
mov
test
aam
mov
push
cmp
pop
sbb
mov
fcomp
and
xor
and
pusha
icebp
adc
fdivr
ds
pop
cmp
adc
enter
jbe
and
jmp
sbb
add
fadd
push
xchg
sub
clc
inc
jge
sbb
pop
aaa
lods
adc
and
popa
call
shrb
push
fcom
inc
and
and
mov
shrl
mulb
xor
aad
insb
xor
pusha
mov
std
adc
rcll
inc
je
in
in
pop
xlat
xor
jne
call
jmp
adc
push
in
xor
adc
pop
out
ss
in
neg
movsl
fwait
lea
in
mov
scas
ret
insb
pop
or
or
add
mov
xor
jp
leave
xor
popa
jne
fcmovb
jae
cwtl
je
jg
pop
int3
repz
int
popa
mov
push
push
aad
adc
cmp
sbb
mov
mov
or
jbe
adc
or
adc
das
xor
scas
test
bound
cmp
sub
mov
insb
out
sbbl
lcall
out
or
sbb
sahf
add
cmp
dec
push
ret
loopne
mov
mov
xchg
add
mov
div
clc
stc
adc
mov
sti
ljmp
dec
inc
xlat
push
in
in
out
inc
xor
mov
leave
xchg
xor
in
enter
cmp
jmp
mov
mov
sub
jb
ret
adc
xor
xor
inc
or
push
xchg
ds
mov
push
std
jmp
mov
loopne
mov
fwait
inc
sbb
pop
pop
shrl
push
jae
jns
or
or
and
xor
cmpsb
test
cmp
add
imul
adc
pop
inc
or
fcompl
push
cmp
inc
rol
adc
insb
push
mov
adc
add
add
mov
jb
sub
std
add
add
jae
sub
mov
or
loope
or
mov
cmp
add
inc
inc
test
mov
inc
inc
inc
inc
mov
inc
inc
inc
enter
testl
dec
and
adc
mov
adc
add
mov
call
testl
add
adc
aam
lea
add
and
add
popf
in
mov
incl
mov
insl
inc
xlat
mov
fwait
add
jl
cld
lea
mov
or
jge
sbb
das
mov
clc
mov
cli
adc
or
test
iret
or
hlt
mov
into
xchg
je
jmp
fdivl
jmp
add
mov
xor
and
divb
mov
jne
cmpb
jne
inc
or
add
or
repnz
jbe
aam
dec
cmc
dec
jne
movsb
jl
mul
add
mov
cs
jmp
sub
mov
sub
pusha
pop
xor
pop
pop
je
addl
xor
sub
out
mov
push
push
test
pop
popa
pop
sub
mov
mov
loopne
rcrb
sbb
fadds
sbb
imul
add
adc
insl
xchg
dec
inc
ret
ret
mov
add
imul
cmpsb
imul
xor
add
and
dec
xor
outsb
adcb
sub
loopne
cmpsb
imul
xlat
sub
dec
xor
push
push
mov
jmp
cld
xor
push
add
xor
adc
and
ss
xor
xor
push
pop
outsb
xor
sarl
sahf
lods
mov
xor
mov
cli
xor
xlat
xor
cs
out
xor
fdivs
add
add
mov
lret
popf
xchg
push
and
sub
inc
pushf
adc
mov
int3
cs
loopne
inc
mov
ret
and
ret
ja
inc
adc
xchg
shrl
xchg
lea
lcall
push
push
push
dec
inc
dec
xor
cs
insb
add
push
inc
push
dec
inc
or
inc
jmp
jb
cmp
mov
add
xchg
dec
flds
jo
ljmp
incl
add
dec
ja
scas
xchg
add
in
dec
aad
xlat
cmc
xor
shrl
pusha
cmpsl
pushf
jb
push
xor
push
into
push
push
fldlg2
push
push
xor
add
sti
mov
inc
sbb
idivl
add
and
and
pop
add
gs
test
xor
xor
lcall
bound
push
push
lahf
packuswb
imul
jmp
add
call
mov
lea
inc
fist
or
adc
pushl
jnp
add
add
push
push
push
push
push
mov
call
mov
ja
rep
pop
popf
popa
jmp
pop
incl
adc
into
scas
loope
repz
mov
fldcw
xor
fidivl
lods
ret
rsm
or
mov
loopne
mov
test
pop
xchg
or
pop
clc
jge
lea
mov
mov
jle
mov
stc
cmp
data16
jae
jg
mov
cmpsl
mov
pop
into
les
mov
int3
out
mov
jnp
ficomp
inc
and
or
rcr
mov
mov
inc
dec
dec
inc
inc
inc
dec
inc
pop
inc
sti
testl
aam
lret
fld
fdivrp
rol
mov
mov
mov
aas
jno
push
jnp
sbb
pusha
inc
popa
arpl
and
mov
aam
pop
mov
jnp
dec
ss
or
shlb
mulb
dec
mov
cs
outsl
outsl
and
mov
mov
adc
pop
es
sbb
ret
incl
jae
jne
fs
sub
push
push
outsw
outsb
mov
jae
gs
mov
pop
mov
sbbl
insl
imul
arpl
sbb
outsl
jo
aaa
fs
pop
imul
and
pop
add
outsl
je
push
jbe
jnp
je
or
data16
js
push
or
sbb
cmp
in
in
sbb
cmp
add
bound
out
fistp
cmpsl
inc
dec
push
push
push
inc
push
inc
pop
dec
dec
inc
push
mov
mov
imul
fildll
xor
xchg
lcall
inc
cltd
ljmp
push
push
inc
or
add
push
cli
scas
add
push
add
xchg
pop
sub
cmpsb
lahf
add
incb
mov
pop
inc
inc
call
pushl
or
and
push
jb
addr16
insl
and
outsb
outsb
outsl
aaa
loopne
pushl
and
outsb
and
inc
dec
push
and
psubq
or
idivb
addr16
add
les
stc
out
imul
mov
ffree
insb
dec
mov
les
jle
in
mov
dec
mov
arpl
jno
cmp
mul
mov
or
out
push
dec
cmc
push
imul
mov
es
add
jecxz
fucomp
jbe
int
adc
mov
je
jle
jmp
adc
adc
nop
push
adc
mulb
sbb
pop
add
pop
add
add
dec
add
add
add
pop
push
add
xchg
push
add
nop
dec
mov
mov
inc
pop
cmpsl
lods
test
je
sbb
pusha
mov
nop
je
add
cld
dec
xor
jb,pn
popa
je
sti
pop
pop
aaa
fmuls
sti
or
js
ja
fwait
in
adc
es
pusha
add
inc
add
out
dec
pop
test
shrb
push
js
or
push
ja
mov
daa
pusha
ja
jne
adc
pop
daa
or
gs
outsl
arpl
and
add
pop
pop
add
pop
outsb
add
rclb
aaa
or
jge
adc
or
adc
loop
icebp
xor
push
pop
hlt
mov
xchg
gs
xchg
movsl
scas
mov
push
sub
cld
stos
lea
mov
pop
dec
pop
pop
push
cmp
push
mov
call
movl
push
pusha
mov
ljmp
mov
sbb
out
fisubr
inc
pop
add
call
add
xor
test
adcl
sub
or
push
test
mov
gs
out
mov
cmpsb
imul
xlat
cltd
clc
pushf
std
or
mov
add
loope
mov
or
jmp
push
call
xchg
sbb
stos
js
add
lea
push
js
js
jne
mov
lock
mov
fcmovnu
out
in
mov
add
sub
push
pushf
fcoml
jmp
icebp
out
fcompl
jbe
outsl
out
mov
pushf
sti
dec
jmp
enter
pop
clc
jg
test
mov
bt
cmc
stc
cmp
sub
push
add
pushf
pushf
sbb
fstl
xor
scas
inc
push
cmp
push
and
pop
adc
adc
repz
or
inc
jmp
adc
add
or
sysret
push
fucomp
scas
sti
push
mov
cs
jg
fsubr
push
pop
jl
add
add
jmp
fdivrs
adc
dec
fisubr
mov
call
cmpsb
not
cmp
jg
outsl
sbb
std
cld
cld
fs
fdivs
out
add
pop
aas
inc
cli
jbe
or
add
pop
pop
sbb
fistpll
and
or
xor
test
jle
add
int
adc
je
jne
mov
inc
sti
xchg
inc
push
push
jmp
fistpll
les
inc
stc
xchg
cmc
cmp
xor
clc
stc
test
xor
ss
ljmp
rolb
and
xor
ret
inc
xor
cmp
cwtl
clc
call
cmp
sbb
call
lods
clc
sub
lret
decb
sbb
cmp
mov
push
ret
notb
orl
push
call
mov
inc
xor
int
pop
stos
jbe
push
test
out
xchg
into
test
mov
add
xchg
mov
sbb
call
lods
loope
sti
in
fldcw
dec
add
and
mov
fiaddl
xor
mov
cmc
call
mov
push
cmp
adc
pop
call
add
cltd
xchg
jb
mov
dec
xchg
add
mov
fldt
outsl
pop
sbb
stc
push
neg
cmp
mov
clc
call
pop
cmp
xchg
cmpsl
xchg
lea
outsl
mov
lock
mov
sbb
jmp
and
lock
pushf
sbb
repnz
jnp
cmp
xchg
std
or
jne
pop
cwtl
mov
neg
jbe
clc
mov
add
jne
ja
pushf
out
cmp
push
mov
adc
xor
icebp
insl
mov
or
add
push
mov
jo
cmovae
sti
jbe
lea
pop
mov
sbb
jo
jl
sbbl
sbb
lock
call
sub
pop
mov
inc
nop
lea
jb
pop
pop
mov
cmp
or
pop
test
testb
cmpl
push
clc
jnp
icebp
sets
call
mov
pusha
call
jmp
jbe
push
std
aas
inc
stc
ds
and
mov
sub
ret
xor
sbb
xor
ss
mov
jmp
sahf
test
sub
xor
and
cmp
fcmovnbe
xchg
aam
mov
mov
fsubs
or
add
test
or
mov
hlt
and
dec
mov
and
xor
movhps
lea
fsubrs
xchg
mov
pushf
das
shl
dec
mov
pop
pop
leave
outsb
push
std
push
fisttpl
mov
mov
xor
adc
mov
js
jo
mov
andb
shll
cmp
mov
ret
andl
loopne
dec
rorb
pop
inc
loope
movsl
popf
mov
sub
mov
cltd
pushf
pushf
popl
sub
andl
sub
pushf
mov
mov
sub
iret
sbb
xchg
pop
aam
in
jne
outsb
push
or
je
mov
sbb
cs
dec
cmp
out
pop
add
xchg
and
mov
or
pop
call
or
jge
add
sbb
sub
inc
push
push
sub
imul
idiv
adc
pushl
imul
pop
outsl
and
push
mov
and
pop
pusha
rorl
in
add
repz
lea
addr16
push
outsb
add
loopne
jbe
mov
or
daa
rolb
mov
push
pop
mov
adc
or
dec
cmp
xchg
sarb
fs
mov
xchg
cld
jmp
rcr
mov
push
in
cmp
pop
mov
or
repz
pusha
mov
xchg
out
ljmp
or
loopne
fmuls
lahf
mov
out
lock
sub
popf
nopl
cld
and
test
add
push
loop
mov
fs
lock
dec
adc
test
jbe
cmpl
sbb
xor
sub
int3
clc
or
lds
dec
inc
inc
jae
sbb
mov
pop
xor
loope
cmpsb
sub
mov
jl
test
lea
cmp
or
mov
aaa
test
add
cmp
xchg
mov
test
cmpsb
mov
jne
test
dec
push
mov
mov
sti
push
jno
mov
pop
xchg
mov
mov
aas
sti
fadds
inc
add
iret
lea
inc
adc
sub
sbb
aam
ret
lock
jg
dec
or
push
add
ret
cmp
sti
pop
xchg
shl
lock
xchg
rorl
mov
mov
add
int
out
test
test
mov
test
in
stc
clc
cmc
and
fdivr
adc
mov
adc
pop
fidivr
rcrb
adc
sbb
ret
pop
xor
fisub
pusha
shr
cmp
dec
add
sti
add
xor
js
arpl
add
sub
or
dec
iret
inc
loopne
imul
cmp
or
ficompl
orl
int
ljmp
and
inc
clc
push
fnstenv
push
fnsave
movsl
mov
add
add
or
adc
cmc
dec
inc
cmpsb
sub
cmp
adc
or
pop
adc
or
or
arpl
scas
or
rclb
push
mov
xor
jg
mov
outsb
push
pusha
mov
push
push
xchg
addr16
push
push
pusha
mov
imul
ja
pusha
or
pop
js
push
out
sbb
or
mov
ja
push
xchg
sbb
jp
inc
push
add
sbb
sbb
clc
fimull
and
push
hlt
push
adc
dec
add
fildl
scas
or
mov
jo
jns
dec
clc
inc
sbb
xchg
mov
mov
or
and
mov
je
int3
adc
mov
arpl
loop
push
push
xor
call
out
pop
mov
mov
jmp
add
cli
sub
leave
loopne
push
and
incl
push
fcoml
cwtl
repz
push
jnp
sbb
or
mov
sbb
mov
test
notb
es
push
nop
out
pop
out
push
pop
std
or
jmp
mov
push
add
mov
push
cld
xlat
jno
lods
loopne
pop
pop
mov
pop
adc
cltd
mov
pusha
add
inc
dec
inc
shrb
mov
insb
mov
test
mov
and
mov
cltd
mov
lock
in
ret
mov
iret
ss
rorl
push
xlat
and
pop
not
push
aad
mov
add
add
mov
scas
sub
mov
xchg
mov
jg
mov
fadds
add
lcall
push
fnstsw
mov
xchg
sahf
mov
sbb
nop
pushf
clc
mov
xchg
pusha
in
sbb
call
push
inc
xchg
push
test
xchg
insb
sbb
add
push
jno
arpl
mov
sub
jmp
cmp
cmp
sbb
inc
pusha
ret
mov
hlt
jge
mov
mov
or
sbb
aam
sub
or
mov
mov
inc
mov
cmp
jmp
ljmp
sub
push
jbe
cmp
call
cmp
test
lods
jne
push
ss
pop
mov
adc
add
and
pusha
sbb
fs
ljmp
cli
ret
inc
and
popa
insl
push
sub
push
out
mov
insl
stos
mov
hlt
push
rolb
dec
jbe
lcall
arpl
or
mov
or
or
sbb
adc
jp
repnz
sbb
xchg
pop
ljmp
stc
aaa
mov
es
mov
sbb
and
and
inc
xlat
stos
push
test
inc
adc
loope
mov
mov
test
and
mov
fcmovu
mulb
pop
push
push
aad
or
sub
xchg
or
les
adc
push
jne
fcompl
mov
into
or
dec
shrb
push
mov
cmp
mov
sub
xchg
sbb
xor
mov
mov
xor
in
fisttpll
fiadd
call
add
rclb
sbb
sub
sbb
cmp
fmull
adc
dec
push
add
mov
jne
lock
negl
inc
cmp
je
pusha
test
ds
or
hlt
sub
dec
mov
dec
xor
push
lea
cwtl
sub
cmp
lock
lcall
lds
sub
xor
dec
xor
or
xor
jp
or
cmc
mov
inc
aaa
add
or
inc
mov
and
cmpsb
mov
clc
int
lcall
push
pop
std
sub
xchg
push
ret
pop
xchg
clc
test
xchg
arpl
push
negb
jo
ror
ret
sub
push
gs
mov
pusha
call
and
out
mov
add
push
cltd
fidiv
sbb
add
popf
stos
jmp
mov
cmp
mov
pusha
mov
cmc
mov
push
pushf
cs
or
fimull
clc
add
outsb
mov
sbb
adc
mov
push
mov
pop
sbb
addr16
in
jmp
popa
xor
cld
add
out
cmpsb
jmp
in
hlt
cld
mov
mov
pop
test
inc
repnz
xchg
adc
sbb
add
orl
or
loopne
and
popf
xor
jle
popf
aam
jne
std
inc
andb
rclb
mov
sbb
ret
mov
div
icebp
repnz
mov
data16
jo
mov
lcall
cmp
inc
mov
mov
imul
in
andb
mov
sahf
xchg
push
out
call
sub
or
cmp
xor
out
mov
int
jp
mov
push
rolb
jae
fsubrl
gs
xchg
fs
pop
subb
adc
roll
cmp
ret
add
jmp
xor
mov
fidivl
inc
push
adc
lock
xchg
mov
stc
sbbl
lock
push
jle
test
jp
pop
test
cwtl
bound
hlt
sbb
fadd
sahf
dec
mov
cmp
jp
pop
jae
in
push
push
and
inc
and
mov
push
and
cmp
cmp
popf
jmp
mov
cmp
pop
inc
pop
cmp
fidivrl
aam
movsb
mov
or
ds
mov
lcall
or
xor
sub
xchg
rclb
fs
jne
cmp
sub
rcr
add
js
pushf
add
or
mov
xlat
rcl
stc
sub
gs
gs
or
fxch
int
xor
rcl
pop
shlb
fdivs
roll
xchg
pop
xlat
in
les
lds
daa
popa
xlat
jne
test
daa
in
inc
out
add
subl
repz
out
orb
movsl
fs
movsb
jbe
inc
inc
or
sbb
or
adc
and
jbe
sbb
sbb
push
or
test
cmp
mov
stos
add
subl
jno
cwtl
lea
mov
adc
xor
sbb
out
in
addb
add
push
xchg
add
push
mov
out
mov
cld
mov
inc
lods
imul
outsb
or
xor
push
dec
xchg
into
jo
push
ficoml
jno
xor
cld
into
stos
test
lock
out
jge
sahf
insb
and
nop
push
and
out
mov
sub
push
add
mov
adc
xchg
add
add
mov
xor
push
cmpsb
aas
mov
enter
mov
sti
lret
sti
scas
addl
pop
call
lahf
daa
mov
roll
aam
mov
cmp
aad
xlat
sub
inc
mov
xor
fcoms
sbb
xchg
call
js
pop
mov
adc
ret
je
mov
clc
ds
dec
lods
jne
cmp
loop
sub
jo
mov
mov
inc
das
loopne
les
loope
loop
jecxz
cmp
out
out
call
sbb
pushf
ljmp
mov
xchg
lods
push
popf
imul
jne
cmc
psadbw
dec
clc
mov
mov
adc
cmp
mov
sahf
inc
push
xchg
adc
cmp
fsubs
pop
xchg
bound
mov
or
loopne
push
inc
dec
cmpsb
push
push
int3
pop
movsb
jge
loopne
sbb
in
push
stos
sub
lock
outsb
pop
xor
mov
push
push
pop
into
dec
test
jne
cltd
insl
out
lret
adc
jb
sbb
or
movups
mov
push
aad
inc
pop
sub
sbb
sbb
push
mov
adc
adc
sub
fsubrs
insl
lahf
jbe
mov
sub
sub
or
or
test
sub
sub
adc
fwait
cmc
negb
mov
add
test
call
mov
fmuls
xchg
or
add
dec
std
call
add
sub
mov
push
xor
addr16
dec
gs
and
lods
jo
repnz
push
rcrb
or
add
push
or
add
jne
adc
ljmp
cmp
out
loop
ret
push
push
push
pushf
setb
cs
mov
and
aaa
mov
cld
das
push
push
jns
arpl
push
xchg
push
or
xchg
js
jp
jne
loope
lods
cld
fildll
adc
in
push
xor
mov
cmp
sar
in
xor
data16
push
pushf
sbb
data16
add
out
xchg
out
push
call
sub
frstor
inc
adc
push
ficompl
inc
loopne
jo
mov
jge
sti
clc
pop
pop
jae
or
loopne
popa
decl
sbb
jbe
xorl
cmp
jl
xchg
mov
push
cmp
jb
push
push
das
mov
push
push
notl
jbe
mov
inc
inc
sbb
mov
pop
lods
sbb
pop
inc
and
loopne
push
aad
loope
out
lods
adc
pop
je
or
push
movsl
jmp
outsl
dec
ret
ljmp
lods
or
xor
aad
call
in
mov
subl
clc
sbb
or
sub
lock
mov
jecxz
mov
inc
push
js
stc
cmp
lahf
call
add
test
mov
test
cmp
icebp
lea
jmp
js
leave
and
or
mov
std
mov
jl
or
call
lds
xor
push
or
movsb
xor
popa
jno
add
cmp
sbb
xor
jne
cmp
or
sub
hlt
mov
pop
inc
dec
insb
nop
in
cvtps2pd
shrb
pop
fldenv
sub
popf
pop
inc
and
into
sbbb
aad
mov
add
cwtl
test
out
add
xchg
mov
iret
addl
xor
aad
adc
sbb
testb
rdtsc
cs
lea
popa
push
outsl
aad
fisubrl
not
fdiv
rorb
pushf
call
jmp
insb
lahf
cmc
inc
push
jle
xor
aad
popf
repz
js
loopne
push
push
pop
insb
mov
cmp
pcmpgtb
add
adc
add
fistl
dec
hlt
pop
jl
push
in
andw
frstor
or
jmp
push
adc
pushf
push
sbb
mov
sub
fcomi
rcrl
push
cwtl
jmp
push
and
mov
stos
adc
imul
push
daa
divb
icebp
scas
inc
lods
push
mov
inc
mov
scas
ljmp
adc
cmp
not
mov
lea
mov
xchg
call
sub
clc
neg
jno
push
push
call
push
push
decl
stc
jnp
dec
sub
push
xor
and
insb
test
mov
push
es
rcll
push
xor
sbb
adc
push
add
push
or
xchg
hlt
icebp
sbb
lods
xor
push
xchg
push
inc
xorl
faddl
shlb
adcb
dec
cwtl
loop
jb
sbb
jae
sbb
ljmp
dec
cmp
inc
or
sub
cld
xchg
enter
xor
xor
mov
pop
in
mov
rol
cwtl
pushf
jbe
fbstp
add
leave
sbb
or
pop
pusha
and
fdiv
leave
leave
mov
fild
cli
push
shld
pusha
jmp
loopne
je
sarl
enter
adc
lar
cmp
cld
out
jo
push
inc
addr16
or
sarb
icebp
scas
jl
cmc
and
pusha
add
sar
fimull
add
js
outsl
xor
mov
mov
sub
iret
insl
xor
gs
and
int
jo
cmp
idiv
ljmp
mov
es
push
inc
and
mov
addb
add
and
add
es
mov
add
pop
repz
and
add
or
add
or
mov
jb
sub
test
push
cmp
mov
mov
or
or
mov
in
shrb
and
call
jbe
mov
das
lcall
cltd
idiv
imul
inc
addl
or
movb
imul
das
aaa
ss
test
cltd
inc
jge
xor
pop
push
ljmp
mov
pop
enter
fwait
lock
jmp
xor
mov
cmpsl
rorb
outsb
aaa
shrl
mull
push
fildl
push
dec
add
add
or
mov
sub
add
cmp
jl
fimull
daa
cmp
adc
and
mov
sbb
inc
clc
mov
push
fdivrl
ljmp
sbb
clc
adcb
fsubrl
mov
or
sbb
inc
out
add
aaa
inc
lods
or
sbb
movl
out
jb
loopne
sub
pop
ss
mov
sub
dec
ss
push
dec
aas
mov
call
out
fidiv
cmpsl
stos
or
xor
call
stos
xchg
fcmovb
jle
in
add
stos
inc
dec
inc
hlt
gs
xor
mov
push
fsubs
cli
loop
adc
sbb
xor
add
ror
xor
inc
pop
lods
imul
add
dec
mov
mov
mov
clc
add
or
lcall
add
lock
mov
fisub
loopne
pop
incl
push
lret
dec
icebp
mov
lahf
adc
push
and
in
sub
xor
call
call
call
call
mov
mov
push
mov
add
ffree
add
idivl
xchg
mov
ret
cwtl
pop
in
push
daa
adc
sbb
and
adc
inc
cltd
xor
lcall
pop
loope
or
out
cs
xchg
mov
add
aaa
or
push
xor
shr
js
cwtl
test
das
or
mov
dec
xor
xor
push
ret
dec
ds
and
push
arpl
cmp
outsl
call
movl
cli
outsl
add
mov
cmp
das
mov
outsl
aam
lds
inc
cmp
jl
push
sbb
adc
or
and
icebp
mov
mov
nop
xor
insl
pop
mov
xor
daa
push
or
call
cmp
scas
pop
cmp
rorb
call
je
test
je
adc
sbb
call
sub
or
add
jge
dec
or
aaa
outsl
stos
sahf
ret
adc
enter
and
mov
cltd
push
mov
mov
test
fcomip
inc
add
cmpsb
inc
jle
xor
mov
les
adc
mov
mov
push
add
mov
push
mov
mov
mov
ja
or
add
or
adc
test
je
scas
cmp
or
add
inc
xchg
popa
shl
add
xor
lea
insb
in
outsl
add
rorl
hlt
sbb
jmp
cmp
inc
dec
or
mov
mov
aaa
into
into
pop
in
sbb
mov
hlt
jns
fcmovu
std
in
jo
mov
testb
orb
sub
mov
adc
mov
mov
dec
test
bound
or
inc
pop
sti
or
sti
or
mov
pop
aaa
xchg
loopne
mov
test
or
or
das
or
mov
add
out
loopne
xor
or
lock
aam
pop
sbb
add
cmc
test
pop
pop
add
ret
pop
jecxz
cmpl
mov
push
push
mov
mov
jbe
sti
cmp
je
pushl
jnp
add
mov
out
sbb
mov
jne
mov
sti
cmp
add
and
lea
or
mov
push
mov
jle
incl
jo
out
sti
aaa
push
ret
adc
dec
adc
stos
ss
or
ljmp
test
shr
std
mov
push
xchg
cmp
andl
aaa
jno
pop
lock
mov
dec
inc
fucomi
jne
xor
pop
je
cmp
leave
adc
rolb
push
leave
jl
xchg
shll
in
pop
dec
into
mov
ret
xcrypt-ctr
cmpsl
add
mov
andnps
mov
rorl
xor
or
xchg
out
aaa
cmp
pop
dec
dec
add
jns
es
push
mov
or
jno
add
jae
cmpl
adc
adc
push
add
arpl
push
lock
dec
xor
cmpl
xor
adc
je
cmp
add
cmp
jne
push
or
adc
cmp
jmp
adc
rcr
dec
lcall
xor
jp
and
mov
jge
or
pop
or
jmp
cmpsb
mov
xchg
fcomps
fnstenv
es
mov
js
jno
jo
mov
mov
in
jne
inc
xchg
push
and
sbb
mov
lret
andl
int3
add
pop
mov
mov
je
jne
scas
sub
pop
cs
loop
sub
lock
push
or
sti
idivl
pop
adc
pop
push
jns
cmpl
jae
pushf
inc
pop
in
insb
mov
arpl
adc
dec
insb
mov
mov
add
cmp
sbb
sbbl
xchg
leave
xchg
test
cmp
test
test
mov
sbb
jbe
and
or
ret
stos
push
fwait
out
mov
inc
outsl
cltd
mov
adc
cmp
or
sbb
mov
sub
xor
cmp
xchg
jecxz
and
or
inc
lea
jmp
sbb
js
mov
movl
bound
fucomi
cmp
inc
mov
out
mov
add
mov
add
add
call
pushl
je
fsubrs
pop
call
cs
outsb
pop
testb
or
pop
pop
add
push
rcll
push
cltd
jnp
or
inc
mov
mov
test
test
or
ret
jb
ss
out
xor
mov
adc
mov
inc
add
inc
bound
idivl
inc
sqrtps
or
sub
dec
sbb
inc
adc
jb
push
mov
xor
clc
sub
mov
call
in
lods
je
ret
je,pn
cmp
je
pop
push
add
sub
mov
pop
push
cld
pop
ss
or
mov
fdivs
cpuid
push
sbb
or
push
cld
jbe
lea
pushl
xor
mov
inc
mov
out
or
imulb
fucomp
dec
add
dec
call
inc
mov
lods
sbb
clc
pop
adc
xor
es
test
dec
int3
movl
les
jge
dec
push
pop
add
sbb
inc
mov
pop
mov
adc
mov
add
jl
or
pop
cmpsb
fcmovnbe
mov
mov
lods
call
daa
or
ja
lods
xor
or
mov
mov
jl
pop
push
push
push
add
or
add
test
js
sti
mov
test
pop
and
push
scas
cmp
data16
in
fidiv
shrb
popa
addr16
iret
out
fisubrl
fsubrl
jo
gs
lcall
add
push
sub
mov
std
repz
movsb
std
call
xchg
fwait
add
jge
ret
push
and
inc
mov
pop
imul
hlt
dec
and
mov
add
xlat
and
push
or
movsb
jp
mov
stc
fnop
jb
dec
inc
sub
les
dec
ljmp
mov
fsubl
jne
sbb
addr16
popf
or
sbb
rcll
mov
pop
sbb
jbe
inc
mov
dec
stc
jge
xchg
jb
add
ja
std
pop
push
mov
xor
rcr
repnz
xchg
lock
outsl
or
mov
adc
push
push
push
jbe
mov
jg
push
mov
ss
psubb
mov
pop
push
dec
cmp
test
xor
pop
jmp
adc
pop
orb
daa
add
sub
and
mov
mov
inc
fcompl
adc
outsl
cli
push
adc
cmp
mov
jge
rcrb
in
mov
cmp
push
je
dec
dec
cmpw
repz
push
jo
inc
fnclex
push
cmpsl
cmp
push
add
clc
jne
push
add
adc
enter
inc
movsb
setl
add
lods
push
sub
or
and
call
aad
xchg
enter
mov
pop
pop
jb
xor
or
movsl
aas
sbb
cltd
jmp
pop
in
scas
dec
in
push
test
fstpt
cmpb
pop
dec
sbbb
adc
push
mov
cmp
jg
jne
jnp
mov
fsubrs
xchg
mov
cvtps2pd
mov
cmp
inc
sub
test
aaa
fmul
andl
pop
pop
mov
add
in
mov
repz
sbb
test
mov
lret
fisttpll
or
sub
mov
push
sbb
dec
or
add
fldl
xor
test
fcmovbe
test
xor
dec
and
adc
and
insl
aaa
adc
cs
sub
jbe
test
xchg
outsl
mov
mov
mov
mov
lea
xlat
jne
fisttpll
xchg
push
cmp
pop
xchg
jae
xchg
sub
jmp
fadds
bound
mov
arpl
mov
add
dec
movsb
movsl
inc
add
pop
fsubrl
stos
test
xor
adc
xorb
into
dec
iret
nop
sub
je
rolb
rorl
aad
aad
adc
pop
xlat
loope
inc
scas
sub
dec
lcall
inc
adc
cs
adc
xchg
loop
wrmsr
mov
mov
mov
mov
mov
sbb
je
adc
xlat
dec
sbb
push
rorl
lock
gs
mov
mov
insb
fsubl
xchg
mov
xchg
mov
mov
mov
mov
rcr
sbbb
faddp
fadd
ja
push
mov
mov
push
js
movsl
lret
adc
and
pusha
xchg
push
inc
cmp
jmp
xchg
mov
les
popf
insb
fs
mov
push
push
push
ret
bound
mov
pop
push
inc
jae
cli
add
std
stos
cmc
mov
mov
mov
sar
and
adc
test
or
daa
test
out
jbe
nop
pop
in
mov
or
mov
add
rorb
rcll
std
sbbb
mov
out
in
mov
mov
cmpl
mov
mov
mov
adc
or
jo
cmpsb
sahf
xor
xlat
xchg
xor
mov
adc
rcrb
pop
data16
pop
stos
pop
call
and
mov
cmp
push
cwtl
mov
repnz
je
mov
divl
scas
push
test
adc
ss
xchg
inc
mov
sbb
jge
mov
orl
inc
mov
test
cmp
push
sbb
mov
aaa
push
cld
add
test
mov
push
pop
fisttpll
scas
xchg
adc
insl
out
in
je
xchg
je
push
xor
dec
xchg
xor
jge
pop
mov
insl
ljmp
push
or
push
ja
inc
push
lcall
imul
into
xchg
imul
adc
xchg
jmpw
pusha
push
push
popa
outsb
int
fldt
xlat
arpl
dec
xor
insb
outsl
inc
stos
mov
stos
pop
lods
sahf
lods
or
xor
sbb
push
mov
push
dec
popa
imul
push
inc
fmuls
jo
fisubrl
cmpsb
imul
imul
push
xor
sarl
xor
scas
imul
or
cmp
xor
pop
out
jne
inc
test
fwait
jmp
nop
push
push
test
movsl
cmp
test
push
popa
je
mov
roll
push
xor
dec
mov
outsl
cmp
insb
cwtl
popf
popf
mov
aas
sub
int
loopne
jns
test
push
inc
xor
or
sub
clc
inc
mov
mov
flds
cli
sub
mov
test
or
lods
and
arpl
jl
inc
push
imul
popf
pushf
jl
insl
push
inc
outsb
and
jbe
outsl
inc
jo
jno
jb
or
mov
xchg
fcoms
xor
mov
add
dec
pushf
popf
dec
add
mov
lret
inc
lcall
dec
jo
dec
addr16
je
inc
xlat
pop
int
into
in
out
xor
shrl
je
popa
dec
xor
insb
push
jne
jb
add
xor
in
popf
push
xor
lea
xchg
sbb
orl
ss
sbb
jne
jbe
or
popf
sti
ja
js
jns
dec
mov
test
jl
in
mov
jg,pt
mov
xorb
push
mov
int
lods
aam
mov
add
adc
jl
cs
xchg
lods
adcl
cmp
cmc
pusha
sbb
jbe
in
arpl
pop
cmp
xchg
dec
adc
and
shrb
cmpsb
rcr
pop
push
xchg
lea
fldenv
mov
sub
sub
push
mov
jbe
hlt
add
les
add
pop
shll
fwait
aas
loopne
sbb
iret
lea
mov
nop
addr16
sbb
inc
lods
popl
sub
inc
jo
add
sbb
mov
cmp
rcrb
add
mov
jns
outsb
testb
cmp
adc
jb
push
imul
mov
push
je
push
flds
mov
xchg
jmp
cmpsb
int3
push
mov
mov
xor
or
adc
inc
nop
mov
sub
or
pop
cltd
js
mov
adc
mov
sahf
xor
rol
addb
fldt
push
call
cmp
mov
adc
sbbb
cs
in
int
push
inc
xor
or
mov
cld
std
aaa
add
out
add
push
adc
push
fnstenv
fidivl
sti
insb
call
sbb
pop
push
sbb
test
aam
adc
pop
popa
stos
repz
push
in
or
int
push
jl
test
mov
jb
cmpsb
inc
adc
mov
add
and
and
lock
push
ficomp
movb
xor
adc
andb
sahf
mov
sarb
outsl
aam
movsl
hlt
std
nop
xor
inc
add
hlt
cmp
sbbl
or
mov
jo
cmpl
andl
lods
push
mov
dec
push
mov
pop
lock
push
lods
repnz
push
ljmp
push
mov
aaa
dec
out
mov
push
sub
cli
xor
je
push
pop
xchg
lods
and
mov
jae
push
rclb
push
jmp
aas
pop
pop
pop
or
cmp
fdivl
push
scas
jp
sbb
inc
or
xor
roll
shrb
ja
mov
add
scas
test
adc
xor
fdivs
push
pop
add
inc
mov
int3
adc
and
add
add
insw
ss
adc
lods
mov
inc
mov
lods
push
add
movsl
adcl
icebp
pop
incb
and
fidivr
sahf
sub
xor
adc
fcmovu
fldt
fmul
cmpsb
imul
pop
cltd
int3
loopne
xchg
adc
xor
ljmp
jmp
mov
in
xor
int
imul
push
fld
cltd
adc
xchg
add
add
mov
mov
pusha
aaa
lock
add
or
sbb
pop
adc
add
adc
jmp
adcb
test
xchg
pop
jle
rcrl
add
xchg
out
insb
add
sbb
ja
inc
sbb
pop
xor
pop
or
push
and
sub
sti
repz
mov
or
or
xchg
mov
loopne
dec
es
or
push
in
jle,pn
push
push
cmp
inc
push
add
lds
push
mov
xor
and
xor
pop
push
mov
call
push
sub
add
jne
pop
ljmp
sub
xlat
cmpb
mov
cmpsb
sub
cwtl
or
push
and
mov
incb
add
add
xor
nop
cmp
mov
lods
adc
stos
fsubl
push
test
dec
inc
clc
ficom
dec
or
sub
fcoml
cltd
sub
cmp
sbb
and
push
adc
add
or
sub
or
lock
adc
scas
hlt
mov
mov
addr16
cs
aad
imul
mov
mov
mov
mov
sbb
sbb
xchg
push
in
sub
gs
gs
xchg
xchg
xlat
push
inc
pop
xchg
adc
adc
jne
lcall
cmp
add
into
inc
add
outsb
gs
fs
imul
jne
add
shll
bswap
pop
xor
ret
es
vrcpss
int3
leave
leave
gs
sub
movb
mov
dec
xor
jne
mov
push
xor
mov
in
push
adc
jmp
adc
ret
iret
adc
sub
lds
fs
paddw
add
iret
orb
xor
sub
leave
adc
rolb
push
adc
fmuls
test
loope
and
pop
fistpl
jmp
cmpsl
or
test
flds
dec
pushf
adc
add
fcmovnbe
add
and
call
cld
rorb
dec
xchg
jo
loop
enter
neg
push
daa
inc
mov
shrb
rcrb
sub
je
jbe
add
push
push
add
clc
push
xchg
mov
aam
cmp
clc
inc
xor
iret
fildl
jo
jl
icebp
mov
pop
lock
mov
fmuls
mov
add
or
call
cmp
xor
jge
mov
or
test
mov
and
or
pop
mov
mov
add
shl
insb
shll
or
mov
aam
or
sbb
jne
outsb
pop
and
mov
jns
sahf
test
push
mov
lea
push
insl
mov
inc
inc
cltd
call
cwtl
or
or
lcall
jne
inc
push
call
mov
mov
xchg
call
inc
lea
pop
rep
mov
mov
add
incb
push
in
xor
xchg
adc
inc
sbbl
sub
jno
jno
stos
ficompl
cmpsb
rorl
arpl
mov
mov
ds
pop
push
inc
mov
dec
loopne
cmp
add
mov
sub
sub
mov
inc
cmc
add
push
push
add
cmp
cli
push
push
or
sub
inc
push
pop
push
jo
pop
in
ss
mov
add
call
push
pop
leave
call
add
int3
leave
add
shlb
pop
daa
fadds
rcr
adc
rolb
ret
mov
ss
push
movb
pop
enter
inc
daa
ret
pusha
adc
mov
mov
sbb
lret
adc
adc
inc
loopne
jge
shrl
push
push
popf
pop
sub
sub
jle
mov
push
inc
add
mov
xlat
mov
in
in
sub
sub
test
lock
fcmove
sub
lds
les
sub
rcll
mov
div
sti
idiv
push
adc
stc
out
xor
add
or
imul
enter
adc
sbb
pop
or
sbb
les
mov
add
push
and
hlt
jo
dec
add
sub
lret
cltd
mov
enter
or
inc
or
adc
nop
push
rcrb
mov
cmp
test
sti
cltd
mov
pushf
in
popf
and
loopne
pop
mov
pop
sub
sub
mov
sbb
mov
loop
dec
inc
dec
lret
lea
shr
pop
add
cmp
push
push
insl
push
outsl
adc
mov
pop
cli
mov
mov
xchg
fcmovne
mov
dec
push
mov
mov
mov
mov
and
jns
lea
cmp
mov
add
inc
in
dec
or
pop
or
inc
xor
orb
or
rorl
or
fsts
push
push
and
jmp
xor
mov
push
mov
lods
dec
sbb
mov
out
add
cli
add
sbb
lods
push
mov
fnstsw
mov
ret
fild
pop
adc
add
mov
aaa
lds
pop
push
add
sbb
jne
or
jmp
or
fldl
xor
int
and
xlat
call
jp
push
sbb
clc
push
add
mov
cmp
jne
std
adc
xchg
add
mov
fwait
dec
adc
push
ljmp
roll
mov
verw
xchg
outsb
dec
and
cmp
pop
jge
es
dec
fnsave
or
cmp
repnz
and
fwait
or
or
xor
call
cld
testl
shr
push
sbb
mov
sbb
inc
add
inc
fsubl
sub
inc
mov
pop
out
mov
ja
notl
pop
test
lods
cmp
jg
aad
pusha
mov
sub
add
xor
or
sarl
xchg
add
call
mov
inc
sbb
aaa
adc
ljmp
daa
sub
scas
jle
jecxz
mov
hlt
je
pop
ja
jmp
jmp
cmp
data16
cmp
sub
and
js
lock
mov
push
movsw
call
sbb
xchg
je
rolb
inc
lods
loop
and
test
sbb
ret
add
jno
cmp
pop
hlt
std
cmp
dec
inc
call
add
add
inc
ja
add
push
aam
add
cld
std
fs
or
dec
hlt
and
inc
xchg
add
mov
imul
dec
xor
out
cmpsl
lock
loope
stos
stos
addr16
and
jo
dec
jge
lock
in
popa
jns
mov
mov
or
test
mov
xor
mov
outsl
mov
mov
into
add
fadds
and
testb
clc
rorl
rclb
call
jb
rclb
and
inc
sbb
inc
jo
ret
cvtps2pd
mov
sbb
mov
add
xor
lds
ljmp
test
js
or
and
lcall
jg
ret
push
jmp
xchg
or
add
pop
xabort
ljmp
not
sets
dec
sar
mov
adc
adc
pop
out
cmc
neg
cmp
jmp
add
adcl
and
fiadd
pushf
int
jmp
pop
jle
rol
lahf
shr
pop
shr
out
iret
or
ficoml
outsb
loope
mov
mov
xchg
inc
mov
add
les
lock
sbb
stos
sub
test
mov
push
and
std
into
les
fs
pop
mov
lret
mov
aas
popa
cmp
shll
jne
pushf
popf
or
adc
pop
sub
mov
movsb
dec
movsl
adc
cmpsl
test
jge
cmpsb
imul
in
mov
mov
btr
mov
xchg
call
lea
cmpsb
imul
mov
andb
adc
fstpt
mov
jl
pop
test
push
cmpsb
shr
les
cmpsb
pop
cld
lds
mov
leave
imul
int
jmp
cmpsb
into
iret
sub
inc
rcll
sarb
outsl
aam
aad
or
pop
fadds
mov
pop
fcmovu
aaa
fsubl
scas
jmp
sbb
loop
cmpsb
imul
cmpsb
pop
jb
pop
jmp
loope
push
sbb
push
shrl
repz
outsb
cmp
sbb
clc
psubw
test
dec
xlat
cli
inc
sub
pop
decb
xor
pop
push
fdivrs
add
decb
decl
pushl
arpl
push
dec
cmpxchg
lea
sbb
push
or
add
sbb
test
inc
decl
sti
leave
sbb
xchg
add
adc
clc
dec
xchg
push
rol
clc
adc
and
jmp
cmpsl
jne
decl
or
add
movsl
test
or
pushf
orl
xor
sbb
inc
inc
movsl
sub
sbb
je
mov
adc
pop
jmp
adc
insl
das
mov
and
inc
cmp
cmpb
les
xor
out
xor
xor
inc
or
roll
sbb
inc
inc
call
sahf
mov
mov
xor
mov
insb
pop
mov
mov
into
dec
or
or
sbb
and
jbe
push
xor
add
sbb
rcrl
sbb
lds
mov
sbb
aad
or
sbb
lds
insb
jo
ja
imul
add
or
cmpsb
sti
pop
and
leave
ret
call
add
adc
or
push
adc
push
loopne
inc
daa
js
cmp
sbb
cwtl
or
push
or
es
inc
test
jne
ret
cmpw
ja
cld
push
sbb
add
cmpl
push
mov
push
add
add
mov
mov
jae
xchg
push
mov
ror
ja
dec
ds
push
pop
add
push
mov
in
adc
adc
jo
xchg
shrl
inc
daa
or
adc
iret
je
cs
in
sbb
cmp
je
adc
pop
cmp
ja
pop
mov
in
in
xor
in
mov
or
or
adc
push
sub
jl
negb
je
addl
decl
dec
dec
adc
mov
in
int
add
rolb
or
pop
push
lds
mov
add
xchg
movsb
mov
in
jg
or
add
fdivrl
jae
mov
and
lahf
cmp
andl
in
sub
inc
js
add
pusha
jae
mov
into
ret
push
jl
jg
cwtl
adc
cltd
sbb
inc
pushl
dec
xor
xchg
xchg
push
dec
icebp
push
pop
xor
xchg
xchg
dec
xor
xchg
xchg
sahf
mov
mov
xchg
fdivs
mov
xor
rorl
push
xor
adcl
insb
stos
lods
ss
jb
mov
xor
rcll
add
xor
nop
movsb
lcall
mov
sbbl
aad
xchg
gs
mov
fs
pop
mov
pop
faddl
data16
inc
loopne
je
jne
loope
loop
stos
mov
xor
xchg
test
xor
xor
inc
mov
xor
test
adc
dec
shl
scas
mov
cmp
lea
xchg
lods
addl
mov
cmp
cmpsb
fwait
xchg
call
repnz
or
push
add
mov
push
stc
add
mov
aas
xchg
adc
push
les
hlt
jo
mov
xchg
hlt
je
clc
fbstp
add
loop
mov
or
jb
jb
aam
lods
mov
sarl
mov
fnsave
test
or
scas
fs
lahf
imul
cmc
je
push
dec
push
push
dec
sbb
into
inc
rcll
ds
jp
js
lcall
adc
mov
cmc
push
add
clc
jb
mov
jg
push
cmp
fildl
test
or
mov
inc
insb
push
aaa
inc
mov
xchg
mov
or
adc
in
imulb
in
in
out
cmp
jmp
hlt
insb
inc
ljmp
sahf
adc
xchg
test
jns
push
add
push
inc
clc
call
cmp
jne
jo
xor
rcll
stos
xchg
in
ss
mov
data16
mov
out
jp
rcrb
sub
sbb
pushw
hlt
loopne
adc
adc
mov
adc
inc
push
add
call
pop
jb
sub
or
push
cmp
cld
adc
add
jnp
push
inc
lock
insb
stos
dec
rorl
out
add
das
push
and
xchg
add
push
pop
stos
fisubrl
mov
push
sub
pop
cmp
inc
inc
xor
rcl
adc
push
test
popf
dec
mov
lcall
jge
sti
bound
push
in
jbe
adc
xchg
jmp
sbb
mov
cmp
jne
je
push
ja
sub
scas
add
and
insl
iret
add
xchg
clc
out
cmp
into
xchg
out
xor
es
les
loopne
enter
lsl
xor
fdivs
or
or
andb
add
jmp
adc
pop
mov
jecxz,pn
pop
cmp
pop
pop
mov
enter
popa
push
loopne
stc
int3
sbb
lods
or
sbb
mov
test
xchg
mov
lds
pusha
jmp
dec
add
pusha
gs
js
xchg
jmp
sbb
int3
fisubrl
cmp
dec
xor
sbb
stos
je
loopne
pop
mov
inc
jbe
mov
xor
fimul
sahf
add
stos
pop
xlat
pop
lahf
add
sti
dec
in
sbb
sti
loope
andb
clc
jle
mov
adc
xlat
add
sbb
pusha
pop
sbb
int3
or
pop
orb
adc
mov
adc
pop
sbb
lds
shlb
or
xor
or
ficomp
lods
outsl
cmp
ret
inc
add
lock
xor
and
xor
mov
push
ljmp
lods
mov
stos
notl
pop
addr16
pop
bnd
sbb
jo
sahf
int
roll
push
lcall
adc
pop
movsb
dec
xor
dec
outsb
je
jb
adc
xor
je
jb
stos
jmp
inc
push
pop
test
mov
lods
gs
mov
dec
ljmp
xor
insb
mov
dec
mov
outsb
sbb
hlt
jno
jne
mov
roll
dec
mov
lods
data16
push
fnsave
push
stos
pushf
adc
outsb
mov
nop
push
aaa
jno
xchg
rol
scas
jmp
xchg
dec
xchg
das
xchg
inc
xchg
js
jne
cmp
fcomps
dec
jne
fisttpl
push
fldl
fnstsw
jo
jne
loope
loop
or
inc
xor
popf
sub
ds
dec
push
loopne
shrl
push
test
movzbl
mov
mov
push
movsl
mov
pop
pop
mov
aas
inc
shlb
fs
xor
dec
les
fs
adc
or
sbbb
sub
dec
cld
cli
xor
clc
pusha
mov
sub
mov
push
and
lea
inc
sub
inc
push
call
xor
std
cmp
pusha
dec
cmp
cli
sbb
pop
mov
jo
pop
shr
mov
adc
or
pop
rolb
out
roll
push
dec
arpl
test
xor
sbb
adc
outsb
or
ficom
mov
loopne
idivl
cmp
pop
or
scas
adc
fnstenv
xor
addr16
outsl
cmp
mov
mov
mov
mov
cmp
inc
jmp
adc
leave
push
push
xor
add
push
ja
xlat
pop
je
xor
aam
or
mov
sbb
push
adc
test
scas
jne
sarb
adc
movsb
push
loop
or
mov
dec
arpl
clc
xor
sub
es
fisttpl
in
and
pop
and
push
and
push
mov
int
inc
push
xor
sub
mov
pop
push
call
jno
or
mov
push
pop
lock
das
push
push
in
loope
and
imul
mov
sbb
or
xorl
inc
imul
adc
hlt
cmp
mov
adc
or
mov
mov
aad
pop
mov
sbb
jns
loopne
inc
ret
stc
adc
mov
xchg
inc
inc
push
dec
hlt
movl
mov
lock
inc
ds
push
ja
cltd
xchg
add
mov
xchg
add
or
pusha
ret
mov
adc
mov
mov
push
ror
sbb
pop
daa
or
out
adc
add
pop
adc
insl
loope
fldcw
dec
or
jns
cmp
sbb
call
cmovo
cmp
push
call
mov
jb
stos
xor
pop
push
aas
pop
pop
mov
jno
push
xchg
or
stos
in
out
or
sahf
jl
mov
or
add
adc
pop
cld
sbb
inc
into
pop
pop
or
sbb
pop
bound
adc
daa
inc
pusha
add
js
mov
and
and
into
xorb
sbb
adcb
repz
or
xor
pop
les
mov
inc
int
int3
insl
mov
inc
in
pop
fwait
negb
les
dec
adc
fimull
or
nop
jmp
push
mov
out
mov
push
shrl
imul
rcl
imul
mov
inc
xchg
int
test
fcomps
add
mov
popf
addl
xor
mov
rcr
imul
fist
loopne
loope
loop
in
insb
imul
in
and
lock
int
ds
mov
inc
adc
fisubl
fstpt
fdivp
lret
imul
cmpsb
imul
call
lcall
test
test
jne
imul
loop
cmp
pushf
pop
ljmp
mov
or
sub
mov
cmp
inc
adc
ja
repz
fxrstor
or
and
or
inc
mov
and
pop
or
hlt
repz
and
add
jmp
mov
imul
pop
jmp
add
ret
mov
call
dec
or
jmp
xchg
ret
add
mov
push
jnp
or
or
xchg
or
mov
push
outsl
or
int3
fisubrl
dec
imul
jns
arpl
pusha
push
adc
pop
inc
loop
add
add
adc
cli
and
into
fmuls
xor
adc
movsl
fsubrs
or
andl
aad
cmp
fisubr
sbb
add
mov
sbb
repnz
mov
adc
push
push
sahf
popa
sub
inc
and
in
ret
fidivrl
inc
popa
arpl
stos
repnz
xor
mov
cmp
jno
sbb
jno
xor
icebp
push
test
pop
jmp
add
cs
dec
icebp
pop
repnz
dec
xor
inc
es
and
xor
jo
cmp
mov
jae
sub
test
call
rcll
nop
inc
mov
mov
out
mov
jb
test
or
xor
out
mov
jb
mov
jb
mov
daa
daa
popf
cltd
ret
lds
daa
daa
mov
jbe
jb
leave
out
lret
adc
dec
dec
pop
pushf
je
out
mov
insb
mov
mov
cmpb
xor
cmp
cld
ficomp
fldl
add
or
lds
inc
rol
repz
repz
out
sub
loopne
shlb
outsb
mov
cmp
adc
nop
add
stos
mov
adc
dec
sbb
and
xchg
test
jae
rol
imul
imul
cmpsb
imul
mov
daa
xor
and
aaa
adc
addr16
je
test
dec
pop
fnstsw
mov
shlb
jmp
pop
out
adc
cmpsb
imul
and
repz
jbe
pop
mov
cld
cmp
push
mov
or
mov
outsb
call
xor
rorl
shrb
push
cmp
mov
push
and
pushf
push
push
push
shlb
shl
mov
aam
psubsb
add
int3
popa
or
jbe
xor
sbb
push
or
dec
add
dec
xor
and
cld
das
mov
mov
and
add
mov
xor
es
setl
clc
and
andb
call
push
addr16
add
das
imul
mov
jbe
imul
test
stc
push
mulb
sahf
push
lock
dec
push
call
lds
pop
in
inc
sarl
outsb
add
lahf
jbe
mov
push
shrb
xchg
add
add
adc
and
adc
xchg
pushf
dec
add
xchg
daa
cmp
je
insb
add
ss
push
push
cmp
rolb
test
mov
ficoml
add
add
cltd
add
and
add
mov
test
fcmovnbe
lsl
sbb
data16
mov
push
mov
or
adc
jge
sub
adcl
cmp
push
push
push
js
cmp
sbb
or
les
ret
or
lea
mov
dec
sbb
les
jne
or
push
mov
jns
mov
rorb
or
mov
jl
inc
loope
sub
mov
adc
sub
cmp
pop
ret
pop
mov
movsb
pop
and
push
das
mov
inc
jle
and
dec
sbb
cli
in
sbb
and
lret
or
sti
cmp
out
and
loopne
lea
sbb
pop
in
mov
outsl
sbb
mov
call
mov
popf
mov
test
push
mov
arpl
jnp
jmp
pop
les
or
add
mov
sahf
stc
mov
and
mov
xor
mov
mov
adc
add
int3
push
push
sti
rolb
xor
subl
in
xor
or
or
outsl
fs
add
jg
mov
add
push
xor
mov
or
jg
loop
sbb
sbb
rcl
lods
sbb
sbb
fsub
int3
add
and
push
add
in
call
ja
add
add
decl
int
mov
or
xor
adc
jne
out
mov
add
out
mov
lock
push
pop
push
dec
mov
cmp
xor
mov
lea
cmp
adc
push
push
out
add
ljmp
and
test
loop
adc
mov
in
or
or
std
idiv
pop
add
es
je
add
jne
mov
imul
xchg
test
sub
test
sbb
dec
rdmsr
cld
lock
dec
pop
aaa
push
cmc
call
inc
mov
es
sbb
and
jmp
sub
adc
jae
lret
inc
cmp
sbbl
enter
xchg
pushf
cwtl
xchg
pop
mov
mov
inc
jno
in
icebp
pop
xor
push
jbe
jmp
pop
mov
xor
mov
and
lods
dec
sbb
rclb
jne
mov
ds
or
add
adc
ds
adc
fildl
push
test
push
and
jle
into
xor
stos
inc
adc
lods
add
jae
insb
add
add
nop
push
dec
sbb
pusha
cli
arpl
add
or
adc
adc
nop
in
int3
jl
cwtl
mov
pop
daa
inc
in
jp
pushf
adc
dec
enter
jmp
pop
inc
into
xchg
imul
add
or
add
xor
jo
clc
dec
roll
lcall
mov
cmpsb
aam
push
xchg
xor
xor
dec
pop
fs
xchg
scas
inc
cmc
xor
add
mov
ss
es
cmpsb
jmp
adc
add
xor
pop
pop
add
pop
jbe
add
mov
mov
imul
cmpsb
jmp
add
sub
dec
push
pusha
mov
scas
jmp
mov
outsb
cmpsb
imul
imul
test
clc
xor
xlat
mov
into
ret
dec
xlat
or
sub
mov
sbb
iret
int
dec
pop
mov
rorb
push
xor
negl
jb
into
xchg
mov
cs
jo
cltd
scas
incl
dec
xor
cwtl
xor
shufps
add
push
jecxz
pop
mov
or
imul
pop
pop
lidtl
add
add
pop
add
cmovno
inc
popw
sarb
add
jg
in
fsts
jg
inc
addl
sbb
mov
xchg
sbb
sub
add
outsl
pop
adc
dec
jo
orb
jl
adc
and
mov
test
les
sarb
int3
and
adc
xchg
cmpsl
add
fldl
fldl
adc
ret
orb
pop
xchg
lahf
lcall
add
jne
add
add
gs
fisttpll
push
xor
insb
gs
jg
inc
gs
outsl
fs
dec
popa
outsb
fs
sbb
push
imul
mov
stos
fidivl
arpl
inc
ss
sub
sbb
cmp
jb
xor
dec
inc
fs
dec
push
add
sti
mov
sbb
imul
pushf
and
fidiv
imul
pop
sti
in
jmp
outsl
ja
inc
imul
xor
inc
jne
adc
pop
aaa
aaa
imul
cmpsl
adc
sbb
xor
insb
outsl
jae
add
dec
popa
jae
inc
stos
push
insl
cmp
pusha
jmp
fnsave
push
xor
ja
jge
inc
pop
dec
popa
insl
add
sbb
fistl
gs
inc
jnp
fadd
imul
ret
jae
push
jbe
jb
and
gs
jbe
jp
inc
jecxz
outsb
fisttpl
mov
push
mov
jo
mov
fs
mov
fdivrs
push
insb
aaa
inc
jns
loope
or
flds
jle
dec
gs
xor
mov
mov
aad
push
or
cmp
test
jo
inc
push
jp
stc
cvtdq2ps
mov
add
or
inc
push
aad
insb
mov
leave
push
sti
push
fistpl
mov
inc
outsl
jne
push
ret
push
and
add
rcrl
fs
jne
cmpsl
mov
add
inc
push
dec
inc
dec
pop
cmp
xor
xchg
add
arpl
fcom
mov
mov
lds
push
mov
lret
add
outsl
imul
cltd
and
ja
jae
mov
in
or
mov
cmp
mov
or
add
pop
aas
aas
xor
mov
pop
push
add
rdmsr
sti
push
pop
addr16
dec
cmovns
pop
inc
js
in
fildl
fs
mov
ja
pop
and
ret
pop
pop
xlat
pop
in
inc
xchg
add
or
mov
jo
je
pop
push
push
jo
pop
push
add
loope
add
outsl
push
or
adc
rol
loope
jbe
dec
pop
test
add
jo
dec
rorl
jmp
pop
xor
insl
cmpsl
xor
js
add
dec
movl
insl
push
int
jno
mov
xchg
punpckhwd
inc
popf
and
push
xchg
jmp
adc
pop
jo
aaa
cs
dec
xchg
enter
xorl
mov
les
sbb
popf
xchg
pop
sbb
push
popa
jbe
adc
sbb
out
adcl
push
insl
dec
inc
dec
push
dec
xorl
sbb
insl
insl
imul
bswap
mov
gs
pop
imul
aaa
pop
or
out
outsb
ja
push
adc
dec
inc
insb
or
add
insl
nop
push
imul
sub
inc
data16
cmp
clc
inc
xchg
sbb
fistpl
mov
jbe
sbb
mov
pop
sbb
inc
inc
dec
enter
out
push
push
test
out
xor
imul
in
imul
ljmp
out
mov
sbb
in
in
stos
jno
outsl
mov
popa
or
xchg
adc
insl
cmp
jne
mov
xchg
push
and
mov
cmp
mov
jo
pop
adc
leave
pusha
fiaddl
cmpsl
push
jmp
decl
or
or
push
ss
sbb
or
mov
sub
pop
adc
mov
adc
insb
popa
dec
pop
jmp
push
push
stos
addr16
ret
jne
mov
fs
add
mov
pop
pusha
fs
lret
pop
xchg
imul
loopne
ljmp
add
and
sahf
aaa
add
pop
jbe
mov
xor
repz
xchg
dec
nop
cmpl
xor
sbb
inc
test
popa
roll
sarl
fdivr
dec
aaa
arpl
and
aaa
aaa
xor
push
js
jns
jge
dec
movsb
pop
cmpb
push
int
xchg
and
call
ror
or
mov
mov
pop
nop
shlb
push
and
call
pushl
divb
jmp
mov
jecxz
fs
mov
xchg
sbb
xor
jg
xchg
xchg
cld
aaa
dec
test
stos
xchg
fsubs
adc
sbb
scas
js
push
and
sbb
lcall
dec
loopne
xorl
mov
loopne
stos
shll
mov
sahf
inc
add
js
adc
jo
mov
push
inc
push
inc
push
fistp
out
pushl
js
cmp
cmp
sub
sbbl
sahf
movsb
jmp
addr16
jmp
cmp
xchg
jae
mov
leave
rorl
addl
xorl
mov
repnz
cmc
cmp
push
sbb
mov
dec
inc
inc
inc
mov
js
add
scas
mov
pusha
inc
stos
ret
sahf
in
pop
push
xchg
lock
mov
repnz
add
add
push
sbb
fs
pop
push
push
int
pop
mov
negl
pop
ds
push
aad
add
in
push
sub
das
inc
dec
inc
cs
ds
popf
pop
cmp
pop
loop
scas
daa
pop
fstps
jnp
jae
out
cmp
adc
outsl
push
jo
out
inc
adc
sbb
cld
lea
lock
push
dec
scas
push
jnp
push
leave
ss
cltd
mov
repz
fbld
stc
mov
sub
loop
xor
xchg
add
pop
daa
pusha
push
add
pop
sbb
imul
add
pop
adc
pop
push
pop
add
add
les
add
lea
rclb
push
mov
and
je
inc
cwtl
fnstsw
mov
mov
std
push
ficoml
or
fs
inc
inc
movsl
das
aam
xor
pop
dec
pop
std
mov
cmp
adc
and
ficoml
loope
push
insl
int3
movsb
jle
mov
dec
loopne
into
dec
lea
pop
aas
lds
add
jmp
or
add
nop
insl
pop
xchg
lahf
aam
push
pop
dec
cld
jmp
xlat
andb
call
icebp
aaa
arpl
cltd
ss
mov
lods
das
lock
lcall
aad
mov
pop
es
cmp
out
mov
ljmp
and
or
xchg
push
fs
out
pop
push
std
aam
icebp
in
fstl
data16
pushl
pop
fadds
pop
adc
sub
test
jg
arpl
xchg
adc
test
inc
scas
xchg
int
arpl
lahf
mov
icebp
mov
js,pt
mov
mov
sarb
imul
arpl
outsb
xchg
add
pop
jp
sarl
adc
int
insl
cmp
cld
inc
ret
sub
jecxz
fcmovb
and
mov
xchg
mov
jbe
cmp
pop
cmpsl
lcall
pop
and
test
push
dec
das
sbb
jge
int3
sub
push
xchg
add
push
scas
inc
jl
aad
mov
aas
gs
inc
lods
adc
jecxz
add
test
pop
lods
inc
addr16
push
shll
xchg
inc
rcrb
ds
cmp
xchg
dec
fdivs
xor
add
mov
or
aas
fstpl
negb
sti
push
dec
daa
mov
les
mov
enter
sub
and
and
outsb
mov
pop
jl
jnp
mov
pop
sub
add
aas
fwait
push
dec
xchg
jl
add
fist
iret
mov
push
push
pop
adc
das
jo
sub
xchg
or
pusha
and
jo
and
lock
and
add
pop
add
add
add
and
push
adc
nop
adc
enter
sti
or
adc
push
pop
add
in
hlt
xor
add
jno
daa
xor
or
push
push
ds
or
daa
xor
xchg
fstps
pushf
les
add
and
and
push
sbb
xor
inc
das
add
dec
add
push
inc
or
sbb
daa
adc
insb
xor
inc
sub
xor
adc
push
push
cmp
mov
daa
push
or
sbb
sub
xchg
xchg
sub
and
xchg
pop
jmp
daa
adc
orl
push
xor
cld
sub
inc
sub
xchg
sub
sub
push
or
imul
imul
xor
cmp
xor
pop
test
sub
add
mov
inc
nop
and
imull
or
pop
or
pop
rorl
fsubl
cmpsb
adc
inc
stos
cmp
lret
dec
mov
lahf
mov
je
inc
push
mov
popaw
int3
scas
mov
adcl
jle
lods
sbb
inc
xchg
cmp
inc
push
xor
ds
jbe
fisubl
push
mov
je
push
adc
call
sbb
or
call
mov
es
pushf
push
mov
je
test
mov
mov
jne
ss
jge
dec
mov
clc
popl
jae
adc
fmuls
mov
jae
pushf
jne
sbb
xchg
cmp
inc
inc
push
adc
pop
sbb
fstpt
not
outsb
mov
repz
sar
out
je
pop
mov
push
dec
ret
jbe
mov
add
syscall
outsl
jl
cli
pop
add
fdivp
sete
les
jecxz
pop
das
adc
movsb
push
push
push
jbe
jo
pop
push
bound
xor
or
or
and
and
jne
in
jg
mov
dec
and
das
mov
pop
cmp
push
xor
or
setg
out
push
xor
jbe
sbb
es
xchg
gs
add
push
sbb
cs
cwtl
or
add
in
sub
jne
sub
mov
loopne
xor
ret
push
add
xchg
adc
mov
pop
adc
test
xor
push
jbe
push
cmp
hlt
pop
pop
sbbl
cmp
adc
adcb
nop
cmp
pusha
push
test
je
fiadd
test
call
aam
icebp
stos
or
lcall
mov
mov
cmc
adc
mov
stos
scas
les
call
scas
xor
call
adc
and
popa
jae
push
mov
sub
aas
test
xchg
jp
lea
fwait
mov
cwtl
adc
xchg
sti
xor
xor
sti
adc
pop
mov
test
cmp
push
pop
sub
pop
add
sub
subl
add
call
push
ja
call
cmp
rclb
out
loopne
sub
adc
enter
loopne
xchg
add
mov
or
sub
add
test
sub
add
mov
or
xchg
mov
or
fsubs
into
and
ss
cld
into
sti
call
push
jnp
push
nop
sub
popf
in
jg
mov
and
and
add
adc
xchg
jmp
jne
add
sbb
mov
test
je
mov
out
aas
jnp
add
mov
sub
cmp
or
jbe
sbb
and
je
add
lret
cmc
push
push
jmp
orl
inc
dec
push
xor
sub
add
insl
mov
sub
orl
dec
push
adc
cmp
pop
loopne
enter
cwtl
test
lea
stos
sub
scas
and
jle
daa
push
lods
fsts
add
push
push
push
mov
stos
xor
lock
std
and
cmp
pusha
jne
push
mov
clc
out
cmp
xor
xor
or
aaa
outsb
adc
div
out
mov
idivb
push
sbb
push
or
cmp
dec
ja
es
or
sub
mov
xor
push
test
mov
jl
add
sub
sbb
mov
jmp
ret
jmp
inc
cmpsb
jbe
dec
add
sarl
xchg
jecxz
in
mov
mov
test
mov
movsb
dec
call
popf
enter
sbb
jmp
push
ss
pusha
test
add
or
adc
mov
test
push
lock
sbb
mov
fcoms
sub
outsl
or
lea
jle
xchg
xchg
in
lea
jge
mov
and
sub
rcrl
cmp
mov
call
lock
fdivrl
cmp
pop
negb
push
mov
jmp
cltd
jns
pop
sbb
repnz
in
mov
jmp
fadd
add
dec
repz
adc
add
negb
push
sahf
mov
xchg
and
inc
icebp
or
mov
xor
sub
mov
sbb
or
add
pop
adc
xor
call
sub
or
or
mov
mov
push
mov
in
in
cmp
les
xchg
in
xchg
mov
iret
mov
push
nop
mov
adc
xor
mov
mov
clc
inc
dec
stos
and
fstps
mov
adc
or
push
adc
addb
insb
sub
rolb
rcll
mov
push
jg
call
add
inc
mov
add
pop
ror
dec
hlt
xor
call
shrl
fcom
pop
mov
rolb
enter
enter
xor
mov
aas
sahf
mov
aaa
mull
push
push
roll
add
in
rorb
inc
push
sbb
push
mov
pop
dec
adc
insb
mov
and
or
jl
adcb
rcrl
pop
cs
or
mov
xchg
test
jno
rcrb
add
sbb
sbb
ds
mov
clc
repnz
popa
out
pusha
imulb
push
jne
push
push
rcll
mov
insb
push
jnp
cmpl
cmp
add
push
insl
orl
sbb
pusha
scas
ficomp
cmp
and
push
adc
inc
xchg
push
aad
movsl
enter
fs
fnsave
adc
pop
aas
daa
push
inc
fst
aaa
or
jne
push
cmp
pop
cmp
and
call
aaa
mov
sbb
and
punpcklbw
and
arpl
sbb
inc
outsl
popa
sub
cld
cmp
add
or
adc
pop
ret
fldcw
pop
xchg
stos
movsb
add
lock
je
enter
xchg
jbe
cmpsb
jmp
adc
inc
jmp
and
cmpsb
imul
xlat
adc
cmp
dec
rcrl
jp
sahf
dec
xor
mov
aam
repnz
xor
jne
sbb
sub
inc
push
sub
movl
jmp
nop
jbe
xor
xor
cmpb
faddl
dec
insb
adc
ret
xor
cmp
jbe
inc
xchg
pop
add
xor
or
xchg
or
mov
mov
lret
and
fs
imul
daa
inc
inc
add
add
and
mov
add
andb
jg
push
pop
adc
stos
or
aad
outsb
jo
add
or
ja
mov
je
add
add
or
cmp
js
sbb
fwait
inc
add
push
add
les
jbe
cltd
popa
bound
dec
add
pop
js
inc
test
fninit
add
inc
leave
je
aas
jnp
gs
sbb
imul
aaa
inc
fisubr
and
ret
mov
arpl
push
dec
jae
je
je
sbb
and
cwtl
inc
cltd
or
jae
sbb
jno
outsl
dec
andl
insl
push
inc
xor
or
mov
and
and
add
fldenv
dec
clc
cmc
and
je
mov
mov
xchg
add
add
aaa
sub
or
add
xor
dec
cmpsl
rcll
mov
push
push
int
shll
enter
sbb
call
leave
push
aad
out
add
xor
pop
cs
call
lret
mov
fsts
jge
shll
insb
sbb
jne
daa
cmp
mov
js
mov
cmovb
adc
inc
imul
icebp
cmp
adc
inc
mov
lret
aas
fs
mov
icebp
jle
or
sbb
nop
xchg
add
cltd
neg
adc
pop
inc
xchg
outsb
mov
cmp
xlat
ja
mov
out
jle
sub
mov
jecxz
fdivs
mov
sbbl
dec
mov
in
je
in
sbb
jg
jl
loop
insb
stc
je
ljmp
cmp
mov
xchg
mov
cmp
push
add
mov
leave
int3
cld
out
call
lahf
pusha
into
push
into
pop
xor
cmp
mov
cmc
mov
jno
xor
lods
movsl
sbb
imul
sub
sarb
xchg
enter
cmp
mov
jno
push
idiv
ljmp
or
and
push
outsb
test
stos
mov
and
xchg
pushf
or
add
fstl
aaa
inc
imul
lret
into
int3
in
dec
inc
dec
dec
dec
push
dec
add
dec
inc
push
inc
push
inc
adc
sbb
scas
pop
sbb
clc
idivl
sbb
stc
xor
call
dec
mov
dec
cld
mov
fistl
ss
jmp
movsl
or
decl
pop
pop
es
adc
cltd
loopne
dec
mov
out
jne
orl
pushl
addl
xchg
out
loop
jp
push
mov
adc
sbb
ljmp
cmp
cld
xor
sbb
mov
out
cltd
push
fmul
jmp
xor
xor
out
and
clc
jmp
add
cmp
jle
cmp
adcl
faddp
in
shrl
decl
bound
jle
aad
and
ja
adc
mov
lods
test
push
pop
push
xlat
cmpsb
push
push
stos
inc
push
cltd
xchg
xlat
push
icebp
push
lock
std
std
mov
xor
inc
into
pushl
incb
into
lret
bswap
and
mov
pop
gs
repnz
sbb
jge
pushl
popa
push
adc
mov
fwait
xchg
lcall
dec
add
adc
in
xchg
push
jbe
test
rorb
jg
clc
js
enter
jl
faddl
pop
or
mov
les
push
ret
in
inc
stos
xchg
sbb
je
and
into
ljmp
adc
pushf
movsl
ja
or
pushf
decb
inc
call
adc
mov
mov
pop
dec
inc
test
js
jg
jns
stos
mov
cmp
jne
mov
aaa
fwait
cmp
jp
stc
mov
les
cld
push
and
mul
mov
sub
xchg
dec
movsb
dec
test
sub
add
fnstsw
or
or
fistpll
lock
mov
fildl
sbb
xor
ljmp
cmp
cld
jno
adc
mov
adc
inc
aaa
cmp
inc
sub
in
imul
movsb
and
jle
jmp
repnz
push
in
aaa
xchg
pop
cmp
cs
outsl
repnz
repnz
lahf
bound
jle
aad
add
mov
call
test
pop
movsl
mov
mov
jle
loopne
sub
dec
test
cmpsl
into
xchg
into
adc
pop
outsb
fisubr
mov
mov
leave
mov
clc
jmp
push
sub
cld
jecxz
pushf
adc
scas
jb
adc
mov
in
mov
hlt
dec
inc
mov
inc
or
xchg
and
iret
into
fs
jmp
cmp
call
insb
sub
cmp
push
hlt
adc
sbb
ficompl
ljmp
adc
ret
cwtl
jne
stos
sub
mov
jecxz
jmp
mov
add
xor
jg
insb
lods
arpl
mov
dec
mov
aad
clc
test
inc
mov
push
push
mov
pop
pop
stos
jecxz
mov
mov
xchg
cmc
into
cld
sub
xchg
imul
jnp
adc
les
lea
aas
das
sbb
mov
fmul
jge
cltd
in
jg
das
dec
in
jno
pop
push
shr
das
adc
test
fistpll
stc
or
mov
xchg
cs
enter
jg
lret
lahf
jo
sbb
inc
insl
mov
ja
xchg
loopne
pop
dec
dec
jge
insl
xor
jg
fild
loope
lods
jge
sbb
dec
inc
jnp
jo
loopne
aam
pop
insl
ljmp
ljmp
add
fstl
add
xor
push
bound
lcall
cmpsb
test
add
sarl
inc
insl
stc
in
jl
sbb
int3
icebp
jp
and
jl
cmp
jg
fprem
inc
mov
xlat
jge
jns
cltd
pop
movsl
cmc
push
int3
add
cmp
sub
sbb
pop
call
inc
test
mov
jne
mov
addl
cld
ss
insl
pop
stos
insb
mov
inc
sti
sub
insb
das
ss
xor
mov
out
mov
std
pop
leave
aas
aad
jg
call
in
mov
lret
push
movsl
fisubr
add
jae
scas
pop
js
das
enter
rcll
stos
mov
arpl
icebp
lret
bnd
sub
bound
adc
mov
out
mov
jns
arpl
mov
loope
and
shl
lcall
mov
into
mov
arpl
js
insb
or
jmp
fimull
mov
xlat
je
cltd
and
loope
mov
adc
outsl
in
push
sub
into
cvtps2pi
dec
test
jns
xor
sti
decl
add
and
push
cmc
add
into
imul
aas
je
pop
pop
dec
inc
aas
cmp
icebp
xor
dec
ja
into
jb
xor
adc
jecxz
mov
push
rcll
sti
lret
and
push
ret
pushl
mov
push
aaa
loop
xchg
das
inc
sub
or
adc
das
outsl
xchg
lods
scas
das
stc
mov
mov
into
movsb
mov
loope
aam
into
ret
mov
call
ret
jg
and
decl
jns
or
mov
xor
pusha
hlt
pop
mov
outsl
cld
mov
inc
push
and
aam
pop
ret
or
adc
test
lcall
movsl
add
shl
inc
out
repz
mov
scas
lret
xchg
cmp
loop
gs
lret
mov
dec
insl
xchg
mov
ret
js
pop
lret
decl
add
iret
dec
std
and
vmwrite
mov
aas
dec
int3
cmp
mov
and
push
aam
push
lret
insl
out
sub
sub
push
or
dec
add
sub
inc
push
mov
xchg
scas
adc
jb
into
jp
ret
push
adc
scas
aas
jl
sbb
dec
stos
dec
int3
inc
ljmp
mov
dec
mov
jo
sub
sbb
jmp
push
daa
or
sub
xchg
adc
add
test
jecxz
jne
mov
sbb
pushl
and
xchg
xchg
stos
std
out
sbb
test
aas
cmp
and
pop
add
repz
iret
arpl
das
cmpb
call
dec
and
mov
pop
adc
mov
fcomip
dec
outsl
aam
ret
stos
aaa
outsb
out
in
repz
clc
test
sbb
inc
jmp
gs
xor
jmp
pop
push
push
mov
jle
jbe
mov
ret
jns
bnd
mov
xchg
push
into
mov
jb
dec
mov
loopne
ljmp
ret
addr16
movsl
add
add
out
xchg
adc
iret
daa
das
cmc
das
pop
ret
dec
es
pop
jne
mov
add
mov
fcomi
movsl
cmp
cmp
repz
into
fidivr
mov
adc
divb
xor
into
push
mov
outsl
lcall
or
test
jg
rcll
into
and
iret
push
pop
pop
jle
fwait
mov
ds
xchg
test
push
xchg
popf
xchg
stos
mov
pusha
stc
push
sub
fstps
ret
into
fidivr
lcall
cmp
movsl
and
mov
cli
lods
inc
std
push
enter
dec
mov
call
jl
cmp
aad
dec
mov
xlat
jb
pop
mov
sub
movsl
cmp
sub
xor
cs
es
mov
inc
test
or
or
xchg
dec
jne
outsl
mov
inc
mov
fwait
mov
popf
popa
ret
push
pop
mov
and
push
mov
popf
cli
pop
lods
lcall
jp
cmpsb
jne
lahf
std
mov
adc
fsubrs
ljmp
mov
pop
xchg
in
xor
mov
push
sbb
cs
into
or
fisub
sbb
mov
lods
push
pop
scas
addl
mov
add
fidivrl
xchg
arpl
mov
ret
mov
jg
and
std
and
ret
cmpsl
loopne
mov
clc
decl
ret
in
call
insl
aam
push
int3
fisubr
adc
test
xchg
push
xchg
cltd
popa
or
push
data16
dec
scas
xor
loop
aam
mov
js
add
jge
adc
dec
pusha
dec
cmp
adc
cmc
ja
test
jno
jnp
and
xchg
syscall
mov
inc
pop
push
int3
mov
cmp
pushl
jle
sbb
cmp
adc
and
mulb
sbb
sub
dec
stos
and
jne
or
add
jbe
aas
sbb
adc
pop
imul
mov
adc
and
and
add
into
pop
mov
cmp
rorb
jo
ror
test
pop
pop
mov
pop
into
jge
jno
xchg
stos
xor
imul
sub
push
sahf
inc
incl
mov
mov
test
fcompl
jo
clc
mov
mov
ret
ret
icebp
mov
add
ljmp
movsb
mov
ret
ja
mov
ret
rcrb
sub
jg
inc
pop
xor
and
in
jne
in
sub
shlb
aam
push
adc
les
cmp
mov
add
cmp
push
in
push
mov
adc
ljmp
lret
lock
pop
adc
imul
jp
stc
decl
nop
ret
jns
rolb
lret
lret
and
push
clc
jmp
lahf
mov
pushf
pop
in
js
dec
cltd
and
aam
push
leave
jmp
enter
test
int
and
dec
clc
add
cld
jmp
add
rol
movsl
hlt
jne
mov
call
adc
adc
inc
pushf
test
cmc
mov
pop
sti
inc
push
mov
pusha
jmp
out
data16
clc
mov
xorb
xchg
into
pop
sub
add
addb
cmc
pusha
push
mov
lea
dec
addr16
sbb
cmp
mov
xchg
lods
lock
decl
icebp
outsb
push
add
imul
aad
or
ja
lret
arpl
and
shlb
roll
add
mov
mov
dec
mov
ljmp
inc
pop
lcall
jp
sbb
mov
jae
insl
in
xlat
jl
fnstcw
cltd
or
pushl
sub
std
mov
outsb
add
dec
mov
loopne
add
dec
mov
xchg
mov
inc
dec
push
test
adc
sbb
push
pushl
cmp
xor
popa
mov
mov
pop
nop
pop
jo
out
in
jmp
mov
lcall
stos
sar
add
push
push
fiaddl
cmp
pop
imul
sbb
xor
cmpsl
pusha
xchg
je
push
cmp
ret
iret
repnz
dec
sbb
imul
ffree
lret
and
pop
loope
rcll
pop
fnop
ret
push
jo
jl
or
jno
add
and
aam
jmp
mov
ss
test
add
add
dec
je
jmp
adc
aam
xchg
stos
push
in
inc
jno
mov
mov
push
inc
add
or
mov
or
sub
xor
xor
xor
add
xchg
mov
sahf
xor
xor
fdivs
sbb
xor
xor
lret
jge
fistpll
and
xor
xor
decl
imul
push
ss
imul
jge
test
mov
popf
mov
ss
ss
ss
add
aaa
push
aaa
pop
aaa
insb
aaa
jb
clc
jp
xchg
aaa
popf
aaa
mov
aaa
mov
aaa
aaa
fdivl
add
or
sbb
inc
lcall
cmp
cmp
ja
jle
mov
lret
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
xchg
cmp
cmp
cmp
cmp
cmp
cmp
cmp
sbb
aas
cmp
dec
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
and
xor
cmp
pop
cmp
js
jle
test
mov
cmp
mov
mov
push
cmp
cld
cmp
pop
ds
gs
mov
ds
ds
push
xor
add
xor
add
loopne
add
incl
jb
pop
stos
pusha
aam
ja
sti
je
insb
loop
sub
xor
fcmovu
mov
lret
frstor
fisttp
iret
rcl
mov
mov
movsb
rol
inc
lret
flds
sbbb
or
pop
sbb
lahf
or
add
sbb
and
pusha
add
aaa
add
inc
sub
pop
inc
add
in
adc
add
pop
flds
mov
add
and
cmp
add
and
test
das
pop
pop
and
cmp
mov
adc
daa
add
xchg
jno
add
add
add
in
or
enter
or
and
in
incl
and
fild
add
and
inc
flds
add
inc
mov
mov
add
test
test
decl
fisttp
and
out
mov
aaa
das
add
xor
push
jae
jb
lds
imul
xorl
inc
jb
push
and
mov
in
or
push
addr16
xor
push
addr16
incl
inc
xchg
stc
mov
decl
js
xchg
imul
dec
dec
inc
inc
daa
push
incl
xchg
ret
psrad
movsl
push
xchg
fbld
push
bound
lcall
jecxz
stos
fldt
gs
incl
lock
js
ja
fnstcw
pop
out
push
sbb
inc
jnp
jmp
dec
stos
enter
es
clc
sahf
sbb
sub
fbld
and
call
inc
cli
fs
mov
stos
push
sub
mov
or
jg
pop
sti
fisttpl
out
dec
outsb
gs
rclb
sub
lahf
inc
aas
movsb
shl
ljmp
xor
or
lret
mov
xor
cltd
movsl
jb
push
sbb
into
jne
fs
out
decl
adc
sub
xor
pop
pop
push
dec
push
push
pop
decl
adc
dec
inc
dec
inc
pop
inc
inc
inc
push
push
hlt
popa
add
sub
mov
sub
inc
dec
add
inc
push
pop
clc
or
jb
gs
notl
mov
insl
out
add
sbb
jg
push
inc
add
mov
inc
pusha
and
mov
and
sbb
mov
add
divb
xchg
add
xchg
xlat
add
ljmp
cmpsb
push
scas
aad
hlt
iret
movzbl
stc
setg
xchg
lods
mov
daa
mov
cmp
pop
lock
mov
loopne
in
xchg
add
lods
stos
fimul
mov
in
rcl
mov
pushf
not
pop
ror
fstpl
mov
xor
test
add
jno
sub
sub
or
out
clc
cmp
sub
mov
cmc
lea
test
lock
ljmp
lods
repnz
inc
add
and
pop
sbb
mov
cmp
loopne
incl
fsubs
enter
rol
stc
not
inc
push
mov
outsb
sti
pop
mov
out
xchg
fsin
out
inc
aam
std
or
mov
inc
ficom
ret
in
into
lret
in
mov
pop
iret
pop
push
rolb
cs
xlat
mov
mov
and
jns
cmp
add
addr16
fucomi
dec
popa
add
addr16
lahf
daa
inc
cmp
pop
rcl
jae
add
fstpt
add
mov
repz
jmp
jnp
ucomiss
adc
pop
sti
sub
pop
mov
lahf
xor
xchg
adc
outsl
negb
mov
repz
aaa
sbb
imull
wbinvd
aad
in
jg
pop
mov
xchg
ljmp
fidivrl
pop
inc
fidivr
int
sbb
xchg
inc
push
aaa
mull
popa
iret
mov
shrl
fwait
mov
scas
sbb
mov
out
arpl
inc
xchg
testl
movups
flds
arpl
fidiv
xchg
test
fistl
ret
in
pop
ja
jnp
sbb
or
mov
out
add
cmp
cltd
add
std
ljmp
out
mov
pop
mov
add
fcoml
cmp
ret
fwait
jg
sahf
cmp
aad
fsubl
aaa
inc
aaa
scas
nop
pop
xor
sbb
imul
mov
in
inc
add
ror
pop
xor
or
loope
fsts
sarb
jnp
jae
inc
cli
pop
xor
mov
inc
frstor
jnp
xchg
jg
pop
sbb
fdivrl
negb
sarb
mov
outsl
jg
mov
pop
mov
testl
push
or
andl
dec
add
enter
cmc
add
and
or
pop
sbbb
fildl
std
pop
mov
cmpsl
dec
mov
and
aaa
popf
add
jmp
ror
scas
and
aaa
inc
sub
and
push
test
jg
pop
mov
call
insl
push
aas
add
jmp
mov
fbld
ds
pushf
push
into
loop
adc
add
push
push
pop
ja
or
xchg
push
xorw
mov
push
loop
ja
pop
call
push
jge
mov
and
sbb
aad
mov
call
xor
sbb
mov
mov
daa
add
mov
sub
clc
stc
stos
loope
mov
insb
xchg
xor
pop
push
je
or
pusha
mov
cltd
xchg
and
jno
ja
mov
and
or
add
cld
jbe
je
test
xor
push
push
sub
cmp
movups
inc
aad
jmp
icebp
out
call
or
scas
adcb
sbb
outsb
ret
shrl
loope
dec
inc
lret
sub
incl
dec
push
mov
loop
adc
add
jmp
testb
lahf
adc
arpl
pop
inc
in
in
out
movsl
mov
mov
scas
fisttp
jge
hlt
xor
push
inc
stc
add
in
adc
or
jno
xchg
adc
or
ljmp
push
pop
pop
jmp
push
ljmp
add
outsb
pop
and
adc
jns
popf
pop
fnclex
xchg
idiv
push
in
inc
and
inc
sbb
enter
lahf
out
inc
das
xchg
mov
or
decl
inc
jo
lods
cmc
jno
out
xlat
or
pushf
ds
std
lds
xor
insl
sub
pushl
cli
stc
call
repnz
mov
or
jl
mov
movsb
dec
or
ljmp
mov
mov
xchg
mov
ret
add
xchg
jg
adc
mov
dec
mov
and
add
ljmp
mov
mov
test
xor
aad
mov
jo
push
mov
sub
es
adc
cmp
shrd
call
jle
add
xchg
xor
data16
inc
repz
fwait
dec
cmpsb
stos
pusha
pushf
cmp
adc
or
pusha
push
push
inc
inc
push
orl
out
dec
mov
push
push
pushf
outsl
and
jmp
in
push
xor
and
lcall
cltd
push
scas
fbstp
pushf
sti
rorb
mov
mov
jmp
lcall
jmp
jmp
inc
add
enter
outsb
inc
aam
xor
push
ror
mov
cmpsl
mov
mov
test
mov
aam
icebp
jne
neg
pop
pop
stos
call
je
test
dec
push
mov
push
adc
call
jg
sbb
cli
or
lret
mov
xchg
mov
incl
out
jno
dec
rol
data16
repnz
cs
fcoms
rol
add
decl
in
or
xchg
push
inc
arpl
jbe
jnp
loopne
sub
notb
ja
jne
sbb
rcll
fbstp
rorb
stc
mov
jp
out
jp
shrb
xchg
sub
mov
jmp
lock
test
lea
inc
sti
add
or
pop
xor
and
dec
pop
push
pop
popf
out
fnop
adc
ja
mov
test
in
pusha
testl
pushf
adc
test
ret
aaa
adc
shr
popf
or
call
jmp
add
sub
push
add
mov
outsl
jo
addr16
jmp
cltd
rcrb
cmpsb
xchg
sbb
add
add
or
and
cmp
push
es
inc
mov
std
xchg
call
call
mov
fildl
cmc
shl
push
adc
in
dec
leave
push
inc
rol
out
xchg
xor
pop
dec
push
xchg
xor
movsb
rcr
pop
call
and
cmp
jmp
pop
sub
ret
sar
push
fbstp
ret
inc
rcr
mov
test
inc
jecxz
cmp
xchg
push
pop
push
or
xchg
mov
jne
addb
push
call
push
je
popf
pusha
push
test
sti
mov
pop
mov
dec
call
mov
dec
mov
fcmovb
icebp
pop
add
ret
pop
inc
dec
jge
mov
mov
sbb
into
mov
daa
orl
xchg
loope
not
lret
jnp
sarl
add
pop
pminsw
sub
sbb
adc
pusha
pushf
inc
cmp
outsb
pusha
lahf
test
cmpsb
call
mov
mov
sets
sub
cmp
push
sbb
cmp
xchg
fisubr
sbb
ljmp
sub
inc
push
mov
xchg
sub
call
dec
inc
mov
pop
ds
sti
inc
add
cmc
cmp
jmp
scas
jmp
and
mov
dec
mov
cli
xlat
std
aaa
call
mov
and
int
mov
add
in
cmp
ret
sub
push
add
jbe
aam
pushf
cmp
pushf
mov
cmpsb
add
movsl
sti
add
insl
adc
in
in
call
sbb
into
lret
mov
incb
lods
ljmp
xchg
mov
std
xor
pop
cmp
xchg
loope
pop
ljmp
mov
mov
dec
and
mov
bswap
pusha
in
sbb
fistpl
test
add
pushf
scas
cld
sub
hlt
cwtl
push
cwtl
mov
call
pop
push
push
sub
xchg
int
add
int
pusha
aad
add
inc
add
jmp
test
in
adc
jmp
fildl
mov
insb
add
loopne
jb
stos
js
rol
leave
push
call
pop
ja
hlt
stc
xchg
pop
lods
push
pushf
dec
pushl
test
ret
pushf
add
idiv
jno
or
loope
lock
cli
jo
mov
jecxz
aaa
add
hlt
or
sub
clc
pusha
and
pop
adc
aad
sub
and
imul
loop
mov
xor
ds
out
ret
sub
cmc
xchg
push
sbb
mov
adc
shr
call
loope
mov
add
jnp
add
mov
inc
test
and
sub
pusha
inc
push
jge
pop
pop
and
aam
sti
sahf
sub
call
repnz
add
fs
dec
mov
jb
cmp
js
sub
movsl
sub
mov
sub
cmp
mov
add
imul
add
add
xor
inc
into
call
xchg
daa
or
cmpsl
and
mov
cld
mov
loopne
or
sar
rorl
mov
fild
mov
xchg
and
cmpl
add
iret
push
pop
pop
loopne
and
jge
sub
inc
mulb
call
cmpsb
mov
outsl
in
iret
push
add
cld
cld
mov
jmp
call
push
xlat
sbb
adc
call
mov
mov
pop
call
ret
push
push
xor
mov
push
adc
loop
into
inc
push
outsb
ja
adc
push
inc
dec
jmp
roll
pop
mov
cld
pop
mov
stc
cmpsl
inc
inc
jo
pop
and
xchg
xor
adc
add
rcl
mov
test
push
inc
cmc
clc
or
mov
fildl
fnstcw
xchg
add
cltd
incl
lods
call
insb
xor
lods
movswl
push
pop
pop
mov
jg
xor
call
mov
sbb
mov
xor
cld
addb
mov
push
push
jae
adc
pop
pusha
out
incl
xchg
outsb
push
rorl
outsl
mov
push
lds
mov
mov
clc
mov
pushf
push
enter
in
ljmp
aas
add
cmpsb
cmp
mov
xchg
mov
add
shl
jmp
aaa
lcall
loope
xchg
jmp
dec
cmp
mov
call
and
cs
xor
shr
mov
aaa
jo
sti
mov
or
or
xor
loop
mov
rol
mov
sarb
aad
pop
stc
jbe
mov
rclb
sbb
jns
out
or
push
and
add
fcoms
jl
inc
cwtl
rcrb
insb
sub
push
or
fimul
mov
dec
insb
mov
cmp
imul
movsb
mov
pushf
jmp
cmp
les
movl
and
stc
outsb
sbb
sbb
xor
sub
pop
pop
nop
pop
xor
push
loopne
xor
push
cmp
or
dec
add
cld
or
jp
test
cmp
ss
mov
imul
push
dec
cmc
addl
mov
push
pop
fwait
inc
push
add
rclb
loopne
rcll
adc
pop
sbb
ss
es
cmc
test
pushf
add
gs
gs
in
jp
mov
test
jge
test
pop
cwtl
pop
call
adc
and
cmp
aas
in
pushf
sub
cmc
mov
cmc
push
sarl
xchg
lahf
cmpsb
psrld
adc
in
sub
lret
repz
adc
push
jmp
lret
insb
mov
ret
sbb
aas
jmp
dec
pop
or
iret
adc
cmc
test
test
xchg
add
in
test
cmp
inc
incl
in
mov
cmp
sbb
fadds
mov
shr
pop
adc
and
jb
adc
jo
and
loopne
sbb
mov
cmp
xor
jo
push
pop
in
xor
cmp
aaa
cmp
mov
push
cmp
add
ja
out
ljmp
jmp
aaa
or
nop
xchg
push
cmp
fwait
mov
stos
pop
push
cmp
xor
pop
push
out
cmp
mov
arpl
jecxz
mov
add
or
inc
inc
bound
jbe
mov
test
jecxz
jmp
xchg
sti
mov
inc
mov
jle
arpl
rclb
fidivrl
fisttp
cmpl
mov
pop
lea
repnz
pop
scas
push
lods
or
xor
addr16
add
jbe
adc
inc
mov
imul
sub
jmp
push
pusha
add
push
sub
adc
int
mov
pop
xchg
movzwl
aam
pop
mov
ret
es
mov
xchg
leave
out
shl
jne
cmc
add
mov
fwait
adc
enter
hlt
adc
add
adc
mov
adc
lahf
mov
rorb
out
es
pop
cwtl
cwtl
pop
setge
push
mov
sub
sbbl
push
add
fisttp
inc
xchg
sub
xchg
pushf
xor
fs
scas
sub
lcall
push
lea
popf
pop
sbb
ja
call
mov
jmp
fistl
or
shrb
jmp
mov
sbb
push
xchg
dec
pop
sbb
or
sbb
lods
movsl
dec
sarb
adc
frstor
testb
repnz
sbbl
pop
mov
loopnew
push
push
pop
push
fidiv
pop
sar
dec
inc
xor
sub
jg
mov
pushf
adc
push
inc
xchg
sub
mov
pop
push
clc
push
clc
popa
loop
and
sub
xchg
arpl
adc
xchg
in
jne
push
add
or
xor
add
in
out
inc
jge
jmp
jp
into
stos
pusha
jmp
push
mov
mov
scas
mov
call
mov
xor
xlat
mov
add
add
mov
insl
inc
and
and
insl
les
dec
in
add
loope
lods
push
mov
loopne
and
aas
pushf
das
imul
loop
into
mov
test
inc
daa
lock
arpl
sub
stc
inc
push
push
jmp
loopne
dec
cmp
movsl
and
sub
jp
mov
mov
jae
lods
gs
pop
mov
rcl
jecxz
pushf
cmp
movsl
mov
xchg
sub
xchg
mov
mov
arpl
inc
test
pusha
cmc
and
adc
mov
jle
out
pop
add
xor
add
xor
and
jae
mov
icebp
dec
frstor
shll
fnstenv
faddp
test
insl
leave
lea
mov
or
sbb
add
or
call
nop
push
loop
les
inc
cmpsb
sahf
mov
mov
jmp
mov
cmp
jecxz
xor
aad
add
test
ffree
add
repnz
cmp
jo
loopne
add
sub
cmp
cwtl
nop
adc
inc
or
push
inc
jbe
out
mov
adc
lods
ss
xor
rcl
inc
xchg
lret
cmc
jae
ja
or
mov
leave
pushf
push
mov
loope
and
testl
rcrb
mov
xchg
or
pop
faddl
inc
mov
push
and
sbb
fwait
pop
shrl
je
fimull
adc
push
inc
mov
inc
rcrb
mov
xor
xor
daa
adc
cmovae
in
and
lret
sub
stos
pop
movsb
inc
mov
aad
push
sub
bound
mov
pop
dec
sti
icebp
ror
pop
jp
push
loope
mov
cld
icebp
int
fsts
sub
cmpsb
jle
push
test
fildll
shr
cmp
and
pop
out
inc
cmc
call
push
xor
cmp
xor
mov
push
jne
ret
out
mov
push
aam
add
and
sbb
aad
xadd
xchg
cmp
cmc
push
mov
push
jmp
loope
push
mov
imul
push
sub
ss
xor
xchg
sbbl
or
xchg
xor
cmp
pushf
repnz
and
mov
mov
test
pop
mov
icebp
scas
sub
adc
call
ret
sub
adc
push
adc
push
pusha
adc
stc
outsb
rorb
les
daa
lods
cmp
cmp
pop
popa
outsl
repz
das
loopne
sbb
xor
call
fsubr
sub
bound
loop
jl
pop
sbb
lret
dec
ss
sbb
push
jmp
arpl
jge
call
and
push
add
leave
mov
sub
test
lock
pop
fsubrp
mov
std
fucomp
jmp
cmp
lods
outsb
mov
mov
push
ljmp
jns
push
insl
shlb
pushf
inc
xchg
sbb
ret
mov
je
pop
rorl
mov
inc
xchg
jle
pushf
and
lds
add
sub
outsl
dec
pop
lds
fisttpll
sbb
enter
std
std
icebp
mov
xlat
pusha
push
mov
dec
or
repnz
mov
sbb
xor
loop
jmp
popf
add
lock
ret
pop
fcomps
pop
xchg
ja
sub
ffree
int
jmp
daa
insl
add
xor
jecxz
incl
jne
scas
lods
mov
dec
rcll
mov
xchg
lahf
or
sahf
mov
fs
mov
push
in
mov
lcall
incl
iret
sub
jp
add
rorl
lods
in
add
loop
stos
adc
dec
js
cld
lcall
hlt
xor
cld
jmp
popa
nop
lock
loopne
lock
or
mov
fsubl
cmp
cltd
out
es
divb
bound
sub
xchg
push
push
mov
mov
cltd
sbb
call
rcll
adc
sub
lret
pop
or
jl
lods
test
push
pop
mov
subb
rorl
ret
shrb
mov
lcall
pop
clc
std
nop
add
mov
clc
sub
xor
jmp
or
les
jmp
mov
xchg
cmp
repnz
fidiv
xchg
ret
inc
call
dec
dec
cmp
jmp
pusha
mov
ljmp
mov
call
inc
sub
mov
sub
mov
mov
adc
pop
jae
push
dec
test
mov
inc
movsb
js
jmp
daa
cmc
js
adc
sbb
sar
movsb
fcomps
jmp
stos
mov
mov
adc
lea
aam
pop
mov
aaa
mov
xor
inc
mov
pop
add
and
popa
adc
and
mov
andnps
fcmovu
jmp
mov
push
mov
jmp
and
ds
push
push
data16
lret
sbb
mov
fsubs
adcl
sub
push
pop
pusha
adc
sbb
push
jmp
add
mov
icebp
pop
incb
mov
xchg
xchg
xchg
ret
dec
outsl
mov
mov
into
push
test
jne
popa
lahf
push
push
mov
sahf
mov
or
std
and
lea
and
sub
ret
and
popf
pushf
rolb
movsl
rcrb
add
pop
mov
adc
jle
push
push
sbb
int3
iret
out
cmp
int3
pop
movsl
jmp
or
out
sbb
adc
loope
cmp
push
add
or
fisttpll
cmp
jb
popl
cs
test
cmc
gs
lods
pop
fisttpll
add
mov
and
mov
mov
subl
adc
cmc
test
pop
addl
stos
xor
xchg
cmp
cld
pop
mov
leave
mov
or
icebp
jmp
jo
push
lock
fxch
add
push
add
adc
and
mov
push
jmp
push
add
call
mov
mov
mov
sbb
add
jle
pop
cmp
xor
xor
stc
addr16
scas
test
xchg
pop
jbe
rclb
jmpw
and
push
or
jg
push
xchg
mov
test
lock
mov
push
pop
pop
hlt
mov
add
stc
inc
cwtl
lds
cmp
stc
adc
and
fisttpll
xor
push
jle
decl
dec
mov
scas
mov
cmpsl
sub
ret
incl
cmp
inc
pop
xor
or
jb
and
hlt
scas
sti
decl
aas
xchg
jnp
xchg
repnz
sub
dec
stos
scas
fs
mov
adc
push
pop
mov
ljmp
or
sbb
and
mov
or
add
lods
movsl
ds
popf
sbb
int
xchg
rorl
mov
ljmp
jne
ljmp
mov
push
push
cwtl
mov
fcoml
push
sbb
cmp
jg
int
add
cmp
outsl
gs
lds
xchg
icebp
pop
or
test
fstl
jo
test
jmp
sbb
out
sbb
add
jl
rorb
je
sub
test
shll
outsl
jp
and
mov
inc
jp
xlat
adc
das
cld
jmp
mov
and
arpl
cltd
mov
popa
push
jmp
xchg
mov
fisttpll
test
cmp
push
xor
call
ljmp
leave
jle
add
sub
aaa
mov
sbb
mov
or
mov
ss
ja,pt
cmp
push
jno
call
xchg
sub
mov
stos
mov
paddusb
mov
push
fwait
add
add
aaa
insb
call
ja
jno
push
jbe
jno
or
adc
push
call
jnp,pt
sub
pop
dec
outsb
or
ss
cmpsb
sti
ss
ljmp
push
pop
sub
sbb
push
ret
adc
mov
nop
or
add
jno
pop
and
jp
orb
add
arpl
ljmp
sbb
add
ror
in
icebp
std
add
add
push
cmc
test
xor
cmp
mov
bound
into
imul
shll
hlt
xchg
movsb
call
add
incl
mov
imul
jmp
push
call
aas
adc
insl
push
pop
adcl
add
aad
call
xchg
add
sub
or
int3
movsl
jne
mov
sbb
ret
aad
adc
mov
push
xor
or
add
daa
or
mov
pop
cld
add
pop
cmp
cmpsb
inc
incb
add
popf
or
jge
pop
sub
mov
cld
ljmp
jmp
fild
jge
push
add
inc
jecxz
hlt
add
xchg
or
daa
lods
add
mov
and
les
sub
cmp
push
fldcw
mov
push
mov
sub
insl
movsb
dec
cld
fsts
call
xor
test
test
sbb
subl
or
cmp
mov
mov
aam
in
loopne
add
xchg
sti
call
jo
adc
push
test
inc
sub
add
mov
iret
ds
jmp
and
insl
test
cmp
cmpsb
xor
ja
mov
jmp
cld
sub
xchg
clc
cmp
fcompl
mov
clc
lods
jbe
iret
inc
call
aaa
add
cmp
call
push
cmpsb
xor
outsb
fs
pusha
and
sbb
pusha
adc
pop
mov
call
ljmp
test
int
push
lret
push
mov
rorb
xor
stos
add
and
sub
jle
lock
and
xor
push
aam
lock
cmp
push
pop
push
std
setno
mov
out
cmp
jg
iret
jl
sub
mov
push
outsb
xor
fwait
inc
imul
roll
lret
and
push
mov
or
popf
sahf
add
push
pusha
push
fadd
add
adc
bound
cmp
outsl
fdivs
mov
in
and
xor
cmp
cmc
call
xchg
add
adc
mov
pop
mov
xor
fwait
pop
lcall
sbb
outsl
xor
push
lahf
sbb
mov
lods
stos
call
inc
call
mov
mov
add
add
dec
inc
fcmovnb
cmp
call
sbb
jg
inc
movsb
loope
cmp
aad
shrb
or
loopne
fwait
js
xchg
cmp
imul
lods
sahf
stc
popa
jbe
push
xor
inc
xor
ret
xor
push
mov
pusha
gs
adc
push
push
and
fsubl
mov
movsb
pushf
rorl
xor
loope
les
jmp
adc
add
ret
bound
adc
inc
cmc
push
lcall
loopne
sub
fldcw
xchg
push
inc
loope
cmp
dec
mov
pushl
test
js
scas
call
or
daa
push
push
je
dec
std
mov
call
or
push
stc
rcl
jecxz
pusha
mov
xor
adc
enter
es
insl
mov
mov
inc
imul
jmp
sbb
inc
xor
xor
xchg
jnp
adc
call
cpuid
push
cmpsb
sbb
xor
test
add
mul
sub
mov
mov
rcrb
push
mov
pop
sub
add
xchg
movsb
mov
dec
push
sbb
inc
mov
stc
fsubr
cmp
sub
push
and
inc
add
hlt
lret
mov
xor
ja
sub
out
fimul
sbb
inc
adc
lods
pop
cmp
mov
or
mov
not
mov
fldt
push
es
mov
inc
mov
and
adc
fcomps
mov
ljmp
pop
push
jbe
xor
mov
push
nop
jno
adc
add
adc
xor
xor
cmp
clc
add
push
dec
push
push
popa
or
les
jmp
inc
not
xor
sti
pushf
sub
and
incl
mov
pop
and
and
inc
imul
clc
adc
ja
pop
xchg
rorb
push
call
mov
xor
push
jmp
je
and
loopne
mov
adc
mov
sub
fsubr
lret
test
clc
mov
sbb
cmp
xchg
mov
and
call
or
lock
jp
cmp
adc
jmp
jnp
icebp
inc
xlat
orb
and
dec
push
or
pop
out
xor
call
jmp
adc
das
call
add
popa
frstor
push
jno
dec
jmp
jp
ret
in
jecxz
call
pushf
jo,pt
in
pop
orps
add
out
push
xor
cmp
mov
pushf
or
or
ret
dec
test
cwtl
out
fidivr
sbb
xor
push
mov
pop
pop
movsb
int3
add
mov
pusha
jmp
xor
inc
sahf
mov
stos
and
sysexit
cmp
jmp
inc
push
stos
test
frstor
sub
jle
mov
push
cmp
iret
imul
inc
jo
sbb
xchg
dec
ss
ss
int
jns
jbe
ficomp
cwtl
pusha
lahf
call
jne
dec
xchg
test
push
pusha
jge
jb
inc
pop
lcall
inc
ja
jno
imulb
movsb
mov
les
ljmp
pusha
lods
jmp
adc
outsb
adc
int3
jmp
lahf
daa
lea
rorb
test
dec
shlb
pop
jno
pop
call
mov
push
sahf
dec
and
adc
add
mov
stc
mov
adc
cmp
clc
stos
mov
jmp
nop
loopne
std
push
inc
xor
pop
test
or
push
sub
jg
cmp
outsb
sub
aaa
add
repz
jmp
adc
aas
add
push
adc
sarb
aad
xchg
jle
adc
xor
dec
jnp
push
mov
notl
fs
lock
mov
lahf
jl
lcall
pushf
jmp
aam
out
mov
adc
cs
or
cli
push
push
lock
cmp
mov
or
or
ss
call
dec
push
stc
jae
mov
mov
add
dec
inc
push
arpl
daa
cmp
cmc
movsb
push
in
xor
adc
cmp
data16
sbb
fistl
in
idiv
inc
call
test
lea
cmp
icebp
lods
les
in
in
jmp
or
loopne
mov
pushf
rcll
jbe
mov
rorb
test
push
push
mov
popa
cmc
pusha
mov
dec
lock
aam
sub
and
push
mov
cld
dec
icebp
cld
xchg
push
jg
add
adc
dec
dec
jae
faddl
loopne
jmp
das
fwait
jmp
pop
push
push
and
xchg
mov
inc
leave
cmp
dec
pop
or
or
and
cmc
cmc
mov
cmp
adc
ret
cmc
std
sub
icebp
dec
xchg
dec
cmp
mov
lcall
xor
add
out
outsl
mov
out
clc
push
cwtl
mov
js
dec
test
push
sub
sbb
pop
or
inc
sgdtl
inc
lods
push
hlt
pop
in
daa
sbb
adc
add
mov
mov
nop
push
scas
pop
xchg
aas
rcl
or
xchg
jbe
adc
out
test
outsl
mov
adc
mov
inc
cmpsb
cli
repz
jnp
pop
pop
int3
pushf
push
les
inc
notb
mov
jmp
lock
jmp
jle
fsubrp
jmp
push
mov
test
jge
outsl
pushf
or
pop
add
mov
imul
xor
cmp
pusha
fimul
pop
or
xchg
inc
push
pushf
sbb
mov
and
push
inc
cmp
cltd
or
and
xlat
pop
inc
jns
cld
xchg
lock
push
mov
mov
loop
lds
setl
inc
sbb
or
lea
inc
xchg
mov
and
pop
pop
outsb
jae
cld
sti
fwait
or
outsl
jge
jmp
stos
lods
fnstenv
cmp
sub
test
lock
fsubrl
in
mov
loopne
out
incl
push
push
jmp
sahf
or
sbb
pusha
push
xchg
loopne
push
pop
dec
cmp
lea
mov
fiadd
fs
add
gs
nop
addr16
lahf
stos
pslld
imul
les
aas
jb
ficompl
mov
push
push
inc
mov
sti
cmp
bound
mov
fdivrs
fsubp
jge
mov
jg
pop
imul
test
mov
or
div
dec
jmp
test
insb
clc
rcll
jmp
pushf
push
push
xchg
in
pop
inc
bound
xchg
adcl
inc
pop
psrlq
and
cmp
flds
adc
aad
loope
xor
mov
enter
stc
cmp
mov
jmp
dec
push
or
call
shl
mov
clc
cmpl
pop
int
ficompl
xchg
mov
les
stc
sbbl
imul
outsl
jne
in
push
pop
push
aaa
push
jo
outsb
sahf
sbb
mov
push
mov
movsb
add
clc
xchg
cmpsb
add
jl
pop
mov
mov
jbe
in
push
jmp
in
mov
and
inc
adc
mov
test
mulb
push
xchg
pop
or
ds
cmpsl
aaa
sub
push
and
fmuls
dec
popa
or
aam
dec
add
lock
push
lcall
xor
sbb
aaa
push
loopne
pop
loopne
push
pop
mov
jb
ror
cltd
sti
insb
pop
or
fwait
pop
add
xor
rcrb
stos
pusha
lods
and
testb
inc
pop
imul
mov
inc
leave
pusha
je
xchg
cmc
sbb
or
add
pop
jmp
ret
xor
cli
arpl
imul
scas
lds
adc
lds
mov
xchg
sbb
outsl
jb
fwait
ss
movsb
jmp
dec
pop
pushf
dec
imul
jmp
push
loop
mov
push
sub
mov
lahf
dec
adc
js
jge
pop
mov
inc
out
mov
adc
cmp
lea
xor
std
push
js
sbb
add
add
pmullw
repz
push
jmp
sbb
aad
push
aaa
aad
mov
or
jle
and
lcall
out
sbb
mov
mov
add
test
jl
roll
int
mull
sbb
test
les
mov
jmp
mov
ss
push
mov
mov
inc
loope
aam
jg
push
xchg
inc
ret
cs
pop
rcll
lock
mov
sub
jecxz
sbb
scas
sub
imul
cmp
cmp
mov
icebp
pop
aaa
or
imul
out
inc
loopw
cwtl
pop
lock
jg
sbb
pop
hlt
call
daa
jl
pushf
js
iret
pop
mov
ljmp
mov
daa
cmp
ret
nop
rolb
popf
loopne
rclb
or
add
inc
in
and
push
outsl
pusha
xlat
sub
loopne
scas
adc
mov
test
roll
pop
xchg
sbb
pusha
push
dec
ret
push
adc
adc
cmp
cmp
call
mov
sbb
shl
jb
outsb
adc
mov
in
lods
xor
jmp
mov
pop
or
sub
mov
sbb
push
cli
jecxz
or
mov
cmp
pop
bts
xchg
pop
ja
push
pushf
push
jmp
pop
sub
int
shr
popa
test
xchg
loope
aad
insb
pop
push
ljmp
leave
out
lods
movswl
dec
adcl
fdivs
inc
clc
daa
dec
jmp
sbb
add
mov
pop
pop
dec
jge
stc
or
push
jge
scas
mov
pop
leave
pop
call
cwtl
shlb
pop
test
add
push
popf
and
jmp
jge
xchg
cli
insb
inc
mov
inc
jle
imul
insl
xchg
xchg
jb
int3
sub
paddw
mov
fs
call
push
dec
stc
add
jmp
ret
jmp
pextrw
mov
cmpsb
cmp
pop
pop
iret
aam
divb
push
push
mov
insb
add
ja
and
in
clc
lods
outsb
cs
pop
das
cwtl
aad
adc
xchg
stos
sub
push
jg
std
aas
jmp
xchg
or
or
lea
lea
pop
push
pop
dec
mov
inc
mov
mov
rdpmc
adc
pushf
nop
jmp
cmp
repnz
pop
inc
fucomp
or
cs
pop
rcll
ljmp
jbe
sbb
repz
call
sbb
add
daa
inc
xor
lods
and
adc
cmp
out
mov
mov
dec
das
pop
dec
sbb
popf
pushf
xchg
outsb
in
outsl
dec
mov
add
mov
and
in
or
or
call
fs
inc
xchg
jne
in
outsl
cwtl
jecxz
rorl
mov
push
pushl
ficomp
ds
mov
mov
jmp
lea
das
push
aad
add
jp
call
jae
jl
imul
pusha
or
sahf
xor
mov
rcr
aam
aaa
xor
mov
jecxz
fwait
pusha
add
dec
or
or
shr
cld
adc
cmp
push
mov
xor
sbb
dec
cwtl
cli
dec
nop
jo
adc
xchg
outsb
xchg
pop
shll
pop
fldl2t
lret
and
sub
data16
leave
pop
mov
sub
sub
push
enter
sbb
hlt
pop
inc
inc
sub
in
inc
mov
pop
aaa
mov
push
fdivl
fnstsw
xchg
push
mov
inc
cmp
or
pusha
lods
rcr
mov
inc
xor
cld
xor
adc
dec
cs
je
sti
lcall
in
xchg
int3
jno
mov
call
adc
push
add
in
jno,pn
adc
pop
mov
pusha
mov
pop
mov
or
lret
push
pop
inc
inc
in
and
ret
mov
mov
dec
and
mov
pop
mov
or
rcl
push
icebp
and
arpl
aaa
loopne
in
cwtl
or
xchg
sbb
sub
adc
call
in
inc
shr
sub
adc
jle
shll
call
or
ret
outsb
test
insb
loopne
movsl
mov
jae
fsubr
push
xor
push
clc
call
mov
dec
sbb
jmp
sahf
out
adc
push
or
sub
insl
fdivrs
xor
insb
repz
cmp
xor
pusha
mov
imull
pop
mov
lret
fsubrp
or
outsl
jno
lds
cld
mov
call
mov
jmp
lea
xchg
clc
mov
mov
lods
clc
sbb
pop
push
or
mov
icebp
add
or
cmc
push
scas
xor
imul
aaa
pusha
aaa
in
movsl
or
clc
dec
mulb
sub
aas
fcmovnbe
clc
aad
mov
js
dec
fsubr
mov
call
jo
testl
sub
adc
mov
rolb
stos
js
push
push
clc
pusha
sub
cs
dec
fnsave
adc
les
lods
or
test
push
mov
es
roll
cli
jmp
pop
xchg
ljmp
push
enter
push
int3
adc
push
sub
and
rcll
jmp
pop
pop
pop
push
adc
cld
fcmovb
xor
jnp
das
fnstsw
sbb
push
cmp
inc
sub
sahf
jb
push
int
repz
or
xor
mov
xor
cmp
mov
mov
ret
sbb
jmp
lret
jns
mov
or
out
mov
xchg
mov
sub
sub
push
decb
xor
jmp
push
add
mov
int
inc
sub
xor
repz
push
movsl
cs
add
out
adc
adc
jnp
jg
and
add
and
pop
pop
inc
xchg
cwtl
shll
cwtl
sub
pop
movsb
rol
and
insb
sub
push
lret
in
or
mov
sub
call
gs
sbb
jb
adc
or
xchg
mov
data16
pushl
pop
mov
sub
jbe
gs
jle
mov
div
jmp
cmc
aam
adc
ffreep
outsb
rorl
jmp
repz
cmp
loop
in
inc
dec
dec
mov
jecxz
dec
xchg
push
ljmp
scas
insb
xchg
sahf
cmpsl
scas
cld
lods
enter
ljmp
ss
jae
push
dec
lret
mov
xor
jbe
push
jae
cli
mov
sbb
mov
sub
mov
ljmp
dec
mov
inc
jecxz
mov
cmp
lds
inc
push
lret
imul
mov
pop
add
dec
cld
push
insb
test
add
and
dec
and
in
push
pusha
shlb
inc
lock
add
add
jmp
cmp
sbb
xchg
roll
mov
jmp
cli
imul
cmc
loop
scas
cmp
movsb
decb
pop
or
or
sbb
es
rep
gs
in
movsb
gs
ljmp
lods
pop
jp
sub
xchg
mov
inc
sbb
push
mov
movzbl
enter
gs
mov
xchg
push
pop
jmp
les
inc
lret
test
xor
test
or
sub
neg
gs
jmp
or
bound
loopne
je
pusha
push
dec
les
cmp
roll
pusha
mov
sbb
add
adc
inc
scas
insl
and
movsb
xchg
dec
mov
and
push
sbb
sahf
add
test
mov
movsl
xor
push
repz
mov
fisttpll
inc
outsb
mov
xchg
mov
xchg
or
add
inc
mov
or
xchg
jmp
or
call
aas
mov
mov
ret
or
mov
xor
cmp
ret
xchg
mov
fcmovnu
xchg
push
test
movsl
roll
xbegin
loope
push
ss
adc
jns
mov
jne
inc
or
insl
scas
cmp
and
ljmp
xchg
test
or
cmp
jg
es
inc
adc
push
jl
sbb
push
lods
je
push
call
pop
jl
xchg
addr16
repnz
jmp
jbe
call
mov
pop
mov
pop
lret
int
pushl
mov
loopne
arpl
xchg
jecxz
dec
sbb
pextrw
jbe
imul
lcall
ret
insb
xor
mov
xchg
loopne
ljmp
pusha
aam
inc
sbb
ljmp
std
pushl
add
leave
ljmp
lods
out
cmp
xor
mov
fdivrl
jg
ficom
js
fistl
lods
mov
adc
push
into
rorl
loop
clc
pop
pushf
scas
sbb
hlt
mov
mov
adc
ret
pop
jle
pop
add
rclb
push
pop
dec
lods
inc
jne
inc
or
mov
xor
outsl
and
in
mov
psubb
daa
stos
pop
leave
or
enter
sub
push
insb
rcrb
sbb
jo
mov
xchg
inc
mov
fdivs
fwait
test
jns
mov
push
or
into
cmc
lds
sahf
xor
gs
mov
cwtl
data16
cmp
sti
mov
or
je
and
je
lock
movsl
les
pop
pushf
rorl
clc
mov
movsl
dec
popf
sbb
movsl
cmp
jne
and
mov
leave
push
mov
inc
scas
jno
mov
or
push
ja
lea
out
call
insl
je
fsubs
mov
mov
call
notl
add
cld
cmp
outsl
pusha
fisttpl
pop
jecxz
hlt
lahf
pop
rcl
sub
pop
pushf
push
int
adc
ja
loopne
and
push
jl
bound
test
call
cmp
jmp
push
negl
jo
loop
push
add
rcll
fldl
adc
adc
hlt
test
cmp
aam
int3
jbe
cs
hlt
call
add
push
mov
fsubrs
clc
repnz
or
jbe
mov
repnz
sbb
rcrl
adc
pushf
pushf
sub
lret
cwtl
les
addl
mov
roll
xchg
jo
nop
in
pop
mov
int
pop
stc
add
jbe
inc
clc
push
sbb
push
jmp
into
ss
ficompl
mov
inc
mov
xor
pop
push
mov
inc
pushf
inc
call
add
mov
psrlw
loopne
mov
adc
jmp
cmpsb
inc
cs
outsb
insb
and
in
mov
int3
and
push
lock
leave
clc
jne
adc
adc
loope
pop
out
cld
sbb
enter
pop
ret
outsb
mov
pop
movsl
cld
mov
xlat
std
hlt
push
mov
xor
mulb
mov
and
pop
aad
add
aas
call
push
ds
mov
pusha
push
call
lcall
or
jmp
cmp
pop
inc
loopne
inc
fcomip
imul
xchg
call
movsl
adc
xchg
lds
dec
xchg
bound
or
adc
fimull
sahf
call
pop
lret
fsubl
cmc
add
and
push
inc
in
fadds
and
push
adc
call
clc
cmc
push
push
push
push
mov
dec
sub
dec
cmp
scas
push
les
add
or
mov
sub
xor
lods
add
mov
fimul
icebp
fnsave
adc
sub
sub
call
mov
push
mov
outsb
jp
orb
push
sub
clc
and
dec
comiss
pop
shll
pop
cmp
call
popa
or
mov
jecxz
imul
scas
sbb
setge
inc
dec
mov
movsb
loopne
push
or
call
pop
add
mov
clc
and
arpl
repnz
das
cmp
hlt
bts
cwtl
cmc
mov
add
inc
sbb
pop
or
pop
lods
lock
adc
and
adc
mov
xor
dec
in
mov
add
cs
lcall
cmp
outsl
std
mov
add
rol
mov
add
and
xor
pop
arpl
test
fbld
in
repnz
push
outsl
mov
sbb
jg
das
hlt
daa
pop
adc
pop
stos
adc
jno
fwait
xor
call
outsl
pop
adc
adc
cmp
imul
or
jb
pop
pusha
popf
cltd
enter
pop
repz
fs
test
popl
popf
orl
add
pop
jo
mov
lods
cmp
shrb
sbb
and
sbb
or
js
outsl
inc
mov
push
sub
adc
push
xor
inc
pop
fs
sbb
daa
shrb
sub
jb
mov
sarl
mov
xchg
lea
jne
andl
xchg
popf
scas
hlt
jo
out
sub
cmc
clc
loopne
adc
std
jmp
inc
or
loope
mov
jbe
push
inc
inc
jg
roll
xor
or
lahf
mov
add
ret
nop
lds
jmp
mov
cmc
add
inc
sbb
inc
mov
ds
add
add
addl
aad
xchg
push
test
ja
sahf
pop
adc
js
push
lods
cmp
ret
cmp
mov
mov
mov
int3
xchg
inc
pop
pop
aaa
dec
ja
div
dec
fwait
mov
pop
rolb
xchg
push
das
fwait
shr
mov
clc
xlat
test
das
and
dec
sbb
shll
addr16
fisub
repz
popf
add
push
adc
push
hlt
lea
lds
jmp
pushf
pop
pop
addb
mov
or
or
inc
lods
dec
push
bound
lret
cld
movsb
test
jl
shll
mov
sbb
scas
mov
shll
jne
cwtl
inc
stc
jo
add
or
mov
inc
xchg
neg
add
out
cmp
adc
dec
adc
hlt
test
mov
incl
adc
or
pop
lahf
mov
int
aaa
or
cli
jg
lea
imul
loopne
mov
pop
and
inc
push
orl
mov
sar
dec
adc
popa
push
pusha
pushf
lahf
mov
sbb
adc
roll
cs
sub
pop
adc
out
and
push
sbb
cwtl
lea
mov
mov
mov
insl
inc
xchg
scas
push
add
mov
call
loopne
dec
sub
cmp
jmp
sub
call
addl
jmp
xchg
aam
lea
test
inc
roll
rclb
mov
insl
cli
lods
outsb
stos
mov
outsl
sub
mov
jmp
jmp
imul
push
cmp
jb
aaa
push
or
sub
loope
jbe
aaa
sub
sbb
repz
sub
push
jp
fcmove
pop
xchg
xor
add
lea
not
popa
xor
mov
inc
sbb
cmc
arpl
pop
push
je
adc
push
mov
pop
ret
dec
sbb
cmp
add
adc
icebp
sbb
or
aad
rcrl
lcall
mov
pusha
addl
call
gs
sbb
shrl
mov
xor
clc
mov
ror
ret
mov
out
or
rclb
je
lods
and
cmp
push
lods
into
rolb
loopne
punpckldq
inc
xor
lcall
call
and
mov
into
dec
loope
mov
push
and
jecxz
lods
or
clc
pop
das
cmp
jg
iret
adcb
sbbl
or
pop
nop
loope
inc
or
mov
out
jmp
jno
call
mov
cmp
daa
lcall
push
mov
sbb
ja
and
or
pusha
test
sbb
mov
repz
in
dec
pusha
sarl
mov
hlt
pop
or
test
ljmp
or
mov
ret
pop
ss
outsb
adc
and
das
sbb
incb
xchg
mov
pusha
clc
cwtd
popf
ret
insb
or
icebp
addl
mov
sub
loope
xchg
das
cli
xchg
inc
adc
nop
outsl
sub
add
push
cmc
pop
cmc
out
add
fs
gs
mov
insl
jmp
je
xor
pop
.byte
.byte
.byte
and
mov
mov
push
push
push
mov
mov
pop
push
push
mov
add
sbb
push
push
push
mov
xor
mov
mov
incl
pop
mov
xor
lea
stos
stos
sbb
outsb
xchg
or
or
jmp
mov
out
pop
jmp
pop
cld
call
out
jbe
mov
add
lea
test
ss
movd
stos
inc
daa
loopne
idiv
fisttpl
mov
push
push
jp
sub
ja
lea
and
sbb
adc
push
incl
push
out
inc
sbb
sbb
fwait
adc
sbb
popf
fcompl
mov
mov
mov
dec
lahf
mov
jmp
test
ret
mov
adc
mov
sbb
or
ret
aas
sub
in
ficomp
mov
mov
add
faddl
out
insl
fcmovnu
pop
std
fwait
les
or
pop
cs
lret
lds
gs
popa
enter
cs
in
lret
lret
outsl
int3
int
into
push
iret
pop
rorb
jo
xor
xor
inc
aad
add
cmp
pop
fdivs
pop
xlat
insl
add
sub
aaa
fisttpl
push
add
jne
mov
pop
loop
jecxz
add
inc
in
out
mov
xlat
add
inc
call
imul
daa
in
pop
in
aaa
lock
pslld
pop
xlat
xor
sbb
add
aaa
clc
pushl
add
pop
sti
js
cld
je
mov
jo
xor
sub
mov
and
push
mov
mov
jmp
and
adc
or
add
fcmovnb
das
cld
rorb
lods
cmp
je
jg
push
mov
add
mov
in
ret
shrl
adc
mov
pop
push
out
neg
in
pop
je
cs
adc
or
nop
mov
xor
les
add
into
cmp
or
loope
sarl
outsl
jl
jae
fnop
out
cmp
jne
stos
or
add
daa
xor
pop
push
mov
sbb
cmpl
jl
jb
sbb
xor
push
push
push
inc
push
adc
mov
push
nop
nop
mov
xor
sub
cmp
repnz
or
sarl
push
mov
add
mul
sbb
fsqrt
mov
fildl
pop
or
sbb
nop
add
outsb
add
push
mov
sbb
mov
mov
push
push
daa
mov
or
push
je
mov
push
xor
mov
test
je
mov
sub
inc
inc
mov
test
mov
jne
andb
jmp
sbb
ss
xor
movzbl
inc
or
jg
clc
inc
jl
clc
pop
jg
add
adc
inc
cmp
insl
in
out
shll
add
je
sub
cmp
sub
add
pop
adcb
pop
dec
insl
lock
or
or
lahf
inc
clc
add
sub
neg
inc
ret
stos
shlb
rcrl
clc
or
in
inc
andl
mov
sbb
mov
push
push
imul
jge
add
or
cmpl
push
mov
inc
sub
fisubrl
inc
sbb
xchg
mov
inc
nop
lock
add
clc
fistp
icebp
jae
dec
sbb
cmpb
jbe
mov
cmp
lea
mov
add
scas
lahf
mov
pop
jecxz
insl
cmp
cmp
jl
jae
adc
dec
popa
pop
jbe
pop
sub
shl
dec
jbe
push
sbb
clc
jmp
jne
push
jnp
adc
lods
ficom
push
mov
xor
cmp
jbe
test
adc
ret
mov
jge
fist
lret
mov
push
or
shl
nop
mov
mov
insl
lea
sahf
sbb
insl
ret
pop
push
adc
xchg
sub
lret
cmpsb
mov
add
sbb
jle
hlt
lret
fmull
frstor
inc
or
fidivr
fist
gs
mov
push
add
out
faddl
xor
cs
insb
add
dec
cmpsb
outsl
cmpsb
imul
imul
and
pop
mov
jne
xlat
insl
add
and
dec
ret
imul
lds
push
xlat
dec
sbb
enter
push
insb
fildl
cltd
lock
mov
inc
and
dec
pushl
or
mov
lret
sti
inc
inc
test
add
jmp
sti
cmpsl
add
cmp
call
clc
pop
mov
lret
insl
cld
or
ljmp
jmp
mov
push
mov
sbb
test
test
add
inc
lods
mov
add
push
test
jp
jae
xchg
or
rcr
sbb
imull
mov
popa
adc
push
push
mov
repnz
movsl
popa
pop
adc
idivb
push
mov
push
js
push
das
cld
adc
jns
inc
js
iret
jmp
fdivrl
pop
sti
sub
jne
push
rclb
mov
insl
mov
scas
push
xchg
cmp
and
je
adc
movl
fdivrs
fisub
in
push
pop
jne
or
movsb
jb
add
or
fcoml
sub
jmp
pop
in
push
inc
je
decl
addl
sub
sti
cmp
aaa
clc
mov
xor
cmp
shl
lahf
push
into
in
movsl
ret
mov
cmp
sbb
movsb
inc
ds
pop
test
cld
ret
insl
aas
or
fsubs
jmp
mov
pop
dec
movb
jne
add
inc
sar
mov
xor
lcall
mov
lcall
cmp
xchg
hlt
enter
sar
rol
sub
lea
in
and
dec
insl
adc
imul
test
push
insb
call
add
inc
int3
jmp
dec
add
mov
jb
gs
pop
push
inc
sarb
jmp
xor
icebp
mov
pop
push
push
xlat
pop
rorb
loope
add
inc
je
mov
add
lods
jne
je
lods
pop
scas
adc
xlat
jne
xlat
and
pop
mov
mov
jb
pop
pop
mov
mov
fbstp
mov
mov
adc
rclb
movsl
push
adcl
movsl
sub
ret
repnz
push
and
pop
test
mov
lock
mov
jge
xchg
cs
mov
inc
dec
repnz
outsl
or
push
and
clc
idiv
and
mov
movl
pop
dec
xor
mov
ljmp
inc
cmp
pop
ret
mov
movl
mov
inc
mov
jns
sahf
aam
push
inc
push
push
loope
add
sub
jp
stos
push
das
loop
fcmovnb
mov
push
cld
jmp
xor
mov
icebp
ja
mov
pusha
or
mov
ret
loopne
outsl
das
push
adc
ss
dec
push
outsl
adcl
xlat
lds
fisubrl
cld
mov
jge
or
psrlq
sbb
jle
in
neg
push
or
pop
ret
adc
sub
daa
popf
pop
mov
leave
cmp
xlat
aad
sub
lock
sbb
test
fwait
inc
cmp
das
cmp
cmp
add
mov
mov
dec
pop
fistl
inc
lret
gs
dec
xor
jo
cmp
cmp
xchg
jmp
loop
jb
jmp
xchg
in
pop
out
pxor
pop
lock
mov
jb
je
inc
push
mov
imul
data16
cmp
aam
add
add
lods
pop
add
xor
popf
cld
push
sahf
fwait
mov
pop
std
adc
arpl
sub
adc
test
les
dec
push
loop
xor
push
into
push
sar
sar
or
inc
ret
orl
mov
insb
push
mov
clc
notb
ret
test
repz
xchg
in
lds
adc
fwait
adc
lods
roll
pop
insl
cmc
aam
rcrl
push
addr16
inc
xchg
sbb
or
and
mov
outsb
pop
je
daa
rclb
or
jnp
and
push
in
or
adc
shlb
imul
scas
push
add
movsl
movsl
xor
lock
movsb
push
inc
pop
ljmp
daa
sbb
dec
ljmp
lea
pop
xchg
inc
add
adc
insl
and
xchg
push
pop
test
mov
pop
and
jne
dec
xor
xchg
test
push
and
mov
jmp
aad
inc
mov
xchg
inc
mov
lock
jecxz
cmp
lea
aam
xchg
data16
cs
lods
and
add
sbb
jge
repz
sub
cltd
pop
idiv
cmp
jle
xchg
xchg
mov
add
jl
popa
jle
jp
add
mov
jl
pop
add
push
add
cmpsb
sbb
cs
pop
sbb
mov
xchg
cli
xor
xor
pusha
cmp
dec
fcoms
movsb
jl
enter
cwtl
sti
cltd
sti
pushf
cld
pusha
add
test
outsb
in
mov
pop
push
add
adc
and
adc
push
mov
test
stos
cmovne
test
cmp
sub
sbb
add
push
out
out
rorl
mov
pop
inc
jmp
mov
cmp
push
push
or
nop
stc
daa
inc
test
test
fnstcw
pushf
xchg
dec
and
add
mov
inc
pop
xor
adc
mov
sbb
cwtl
sti
ljmp
inc
jbe
cld
adc
and
das
jnp
das
aam
inc
add
sub
mov
sub
xor
xlat
or
jb
mov
or
inc
repnz
mov
cmc
scas
notb
dec
rol
ret
inc
clc
lret
insb
xor
xor
je
inc
imul
xor
outsl
jo
fcom
xor
shll
fcmovnu
fnsave
outsl
jo
inc
push
xor
imul
mov
cmp
jbe
test
lret
or
je
sub
cmp
into
push
xlat
push
ja
cmp
inc
shrb
rcll
les
dec
test
fisubrl
mov
or
ret
xchg
or
or
aas
mov
jo
negl
and
inc
sub
push
mov
xor
jp
pop
lahf
jmp
xor
call
push
adc
cmp
je
add
jne
notb
or
lea
call
pusha
or
mov
sti
sub
sub
ffreep
mov
xor
adc
push
int
das
xor
push
cmpsb
jbe
add
incl
push
icebp
int
xor
in
inc
inc
add
adc
push
adc
xchg
fildll
dec
adc
push
push
and
dec
xchg
dec
in
add
test
bound
in
inc
pop
sbb
outsb
int3
push
call
loope
aaa
js
adc
std
repnz
je
idivb
movsb
jl
xchg
lods
shrl
jae
fisttp
imul
mov
int
ljmp
pop
mov
pop
pop
shrb
popa
adc
jge
mov
jl
xchg
jge
jae
or
xor
fdivp
push
gs
roll
aaa
sub
or
adc
cld
andb
add
insl
jg
sub
outsb
sub
dec
jo
cmp
fimull
dec
sub
adc
push
xchg
mov
int3
push
movsb
add
and
add
mov
mov
jge
andb
rolb
divl
adcb
mov
test
and
or
ss
add
mov
and
call
pop
cmp
xchg
xor
dec
push
xor
jle
mov
dec
call
adc
mov
push
lret
sahf
mov
out
push
pop
or
push
cmpsl
loope
fsubl
mov
dec
fdivr
fld
cmpl
stos
shrl
sbb
xor
push
cld
jns
cmp
or
push
in
add
pusha
jg
adc
stos
or
dec
cmp
stos
in
test
adc
clc
into
mov
popa
push
negb
ret
push
or
or
xor
push
daa
add
add
push
lds
and
flds
mov
hlt
pop
adc
xor
mov
fist
mov
mov
fcoms
cmp
inc
adc
jnp
adc
jbe
or
inc
cmp
lods
dec
mov
push
fmuls
mov
cmp
popf
push
test
xor
sub
adc
adc
add
sub
fsubl
rorl
add
push
add
pop
gs
mov
or
add
or
xor
cmp
pop
inc
pop
fdiv
jge
out
push
adcb
mov
mov
test
aam
mov
push
cmp
pop
sbb
mov
fcomp
and
xor
and
pusha
icebp
adc
fdivr
ds
pop
cmp
adc
enter
jbe
and
jmp
sbb
add
fadd
push
xchg
sub
clc
inc
jge
sbb
pop
aaa
lods
adc
and
popa
call
shrb
push
fcom
inc
and
and
mov
shrl
mulb
xor
aad
insb
xor
pusha
mov
std
adc
rcll
inc
je
in
in
pop
xlat
xor
jne
call
jmp
adc
push
in
xor
adc
pop
out
ss
in
neg
movsl
fwait
lea
in
mov
scas
ret
insb
pop
or
or
add
mov
xor
jp
leave
xor
popa
jne
fcmovb
jae
cwtl
je
jg
pop
int3
repz
int
popa
mov
push
push
aad
adc
cmp
sbb
mov
mov
or
jbe
adc
or
adc
das
xor
scas
test
bound
cmp
sub
mov
insb
out
sbbl
lcall
out
or
sbb
sahf
add
cmp
dec
push
ret
loopne
mov
mov
xchg
add
mov
div
clc
stc
adc
mov
sti
ljmp
dec
inc
xlat
push
in
in
out
inc
xor
mov
leave
xchg
xor
in
enter
cmp
jmp
mov
mov
sub
jb
ret
adc
xor
xor
inc
or
push
xchg
ds
mov
push
std
jmp
mov
loopne
mov
fwait
inc
sbb
pop
pop
shrl
push
jae
jns
or
or
and
xor
cmpsb
test
cmp
add
imul
adc
pop
inc
or
fcompl
push
cmp
inc
rol
adc
insb
push
mov
adc
add
add
mov
jb
sub
std
add
add
jae
sub
mov
or
loope
or
mov
cmp
add
inc
inc
test
mov
inc
inc
inc
inc
mov
inc
inc
inc
enter
testl
dec
and
adc
mov
adc
add
mov
call
testl
add
adc
aam
lea
add
and
add
popf
in
mov
incl
mov
insl
inc
xlat
mov
fwait
add
jl
cld
lea
mov
or
jge
sbb
das
mov
clc
mov
cli
adc
or
test
iret
or
hlt
mov
into
xchg
je
jmp
fdivl
jmp
add
mov
xor
and
divb
mov
jne
cmpb
jne
inc
or
add
or
repnz
jbe
aam
dec
cmc
dec
jne
movsb
jl
mul
add
mov
cs
jmp
sub
mov
sub
pusha
pop
xor
pop
pop
je
addl
xor
sub
out
mov
push
push
test
pop
popa
pop
sub
mov
mov
loopne
rcrb
sbb
fadds
sbb
imul
add
adc
insl
xchg
dec
inc
ret
ret
mov
add
imul
cmpsb
imul
xor
add
and
dec
xor
outsb
adcb
sub
loopne
cmpsb
imul
xlat
sub
dec
xor
push
push
mov
jmp
cld
xor
push
add
xor
adc
and
ss
xor
xor
push
pop
outsb
xor
sarl
sahf
lods
mov
xor
mov
cli
xor
xlat
xor
cs
out
xor
fdivs
add
add
mov
lret
popf
xchg
push
and
sub
inc
pushf
adc
mov
int3
cs
loopne
inc
mov
ret
and
ret
ja
inc
adc
xchg
shrl
xchg
lea
lcall
push
push
push
dec
inc
dec
xor
cs
insb
add
push
inc
push
dec
inc
or
inc
jmp
jb
cmp
mov
add
xchg
dec
flds
jo
ljmp
incl
add
dec
ja
scas
xchg
add
in
dec
aad
xlat
cmc
xor
shrl
pusha
cmpsl
pushf
jb
push
xor
push
into
push
push
fldlg2
push
push
xor
add
sti
mov
inc
sbb
idivl
add
and
and
pop
add
gs
test
xor
xor
lcall
bound
push
push
lahf
packuswb
imul
jmp
add
call
mov
lea
inc
fist
or
adc
pushl
jnp
add
add
push
push
push
push
push
mov
call
mov
ja
rep
pop
popf
popa
jmp
pop
incl
adc
into
scas
loope
repz
mov
fldcw
xor
fidivl
lods
ret
rsm
or
mov
loopne
mov
test
pop
xchg
or
pop
clc
jge
lea
mov
mov
jle
mov
stc
cmp
data16
jae
jg
mov
cmpsl
mov
pop
into
les
mov
int3
out
mov
jnp
ficomp
inc
and
or
rcr
mov
mov
inc
dec
dec
inc
inc
inc
dec
inc
pop
inc
sti
testl
aam
lret
fld
fdivrp
rol
mov
mov
mov
aas
jno
push
jnp
sbb
pusha
inc
popa
arpl
and
mov
aam
pop
mov
jnp
dec
ss
or
shlb
mulb
dec
mov
cs
outsl
outsl
and
mov
mov
adc
pop
es
sbb
ret
incl
jae
jne
fs
sub
push
push
outsw
outsb
mov
jae
gs
mov
pop
mov
sbbl
insl
imul
arpl
sbb
outsl
jo
aaa
fs
pop
imul
and
pop
add
outsl
je
push
jbe
jnp
je
or
data16
js
push
or
sbb
cmp
in
in
sbb
cmp
add
bound
out
fistp
cmpsl
inc
dec
push
push
push
inc
push
inc
pop
dec
dec
inc
push
mov
mov
imul
fildll
xor
xchg
lcall
inc
cltd
ljmp
push
push
inc
or
add
push
cli
scas
add
push
add
xchg
pop
sub
cmpsb
lahf
add
incb
mov
pop
inc
inc
call
pushl
or
and
push
jb
addr16
insl
and
outsb
outsb
outsl
aaa
loopne
pushl
and
outsb
and
inc
dec
push
and
psubq
or
idivb
addr16
add
les
stc
out
imul
mov
ffree
insb
dec
mov
les
jle
in
mov
dec
mov
arpl
jno
cmp
mul
mov
or
out
push
dec
cmc
push
imul
mov
es
add
jecxz
fucomp
jbe
int
adc
mov
je
jle
jmp
adc
adc
nop
push
adc
mulb
sbb
pop
add
pop
add
add
dec
add
add
add
pop
push
add
xchg
push
add
nop
dec
mov
mov
inc
pop
cmpsl
lods
test
je
sbb
pusha
mov
nop
je
add
cld
dec
xor
jb,pn
popa
je
sti
pop
pop
aaa
fmuls
sti
or
js
ja
fwait
in
adc
es
pusha
add
inc
add
out
dec
pop
test
shrb
push
js
or
push
ja
mov
daa
pusha
ja
jne
adc
pop
daa
or
gs
outsl
arpl
and
add
pop
pop
add
pop
outsb
add
rclb
aaa
or
jge
adc
or
adc
loop
icebp
xor
push
pop
hlt
mov
xchg
gs
xchg
movsl
scas
mov
push
sub
cld
stos
lea
mov
pop
dec
pop
pop
push
cmp
push
mov
call
movl
push
pusha
mov
ljmp
mov
sbb
out
fisubr
inc
pop
add
call
add
xor
test
adcl
sub
or
push
test
mov
gs
out
mov
cmpsb
imul
xlat
cltd
clc
pushf
std
or
mov
add
loope
mov
or
jmp
push
call
xchg
sbb
stos
js
add
lea
push
js
js
jne
mov
lock
mov
fcmovnu
out
in
mov
add
sub
push
pushf
fcoml
jmp
icebp
out
fcompl
jbe
outsl
out
mov
pushf
sti
dec
jmp
enter
pop
clc
jg
test
mov
bt
cmc
stc
cmp
sub
push
add
pushf
pushf
sbb
fstl
xor
scas
inc
push
cmp
push
and
pop
adc
adc
repz
or
inc
jmp
adc
add
or
sysret
push
fucomp
scas
sti
push
mov
cs
jg
fsubr
push
pop
jl
add
add
jmp
fdivrs
adc
dec
fisubr
mov
call
cmpsb
not
cmp
jg
outsl
sbb
std
cld
cld
fs
fdivs
out
add
pop
aas
inc
cli
jbe
or
add
pop
pop
sbb
fistpll
and
or
xor
test
jle
add
int
adc
je
jne
mov
inc
sti
xchg
inc
push
push
jmp
fistpll
les
inc
stc
xchg
cmc
cmp
xor
clc
stc
test
xor
ss
ljmp
rolb
and
xor
ret
inc
xor
cmp
cwtl
clc
call
cmp
sbb
call
lods
clc
sub
lret
decb
sbb
cmp
mov
push
ret
notb
orl
push
call
mov
inc
xor
int
pop
stos
jbe
push
test
out
xchg
into
test
mov
add
xchg
mov
sbb
call
lods
loope
sti
in
fldcw
dec
add
and
mov
fiaddl
xor
mov
cmc
call
mov
push
cmp
adc
pop
call
add
cltd
xchg
jb
mov
dec
xchg
add
mov
fldt
outsl
pop
sbb
stc
push
neg
cmp
mov
clc
call
pop
cmp
xchg
cmpsl
xchg
lea
outsl
mov
lock
mov
sbb
jmp
and
lock
pushf
sbb
repnz
jnp
cmp
xchg
std
or
jne
pop
cwtl
mov
neg
jbe
clc
mov
add
jne
ja
pushf
out
cmp
push
mov
adc
xor
icebp
insl
mov
or
add
push
mov
jo
cmovae
sti
jbe
lea
pop
mov
sbb
jo
jl
sbbl
sbb
lock
call
sub
pop
mov
inc
nop
lea
jb
pop
pop
mov
cmp
or
pop
test
testb
cmpl
push
clc
jnp
icebp
sets
call
mov
pusha
call
jmp
jbe
push
std
aas
inc
stc
ds
and
mov
sub
ret
xor
sbb
xor
ss
mov
jmp
sahf
test
sub
xor
and
cmp
fcmovnbe
xchg
aam
mov
mov
fsubs
or
add
test
or
mov
hlt
and
dec
mov
and
xor
movhps
lea
fsubrs
xchg
mov
pushf
das
shl
dec
mov
pop
pop
leave
outsb
push
std
push
fisttpl
mov
mov
xor
adc
mov
js
jo
mov
andb
shll
cmp
mov
ret
andl
loopne
dec
rorb
pop
inc
loope
movsl
popf
mov
sub
mov
cltd
pushf
pushf
popl
sub
andl
sub
pushf
mov
mov
sub
iret
sbb
xchg
pop
aam
in
jne
outsb
push
or
je
mov
sbb
cs
dec
cmp
out
pop
add
xchg
and
mov
or
pop
call
or
jge
add
sbb
sub
inc
push
push
sub
imul
idiv
adc
pushl
imul
pop
outsl
and
push
mov
and
pop
pusha
rorl
in
add
repz
lea
addr16
push
outsb
add
loopne
jbe
mov
or
daa
rolb
mov
push
pop
mov
adc
or
dec
cmp
xchg
sarb
fs
mov
xchg
cld
jmp
rcr
mov
push
in
cmp
pop
mov
or
repz
pusha
mov
xchg
out
ljmp
or
loopne
fmuls
lahf
mov
out
lock
sub
popf
nopl
cld
and
test
add
push
loop
mov
fs
lock
dec
adc
test
jbe
cmpl
sbb
xor
sub
int3
clc
or
lds
dec
inc
inc
jae
sbb
mov
pop
xor
loope
cmpsb
sub
mov
jl
test
lea
cmp
or
mov
aaa
test
add
cmp
xchg
mov
test
cmpsb
mov
jne
test
dec
push
mov
mov
sti
push
jno
mov
pop
xchg
mov
mov
aas
sti
fadds
inc
add
iret
lea
inc
adc
sub
sbb
aam
ret
lock
jg
dec
or
push
add
ret
cmp
sti
pop
xchg
shl
lock
xchg
rorl
mov
mov
add
int
out
test
test
mov
test
in
stc
clc
cmc
and
fdivr
adc
mov
adc
pop
fidivr
rcrb
adc
sbb
ret
pop
xor
fisub
pusha
shr
cmp
dec
add
sti
add
xor
js
arpl
add
sub
or
dec
iret
inc
loopne
imul
cmp
or
ficompl
orl
int
ljmp
and
inc
clc
push
fnstenv
push
fnsave
movsl
mov
add
add
or
adc
cmc
dec
inc
cmpsb
sub
cmp
adc
or
pop
adc
or
or
arpl
scas
or
rclb
push
mov
xor
jg
mov
outsb
push
pusha
mov
push
push
xchg
addr16
push
push
pusha
mov
imul
ja
pusha
or
pop
js
push
out
sbb
or
mov
ja
push
xchg
sbb
jp
inc
push
add
sbb
sbb
clc
fimull
and
push
hlt
push
adc
dec
add
fildl
scas
or
mov
jo
jns
dec
clc
inc
sbb
xchg
mov
mov
or
and
mov
je
int3
adc
mov
arpl
loop
push
push
xor
call
out
pop
mov
mov
jmp
add
cli
sub
leave
loopne
push
and
incl
push
fcoml
cwtl
repz
push
jnp
sbb
or
mov
sbb
mov
test
notb
es
push
nop
out
pop
out
push
pop
std
or
jmp
mov
push
add
mov
push
cld
xlat
jno
lods
loopne
pop
pop
mov
pop
adc
cltd
mov
pusha
add
inc
dec
inc
shrb
mov
insb
mov
test
mov
and
mov
cltd
mov
lock
in
ret
mov
iret
ss
rorl
push
xlat
and
pop
not
push
aad
mov
add
add
mov
scas
sub
mov
xchg
mov
jg
mov
fadds
add
lcall
push
fnstsw
mov
xchg
sahf
mov
sbb
nop
pushf
clc
mov
xchg
pusha
in
sbb
call
push
inc
xchg
push
test
xchg
insb
sbb
add
push
jno
arpl
mov
sub
jmp
cmp
cmp
sbb
inc
pusha
ret
mov
hlt
jge
mov
mov
or
sbb
aam
sub
or
mov
mov
inc
mov
cmp
jmp
ljmp
sub
push
jbe
cmp
call
cmp
test
lods
jne
push
ss
pop
mov
adc
add
and
pusha
sbb
fs
ljmp
cli
ret
inc
and
popa
insl
push
sub
push
out
mov
insl
stos
mov
hlt
push
rolb
dec
jbe
lcall
arpl
or
mov
or
or
sbb
adc
jp
repnz
sbb
xchg
pop
ljmp
stc
aaa
mov
es
mov
sbb
and
and
inc
xlat
stos
push
test
inc
adc
loope
mov
mov
test
and
mov
fcmovu
mulb
pop
push
push
aad
or
sub
xchg
or
les
adc
push
jne
fcompl
mov
into
or
dec
shrb
push
mov
cmp
mov
sub
xchg
sbb
xor
mov
mov
xor
in
fisttpll
fiadd
call
add
rclb
sbb
sub
sbb
cmp
fmull
adc
dec
push
add
mov
jne
lock
negl
inc
cmp
je
pusha
test
ds
or
hlt
sub
dec
mov
dec
xor
push
lea
cwtl
sub
cmp
lock
lcall
lds
sub
xor
dec
xor
or
xor
jp
or
cmc
mov
inc
aaa
add
or
inc
mov
and
cmpsb
mov
clc
int
lcall
push
pop
std
sub
xchg
push
ret
pop
xchg
clc
test
xchg
arpl
push
negb
jo
ror
ret
sub
push
gs
mov
pusha
call
and
out
mov
add
push
cltd
fidiv
sbb
add
popf
stos
jmp
mov
cmp
mov
pusha
mov
cmc
mov
push
pushf
cs
or
fimull
clc
add
outsb
mov
sbb
adc
mov
push
mov
pop
sbb
addr16
in
jmp
popa
xor
cld
add
out
cmpsb
jmp
in
hlt
cld
mov
mov
pop
test
inc
repnz
xchg
adc
sbb
add
orl
or
loopne
and
popf
xor
jle
popf
aam
jne
std
inc
andb
rclb
mov
sbb
ret
mov
div
icebp
repnz
mov
data16
jo
mov
lcall
cmp
inc
mov
mov
imul
in
andb
mov
sahf
xchg
push
out
call
sub
or
cmp
xor
out
mov
int
jp
mov
push
rolb
jae
fsubrl
gs
xchg
fs
pop
subb
adc
roll
cmp
ret
add
jmp
xor
mov
fidivl
inc
push
adc
lock
xchg
mov
stc
sbbl
lock
push
jle
test
jp
pop
test
cwtl
bound
hlt
sbb
fadd
sahf
dec
mov
cmp
jp
pop
jae
in
push
push
and
inc
and
mov
push
and
cmp
cmp
popf
jmp
mov
cmp
pop
inc
pop
cmp
fidivrl
aam
movsb
mov
or
ds
mov
lcall
or
xor
sub
xchg
rclb
fs
jne
cmp
sub
rcr
add
js
pushf
add
or
mov
xlat
rcl
stc
sub
gs
gs
or
fxch
int
xor
rcl
pop
shlb
fdivs
roll
xchg
pop
xlat
in
les
lds
daa
popa
xlat
jne
test
daa
in
inc
out
add
subl
repz
out
orb
movsl
fs
movsb
jbe
inc
inc
or
sbb
or
adc
and
jbe
sbb
sbb
push
or
test
cmp
mov
stos
add
subl
jno
cwtl
lea
mov
adc
xor
sbb
out
in
addb
add
push
xchg
add
push
mov
out
mov
cld
mov
inc
lods
imul
outsb
or
xor
push
dec
xchg
into
jo
push
ficoml
jno
xor
cld
into
stos
test
lock
out
jge
sahf
insb
and
nop
push
and
out
mov
sub
push
add
mov
adc
xchg
add
add
mov
xor
push
cmpsb
aas
mov
enter
mov
sti
lret
sti
scas
addl
pop
call
lahf
daa
mov
roll
aam
mov
cmp
aad
xlat
sub
inc
mov
xor
fcoms
sbb
xchg
call
js
pop
mov
adc
ret
je
mov
clc
ds
dec
lods
jne
cmp
loop
sub
jo
mov
mov
inc
das
loopne
les
loope
loop
jecxz
cmp
out
out
call
sbb
pushf
ljmp
mov
xchg
lods
push
popf
imul
jne
cmc
psadbw
dec
clc
mov
mov
adc
cmp
mov
sahf
inc
push
xchg
adc
cmp
fsubs
pop
xchg
bound
mov
or
loopne
push
inc
dec
cmpsb
push
push
int3
pop
movsb
jge
loopne
sbb
in
push
stos
sub
lock
outsb
pop
xor
mov
push
push
pop
into
dec
test
jne
cltd
insl
out
lret
adc
jb
sbb
or
movups
mov
push
aad
inc
pop
sub
sbb
sbb
push
mov
adc
adc
sub
fsubrs
insl
lahf
jbe
mov
sub
sub
or
or
test
sub
sub
adc
fwait
cmc
negb
mov
add
test
call
mov
fmuls
xchg
or
add
dec
std
call
add
sub
mov
push
xor
addr16
dec
gs
and
lods
jo
repnz
push
rcrb
or
add
push
or
add
jne
adc
ljmp
cmp
out
loop
ret
push
push
push
pushf
setb
cs
mov
and
aaa
mov
cld
das
push
push
jns
arpl
push
xchg
push
or
xchg
js
jp
jne
loope
lods
cld
fildll
adc
in
push
xor
mov
cmp
sar
in
xor
data16
push
pushf
sbb
data16
add
out
xchg
out
push
call
sub
frstor
inc
adc
push
ficompl
inc
loopne
jo
mov
jge
sti
clc
pop
pop
jae
or
loopne
popa
decl
sbb
jbe
xorl
cmp
jl
xchg
mov
push
cmp
jb
push
push
das
mov
push
push
notl
jbe
mov
inc
inc
sbb
mov
pop
lods
sbb
pop
inc
and
loopne
push
aad
loope
out
lods
adc
pop
je
or
push
movsl
jmp
outsl
dec
ret
ljmp
lods
or
xor
aad
call
in
mov
subl
clc
sbb
or
sub
lock
mov
jecxz
mov
inc
push
js
stc
cmp
lahf
call
add
test
mov
test
cmp
icebp
lea
jmp
js
leave
and
or
mov
std
mov
jl
or
call
lds
xor
push
or
movsb
xor
popa
jno
add
cmp
sbb
xor
jne
cmp
or
sub
hlt
mov
pop
inc
dec
insb
nop
in
cvtps2pd
shrb
pop
fldenv
sub
popf
pop
inc
and
into
sbbb
aad
mov
add
cwtl
test
out
add
xchg
mov
iret
addl
xor
aad
adc
sbb
testb
rdtsc
cs
lea
popa
push
outsl
aad
fisubrl
not
fdiv
rorb
pushf
call
jmp
insb
lahf
cmc
inc
push
jle
xor
aad
popf
repz
js
loopne
push
push
pop
insb
mov
cmp
pcmpgtb
add
adc
add
fistl
dec
hlt
pop
jl
push
in
andw
frstor
or
jmp
push
adc
pushf
push
sbb
mov
sub
fcomi
rcrl
push
cwtl
jmp
push
and
mov
stos
adc
imul
push
daa
divb
icebp
scas
inc
lods
push
mov
inc
mov
scas
ljmp
adc
cmp
not
mov
lea
mov
xchg
call
sub
clc
neg
jno
push
push
call
push
push
decl
stc
jnp
dec
sub
push
xor
and
insb
test
mov
push
es
rcll
push
xor
sbb
adc
push
add
push
or
xchg
hlt
icebp
sbb
lods
xor
push
xchg
push
inc
xorl
faddl
shlb
adcb
dec
cwtl
loop
jb
sbb
jae
sbb
ljmp
dec
cmp
inc
or
sub
cld
xchg
enter
xor
xor
mov
pop
in
mov
rol
cwtl
pushf
jbe
fbstp
add
leave
sbb
or
pop
pusha
and
fdiv
leave
leave
mov
fild
cli
push
shld
pusha
jmp
loopne
je
sarl
enter
adc
lar
cmp
cld
out
jo
push
inc
addr16
or
sarb
icebp
scas
jl
cmc
and
pusha
add
sar
fimull
add
js
outsl
xor
mov
mov
sub
iret
insl
xor
gs
and
int
jo
cmp
idiv
ljmp
mov
es
push
inc
and
mov
addb
add
and
add
es
mov
add
pop
repz
and
add
or
add
or
mov
jb
sub
test
push
cmp
mov
mov
or
or
mov
in
shrb
and
call
jbe
mov
das
lcall
cltd
idiv
imul
inc
addl
or
movb
imul
das
aaa
ss
test
cltd
inc
jge
xor
pop
push
ljmp
mov
pop
enter
fwait
lock
jmp
xor
mov
cmpsl
rorb
outsb
aaa
shrl
mull
push
fildl
push
dec
add
add
or
mov
sub
add
cmp
jl
fimull
daa
cmp
adc
and
mov
sbb
inc
clc
mov
push
fdivrl
ljmp
sbb
clc
adcb
fsubrl
mov
or
sbb
inc
out
add
aaa
inc
lods
or
sbb
movl
out
jb
loopne
sub
pop
ss
mov
sub
dec
ss
push
dec
aas
mov
call
out
fidiv
cmpsl
stos
or
xor
call
stos
xchg
fcmovb
jle
in
add
stos
inc
dec
inc
hlt
gs
xor
mov
push
fsubs
cli
loop
adc
sbb
xor
add
ror
xor
inc
pop
lods
imul
add
dec
mov
mov
mov
clc
add
or
lcall
add
lock
mov
fisub
loopne
pop
incl
push
lret
dec
icebp
mov
lahf
adc
push
and
in
sub
xor
call
call
call
call
mov
mov
push
mov
add
ffree
add
idivl
xchg
mov
ret
cwtl
pop
in
push
daa
adc
sbb
and
adc
inc
cltd
xor
lcall
pop
loope
or
out
cs
xchg
mov
add
aaa
or
push
xor
shr
js
cwtl
test
das
or
mov
dec
xor
xor
push
ret
dec
ds
and
push
arpl
cmp
outsl
call
movl
cli
outsl
add
mov
cmp
das
mov
outsl
aam
lds
inc
cmp
jl
push
sbb
adc
or
and
icebp
mov
mov
nop
xor
insl
pop
mov
xor
daa
push
or
call
cmp
scas
pop
cmp
rorb
call
je
test
je
adc
sbb
call
sub
or
add
jge
dec
or
aaa
outsl
stos
sahf
ret
adc
enter
and
mov
cltd
push
mov
mov
test
fcomip
inc
add
cmpsb
inc
jle
xor
mov
les
adc
mov
mov
push
add
mov
push
mov
mov
mov
ja
or
add
or
adc
test
je
scas
cmp
or
add
inc
xchg
popa
shl
add
xor
lea
insb
in
outsl
add
rorl
hlt
sbb
jmp
cmp
inc
dec
or
mov
mov
aaa
into
into
pop
in
sbb
mov
hlt
jns
fcmovu
std
in
jo
mov
testb
orb
sub
mov
adc
mov
mov
dec
test
bound
or
inc
pop
sti
or
sti
or
mov
pop
aaa
xchg
loopne
mov
test
or
or
das
or
mov
add
out
loopne
xor
or
lock
aam
pop
sbb
add
cmc
test
pop
pop
add
ret
pop
jecxz
cmpl
mov
push
push
mov
mov
jbe
sti
cmp
je
pushl
jnp
add
mov
out
sbb
mov
jne
mov
sti
cmp
add
and
lea
or
mov
push
mov
jle
incl
jo
out
sti
aaa
push
ret
adc
dec
adc
stos
ss
or
ljmp
test
shr
std
mov
push
xchg
cmp
andl
aaa
jno
pop
lock
mov
dec
inc
fucomi
jne
xor
pop
je
cmp
leave
adc
rolb
push
leave
jl
xchg
shll
in
pop
dec
into
mov
ret
xcrypt-ctr
cmpsl
add
mov
andnps
mov
rorl
xor
or
xchg
out
aaa
cmp
pop
dec
dec
add
jns
es
push
mov
or
jno
add
jae
cmpl
adc
adc
push
add
arpl
push
lock
dec
xor
cmpl
xor
adc
je
cmp
add
cmp
jne
push
or
adc
cmp
jmp
adc
rcr
dec
lcall
xor
jp
and
mov
jge
or
pop
or
jmp
cmpsb
mov
xchg
fcomps
fnstenv
es
mov
js
jno
jo
mov
mov
in
jne
inc
xchg
push
and
sbb
mov
lret
andl
int3
add
pop
mov
mov
je
jne
scas
sub
pop
cs
loop
sub
lock
push
or
sti
idivl
pop
adc
pop
push
jns
cmpl
jae
pushf
inc
pop
in
insb
mov
arpl
adc
dec
insb
mov
mov
add
cmp
sbb
sbbl
xchg
leave
xchg
test
cmp
test
test
mov
sbb
jbe
and
or
ret
stos
push
fwait
out
mov
inc
outsl
cltd
mov
adc
cmp
or
sbb
mov
sub
xor
cmp
xchg
jecxz
and
or
inc
lea
jmp
sbb
js
mov
movl
bound
fucomi
cmp
inc
mov
out
mov
add
mov
add
add
call
pushl
je
fsubrs
pop
call
cs
outsb
pop
testb
or
pop
pop
add
push
rcll
push
cltd
jnp
or
inc
mov
mov
test
test
or
ret
jb
ss
out
xor
mov
adc
mov
inc
add
inc
bound
idivl
inc
sqrtps
or
sub
dec
sbb
inc
adc
jb
push
mov
xor
clc
sub
mov
call
in
lods
je
ret
je,pn
cmp
je
pop
push
add
sub
mov
pop
push
cld
pop
ss
or
mov
fdivs
cpuid
push
sbb
or
push
cld
jbe
lea
pushl
xor
mov
inc
mov
out
or
imulb
fucomp
dec
add
dec
call
inc
mov
lods
sbb
clc
pop
adc
xor
es
test
dec
int3
movl
les
jge
dec
push
pop
add
sbb
inc
mov
pop
mov
adc
mov
add
jl
or
pop
cmpsb
fcmovnbe
mov
mov
lods
call
daa
or
ja
lods
xor
or
mov
mov
jl
pop
push
push
push
add
or
add
test
js
sti
mov
test
pop
and
push
scas
cmp
data16
in
fidiv
shrb
popa
addr16
iret
out
fisubrl
fsubrl
jo
gs
lcall
add
push
sub
mov
std
repz
movsb
std
call
xchg
fwait
add
jge
ret
push
and
inc
mov
pop
imul
hlt
dec
and
mov
add
xlat
and
push
or
movsb
jp
mov
stc
fnop
jb
dec
inc
sub
les
dec
ljmp
mov
fsubl
jne
sbb
addr16
popf
or
sbb
rcll
mov
pop
sbb
jbe
inc
mov
dec
stc
jge
xchg
jb
add
ja
std
pop
push
mov
xor
rcr
repnz
xchg
lock
outsl
or
mov
adc
push
push
push
jbe
mov
jg
push
mov
ss
psubb
mov
pop
push
dec
cmp
test
xor
pop
jmp
adc
pop
orb
daa
add
sub
and
mov
mov
inc
fcompl
adc
outsl
cli
push
adc
cmp
mov
jge
rcrb
in
mov
cmp
push
je
dec
dec
cmpw
repz
push
jo
inc
fnclex
push
cmpsl
cmp
push
add
clc
jne
push
add
adc
enter
inc
movsb
setl
add
lods
push
sub
or
and
call
aad
xchg
enter
mov
pop
pop
jb
xor
or
movsl
aas
sbb
cltd
jmp
pop
in
scas
dec
in
push
test
fstpt
cmpb
pop
dec
sbbb
adc
push
mov
cmp
jg
jne
jnp
mov
fsubrs
xchg
mov
cvtps2pd
mov
cmp
inc
sub
test
aaa
fmul
andl
pop
pop
mov
add
in
mov
repz
sbb
test
mov
lret
fisttpll
or
sub
mov
push
sbb
dec
or
add
fldl
xor
test
fcmovbe
test
xor
dec
and
adc
and
insl
aaa
adc
cs
sub
jbe
test
xchg
outsl
mov
mov
mov
mov
lea
xlat
jne
fisttpll
xchg
push
cmp
pop
xchg
jae
xchg
sub
jmp
fadds
bound
mov
arpl
mov
add
dec
movsb
movsl
inc
add
pop
fsubrl
stos
test
xor
adc
xorb
into
dec
iret
nop
sub
je
rolb
rorl
aad
aad
adc
pop
xlat
loope
inc
scas
sub
dec
lcall
inc
adc
cs
adc
xchg
loop
wrmsr
mov
mov
mov
mov
mov
sbb
je
adc
xlat
dec
sbb
push
rorl
lock
gs
mov
mov
insb
fsubl
xchg
mov
xchg
mov
mov
mov
mov
rcr
sbbb
faddp
fadd
ja
push
mov
mov
push
js
movsl
lret
adc
and
pusha
xchg
push
inc
cmp
jmp
xchg
mov
les
popf
insb
fs
mov
push
push
push
ret
bound
mov
pop
push
inc
jae
cli
add
std
stos
cmc
mov
mov
mov
sar
and
adc
test
or
daa
test
out
jbe
nop
pop
in
mov
or
mov
add
rorb
rcll
std
sbbb
mov
out
in
mov
mov
cmpl
mov
mov
mov
adc
or
jo
cmpsb
sahf
xor
xlat
xchg
xor
mov
adc
rcrb
pop
data16
pop
stos
pop
call
and
mov
cmp
push
cwtl
mov
repnz
je
mov
divl
scas
push
test
adc
ss
xchg
inc
mov
sbb
jge
mov
orl
inc
mov
test
cmp
push
sbb
mov
aaa
push
cld
add
test
mov
push
pop
fisttpll
scas
xchg
adc
insl
out
in
je
xchg
je
push
xor
dec
xchg
xor
jge
pop
mov
insl
ljmp
push
or
push
ja
inc
push
lcall
imul
into
xchg
imul
adc
xchg
jmpw
pusha
push
push
popa
outsb
int
fldt
xlat
arpl
dec
xor
insb
outsl
inc
stos
mov
stos
pop
lods
sahf
lods
or
xor
sbb
push
mov
push
dec
popa
imul
push
inc
fmuls
jo
fisubrl
cmpsb
imul
imul
push
xor
sarl
xor
scas
imul
or
cmp
xor
pop
out
jne
inc
test
fwait
jmp
nop
push
push
test
movsl
cmp
test
push
popa
je
mov
roll
push
xor
dec
mov
outsl
cmp
insb
cwtl
popf
popf
mov
aas
sub
int
loopne
jns
test
push
inc
xor
or
sub
clc
inc
mov
mov
flds
cli
sub
mov
test
or
lods
and
arpl
jl
inc
push
imul
popf
pushf
jl
insl
push
inc
outsb
and
jbe
outsl
inc
jo
jno
jb
or
mov
xchg
fcoms
xor
mov
add
dec
pushf
popf
dec
add
mov
lret
inc
lcall
dec
jo
dec
addr16
je
inc
xlat
pop
int
into
in
out
xor
shrl
je
popa
dec
xor
insb
push
jne
jb
add
xor
in
popf
push
xor
lea
xchg
sbb
orl
ss
sbb
jne
jbe
or
popf
sti
ja
js
jns
dec
mov
test
jl
in
mov
jg,pt
mov
xorb
push
mov
int
lods
aam
mov
add
adc
jl
cs
xchg
lods
adcl
cmp
cmc
pusha
sbb
jbe
in
arpl
pop
cmp
xchg
dec
adc
and
shrb
cmpsb
rcr
pop
push
xchg
lea
fldenv
mov
sub
sub
push
mov
jbe
hlt
add
les
add
pop
shll
fwait
aas
loopne
sbb
iret
lea
mov
nop
addr16
sbb
inc
lods
popl
sub
inc
jo
add
sbb
mov
cmp
rcrb
add
mov
jns
outsb
testb
cmp
adc
jb
push
imul
mov
push
je
push
flds
mov
xchg
jmp
cmpsb
int3
push
mov
mov
xor
or
adc
inc
nop
mov
sub
or
pop
cltd
js
mov
adc
mov
sahf
xor
rol
addb
fldt
push
call
cmp
mov
adc
sbbb
cs
in
int
push
inc
xor
or
mov
cld
std
aaa
add
out
add
push
adc
push
fnstenv
fidivl
sti
insb
call
sbb
pop
push
sbb
test
aam
adc
pop
popa
stos
repz
push
in
or
int
push
jl
test
mov
jb
cmpsb
inc
adc
mov
add
and
and
lock
push
ficomp
movb
xor
adc
andb
sahf
mov
sarb
outsl
aam
movsl
hlt
std
nop
xor
inc
add
hlt
cmp
sbbl
or
mov
jo
cmpl
andl
lods
push
mov
dec
push
mov
pop
lock
push
lods
repnz
push
ljmp
push
mov
aaa
dec
out
mov
push
sub
cli
xor
je
push
pop
xchg
lods
and
mov
jae
push
rclb
push
jmp
aas
pop
pop
pop
or
cmp
fdivl
push
scas
jp
sbb
inc
or
xor
roll
shrb
ja
mov
add
scas
test
adc
xor
fdivs
push
pop
add
inc
mov
int3
adc
and
add
add
insw
ss
adc
lods
mov
inc
mov
lods
push
add
movsl
adcl
icebp
pop
incb
and
fidivr
sahf
sub
xor
adc
fcmovu
fldt
fmul
cmpsb
imul
pop
cltd
int3
loopne
xchg
adc
xor
ljmp
jmp
mov
in
xor
int
imul
push
fld
cltd
adc
xchg
add
add
mov
mov
pusha
aaa
lock
add
or
sbb
pop
adc
add
adc
jmp
adcb
test
xchg
pop
jle
rcrl
add
xchg
out
insb
add
sbb
ja
inc
sbb
pop
xor
pop
or
push
and
sub
sti
repz
mov
or
or
xchg
mov
loopne
dec
es
or
push
in
jle,pn
push
push
cmp
inc
push
add
lds
push
mov
xor
and
xor
pop
push
mov
call
push
sub
add
jne
pop
ljmp
sub
xlat
cmpb
mov
cmpsb
sub
cwtl
or
push
and
mov
incb
add
add
xor
nop
cmp
mov
lods
adc
stos
fsubl
push
test
dec
inc
clc
ficom
dec
or
sub
fcoml
cltd
sub
cmp
sbb
and
push
adc
add
or
sub
or
lock
adc
scas
hlt
mov
mov
addr16
cs
aad
imul
mov
mov
mov
mov
sbb
sbb
xchg
push
in
sub
gs
gs
xchg
xchg
xlat
push
inc
pop
xchg
adc
adc
jne
lcall
cmp
add
into
inc
add
outsb
gs
fs
imul
jne
add
shll
bswap
pop
xor
ret
es
vrcpss
int3
leave
leave
gs
sub
movb
mov
dec
xor
jne
mov
push
xor
mov
in
push
adc
jmp
adc
ret
iret
adc
sub
lds
fs
paddw
add
iret
orb
xor
sub
leave
adc
rolb
push
adc
fmuls
test
loope
and
pop
fistpl
jmp
cmpsl
or
test
flds
dec
pushf
adc
add
fcmovnbe
add
and
call
cld
rorb
dec
xchg
jo
loop
enter
neg
push
daa
inc
mov
shrb
rcrb
sub
je
jbe
add
push
push
add
clc
push
xchg
mov
aam
cmp
clc
inc
xor
iret
fildl
jo
jl
icebp
mov
pop
lock
mov
fmuls
mov
add
or
call
cmp
xor
jge
mov
or
test
mov
and
or
pop
mov
mov
add
shl
insb
shll
or
mov
aam
or
sbb
jne
outsb
pop
and
mov
jns
sahf
test
push
mov
lea
push
insl
mov
inc
inc
cltd
call
cwtl
or
or
lcall
jne
inc
push
call
mov
mov
xchg
call
inc
lea
pop
rep
mov
mov
add
incb
push
in
xor
xchg
adc
inc
sbbl
sub
jno
jno
stos
ficompl
cmpsb
rorl
arpl
mov
mov
ds
pop
push
inc
mov
dec
loopne
cmp
add
mov
sub
sub
mov
inc
cmc
add
push
push
add
cmp
cli
push
push
or
sub
inc
push
pop
push
jo
pop
in
ss
mov
add
call
push
pop
leave
call
add
int3
leave
add
shlb
pop
daa
fadds
rcr
adc
rolb
ret
mov
ss
push
movb
pop
enter
inc
daa
ret
pusha
adc
mov
mov
sbb
lret
adc
adc
inc
loopne
jge
shrl
push
push
popf
pop
sub
sub
jle
mov
push
inc
add
mov
xlat
mov
in
in
sub
sub
test
lock
fcmove
sub
lds
les
sub
rcll
mov
div
sti
idiv
push
adc
stc
out
xor
add
or
imul
enter
adc
sbb
pop
or
sbb
les
mov
add
push
and
hlt
jo
dec
add
sub
lret
cltd
mov
enter
or
inc
or
adc
nop
push
rcrb
mov
cmp
test
sti
cltd
mov
pushf
in
popf
and
loopne
pop
mov
pop
sub
sub
mov
sbb
mov
loop
dec
inc
dec
lret
lea
shr
pop
add
cmp
push
push
insl
push
outsl
adc
mov
pop
cli
mov
mov
xchg
fcmovne
mov
dec
push
mov
mov
mov
mov
and
jns
lea
cmp
mov
add
inc
in
dec
or
pop
or
inc
xor
orb
or
rorl
or
fsts
push
push
and
jmp
xor
mov
push
mov
lods
dec
sbb
mov
out
add
cli
add
sbb
lods
push
mov
fnstsw
mov
ret
fild
pop
adc
add
mov
aaa
lds
pop
push
add
sbb
jne
or
jmp
or
fldl
xor
int
and
xlat
call
jp
push
sbb
clc
push
add
mov
cmp
jne
std
adc
xchg
add
mov
fwait
dec
adc
push
ljmp
roll
mov
verw
xchg
outsb
dec
and
cmp
pop
jge
es
dec
fnsave
or
cmp
repnz
and
fwait
or
or
xor
call
cld
testl
shr
push
sbb
mov
sbb
inc
add
inc
fsubl
sub
inc
mov
pop
out
mov
ja
notl
pop
test
lods
cmp
jg
aad
pusha
mov
sub
add
xor
or
sarl
xchg
add
call
mov
inc
sbb
aaa
adc
ljmp
daa
sub
scas
jle
jecxz
mov
hlt
je
pop
ja
jmp
jmp
cmp
data16
cmp
sub
and
js
lock
mov
push
movsw
call
sbb
xchg
je
rolb
inc
lods
loop
and
test
sbb
ret
add
jno
cmp
pop
hlt
std
cmp
dec
inc
call
add
add
inc
ja
add
push
aam
add
cld
std
fs
or
dec
hlt
and
inc
xchg
add
mov
imul
dec
xor
out
cmpsl
lock
loope
stos
stos
addr16
and
jo
dec
jge
lock
in
popa
jns
mov
mov
or
test
mov
xor
mov
outsl
mov
mov
into
add
fadds
and
testb
clc
rorl
rclb
call
jb
rclb
and
inc
sbb
inc
jo
ret
cvtps2pd
mov
sbb
mov
add
xor
lds
ljmp
test
js
or
and
lcall
jg
ret
push
jmp
xchg
or
add
pop
xabort
ljmp
not
sets
dec
sar
mov
adc
adc
pop
out
cmc
neg
cmp
jmp
add
adcl
and
fiadd
pushf
int
jmp
pop
jle
rol
lahf
shr
pop
shr
out
iret
or
ficoml
outsb
loope
mov
mov
xchg
inc
mov
add
les
lock
sbb
stos
sub
test
mov
push
and
std
into
les
fs
pop
mov
lret
mov
aas
popa
cmp
shll
jne
pushf
popf
or
adc
pop
sub
mov
movsb
dec
movsl
adc
cmpsl
test
jge
cmpsb
imul
in
mov
mov
btr
mov
xchg
call
lea
cmpsb
imul
mov
andb
adc
fstpt
mov
jl
pop
test
push
cmpsb
shr
les
cmpsb
pop
cld
lds
mov
leave
imul
int
jmp
cmpsb
into
iret
sub
inc
rcll
sarb
outsl
aam
aad
or
pop
fadds
mov
pop
fcmovu
aaa
fsubl
scas
jmp
sbb
loop
cmpsb
imul
cmpsb
pop
jb
pop
jmp
loope
push
sbb
push
shrl
repz
outsb
cmp
sbb
clc
psubw
test
dec
xlat
cli
inc
sub
pop
decb
xor
pop
push
fdivrs
add
decb
decl
pushl
arpl
push
dec
cmpxchg
lea
sbb
push
or
add
sbb
test
inc
decl
sti
leave
sbb
xchg
add
adc
clc
dec
xchg
push
rol
clc
adc
and
jmp
cmpsl
jne
decl
or
add
movsl
test
or
pushf
orl
xor
sbb
inc
inc
movsl
sub
sbb
je
mov
adc
pop
jmp
adc
insl
das
mov
and
inc
cmp
cmpb
les
xor
out
xor
xor
inc
or
roll
sbb
inc
inc
call
sahf
mov
mov
xor
mov
insb
pop
mov
mov
into
dec
or
or
sbb
and
jbe
push
xor
add
sbb
rcrl
sbb
lds
mov
sbb
aad
or
sbb
lds
insb
jo
ja
imul
add
or
cmpsb
sti
pop
and
leave
ret
call
add
adc
or
push
adc
push
loopne
inc
daa
js
cmp
sbb
cwtl
or
push
or
es
inc
test
jne
ret
cmpw
ja
cld
push
sbb
add
cmpl
push
mov
push
add
add
mov
mov
jae
xchg
push
mov
ror
ja
dec
ds
push
pop
add
push
mov
in
adc
adc
jo
xchg
shrl
inc
daa
or
adc
iret
je
cs
in
sbb
cmp
je
adc
pop
cmp
ja
pop
mov
in
in
xor
in
mov
or
or
adc
push
sub
jl
negb
je
addl
decl
dec
dec
adc
mov
in
int
add
rolb
or
pop
push
lds
mov
add
xchg
movsb
mov
in
jg
or
add
fdivrl
jae
mov
and
lahf
cmp
andl
in
sub
inc
js
add
pusha
jae
mov
into
ret
push
jl
jg
cwtl
adc
cltd
sbb
inc
pushl
dec
xor
xchg
xchg
push
dec
icebp
push
pop
xor
xchg
xchg
dec
xor
xchg
xchg
sahf
mov
mov
xchg
fdivs
mov
xor
rorl
push
xor
adcl
insb
stos
lods
ss
jb
mov
xor
rcll
add
xor
nop
movsb
lcall
mov
sbbl
aad
xchg
gs
mov
fs
pop
mov
pop
faddl
data16
inc
loopne
je
jne
loope
loop
stos
mov
xor
xchg
test
xor
xor
inc
mov
xor
test
adc
dec
shl
scas
mov
cmp
lea
xchg
lods
addl
mov
cmp
cmpsb
fwait
xchg
call
repnz
or
push
add
mov
push
stc
add
mov
aas
xchg
adc
push
les
hlt
jo
mov
xchg
hlt
je
clc
fbstp
add
loop
mov
or
jb
jb
aam
lods
mov
sarl
mov
fnsave
test
or
scas
fs
lahf
imul
cmc
je
push
dec
push
push
dec
sbb
into
inc
rcll
ds
jp
js
lcall
adc
mov
cmc
push
add
clc
jb
mov
jg
push
cmp
fildl
test
or
mov
inc
insb
push
aaa
inc
mov
xchg
mov
or
adc
in
imulb
in
in
out
cmp
jmp
hlt
insb
inc
ljmp
sahf
adc
xchg
test
jns
push
add
push
inc
clc
call
cmp
jne
jo
xor
rcll
stos
xchg
in
ss
mov
data16
mov
out
jp
rcrb
sub
sbb
pushw
hlt
loopne
adc
adc
mov
adc
inc
push
add
call
pop
jb
sub
or
push
cmp
cld
adc
add
jnp
push
inc
lock
insb
stos
dec
rorl
out
add
das
push
and
xchg
add
push
pop
stos
fisubrl
mov
push
sub
pop
cmp
inc
inc
xor
rcl
adc
push
test
popf
dec
mov
lcall
jge
sti
bound
push
in
jbe
adc
xchg
jmp
sbb
mov
cmp
jne
je
push
ja
sub
scas
add
and
insl
iret
add
xchg
clc
out
cmp
into
xchg
out
xor
es
les
loopne
enter
lsl
xor
fdivs
or
or
andb
add
jmp
adc
pop
mov
jecxz,pn
pop
cmp
pop
pop
mov
enter
popa
push
loopne
stc
int3
sbb
lods
or
sbb
mov
test
xchg
mov
lds
pusha
jmp
dec
add
pusha
gs
js
xchg
jmp
sbb
int3
fisubrl
cmp
dec
xor
sbb
stos
je
loopne
pop
mov
inc
jbe
mov
xor
fimul
sahf
add
stos
pop
xlat
pop
lahf
add
sti
dec
in
sbb
sti
loope
andb
clc
jle
mov
adc
xlat
add
sbb
pusha
pop
sbb
int3
or
pop
orb
adc
mov
adc
pop
sbb
lds
shlb
or
xor
or
ficomp
lods
outsl
cmp
ret
inc
add
lock
xor
and
xor
mov
push
ljmp
lods
mov
stos
notl
pop
addr16
pop
bnd
sbb
jo
sahf
int
roll
push
lcall
adc
pop
movsb
dec
xor
dec
outsb
je
jb
adc
xor
je
jb
stos
jmp
inc
push
pop
test
mov
lods
gs
mov
dec
ljmp
xor
insb
mov
dec
mov
outsb
sbb
hlt
jno
jne
mov
roll
dec
mov
lods
data16
push
fnsave
push
stos
pushf
adc
outsb
mov
nop
push
aaa
jno
xchg
rol
scas
jmp
xchg
dec
xchg
das
xchg
inc
xchg
js
jne
cmp
fcomps
dec
jne
fisttpl
push
fldl
fnstsw
jo
jne
loope
loop
or
inc
xor
popf
sub
ds
dec
push
loopne
shrl
push
test
movzbl
mov
mov
push
movsl
mov
pop
pop
mov
aas
inc
shlb
fs
xor
dec
les
fs
adc
or
sbbb
sub
dec
cld
cli
xor
clc
pusha
mov
sub
mov
push
and
lea
inc
sub
inc
push
call
xor
std
cmp
pusha
dec
cmp
cli
sbb
pop
mov
jo
pop
shr
mov
adc
or
pop
rolb
out
roll
push
dec
arpl
test
xor
sbb
adc
outsb
or
ficom
mov
loopne
idivl
cmp
pop
or
scas
adc
fnstenv
xor
addr16
outsl
cmp
mov
mov
mov
mov
cmp
inc
jmp
adc
leave
push
push
xor
add
push
ja
xlat
pop
je
xor
aam
or
mov
sbb
push
adc
test
scas
jne
sarb
adc
movsb
push
loop
or
mov
dec
arpl
clc
xor
sub
es
fisttpl
in
and
pop
and
push
and
push
mov
int
inc
push
xor
sub
mov
pop
push
call
jno
or
mov
push
pop
lock
das
push
push
in
loope
and
imul
mov
sbb
or
xorl
inc
imul
adc
hlt
cmp
mov
adc
or
mov
mov
aad
pop
mov
sbb
jns
loopne
inc
ret
stc
adc
mov
xchg
inc
inc
push
dec
hlt
movl
mov
lock
inc
ds
push
ja
cltd
xchg
add
mov
xchg
add
or
pusha
ret
mov
adc
mov
mov
push
ror
sbb
pop
daa
or
out
adc
add
pop
adc
insl
loope
fldcw
dec
or
jns
cmp
sbb
call
cmovo
cmp
push
call
mov
jb
stos
xor
pop
push
aas
pop
pop
mov
jno
push
xchg
or
stos
in
out
or
sahf
jl
mov
or
add
adc
pop
cld
sbb
inc
into
pop
pop
or
sbb
pop
bound
adc
daa
inc
pusha
add
js
mov
and
and
into
xorb
sbb
adcb
repz
or
xor
pop
les
mov
inc
int
int3
insl
mov
inc
in
pop
fwait
negb
les
dec
adc
fimull
or
nop
jmp
push
mov
out
mov
push
shrl
imul
rcl
imul
mov
inc
xchg
int
test
fcomps
add
mov
popf
addl
xor
mov
rcr
imul
fist
loopne
loope
loop
in
insb
imul
in
and
lock
int
ds
mov
inc
adc
fisubl
fstpt
fdivp
lret
imul
cmpsb
imul
call
lcall
test
test
jne
imul
loop
cmp
pushf
pop
ljmp
mov
or
sub
mov
cmp
inc
adc
ja
repz
fxrstor
or
and
or
inc
mov
and
pop
or
hlt
repz
and
add
jmp
mov
imul
pop
jmp
add
ret
mov
call
dec
or
jmp
xchg
ret
add
mov
push
jnp
or
or
xchg
or
mov
push
outsl
or
int3
fisubrl
dec
imul
jns
arpl
pusha
push
adc
pop
inc
loop
add
add
adc
cli
and
into
fmuls
xor
adc
movsl
fsubrs
or
andl
aad
cmp
fisubr
sbb
add
mov
sbb
repnz
mov
adc
push
push
sahf
popa
sub
inc
and
in
ret
fidivrl
inc
popa
arpl
stos
repnz
xor
mov
cmp
jno
sbb
jno
xor
icebp
push
test
pop
jmp
add
cs
dec
icebp
pop
repnz
dec
xor
inc
es
and
xor
jo
cmp
mov
jae
sub
test
call
rcll
nop
inc
mov
mov
out
mov
jb
test
or
xor
out
mov
jb
mov
jb
mov
daa
daa
popf
cltd
ret
lds
daa
daa
mov
jbe
jb
leave
out
lret
adc
dec
dec
pop
pushf
je
out
mov
insb
mov
mov
cmpb
xor
cmp
cld
ficomp
fldl
add
or
lds
inc
rol
repz
repz
out
sub
loopne
shlb
outsb
mov
cmp
adc
nop
add
stos
mov
adc
dec
sbb
and
xchg
test
jae
rol
imul
imul
cmpsb
imul
mov
daa
xor
and
aaa
adc
addr16
je
test
dec
pop
fnstsw
mov
shlb
jmp
pop
out
adc
cmpsb
imul
and
repz
jbe
pop
mov
cld
cmp
push
mov
or
mov
outsb
call
xor
rorl
shrb
push
cmp
mov
push
and
pushf
push
push
push
shlb
shl
mov
aam
psubsb
add
int3
popa
or
jbe
xor
sbb
push
or
dec
add
dec
xor
and
cld
das
mov
mov
and
add
mov
xor
es
setl
clc
and
andb
call
push
addr16
add
das
imul
mov
jbe
imul
test
stc
push
mulb
sahf
push
lock
dec
push
call
lds
pop
in
inc
sarl
outsb
add
lahf
jbe
mov
push
shrb
xchg
add
add
adc
and
adc
xchg
pushf
dec
add
xchg
daa
cmp
je
insb
add
ss
push
push
cmp
rolb
test
mov
ficoml
add
add
cltd
add
and
add
mov
test
fcmovnbe
lsl
sbb
data16
mov
push
mov
or
adc
jge
sub
adcl
cmp
push
push
push
js
cmp
sbb
or
les
ret
or
lea
mov
dec
sbb
les
jne
or
push
mov
jns
mov
rorb
or
mov
jl
inc
loope
sub
mov
adc
sub
cmp
pop
ret
pop
mov
movsb
pop
and
push
das
mov
inc
jle
and
dec
sbb
cli
in
sbb
and
lret
or
sti
cmp
out
and
loopne
lea
sbb
pop
in
mov
outsl
sbb
mov
call
mov
popf
mov
test
push
mov
arpl
jnp
jmp
pop
les
or
add
mov
sahf
stc
mov
and
mov
xor
mov
mov
adc
add
int3
push
push
sti
rolb
xor
subl
in
xor
or
or
outsl
fs
add
jg
mov
add
push
xor
mov
or
jg
loop
sbb
sbb
rcl
lods
sbb
sbb
fsub
int3
add
and
push
add
in
call
ja
add
add
decl
int
mov
or
xor
adc
jne
out
mov
add
out
mov
lock
push
pop
push
dec
mov
cmp
xor
mov
lea
cmp
adc
push
push
out
add
ljmp
and
test
loop
adc
mov
in
or
or
std
idiv
pop
add
es
je
add
jne
mov
imul
xchg
test
sub
test
sbb
dec
rdmsr
cld
lock
dec
pop
aaa
push
cmc
call
inc
mov
es
sbb
and
jmp
sub
adc
jae
lret
inc
cmp
sbbl
enter
xchg
pushf
cwtl
xchg
pop
mov
mov
inc
jno
in
icebp
pop
xor
push
jbe
jmp
pop
mov
xor
mov
and
lods
dec
sbb
rclb
jne
mov
ds
or
add
adc
ds
adc
fildl
push
test
push
and
jle
into
xor
stos
inc
adc
lods
add
jae
insb
add
add
nop
push
dec
sbb
pusha
cli
arpl
add
or
adc
adc
nop
in
int3
jl
cwtl
mov
pop
daa
inc
in
jp
pushf
adc
dec
enter
jmp
pop
inc
into
xchg
imul
add
or
add
xor
jo
clc
dec
roll
lcall
mov
cmpsb
aam
push
xchg
xor
xor
dec
pop
fs
xchg
scas
inc
cmc
xor
add
mov
ss
es
cmpsb
jmp
adc
add
xor
pop
pop
add
pop
jbe
add
mov
mov
imul
cmpsb
jmp
add
sub
dec
push
pusha
mov
scas
jmp
mov
outsb
cmpsb
imul
imul
test
clc
xor
xlat
mov
into
ret
dec
xlat
or
sub
mov
sbb
iret
int
dec
pop
mov
rorb
push
xor
negl
jb
into
xchg
mov
cs
jo
cltd
scas
incl
dec
xor
cwtl
xor
shufps
add
push
jecxz
pop
mov
or
imul
pop
pop
lidtl
add
add
pop
add
cmovno
inc
popw
sarb
add
jg
in
fsts
jg
inc
addl
sbb
mov
xchg
sbb
sub
add
outsl
pop
adc
dec
jo
orb
jl
adc
and
mov
test
les
sarb
int3
and
adc
xchg
cmpsl
add
fldl
fldl
adc
ret
orb
pop
xchg
lahf
lcall
add
jne
add
add
gs
fisttpll
push
xor
insb
gs
jg
inc
gs
outsl
fs
dec
popa
outsb
fs
sbb
push
imul
mov
stos
fidivl
arpl
inc
ss
sub
sbb
cmp
jb
xor
dec
inc
fs
dec
push
add
sti
mov
sbb
imul
pushf
and
fidiv
imul
pop
sti
in
jmp
outsl
ja
inc
imul
xor
inc
jne
adc
pop
aaa
aaa
imul
cmpsl
adc
sbb
xor
insb
outsl
jae
add
dec
popa
jae
inc
stos
push
insl
cmp
pusha
jmp
fnsave
push
xor
ja
jge
inc
pop
dec
popa
insl
add
sbb
fistl
gs
inc
jnp
fadd
imul
ret
jae
push
jbe
jb
and
gs
jbe
jp
inc
jecxz
outsb
fisttpl
mov
push
mov
jo
mov
fs
mov
fdivrs
push
insb
aaa
inc
jns
loope
or
flds
jle
dec
gs
xor
mov
mov
aad
push
or
cmp
test
jo
inc
push
jp
stc
cvtdq2ps
mov
add
or
inc
push
aad
insb
mov
leave
push
sti
push
fistpl
mov
inc
outsl
jne
push
ret
push
and
add
rcrl
fs
jne
cmpsl
mov
add
inc
push
dec
inc
dec
pop
cmp
xor
xchg
add
arpl
fcom
mov
mov
lds
push
mov
lret
add
outsl
imul
cltd
and
ja
jae
mov
in
or
mov
cmp
mov
or
add
pop
aas
aas
xor
mov
pop
push
add
rdmsr
sti
push
pop
addr16
dec
cmovns
pop
inc
js
in
fildl
fs
mov
ja
pop
and
ret
pop
pop
xlat
pop
in
inc
xchg
add
or
mov
jo
je
pop
push
push
jo
pop
push
add
loope
add
outsl
push
or
adc
rol
loope
jbe
dec
pop
test
add
jo
dec
rorl
jmp
pop
xor
insl
cmpsl
xor
js
add
dec
movl
insl
push
int
jno
mov
xchg
punpckhwd
inc
popf
and
push
xchg
jmp
adc
pop
jo
aaa
cs
dec
xchg
enter
xorl
mov
les
sbb
popf
xchg
pop
sbb
push
popa
jbe
adc
sbb
out
adcl
push
insl
dec
inc
dec
push
dec
xorl
sbb
insl
insl
imul
bswap
mov
gs
pop
imul
aaa
pop
or
out
outsb
ja
push
adc
dec
inc
insb
or
add
insl
nop
push
imul
sub
inc
data16
cmp
clc
inc
xchg
sbb
fistpl
mov
jbe
sbb
mov
pop
sbb
inc
inc
dec
enter
out
push
push
test
out
xor
imul
in
imul
ljmp
out
mov
sbb
in
in
stos
jno
outsl
mov
popa
or
xchg
adc
insl
cmp
jne
mov
xchg
push
and
mov
cmp
mov
jo
pop
adc
leave
pusha
fiaddl
cmpsl
push
jmp
decl
or
or
push
ss
sbb
or
mov
sub
pop
adc
mov
adc
insb
popa
dec
pop
jmp
push
push
stos
addr16
ret
jne
mov
fs
add
mov
pop
pusha
fs
lret
pop
xchg
imul
loopne
ljmp
add
and
sahf
aaa
add
pop
jbe
mov
xor
repz
xchg
dec
nop
cmpl
xor
sbb
inc
test
popa
roll
sarl
fdivr
dec
aaa
arpl
and
aaa
aaa
xor
push
js
jns
jge
dec
movsb
pop
cmpb
push
int
xchg
and
call
ror
or
mov
mov
pop
nop
shlb
push
and
call
pushl
divb
jmp
mov
jecxz
fs
mov
xchg
sbb
xor
jg
xchg
xchg
cld
aaa
dec
test
stos
xchg
fsubs
adc
sbb
scas
js
push
and
sbb
lcall
dec
loopne
xorl
mov
loopne
stos
shll
mov
sahf
inc
add
js
adc
jo
mov
push
inc
push
inc
push
fistp
out
pushl
js
cmp
cmp
sub
sbbl
sahf
movsb
jmp
addr16
jmp
cmp
xchg
jae
mov
leave
rorl
addl
xorl
mov
repnz
cmc
cmp
push
sbb
mov
dec
inc
inc
inc
mov
js
add
scas
mov
pusha
inc
stos
ret
sahf
in
pop
push
xchg
lock
mov
repnz
add
add
push
sbb
fs
pop
push
push
int
pop
mov
negl
pop
ds
push
aad
add
in
push
sub
das
inc
dec
inc
cs
ds
popf
pop
cmp
pop
loop
scas
daa
pop
fstps
jnp
jae
out
cmp
adc
outsl
push
jo
out
inc
adc
sbb
cld
lea
lock
push
dec
scas
push
jnp
push
leave
ss
cltd
mov
repz
fbld
stc
mov
sub
loop
xor
xchg
add
pop
daa
pusha
push
add
pop
sbb
imul
add
pop
adc
pop
push
pop
add
add
les
add
lea
rclb
push
mov
and
je
inc
cwtl
fnstsw
mov
mov
std
push
ficoml
or
fs
inc
inc
movsl
das
aam
xor
pop
dec
pop
std
mov
cmp
adc
and
ficoml
loope
push
insl
int3
movsb
jle
mov
dec
loopne
into
dec
lea
pop
aas
lds
add
jmp
or
add
nop
insl
pop
xchg
lahf
aam
push
pop
dec
cld
jmp
xlat
andb
call
icebp
aaa
arpl
cltd
ss
mov
lods
das
lock
lcall
aad
mov
pop
es
cmp
out
mov
ljmp
and
or
xchg
push
fs
out
pop
push
std
aam
icebp
in
fstl
data16
pushl
pop
fadds
pop
adc
sub
test
jg
arpl
xchg
adc
test
inc
scas
xchg
int
arpl
lahf
mov
icebp
mov
js,pt
mov
mov
sarb
imul
arpl
outsb
xchg
add
pop
jp
sarl
adc
int
insl
cmp
cld
inc
ret
sub
jecxz
fcmovb
and
mov
xchg
mov
jbe
cmp
pop
cmpsl
lcall
pop
and
test
push
dec
das
sbb
jge
int3
sub
push
xchg
add
push
scas
inc
jl
aad
mov
aas
gs
inc
lods
adc
jecxz
add
test
pop
lods
inc
addr16
push
shll
xchg
inc
rcrb
ds
cmp
xchg
dec
fdivs
xor
add
mov
or
aas
fstpl
negb
sti
push
dec
daa
mov
les
mov
enter
sub
and
and
outsb
mov
pop
jl
jnp
mov
pop
sub
add
aas
fwait
push
dec
xchg
jl
add
fist
iret
mov
push
push
pop
adc
das
jo
sub
xchg
or
pusha
and
jo
and
lock
and
add
pop
add
add
add
and
push
adc
nop
adc
enter
sti
or
adc
push
pop
add
in
hlt
xor
add
jno
daa
xor
or
push
push
ds
or
daa
xor
xchg
fstps
pushf
les
add
and
and
push
sbb
xor
inc
das
add
dec
add
push
inc
or
sbb
daa
adc
insb
xor
inc
sub
xor
adc
push
push
cmp
mov
daa
push
or
sbb
sub
xchg
xchg
sub
and
xchg
pop
jmp
daa
adc
orl
push
xor
cld
sub
inc
sub
xchg
sub
sub
push
or
imul
imul
xor
cmp
xor
pop
test
sub
add
mov
inc
nop
and
imull
or
pop
or
pop
rorl
fsubl
cmpsb
adc
inc
stos
cmp
lret
dec
mov
lahf
mov
je
inc
push
mov
popaw
int3
scas
mov
adcl
jle
lods
sbb
inc
xchg
cmp
inc
push
xor
ds
jbe
fisubl
push
mov
je
push
adc
call
sbb
or
call
mov
es
pushf
push
mov
je
test
mov
mov
jne
ss
jge
dec
mov
clc
popl
jae
adc
fmuls
mov
jae
pushf
jne
sbb
xchg
cmp
inc
inc
push
adc
pop
sbb
fstpt
not
outsb
mov
repz
sar
out
je
pop
mov
push
dec
ret
jbe
mov
add
syscall
outsl
jl
cli
pop
add
fdivp
sete
les
jecxz
pop
das
adc
movsb
push
push
push
jbe
jo
pop
push
bound
xor
or
or
and
and
jne
in
jg
mov
dec
and
das
mov
pop
cmp
push
xor
or
setg
out
push
xor
jbe
sbb
es
xchg
gs
add
push
sbb
cs
cwtl
or
add
in
sub
jne
sub
mov
loopne
xor
ret
push
add
xchg
adc
mov
pop
adc
test
xor
push
jbe
push
cmp
hlt
pop
pop
sbbl
cmp
adc
adcb
nop
cmp
pusha
push
test
je
fiadd
test
call
aam
icebp
stos
or
lcall
mov
mov
cmc
adc
mov
stos
scas
les
call
scas
xor
call
adc
and
popa
jae
push
mov
sub
aas
test
xchg
jp
lea
fwait
mov
cwtl
adc
xchg
sti
xor
xor
sti
adc
pop
mov
test
cmp
push
pop
sub
pop
add
sub
subl
add
call
push
ja
call
cmp
rclb
out
loopne
sub
adc
enter
loopne
xchg
add
mov
or
sub
add
test
sub
add
mov
or
xchg
mov
or
fsubs
into
and
ss
cld
into
sti
call
push
jnp
push
nop
sub
popf
in
jg
mov
and
and
add
adc
xchg
jmp
jne
add
sbb
mov
test
je
mov
out
aas
jnp
add
mov
sub
cmp
or
jbe
sbb
and
je
add
lret
cmc
push
push
jmp
orl
inc
dec
push
xor
sub
add
insl
mov
sub
orl
dec
push
adc
cmp
pop
loopne
enter
cwtl
test
lea
stos
sub
scas
and
jle
daa
push
lods
fsts
add
push
push
push
mov
stos
xor
lock
std
and
cmp
pusha
jne
push
mov
clc
out
cmp
xor
xor
or
aaa
outsb
adc
div
out
mov
idivb
push
sbb
push
or
cmp
dec
ja
es
or
sub
mov
xor
push
test
mov
jl
add
sub
sbb
mov
jmp
ret
jmp
inc
cmpsb
jbe
dec
add
sarl
xchg
jecxz
in
mov
mov
test
mov
movsb
dec
call
popf
enter
sbb
jmp
push
ss
pusha
test
add
or
adc
mov
test
push
lock
sbb
mov
fcoms
sub
outsl
or
lea
jle
xchg
xchg
in
lea
jge
mov
and
sub
rcrl
cmp
mov
call
lock
fdivrl
cmp
pop
negb
push
mov
jmp
cltd
jns
pop
sbb
repnz
in
mov
jmp
fadd
add
dec
repz
adc
add
negb
push
sahf
mov
xchg
and
inc
icebp
or
mov
xor
sub
mov
sbb
or
add
pop
adc
xor
call
sub
or
or
mov
mov
push
mov
in
in
cmp
les
xchg
in
xchg
mov
iret
mov
push
nop
mov
adc
xor
mov
mov
clc
inc
dec
stos
and
fstps
mov
adc
or
push
adc
addb
insb
sub
rolb
rcll
mov
push
jg
call
add
inc
mov
add
pop
ror
dec
hlt
xor
call
shrl
fcom
pop
mov
rolb
enter
enter
xor
mov
aas
sahf
mov
aaa
mull
push
push
roll
add
in
rorb
inc
push
sbb
push
mov
pop
dec
adc
insb
mov
and
or
jl
adcb
rcrl
pop
cs
or
mov
xchg
test
jno
rcrb
add
sbb
sbb
ds
mov
clc
repnz
popa
out
pusha
imulb
push
jne
push
push
rcll
mov
insb
push
jnp
cmpl
cmp
add
push
insl
orl
sbb
pusha
scas
ficomp
cmp
and
push
adc
inc
xchg
push
aad
movsl
enter
fs
fnsave
adc
pop
aas
daa
push
inc
fst
aaa
or
jne
push
cmp
pop
cmp
and
call
aaa
mov
sbb
and
punpcklbw
and
arpl
sbb
inc
outsl
popa
sub
cld
cmp
add
or
adc
pop
ret
fldcw
pop
xchg
stos
movsb
add
lock
je
enter
xchg
jbe
cmpsb
jmp
adc
inc
jmp
and
cmpsb
imul
xlat
adc
cmp
dec
rcrl
jp
sahf
dec
xor
mov
aam
repnz
xor
jne
sbb
sub
inc
push
sub
movl
jmp
nop
jbe
xor
xor
cmpb
faddl
dec
insb
adc
ret
xor
cmp
jbe
inc
xchg
pop
add
xor
or
xchg
or
mov
mov
lret
and
fs
imul
daa
inc
inc
add
add
and
mov
add
andb
jg
push
pop
adc
stos
or
aad
outsb
jo
add
or
ja
mov
je
add
add
or
cmp
js
sbb
fwait
inc
add
push
add
les
jbe
cltd
popa
bound
dec
add
pop
js
inc
test
fninit
add
inc
leave
je
aas
jnp
gs
sbb
imul
aaa
inc
fisubr
and
ret
mov
arpl
push
dec
jae
je
je
sbb
and
cwtl
inc
cltd
or
jae
sbb
jno
outsl
dec
andl
insl
push
inc
xor
or
mov
and
and
add
fldenv
dec
clc
cmc
and
je
mov
mov
xchg
add
add
aaa
sub
or
add
xor
dec
cmpsl
rcll
mov
push
push
int
shll
enter
sbb
call
leave
push
aad
out
add
xor
pop
cs
call
lret
mov
fsts
jge
shll
insb
sbb
jne
daa
cmp
mov
js
mov
cmovb
adc
inc
imul
icebp
cmp
adc
inc
mov
lret
aas
fs
mov
icebp
jle
or
sbb
nop
xchg
add
cltd
neg
adc
pop
inc
xchg
outsb
mov
cmp
xlat
ja
mov
out
jle
sub
mov
jecxz
fdivs
mov
sbbl
dec
mov
in
je
in
sbb
jg
jl
loop
insb
stc
je
ljmp
cmp
mov
xchg
mov
cmp
push
add
mov
leave
int3
cld
out
call
lahf
pusha
into
push
into
pop
xor
cmp
mov
cmc
mov
jno
xor
lods
movsl
sbb
imul
sub
sarb
xchg
enter
cmp
mov
jno
push
idiv
ljmp
or
and
push
outsb
test
stos
mov
and
xchg
pushf
or
add
fstl
aaa
inc
imul
lret
into
int3
in
dec
inc
dec
dec
dec
push
dec
add
dec
inc
push
inc
push
inc
adc
sbb
scas
pop
sbb
clc
idivl
sbb
stc
xor
call
dec
mov
dec
cld
mov
fistl
ss
jmp
movsl
or
decl
pop
pop
es
adc
cltd
loopne
dec
mov
out
jne
orl
pushl
addl
xchg
out
loop
jp
push
mov
adc
sbb
ljmp
cmp
cld
xor
sbb
mov
out
cltd
push
fmul
jmp
xor
xor
out
and
clc
jmp
add
cmp
jle
cmp
adcl
faddp
in
shrl
decl
bound
jle
aad
and
ja
adc
mov
lods
test
push
pop
push
xlat
cmpsb
push
push
stos
inc
push
cltd
xchg
xlat
push
icebp
push
lock
std
std
mov
xor
inc
into
pushl
incb
into
lret
bswap
and
mov
pop
gs
repnz
sbb
jge
pushl
popa
push
adc
mov
fwait
xchg
lcall
dec
add
adc
in
xchg
push
jbe
test
rorb
jg
clc
js
enter
jl
faddl
pop
or
mov
les
push
ret
in
inc
stos
xchg
sbb
je
and
into
ljmp
adc
pushf
movsl
ja
or
pushf
decb
inc
call
adc
mov
mov
pop
dec
inc
test
js
jg
jns
stos
mov
cmp
jne
mov
aaa
fwait
cmp
jp
stc
mov
les
cld
push
and
mul
mov
sub
xchg
dec
movsb
dec
test
sub
add
fnstsw
or
or
fistpll
lock
mov
fildl
sbb
xor
ljmp
cmp
cld
jno
adc
mov
adc
inc
aaa
cmp
inc
sub
in
imul
movsb
and
jle
jmp
repnz
push
in
aaa
xchg
pop
cmp
cs
outsl
repnz
repnz
lahf
bound
jle
aad
add
mov
call
test
pop
movsl
mov
mov
jle
loopne
sub
dec
test
cmpsl
into
xchg
into
adc
pop
outsb
fisubr
mov
mov
leave
mov
clc
jmp
push
sub
cld
jecxz
pushf
adc
scas
jb
adc
mov
in
mov
hlt
dec
inc
mov
inc
or
xchg
and
iret
into
fs
jmp
cmp
call
insb
sub
cmp
push
hlt
adc
sbb
ficompl
ljmp
adc
ret
cwtl
jne
stos
sub
mov
jecxz
jmp
mov
add
xor
jg
insb
lods
arpl
mov
dec
mov
aad
clc
test
inc
mov
push
push
mov
pop
pop
stos
jecxz
mov
mov
xchg
cmc
into
cld
sub
xchg
imul
jnp
adc
les
lea
aas
das
sbb
mov
fmul
jge
cltd
in
jg
das
dec
in
jno
pop
push
shr
das
adc
test
fistpll
stc
or
mov
xchg
cs
enter
jg
lret
lahf
jo
sbb
inc
insl
mov
ja
xchg
loopne
pop
dec
dec
jge
insl
xor
jg
fild
loope
lods
jge
sbb
dec
inc
jnp
jo
loopne
aam
pop
insl
ljmp
ljmp
add
fstl
add
xor
push
bound
lcall
cmpsb
test
add
sarl
inc
insl
stc
in
jl
sbb
int3
icebp
jp
and
jl
cmp
jg
fprem
inc
mov
xlat
jge
jns
cltd
pop
movsl
cmc
push
int3
add
cmp
sub
sbb
pop
call
inc
test
mov
jne
mov
addl
cld
ss
insl
pop
stos
insb
mov
inc
sti
sub
insb
das
ss
xor
mov
out
mov
std
pop
leave
aas
aad
jg
call
in
mov
lret
push
movsl
fisubr
add
jae
scas
pop
js
das
enter
rcll
stos
mov
arpl
icebp
lret
bnd
sub
bound
adc
mov
out
mov
jns
arpl
mov
loope
and
shl
lcall
mov
into
mov
arpl
js
insb
or
jmp
fimull
mov
xlat
je
cltd
and
loope
mov
adc
outsl
in
push
sub
into
cvtps2pi
dec
test
jns
xor
sti
decl
add
and
push
cmc
add
into
imul
aas
je
pop
pop
dec
inc
aas
cmp
icebp
xor
dec
ja
into
jb
xor
adc
jecxz
mov
push
rcll
sti
lret
and
push
ret
pushl
mov
push
aaa
loop
xchg
das
inc
sub
or
adc
das
outsl
xchg
lods
scas
das
stc
mov
mov
into
movsb
mov
loope
aam
into
ret
mov
call
ret
jg
and
decl
jns
or
mov
xor
pusha
hlt
pop
mov
outsl
cld
mov
inc
push
and
aam
pop
ret
or
adc
test
lcall
movsl
add
shl
inc
out
repz
mov
scas
lret
xchg
cmp
loop
gs
lret
mov
dec
insl
xchg
mov
ret
js
pop
lret
decl
add
iret
dec
std
and
vmwrite
mov
aas
dec
int3
cmp
mov
and
push
aam
push
lret
insl
out
sub
sub
push
or
dec
add
sub
inc
push
mov
xchg
scas
adc
jb
into
jp
ret
push
adc
scas
aas
jl
sbb
dec
stos
dec
int3
inc
ljmp
mov
dec
mov
jo
sub
sbb
jmp
push
daa
or
sub
xchg
adc
add
test
jecxz
jne
mov
sbb
pushl
and
xchg
xchg
stos
std
out
sbb
test
aas
cmp
and
pop
add
repz
iret
arpl
das
cmpb
call
dec
and
mov
pop
adc
mov
fcomip
dec
outsl
aam
ret
stos
aaa
outsb
out
in
repz
clc
test
sbb
inc
jmp
gs
xor
jmp
pop
push
push
mov
jle
jbe
mov
ret
jns
bnd
mov
xchg
push
into
mov
jb
dec
mov
loopne
ljmp
ret
addr16
movsl
add
add
out
xchg
adc
iret
daa
das
cmc
das
pop
ret
dec
es
pop
jne
mov
add
mov
fcomi
movsl
cmp
cmp
repz
into
fidivr
mov
adc
divb
xor
into
push
mov
outsl
lcall
or
test
jg
rcll
into
and
iret
push
pop
pop
jle
fwait
mov
ds
xchg
test
push
xchg
popf
xchg
stos
mov
pusha
stc
push
sub
fstps
ret
into
fidivr
lcall
cmp
movsl
and
mov
cli
lods
inc
std
push
enter
dec
mov
call
jl
cmp
aad
dec
mov
xlat
jb
pop
mov
sub
movsl
cmp
sub
xor
cs
es
mov
inc
test
or
or
xchg
dec
jne
outsl
mov
inc
mov
fwait
mov
popf
popa
ret
push
pop
mov
and
push
mov
popf
cli
pop
lods
lcall
jp
cmpsb
jne
lahf
std
mov
adc
fsubrs
ljmp
mov
pop
xchg
in
xor
mov
push
sbb
cs
into
or
fisub
sbb
mov
lods
push
pop
scas
addl
mov
add
fidivrl
xchg
arpl
mov
ret
mov
jg
and
std
and
ret
cmpsl
loopne
mov
clc
decl
ret
in
call
insl
aam
push
int3
fisubr
adc
test
xchg
push
xchg
cltd
popa
or
push
data16
dec
scas
xor
loop
aam
mov
js
add
jge
adc
dec
pusha
dec
cmp
adc
cmc
ja
test
jno
jnp
and
xchg
syscall
mov
inc
pop
push
int3
mov
cmp
pushl
jle
sbb
cmp
adc
and
mulb
sbb
sub
dec
stos
and
jne
or
add
jbe
aas
sbb
adc
pop
imul
mov
adc
and
and
add
into
pop
mov
cmp
rorb
jo
ror
test
pop
pop
mov
pop
into
jge
jno
xchg
stos
xor
imul
sub
push
sahf
inc
incl
mov
mov
test
fcompl
jo
clc
mov
mov
ret
ret
icebp
mov
add
ljmp
movsb
mov
ret
ja
mov
ret
rcrb
sub
jg
inc
pop
xor
and
in
jne
in
sub
shlb
aam
push
adc
les
cmp
mov
add
cmp
push
in
push
mov
adc
ljmp
lret
lock
pop
adc
imul
jp
stc
decl
nop
ret
jns
rolb
lret
lret
and
push
clc
jmp
lahf
mov
pushf
pop
in
js
dec
cltd
and
aam
push
leave
jmp
enter
test
int
and
dec
clc
add
cld
jmp
add
rol
movsl
hlt
jne
mov
call
adc
adc
inc
pushf
test
cmc
mov
pop
sti
inc
push
mov
pusha
jmp
out
data16
clc
mov
xorb
xchg
into
pop
sub
add
addb
cmc
pusha
push
mov
lea
dec
addr16
sbb
cmp
mov
xchg
lods
lock
decl
icebp
outsb
push
add
imul
aad
or
ja
lret
arpl
and
shlb
roll
add
mov
mov
dec
mov
ljmp
inc
pop
lcall
jp
sbb
mov
jae
insl
in
xlat
jl
fnstcw
cltd
or
pushl
sub
std
mov
outsb
add
dec
mov
loopne
add
dec
mov
xchg
mov
inc
dec
push
test
adc
sbb
push
pushl
cmp
xor
popa
mov
mov
pop
nop
pop
jo
out
in
jmp
mov
lcall
stos
sar
add
push
push
fiaddl
cmp
pop
imul
sbb
xor
cmpsl
pusha
xchg
je
push
cmp
ret
iret
repnz
dec
sbb
imul
ffree
lret
and
pop
loope
rcll
pop
fnop
ret
push
jo
jl
or
jno
add
and
aam
jmp
mov
ss
test
add
add
dec
je
jmp
adc
aam
xchg
stos
push
in
inc
jno
mov
mov
push
inc
add
or
mov
or
sub
xor
xor
xor
add
xchg
mov
sahf
xor
xor
fdivs
sbb
xor
xor
lret
jge
fistpll
and
xor
xor
decl
imul
push
ss
imul
jge
test
mov
popf
mov
ss
ss
ss
add
aaa
push
aaa
pop
aaa
insb
aaa
jb
clc
jp
xchg
aaa
popf
aaa
mov
aaa
mov
aaa
aaa
fdivl
add
or
sbb
inc
lcall
cmp
cmp
ja
jle
mov
lret
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
xchg
cmp
cmp
cmp
cmp
cmp
cmp
cmp
sbb
aas
cmp
dec
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
and
xor
cmp
pop
cmp
js
jle
test
mov
cmp
mov
mov
push
cmp
cld
cmp
pop
ds
gs
mov
ds
ds
push
xor
add
xor
add
loopne
add
incl
jb
pop
stos
pusha
aam
ja
sti
je
insb
loop
sub
xor
fcmovu
mov
lret
frstor
fisttp
iret
rcl
mov
mov
movsb
rol
inc
lret
flds
sbbb
or
pop
sbb
lahf
or
add
sbb
and
pusha
add
aaa
add
inc
sub
pop
inc
add
in
adc
add
pop
flds
mov
add
and
cmp
add
and
test
das
pop
pop
and
cmp
mov
adc
daa
add
xchg
jno
add
add
add
in
or
enter
or
and
in
incl
and
fild
add
and
inc
flds
add
inc
mov
mov
add
test
test
decl
fisttp
and
out
mov
aaa
das
add
xor
push
jae
jb
lds
imul
xorl
inc
jb
push
and
mov
in
or
push
addr16
xor
push
addr16
incl
inc
xchg
stc
mov
decl
js
xchg
imul
dec
dec
inc
inc
daa
push
incl
xchg
ret
psrad
movsl
push
xchg
fbld
push
bound
lcall
jecxz
stos
fldt
gs
incl
lock
js
ja
fnstcw
pop
out
push
sbb
inc
jnp
jmp
dec
stos
enter
es
clc
sahf
sbb
sub
fbld
and
call
inc
cli
fs
mov
stos
push
sub
mov
or
jg
pop
sti
fisttpl
out
dec
outsb
gs
rclb
sub
lahf
inc
aas
movsb
shl
ljmp
xor
or
lret
mov
xor
cltd
movsl
jb
push
sbb
into
jne
fs
out
decl
adc
sub
xor
pop
pop
push
dec
push
push
pop
decl
adc
dec
inc
dec
inc
pop
inc
inc
inc
push
push
hlt
popa
add
sub
mov
sub
inc
dec
add
inc
push
pop
clc
or
jb
gs
notl
mov
insl
out
add
sbb
jg
push
inc
add
mov
inc
pusha
and
mov
and
sbb
mov
add
divb
xchg
add
xchg
xlat
add
ljmp
cmpsb
push
scas
aad
hlt
iret
movzbl
stc
setg
xchg
lods
mov
daa
mov
cmp
pop
lock
mov
loopne
in
xchg
add
lods
stos
fimul
mov
in
rcl
mov
pushf
not
pop
ror
fstpl
mov
xor
test
add
jno
sub
sub
or
out
clc
cmp
sub
mov
cmc
lea
test
lock
ljmp
lods
repnz
inc
add
and
pop
sbb
mov
cmp
loopne
incl
fsubs
enter
rol
stc
not
inc
push
mov
outsb
sti
pop
mov
out
xchg
fsin
out
inc
aam
std
or
mov
inc
ficom
ret
in
into
lret
in
mov
pop
iret
pop
push
rolb
cs
xlat
mov
mov
and
jns
cmp
add
addr16
fucomi
dec
popa
add
addr16
lahf
daa
inc
cmp
pop
rcl
jae
add
fstpt
add
mov
repz
jmp
jnp
ucomiss
adc
pop
sti
sub
pop
mov
lahf
xor
xchg
adc
outsl
negb
mov
repz
aaa
sbb
imull
wbinvd
aad
in
jg
pop
mov
xchg
ljmp
fidivrl
pop
inc
fidivr
int
sbb
xchg
inc
push
aaa
mull
popa
iret
mov
shrl
fwait
mov
scas
sbb
mov
out
arpl
inc
xchg
testl
movups
flds
arpl
fidiv
xchg
test
fistl
ret
in
pop
ja
jnp
sbb
or
mov
out
add
cmp
cltd
add
std
ljmp
out
mov
pop
mov
add
fcoml
cmp
ret
fwait
jg
sahf
cmp
aad
fsubl
aaa
inc
aaa
scas
nop
pop
xor
sbb
imul
mov
in
inc
add
ror
pop
xor
or
loope
fsts
sarb
jnp
jae
inc
cli
pop
xor
mov
inc
frstor
jnp
xchg
jg
pop
sbb
fdivrl
negb
sarb
mov
outsl
jg
mov
pop
mov
testl
push
or
andl
dec
add
enter
cmc
add
and
or
pop
sbbb
fildl
std
pop
mov
cmpsl
dec
mov
and
aaa
popf
add
jmp
ror
scas
and
aaa
inc
sub
and
push
test
jg
pop
mov
call
insl
push
aas
add
jmp
mov
fbld
ds
pushf
push
into
loop
adc
add
push
push
pop
ja
or
xchg
push
xorw
mov
push
loop
ja
pop
call
push
jge
mov
and
sbb
aad
mov
call
xor
sbb
mov
mov
daa
add
mov
sub
clc
stc
stos
loope
mov
insb
xchg
xor
pop
push
je
or
pusha
mov
cltd
xchg
and
jno
ja
mov
and
or
add
cld
jbe
je
test
xor
push
push
sub
cmp
movups
inc
aad
jmp
icebp
out
call
or
scas
adcb
sbb
outsb
ret
shrl
loope
dec
inc
lret
sub
incl
dec
push
mov
loop
adc
add
jmp
testb
lahf
adc
arpl
pop
inc
in
in
out
movsl
mov
mov
scas
fisttp
jge
hlt
xor
push
inc
stc
add
in
adc
or
jno
xchg
adc
or
ljmp
push
pop
pop
jmp
push
ljmp
add
outsb
pop
and
adc
jns
popf
pop
fnclex
xchg
idiv
push
in
inc
and
inc
sbb
enter
lahf
out
inc
das
xchg
mov
or
decl
inc
jo
lods
cmc
jno
out
xlat
or
pushf
ds
std
lds
xor
insl
sub
pushl
cli
stc
call
repnz
mov
or
jl
mov
movsb
dec
or
ljmp
mov
mov
xchg
mov
ret
add
xchg
jg
adc
mov
dec
mov
and
add
ljmp
mov
mov
test
xor
aad
mov
jo
push
mov
sub
es
adc
cmp
shrd
call
jle
add
xchg
xor
data16
inc
repz
fwait
dec
cmpsb
stos
pusha
pushf
cmp
adc
or
pusha
push
push
inc
inc
push
orl
out
dec
mov
push
push
pushf
outsl
and
jmp
in
push
xor
and
lcall
cltd
push
scas
fbstp
pushf
sti
rorb
mov
mov
jmp
lcall
jmp
jmp
inc
add
enter
outsb
inc
aam
xor
push
ror
mov
cmpsl
mov
mov
test
mov
aam
icebp
jne
neg
pop
pop
stos
call
je
test
dec
push
mov
push
adc
call
jg
sbb
cli
or
lret
mov
xchg
mov
incl
out
jno
dec
rol
data16
repnz
cs
fcoms
rol
add
decl
in
or
xchg
push
inc
arpl
jbe
jnp
loopne
sub
notb
ja
jne
sbb
rcll
fbstp
rorb
stc
mov
jp
out
jp
shrb
xchg
sub
mov
jmp
lock
test
lea
inc
sti
add
or
pop
xor
and
dec
pop
push
pop
popf
out
fnop
adc
ja
mov
test
in
pusha
testl
pushf
adc
test
ret
aaa
adc
shr
popf
or
call
jmp
add
sub
push
add
mov
outsl
jo
addr16
jmp
cltd
rcrb
cmpsb
xchg
sbb
add
add
or
and
cmp
push
es
inc
mov
std
xchg
call
call
mov
fildl
cmc
shl
push
adc
in
dec
leave
push
inc
rol
out
xchg
xor
pop
dec
push
xchg
xor
movsb
rcr
pop
call
and
cmp
jmp
pop
sub
ret
sar
push
fbstp
ret
inc
rcr
mov
test
inc
jecxz
cmp
xchg
push
pop
push
or
xchg
mov
jne
addb
push
call
push
je
popf
pusha
push
test
sti
mov
pop
mov
dec
call
mov
dec
mov
fcmovb
icebp
pop
add
ret
pop
inc
dec
jge
mov
mov
sbb
into
mov
daa
orl
xchg
loope
not
lret
jnp
sarl
add
pop
pminsw
sub
sbb
adc
pusha
pushf
inc
cmp
outsb
pusha
lahf
test
cmpsb
call
mov
mov
sets
sub
cmp
push
sbb
cmp
xchg
fisubr
sbb
ljmp
sub
inc
push
mov
xchg
sub
call
dec
inc
mov
pop
ds
sti
inc
add
cmc
cmp
jmp
scas
jmp
and
mov
dec
mov
cli
xlat
std
aaa
call
mov
and
int
mov
add
in
cmp
ret
sub
push
add
jbe
aam
pushf
cmp
pushf
mov
cmpsb
add
movsl
sti
add
insl
adc
in
in
call
sbb
into
lret
mov
incb
lods
ljmp
xchg
mov
std
xor
pop
cmp
xchg
loope
pop
ljmp
mov
mov
dec
and
mov
bswap
pusha
in
sbb
fistpl
test
add
pushf
scas
cld
sub
hlt
cwtl
push
cwtl
mov
call
pop
push
push
sub
xchg
int
add
int
pusha
aad
add
inc
add
jmp
test
in
adc
jmp
fildl
mov
insb
add
loopne
jb
stos
js
rol
leave
push
call
pop
ja
hlt
stc
xchg
pop
lods
push
pushf
dec
pushl
test
ret
pushf
add
idiv
jno
or
loope
lock
cli
jo
mov
jecxz
aaa
add
hlt
or
sub
clc
pusha
and
pop
adc
aad
sub
and
imul
loop
mov
xor
ds
out
ret
sub
cmc
xchg
push
sbb
mov
adc
shr
call
loope
mov
add
jnp
add
mov
inc
test
and
sub
pusha
inc
push
jge
pop
pop
and
aam
sti
sahf
sub
call
repnz
add
fs
dec
mov
jb
cmp
js
sub
movsl
sub
mov
sub
cmp
mov
add
imul
add
add
xor
inc
into
call
xchg
daa
or
cmpsl
and
mov
cld
mov
loopne
or
sar
rorl
mov
fild
mov
xchg
and
cmpl
add
iret
push
pop
pop
loopne
and
jge
sub
inc
mulb
call
cmpsb
mov
outsl
in
iret
push
add
cld
cld
mov
jmp
call
push
xlat
sbb
adc
call
mov
mov
pop
call
ret
push
push
xor
mov
push
adc
loop
into
inc
push
outsb
ja
adc
push
inc
dec
jmp
roll
pop
mov
cld
pop
mov
stc
cmpsl
inc
inc
jo
pop
and
xchg
xor
adc
add
rcl
mov
test
push
inc
cmc
clc
or
mov
fildl
fnstcw
xchg
add
cltd
incl
lods
call
insb
xor
lods
movswl
push
pop
pop
mov
jg
xor
call
mov
sbb
mov
xor
cld
addb
mov
push
push
jae
adc
pop
pusha
out
incl
xchg
outsb
push
rorl
outsl
mov
push
lds
mov
mov
clc
mov
pushf
push
enter
in
ljmp
aas
add
cmpsb
cmp
mov
xchg
mov
add
shl
jmp
aaa
lcall
loope
xchg
jmp
dec
cmp
mov
call
and
cs
xor
shr
mov
aaa
jo
sti
mov
or
or
xor
loop
mov
rol
mov
sarb
aad
pop
stc
jbe
mov
rclb
sbb
jns
out
or
push
and
add
fcoms
jl
inc
cwtl
rcrb
insb
sub
push
or
fimul
mov
dec
insb
mov
cmp
imul
movsb
mov
pushf
jmp
cmp
les
movl
and
stc
outsb
sbb
sbb
xor
sub
pop
pop
nop
pop
xor
push
loopne
xor
push
cmp
or
dec
add
cld
or
jp
test
cmp
ss
mov
imul
push
dec
cmc
addl
mov
push
pop
fwait
inc
push
add
rclb
loopne
rcll
adc
pop
sbb
ss
es
cmc
test
pushf
add
gs
gs
in
jp
mov
test
jge
test
pop
cwtl
pop
call
adc
and
cmp
aas
in
pushf
sub
cmc
mov
cmc
push
sarl
xchg
lahf
cmpsb
psrld
adc
in
sub
lret
repz
adc
push
jmp
lret
insb
mov
ret
sbb
aas
jmp
dec
pop
or
iret
adc
cmc
test
test
xchg
add
in
test
cmp
inc
incl
in
mov
cmp
sbb
fadds
mov
shr
pop
adc
and
jb
adc
jo
and
loopne
sbb
mov
cmp
xor
jo
push
pop
in
xor
cmp
aaa
cmp
mov
push
cmp
add
ja
out
ljmp
jmp
aaa
or
nop
xchg
push
cmp
fwait
mov
stos
pop
push
cmp
xor
pop
push
out
cmp
mov
arpl
jecxz
mov
add
or
inc
inc
bound
jbe
mov
test
jecxz
jmp
xchg
sti
mov
inc
mov
jle
arpl
rclb
fidivrl
fisttp
cmpl
mov
pop
lea
repnz
pop
scas
push
lods
or
xor
addr16
add
jbe
adc
inc
mov
imul
sub
jmp
push
pusha
add
push
sub
adc
int
mov
pop
xchg
movzwl
aam
pop
mov
ret
es
mov
xchg
leave
out
shl
jne
cmc
add
mov
fwait
adc
enter
hlt
adc
add
adc
mov
adc
lahf
mov
rorb
out
es
pop
cwtl
cwtl
pop
setge
push
mov
sub
sbbl
push
add
fisttp
inc
xchg
sub
xchg
pushf
xor
fs
scas
sub
lcall
push
lea
popf
pop
sbb
ja
call
mov
jmp
fistl
or
shrb
jmp
mov
sbb
push
xchg
dec
pop
sbb
or
sbb
lods
movsl
dec
sarb
adc
frstor
testb
repnz
sbbl
pop
mov
loopnew
push
push
pop
push
fidiv
pop
sar
dec
inc
xor
sub
jg
mov
pushf
adc
push
inc
xchg
sub
mov
pop
push
clc
push
clc
popa
loop
and
sub
xchg
arpl
adc
xchg
in
jne
push
add
or
xor
add
in
out
inc
jge
jmp
jp
into
stos
pusha
jmp
push
mov
mov
scas
mov
call
mov
xor
xlat
mov
add
add
mov
insl
inc
and
and
insl
les
dec
in
add
loope
lods
push
mov
loopne
and
aas
pushf
das
imul
loop
into
mov
test
inc
daa
lock
arpl
sub
stc
inc
push
push
jmp
loopne
dec
cmp
movsl
and
sub
jp
mov
mov
jae
lods
gs
pop
mov
rcl
jecxz
pushf
cmp
movsl
mov
xchg
sub
xchg
mov
mov
arpl
inc
test
pusha
cmc
and
adc
mov
jle
out
pop
add
xor
add
xor
and
jae
mov
icebp
dec
frstor
shll
fnstenv
faddp
test
insl
leave
lea
mov
or
sbb
add
or
call
nop
push
loop
les
inc
cmpsb
sahf
mov
mov
jmp
mov
cmp
jecxz
xor
aad
add
test
ffree
add
repnz
cmp
jo
loopne
add
sub
cmp
cwtl
nop
adc
inc
or
push
inc
jbe
out
mov
adc
lods
ss
xor
rcl
inc
xchg
lret
cmc
jae
ja
or
mov
leave
pushf
push
mov
loope
and
testl
rcrb
mov
xchg
or
pop
faddl
inc
mov
push
and
sbb
fwait
pop
shrl
je
fimull
adc
push
inc
mov
inc
rcrb
mov
xor
xor
daa
adc
cmovae
in
and
lret
sub
stos
pop
movsb
inc
mov
aad
push
sub
bound
mov
pop
dec
sti
icebp
ror
pop
jp
push
loope
mov
cld
icebp
int
fsts
sub
cmpsb
jle
push
test
fildll
shr
cmp
and
pop
out
inc
cmc
call
push
xor
cmp
xor
mov
push
jne
ret
out
mov
push
aam
add
and
sbb
aad
xadd
xchg
cmp
cmc
push
mov
push
jmp
loope
push
mov
imul
push
sub
ss
xor
xchg
sbbl
or
xchg
xor
cmp
pushf
repnz
and
mov
mov
test
pop
mov
icebp
scas
sub
adc
call
ret
sub
adc
push
adc
push
pusha
adc
stc
outsb
rorb
les
daa
lods
cmp
cmp
pop
popa
outsl
repz
das
loopne
sbb
xor
call
fsubr
sub
bound
loop
jl
pop
sbb
lret
dec
ss
sbb
push
jmp
arpl
jge
call
and
push
add
leave
mov
sub
test
lock
pop
fsubrp
mov
std
fucomp
jmp
cmp
lods
outsb
mov
mov
push
ljmp
jns
push
insl
shlb
pushf
inc
xchg
sbb
ret
mov
je
pop
rorl
mov
inc
xchg
jle
pushf
and
lds
add
sub
outsl
dec
pop
lds
fisttpll
sbb
enter
std
std
icebp
mov
xlat
pusha
push
mov
dec
or
repnz
mov
sbb
xor
loop
jmp
popf
add
lock
ret
pop
fcomps
pop
xchg
ja
sub
ffree
int
jmp
daa
insl
add
xor
jecxz
incl
jne
scas
lods
mov
dec
rcll
mov
xchg
lahf
or
sahf
mov
fs
mov
push
in
mov
lcall
incl
iret
sub
jp
add
rorl
lods
in
add
loop
stos
adc
dec
js
cld
lcall
hlt
xor
cld
jmp
popa
nop
lock
loopne
lock
or
mov
fsubl
cmp
cltd
out
es
divb
bound
sub
xchg
push
push
mov
mov
cltd
sbb
call
rcll
adc
sub
lret
pop
or
jl
lods
test
push
pop
mov
subb
rorl
ret
shrb
mov
lcall
pop
clc
std
nop
add
mov
clc
sub
xor
jmp
or
les
jmp
mov
xchg
cmp
repnz
fidiv
xchg
ret
inc
call
dec
dec
cmp
jmp
pusha
mov
ljmp
mov
call
inc
sub
mov
sub
mov
mov
adc
pop
jae
push
dec
test
mov
inc
movsb
js
jmp
daa
cmc
js
adc
sbb
sar
movsb
fcomps
jmp
stos
mov
mov
adc
lea
aam
pop
mov
aaa
mov
xor
inc
mov
pop
add
and
popa
adc
and
mov
andnps
fcmovu
jmp
mov
push
mov
jmp
and
ds
push
push
data16
lret
sbb
mov
fsubs
adcl
sub
push
pop
pusha
adc
sbb
push
jmp
add
mov
icebp
pop
incb
mov
xchg
xchg
xchg
ret
dec
outsl
mov
mov
into
push
test
jne
popa
lahf
push
push
mov
sahf
mov
or
std
and
lea
and
sub
ret
and
popf
pushf
rolb
movsl
rcrb
add
pop
mov
adc
jle
push
push
sbb
int3
iret
out
cmp
int3
pop
movsl
jmp
or
out
sbb
adc
loope
cmp
push
add
or
fisttpll
cmp
jb
popl
cs
test
cmc
gs
lods
pop
fisttpll
add
mov
and
mov
mov
subl
adc
cmc
test
pop
addl
stos
xor
xchg
cmp
cld
pop
mov
leave
mov
or
icebp
jmp
jo
push
lock
fxch
add
push
add
adc
and
mov
push
jmp
push
add
call
mov
mov
mov
sbb
add
jle
pop
cmp
xor
xor
stc
addr16
scas
test
xchg
pop
jbe
rclb
jmpw
and
push
or
jg
push
xchg
mov
test
lock
mov
push
pop
pop
hlt
mov
add
stc
inc
cwtl
lds
cmp
stc
adc
and
fisttpll
xor
push
jle
decl
dec
mov
scas
mov
cmpsl
sub
ret
incl
cmp
inc
pop
xor
or
jb
and
hlt
scas
sti
decl
aas
xchg
jnp
xchg
repnz
sub
dec
stos
scas
fs
mov
adc
push
pop
mov
ljmp
or
sbb
and
mov
or
add
lods
movsl
ds
popf
sbb
int
xchg
rorl
mov
ljmp
jne
ljmp
mov
push
push
cwtl
mov
fcoml
push
sbb
cmp
jg
int
add
cmp
outsl
gs
lds
xchg
icebp
pop
or
test
fstl
jo
test
jmp
sbb
out
sbb
add
jl
rorb
je
sub
test
shll
outsl
jp
and
mov
inc
jp
xlat
adc
das
cld
jmp
mov
and
arpl
cltd
mov
popa
push
jmp
xchg
mov
fisttpll
test
cmp
push
xor
call
ljmp
leave
jle
add
sub
aaa
mov
sbb
mov
or
mov
ss
ja,pt
cmp
push
jno
call
xchg
sub
mov
stos
mov
paddusb
mov
push
fwait
add
add
aaa
insb
call
ja
jno
push
jbe
jno
or
adc
push
call
jnp,pt
sub
pop
dec
outsb
or
ss
cmpsb
sti
ss
ljmp
push
pop
sub
sbb
push
ret
adc
mov
nop
or
add
jno
pop
and
jp
orb
add
arpl
ljmp
sbb
add
ror
in
icebp
std
add
add
push
cmc
test
xor
cmp
mov
bound
into
imul
shll
hlt
xchg
movsb
call
add
incl
mov
imul
jmp
push
call
aas
adc
insl
push
pop
adcl
add
aad
call
xchg
add
sub
or
int3
movsl
jne
mov
sbb
ret
aad
adc
mov
push
xor
or
add
daa
or
mov
pop
cld
add
pop
cmp
cmpsb
inc
incb
add
popf
or
jge
pop
sub
mov
cld
ljmp
jmp
fild
jge
push
add
inc
jecxz
hlt
add
xchg
or
daa
lods
add
mov
and
les
sub
cmp
push
fldcw
mov
push
mov
sub
insl
movsb
dec
cld
fsts
call
xor
test
test
sbb
subl
or
cmp
mov
mov
aam
in
loopne
add
xchg
sti
call
jo
adc
push
test
inc
sub
add
mov
iret
ds
jmp
and
insl
test
cmp
cmpsb
xor
ja
mov
jmp
cld
sub
xchg
clc
cmp
fcompl
mov
clc
lods
jbe
iret
inc
call
aaa
add
cmp
call
push
cmpsb
xor
outsb
fs
pusha
and
sbb
pusha
adc
pop
mov
call
ljmp
test
int
push
lret
push
mov
rorb
xor
stos
add
and
sub
jle
lock
and
xor
push
aam
lock
cmp
push
pop
push
std
setno
mov
out
cmp
jg
iret
jl
sub
mov
push
outsb
xor
fwait
inc
imul
roll
lret
and
push
mov
or
popf
sahf
add
push
pusha
push
fadd
add
adc
bound
cmp
outsl
fdivs
mov
in
and
xor
cmp
cmc
call
xchg
add
adc
mov
pop
mov
xor
fwait
pop
lcall
sbb
outsl
xor
push
lahf
sbb
mov
lods
stos
call
inc
call
mov
mov
add
add
dec
inc
fcmovnb
cmp
call
sbb
jg
inc
movsb
loope
cmp
aad
shrb
or
loopne
fwait
js
xchg
cmp
imul
lods
sahf
stc
popa
jbe
push
xor
inc
xor
ret
xor
push
mov
pusha
gs
adc
push
push
and
fsubl
mov
movsb
pushf
rorl
xor
loope
les
jmp
adc
add
ret
bound
adc
inc
cmc
push
lcall
loopne
sub
fldcw
xchg
push
inc
loope
cmp
dec
mov
pushl
test
js
scas
call
or
daa
push
push
je
dec
std
mov
call
or
push
stc
rcl
jecxz
pusha
mov
xor
adc
enter
es
insl
mov
mov
inc
imul
jmp
sbb
inc
xor
xor
xchg
jnp
adc
call
cpuid
push
cmpsb
sbb
xor
test
add
mul
sub
mov
mov
rcrb
push
mov
pop
sub
add
xchg
movsb
mov
dec
push
sbb
inc
mov
stc
fsubr
cmp
sub
push
and
inc
add
hlt
lret
mov
xor
ja
sub
out
fimul
sbb
inc
adc
lods
pop
cmp
mov
or
mov
not
mov
fldt
push
es
mov
inc
mov
and
adc
fcomps
mov
ljmp
pop
push
jbe
xor
mov
push
nop
jno
adc
add
adc
xor
xor
cmp
clc
add
push
dec
push
push
popa
or
les
jmp
inc
not
xor
sti
pushf
sub
and
incl
mov
pop
and
and
inc
imul
clc
adc
ja
pop
xchg
rorb
push
call
mov
xor
push
jmp
je
and
loopne
mov
adc
mov
sub
fsubr
lret
test
clc
mov
sbb
cmp
xchg
mov
and
call
or
lock
jp
cmp
adc
jmp
jnp
icebp
inc
xlat
orb
and
dec
push
or
pop
out
xor
call
jmp
adc
das
call
add
popa
frstor
push
jno
dec
jmp
jp
ret
in
jecxz
call
pushf
jo,pt
in
pop
orps
add
out
push
xor
cmp
mov
pushf
or
or
ret
dec
test
cwtl
out
fidivr
sbb
xor
push
mov
pop
pop
movsb
int3
add
mov
pusha
jmp
xor
inc
sahf
mov
stos
and
sysexit
cmp
jmp
inc
push
stos
test
frstor
sub
jle
mov
push
cmp
iret
imul
inc
jo
sbb
xchg
dec
ss
ss
int
jns
jbe
ficomp
cwtl
pusha
lahf
call
jne
dec
xchg
test
push
pusha
jge
jb
inc
pop
lcall
inc
ja
jno
imulb
movsb
mov
les
ljmp
pusha
lods
jmp
adc
outsb
adc
int3
jmp
lahf
daa
lea
rorb
test
dec
shlb
pop
jno
pop
call
mov
push
sahf
dec
and
adc
add
mov
stc
mov
adc
cmp
clc
stos
mov
jmp
nop
loopne
std
push
inc
xor
pop
test
or
push
sub
jg
cmp
outsb
sub
aaa
add
repz
jmp
adc
aas
add
push
adc
sarb
aad
xchg
jle
adc
xor
dec
jnp
push
mov
notl
fs
lock
mov
lahf
jl
lcall
pushf
jmp
aam
out
mov
adc
cs
or
cli
push
push
lock
cmp
mov
or
or
ss
call
dec
push
stc
jae
mov
mov
add
dec
inc
push
arpl
daa
cmp
cmc
movsb
push
in
xor
adc
cmp
data16
sbb
fistl
in
idiv
inc
call
test
lea
cmp
icebp
lods
les
in
in
jmp
or
loopne
mov
pushf
rcll
jbe
mov
rorb
test
push
push
mov
popa
cmc
pusha
mov
dec
lock
aam
sub
and
push
mov
cld
dec
icebp
cld
xchg
push
jg
add
adc
dec
dec
jae
faddl
loopne
jmp
das
fwait
jmp
pop
push
push
and
xchg
mov
inc
leave
cmp
dec
pop
or
or
and
cmc
cmc
mov
cmp
adc
ret
cmc
std
sub
icebp
dec
xchg
dec
cmp
mov
lcall
xor
add
out
outsl
mov
out
clc
push
cwtl
mov
js
dec
test
push
sub
sbb
pop
or
inc
sgdtl
inc
lods
push
hlt
pop
in
daa
sbb
adc
add
mov
mov
nop
push
scas
pop
xchg
aas
rcl
or
xchg
jbe
adc
out
test
outsl
mov
adc
mov
inc
cmpsb
cli
repz
jnp
pop
pop
int3
pushf
push
les
inc
notb
mov
jmp
lock
jmp
jle
fsubrp
jmp
push
mov
test
jge
outsl
pushf
or
pop
add
mov
imul
xor
cmp
pusha
fimul
pop
or
xchg
inc
push
pushf
sbb
mov
and
push
inc
cmp
cltd
or
and
xlat
pop
inc
jns
cld
xchg
lock
push
mov
mov
loop
lds
setl
inc
sbb
or
lea
inc
xchg
mov
and
pop
pop
outsb
jae
cld
sti
fwait
or
outsl
jge
jmp
stos
lods
fnstenv
cmp
sub
test
lock
fsubrl
in
mov
loopne
out
incl
push
push
jmp
sahf
or
sbb
pusha
push
xchg
loopne
push
pop
dec
cmp
lea
mov
fiadd
fs
add
gs
nop
addr16
lahf
stos
pslld
imul
les
aas
jb
ficompl
mov
push
push
inc
mov
sti
cmp
bound
mov
fdivrs
fsubp
jge
mov
jg
pop
imul
test
mov
or
div
dec
jmp
test
insb
clc
rcll
jmp
pushf
push
push
xchg
in
pop
inc
bound
xchg
adcl
inc
pop
psrlq
and
cmp
flds
adc
aad
loope
xor
mov
enter
stc
cmp
mov
jmp
dec
push
or
call
shl
mov
clc
cmpl
pop
int
ficompl
xchg
mov
les
stc
sbbl
imul
outsl
jne
in
push
pop
push
aaa
push
jo
outsb
sahf
sbb
mov
push
mov
movsb
add
clc
xchg
cmpsb
add
jl
pop
mov
mov
jbe
in
push
jmp
in
mov
and
inc
adc
mov
test
mulb
push
xchg
pop
or
ds
cmpsl
aaa
sub
push
and
fmuls
dec
popa
or
aam
dec
add
lock
push
lcall
xor
sbb
aaa
push
loopne
pop
loopne
push
pop
mov
jb
ror
cltd
sti
insb
pop
or
fwait
pop
add
xor
rcrb
stos
pusha
lods
and
testb
inc
pop
imul
mov
inc
leave
pusha
je
xchg
cmc
sbb
or
add
pop
jmp
ret
xor
cli
arpl
imul
scas
lds
adc
lds
mov
xchg
sbb
outsl
jb
fwait
ss
movsb
jmp
dec
pop
pushf
dec
imul
jmp
push
loop
mov
push
sub
mov
lahf
dec
adc
js
jge
pop
mov
inc
out
mov
adc
cmp
lea
xor
std
push
js
sbb
add
add
pmullw
repz
push
jmp
sbb
aad
push
aaa
aad
mov
or
jle
and
lcall
out
sbb
mov
mov
add
test
jl
roll
int
mull
sbb
test
les
mov
jmp
mov
ss
push
mov
mov
inc
loope
aam
jg
push
xchg
inc
ret
cs
pop
rcll
lock
mov
sub
jecxz
sbb
scas
sub
imul
cmp
cmp
mov
icebp
pop
aaa
or
imul
out
inc
loopw
cwtl
pop
lock
jg
sbb
pop
hlt
call
daa
jl
pushf
js
iret
pop
mov
ljmp
mov
daa
cmp
ret
nop
rolb
popf
loopne
rclb
or
add
inc
in
and
push
outsl
pusha
xlat
sub
loopne
scas
adc
mov
test
roll
pop
xchg
sbb
pusha
push
dec
ret
push
adc
adc
cmp
cmp
call
mov
sbb
shl
jb
outsb
adc
mov
in
lods
xor
jmp
mov
pop
or
sub
mov
sbb
push
cli
jecxz
or
mov
cmp
pop
bts
xchg
pop
ja
push
pushf
push
jmp
pop
sub
int
shr
popa
test
xchg
loope
aad
insb
pop
push
ljmp
leave
out
lods
movswl
dec
adcl
fdivs
inc
clc
daa
dec
jmp
sbb
add
mov
pop
pop
dec
jge
stc
or
push
jge
scas
mov
pop
leave
pop
call
cwtl
shlb
pop
test
add
push
popf
and
jmp
jge
xchg
cli
insb
inc
mov
inc
jle
imul
insl
xchg
xchg
jb
int3
sub
paddw
mov
fs
call
push
dec
stc
add
jmp
ret
jmp
pextrw
mov
cmpsb
cmp
pop
pop
iret
aam
divb
push
push
mov
insb
add
ja
and
in
clc
lods
outsb
cs
pop
das
cwtl
aad
adc
xchg
stos
sub
push
jg
std
aas
jmp
xchg
or
or
lea
lea
pop
push
pop
dec
mov
inc
mov
mov
rdpmc
adc
pushf
nop
jmp
cmp
repnz
pop
inc
fucomp
or
cs
pop
rcll
ljmp
jbe
sbb
repz
call
sbb
add
daa
inc
xor
lods
and
adc
cmp
out
mov
mov
dec
das
pop
dec
sbb
popf
pushf
xchg
outsb
in
outsl
dec
mov
add
mov
and
in
or
or
call
fs
inc
xchg
jne
in
outsl
cwtl
jecxz
rorl
mov
push
pushl
ficomp
ds
mov
mov
jmp
lea
das
push
aad
add
jp
call
jae
jl
imul
pusha
or
sahf
xor
mov
rcr
aam
aaa
xor
mov
jecxz
fwait
pusha
add
dec
or
or
shr
cld
adc
cmp
push
mov
xor
sbb
dec
cwtl
cli
dec
nop
jo
adc
xchg
outsb
xchg
pop
shll
pop
fldl2t
lret
and
sub
data16
leave
pop
mov
sub
sub
push
enter
sbb
hlt
pop
inc
inc
sub
in
inc
mov
pop
aaa
mov
push
fdivl
fnstsw
xchg
push
mov
inc
cmp
or
pusha
lods
rcr
mov
inc
xor
cld
xor
adc
dec
cs
je
sti
lcall
in
xchg
int3
jno
mov
call
adc
push
add
in
jno,pn
adc
pop
mov
pusha
mov
pop
mov
or
lret
push
pop
inc
inc
in
and
ret
mov
mov
dec
and
mov
pop
mov
or
rcl
push
icebp
and
arpl
aaa
loopne
in
cwtl
or
xchg
sbb
sub
adc
call
in
inc
shr
sub
adc
jle
shll
call
or
ret
outsb
test
insb
loopne
movsl
mov
jae
fsubr
push
xor
push
clc
call
mov
dec
sbb
jmp
sahf
out
adc
push
or
sub
insl
fdivrs
xor
insb
repz
cmp
xor
pusha
mov
imull
pop
mov
lret
fsubrp
or
outsl
jno
lds
cld
mov
call
mov
jmp
lea
xchg
clc
mov
mov
lods
clc
sbb
pop
push
or
mov
icebp
add
or
cmc
push
scas
xor
imul
aaa
pusha
aaa
in
movsl
or
clc
dec
mulb
sub
aas
fcmovnbe
clc
aad
mov
js
dec
fsubr
mov
call
jo
testl
sub
adc
mov
rolb
stos
js
push
push
clc
pusha
sub
cs
dec
fnsave
adc
les
lods
or
test
push
mov
es
roll
cli
jmp
pop
xchg
ljmp
push
enter
push
int3
adc
push
sub
and
rcll
jmp
pop
pop
pop
push
adc
cld
fcmovb
xor
jnp
das
fnstsw
sbb
push
cmp
inc
sub
sahf
jb
push
int
repz
or
xor
mov
xor
cmp
mov
mov
ret
sbb
jmp
lret
jns
mov
or
out
mov
xchg
mov
sub
sub
push
decb
xor
jmp
push
add
mov
int
inc
sub
xor
repz
push
movsl
cs
add
out
adc
adc
jnp
jg
and
add
and
pop
pop
inc
xchg
cwtl
shll
cwtl
sub
pop
movsb
rol
and
insb
sub
push
lret
in
or
mov
sub
call
gs
sbb
jb
adc
or
xchg
mov
data16
pushl
pop
mov
sub
jbe
gs
jle
mov
div
jmp
cmc
aam
adc
ffreep
outsb
rorl
jmp
repz
cmp
loop
in
inc
dec
dec
mov
jecxz
dec
xchg
push
ljmp
scas
insb
xchg
sahf
cmpsl
scas
cld
lods
enter
ljmp
ss
jae
push
dec
lret
mov
xor
jbe
push
jae
cli
mov
sbb
mov
sub
mov
ljmp
dec
mov
inc
jecxz
mov
cmp
lds
inc
push
lret
imul
mov
pop
add
dec
cld
push
insb
test
add
and
dec
and
in
push
pusha
shlb
inc
lock
add
add
jmp
cmp
sbb
xchg
roll
mov
jmp
cli
imul
cmc
loop
scas
cmp
movsb
decb
pop
or
or
sbb
es
rep
gs
in
movsb
gs
ljmp
lods
pop
jp
sub
xchg
mov
inc
sbb
push
mov
movzbl
enter
gs
mov
xchg
push
pop
jmp
les
inc
lret
test
xor
test
or
sub
neg
gs
jmp
or
bound
loopne
je
pusha
push
dec
les
cmp
roll
pusha
mov
sbb
add
adc
inc
scas
insl
and
movsb
xchg
dec
mov
and
push
sbb
sahf
add
test
mov
movsl
xor
push
repz
mov
fisttpll
inc
outsb
mov
xchg
mov
xchg
or
add
inc
mov
or
xchg
jmp
or
call
aas
mov
mov
ret
or
mov
xor
cmp
ret
xchg
mov
fcmovnu
xchg
push
test
movsl
roll
xbegin
loope
push
ss
adc
jns
mov
jne
inc
or
insl
scas
cmp
and
ljmp
xchg
test
or
cmp
jg
es
inc
adc
push
jl
sbb
push
lods
je
push
call
pop
jl
xchg
addr16
repnz
jmp
jbe
call
mov
pop
mov
pop
lret
int
pushl
mov
loopne
arpl
xchg
jecxz
dec
sbb
pextrw
jbe
imul
lcall
ret
insb
xor
mov
xchg
loopne
ljmp
pusha
aam
inc
sbb
ljmp
std
pushl
add
leave
ljmp
lods
out
cmp
xor
mov
fdivrl
jg
ficom
js
fistl
lods
mov
adc
push
into
rorl
loop
clc
pop
pushf
scas
sbb
hlt
mov
mov
adc
ret
pop
jle
pop
add
rclb
push
pop
dec
lods
inc
jne
inc
or
mov
xor
outsl
and
in
mov
psubb
daa
stos
pop
leave
or
enter
sub
push
insb
rcrb
sbb
jo
mov
xchg
inc
mov
fdivs
fwait
test
jns
mov
push
or
into
cmc
lds
sahf
xor
gs
mov
cwtl
data16
cmp
sti
mov
or
je
and
je
lock
movsl
les
pop
pushf
rorl
clc
mov
movsl
dec
popf
sbb
movsl
cmp
jne
and
mov
leave
push
mov
inc
scas
jno
mov
or
push
ja
lea
out
call
insl
je
fsubs
mov
mov
call
notl
add
cld
cmp
outsl
pusha
fisttpl
pop
jecxz
hlt
lahf
pop
rcl
sub
pop
pushf
push
int
adc
ja
loopne
and
push
jl
bound
test
call
cmp
jmp
push
negl
jo
loop
push
add
rcll
fldl
adc
adc
hlt
test
cmp
aam
int3
jbe
cs
hlt
call
add
push
mov
fsubrs
clc
repnz
or
jbe
mov
repnz
sbb
rcrl
adc
pushf
pushf
sub
lret
cwtl
les
addl
mov
roll
xchg
jo
nop
in
pop
mov
int
pop
stc
add
jbe
inc
clc
push
sbb
push
jmp
into
ss
ficompl
mov
inc
mov
xor
pop
push
mov
inc
pushf
inc
call
add
mov
psrlw
loopne
mov
adc
jmp
cmpsb
inc
cs
outsb
insb
and
in
mov
int3
and
push
lock
leave
clc
jne
adc
adc
loope
pop
out
cld
sbb
enter
pop
ret
outsb
mov
pop
movsl
cld
mov
xlat
std
hlt
push
mov
xor
mulb
mov
and
pop
aad
add
aas
call
push
ds
mov
pusha
push
call
lcall
or
jmp
cmp
pop
inc
loopne
inc
fcomip
imul
xchg
call
movsl
adc
xchg
lds
dec
xchg
bound
or
adc
fimull
sahf
call
pop
lret
fsubl
cmc
add
and
push
inc
in
fadds
and
push
adc
call
clc
cmc
push
push
push
push
mov
dec
sub
dec
cmp
scas
push
les
add
or
mov
sub
xor
lods
add
mov
fimul
icebp
fnsave
adc
sub
sub
call
mov
push
mov
outsb
jp
orb
push
sub
clc
and
dec
comiss
pop
shll
pop
cmp
call
popa
or
mov
jecxz
imul
scas
sbb
setge
inc
dec
mov
movsb
loopne
push
or
call
pop
add
mov
clc
and
arpl
repnz
das
cmp
hlt
bts
cwtl
cmc
mov
add
inc
sbb
pop
or
pop
lods
lock
adc
and
adc
mov
xor
dec
in
mov
add
cs
lcall
cmp
outsl
std
mov
add
rol
mov
add
and
xor
pop
arpl
test
fbld
in
repnz
push
outsl
mov
sbb
jg
das
hlt
daa
pop
adc
pop
stos
adc
jno
fwait
xor
call
outsl
pop
adc
adc
cmp
imul
or
jb
pop
pusha
popf
cltd
enter
pop
repz
fs
test
popl
popf
orl
add
pop
jo
mov
lods
cmp
shrb
sbb
and
sbb
or
js
outsl
inc
mov
push
sub
adc
push
xor
inc
pop
fs
sbb
daa
shrb
sub
jb
mov
sarl
mov
xchg
lea
jne
andl
xchg
popf
scas
hlt
jo
out
sub
cmc
clc
loopne
adc
std
jmp
inc
or
loope
mov
jbe
push
inc
inc
jg
roll
xor
or
lahf
mov
add
ret
nop
lds
jmp
mov
cmc
add
inc
sbb
inc
mov
ds
add
add
addl
aad
xchg
push
test
ja
sahf
pop
adc
js
push
lods
cmp
ret
cmp
mov
mov
mov
int3
xchg
inc
pop
pop
aaa
dec
ja
div
dec
fwait
mov
pop
rolb
xchg
push
das
fwait
shr
mov
clc
xlat
test
das
and
dec
sbb
shll
addr16
fisub
repz
popf
add
push
adc
push
hlt
lea
lds
jmp
pushf
pop
pop
addb
mov
or
or
inc
lods
dec
push
bound
lret
cld
movsb
test
jl
shll
mov
sbb
scas
mov
shll
jne
cwtl
inc
stc
jo
add
or
mov
inc
xchg
neg
add
out
cmp
adc
dec
adc
hlt
test
mov
incl
adc
or
pop
lahf
mov
int
aaa
or
cli
jg
lea
imul
loopne
mov
pop
and
inc
push
orl
mov
sar
dec
adc
popa
push
pusha
pushf
lahf
mov
sbb
adc
roll
cs
sub
pop
adc
out
and
push
sbb
cwtl
lea
mov
mov
mov
insl
inc
xchg
scas
push
add
mov
call
loopne
dec
sub
cmp
jmp
sub
call
addl
jmp
xchg
aam
lea
test
inc
roll
rclb
mov
insl
cli
lods
outsb
stos
mov
outsl
sub
mov
jmp
jmp
imul
push
cmp
jb
aaa
push
or
sub
loope
jbe
aaa
sub
sbb
repz
sub
push
jp
fcmove
pop
xchg
xor
add
lea
not
popa
xor
mov
inc
sbb
cmc
arpl
pop
push
je
adc
push
mov
pop
ret
dec
sbb
cmp
add
adc
icebp
sbb
or
aad
rcrl
lcall
mov
pusha
addl
call
gs
sbb
shrl
mov
xor
clc
mov
ror
ret
mov
out
or
rclb
je
lods
and
cmp
push
lods
into
rolb
loopne
punpckldq
inc
xor
lcall
call
and
mov
into
dec
loope
mov
push
and
jecxz
lods
or
clc
pop
das
cmp
jg
iret
adcb
sbbl
or
pop
nop
loope
inc
or
mov
out
jmp
jno
call
mov
cmp
daa
lcall
push
mov
sbb
ja
and
or
pusha
test
sbb
mov
repz
in
dec
pusha
sarl
mov
hlt
pop
or
test
ljmp
or
mov
ret
pop
ss
outsb
adc
and
das
sbb
incb
xchg
mov
pusha
clc
cwtd
popf
ret
insb
or
icebp
addl
mov
sub
loope
xchg
das
cli
xchg
inc
adc
nop
outsl
sub
add
push
cmc
pop
cmc
out
add
fs
gs
mov
insl
jmp
je
xor
pop
sub
xchg
iret
mov
add
mov
lcall
add
mov
pop
push
adc
fldl
adc
jg
sti
push
mov
xadd
inc
dec
ja
fcom
mov
test
or
aas
je
imul
cmp
push
je
push
sti
lods
jnp
ret
or
push
adc
dec
std
iret
insb
or
into
mov
mov
cmp
mull
stos
mov
call
jmp
cmp
and
push
sub
ja
xchg
rcll
call
add
sbb
mov
pop
test
fist
ja
out
fdiv
mov
fldl2t
xor
jmp
test
mov
imul
ds
or
pop
ljmp
test
push
cmp
push
pusha
xor
cli
fcoms
shrb
mov
mov
mov
loopne
jo
pop
or
mov
jmp
jmp
hlt
pop
rol
call
sbb
xchg
push
push
sub
cwtl
stos
inc
stos
mov
push
jae
add
arpl
jo
add
mov
lcall
std
jg
mov
add
jo
loopne
imul
pop
sbb
lds
jmp
imul
bound
jb
jbe
mov
dec
cmp
std
mov
das
icebp
mov
sbb
xchg
and
daa
stc
nop
pop
fist
test
mov
popl
jge
pushl
imul
mov
fimull
popf
pop
sahf
imul
pushf
nop
imul
lds
call
mov
test
cmp
pop
or
movsb
push
repnz
mov
add
push
adcb
pop
add
sbb
faddl
mov
sbb
xor
rorb
out
push
mov
inc
mov
mov
or
mov
jmp
inc
hlt
movsl
out
ss
and
inc
mov
mov
mov
daa
dec
scas
out
call
nop
adc
fldenv
sarb
mov
loop
xor
test
test
aad
loopne
aad
mov
pop
inc
gs
mov
lret
test
or
cmp
mov
scas
scas
movsb
sbb
inc
mov
fst
mov
mov
cmc
cmc
mov
outsb
adc
test
int3
test
cmp
or
js
int
or
mov
pop
pop
test
pop
xor
incb
inc
adc
call
es
xchg
and
addr16
repnz
enter
push
jl
jmp
das
cmpsl
lea
loope
push
mov
dec
stc
pusha
add
arpl
cmp
xchg
pop
mov
push
adc
push
inc
call
add
mov
sub
and
jmp
outsl
js
sahf
cmp
shlb
cmc
test
cmpsb
mov
inc
push
mov
sbb
fildll
outsl
addr16
les
fcoms
jbe
sbb
add
mov
adc
inc
jmp
addb
add
stc
push
call
push
nop
push
pushf
insb
mov
sbb
xlat
add
and
or
out
fistpl
add
mov
pushf
lcall
ljmp
pushf
jg
test
mov
jl
xor
dec
ljmp
out
and
les
fdivrp
mov
sahf
jmp
jnp
mov
adc
push
push
clc
inc
rorl
clc
mov
pop
pushf
sbb
mov
mov
scas
sbb
or
dec
insb
mov
inc
xchg
mov
call
leave
pop
test
leave
insl
dec
mov
push
sbb
sub
sbb
out
mov
jecxz
jg
andb
movl
mov
lret
fnstcw
push
pop
js
call
sbb
jb
add
stos
cmp
dec
jae
sub
sub
or
dec
push
lea
push
jp
cmpb
add
xor
jmp
sub
scas
iret
out
add
pop
cmc
clc
scas
jp
mov
pop
and
out
inc
pop
xchg
push
sub
cmp
dec
sbb
fisubl
add
call
push
daa
pop
and
inc
ror
dec
add
pop
mov
jg
setno
mov
in
ret
popf
ficoml
sub
ja
or
cmp
stos
cli
mov
shr
hlt
xchg
push
and
lret
jecxz
jl
mov
fs
or
mov
xchg
fadds
sub
push
mov
xlat
xchg
out
mov
mov
andl
inc
and
mov
bound
aad
pop
mov
ffreep
call
cmpsb
push
mov
dec
rcrl
and
sbb
jecxz
out
adc
and
loopne
sub
or
je
pop
add
jg
xchg
or
xor
mov
pop
sbb
into
and
jne
jbe
xor
inc
daa
adc
mov
out
cltd
mov
mov
in
push
outsb
cmp
jmp
adc
int3
push
out
enter
mov
out
add
sbb
idiv
fldenv
mov
movsl
negl
jns
cli
lcall
pusha
mov
adc
cmp
sub
fucom
in
scas
sbb
and
ljmp
sahf
ret
xchg
adc
push
mov
mov
adc
leave
out
xchg
in
jmp
loopne
div
push
xchg
mov
push
inc
pop
pop
loop
addl
sub
mov
sub
test
shr
push
pusha
xchg
popa
sahf
std
inc
sar
stos
push
fcompl
cltd
add
adc
xor
sub
adc
or
cmp
ret
add
xor
push
loop
inc
pushf
xor
sarl
loop,pn
jae
ror
jmp
cmp
ljmp
and
outsl
jnp
sbb
aas
rclb
xor
jmp
ret
in
jb
push
xchg
adc
cld
ds
inc
mov
inc
out
or
fldl
daa
push
into
jle
call
add
add
icebp
ret
cwtl
or
icebp
add
mov
pop
mov
aas
psrad
mov
pushf
pop
jne
icebp
int
and
test
popl
cmp
sub
mov
or
jg
add
subb
rclb
cmp
movsb
outsb
cld
mov
ljmp
mov
push
push
les
repnz
push
gs
add
and
outsl
cmc
mov
push
shrd
test
and
mov
imul
stos
lock
mov
into
je
std
dec
inc
fptan
das
sbb
daa
mov
mov
and
jb
and
jne
data16
call
in
xor
adc
addb
xor
or
push
pop
cli
mov
mov
out
test
mov
icebp
adc
jl
arpl
fs
daa
lret
dec
rolb
push
dec
das
ficom
push
inc
insl
mov
sub
and
and
xchg
pop
pop
or
push
sbb
cltd
repnz
mov
mov
xlat
stc
pushf
orb
sub
xchg
mov
pushf
push
mov
je
sub
and
xor
sbb
jmp
repnz
or
fidiv
inc
scas
mov
sub
movsb
mov
cwtl
dec
push
dec
std
and
outsb
xchg
inc
mov
jne
cmp
push
scas
mov
adc
push
popa
rcrl
dec
xchg
shr
mov
das
fsubr
jg
ljmp
popf
icebp
sahf
aas
jnp
aad
jg
arpl
sub
stos
pop
out
cltd
out
rclb
mov
mov
inc
cmp
lock
add
or
loop
imul
jo
xor
adc
jecxz
sub
addr16
or
lret
dec
xchg
or
mov
scas
subl
lods
clc
call
lock
out
inc
inc
adc
inc
add
jecxz
cltd
dec
add
fimull
int3
or
cmp
cli
and
lods
bound
lret
cmp
mov
sub
jae
jne
stos
fwait
mov
daa
or
inc
incb
aad
pop
imul
test
pop
mov
jmp
or
aas
sbb
add
pushf
add
std
add
cmp
mov
clc
notb
mov
dec
mov
loop
ficom
mov
in
stos
push
cs
dec
data16
insl
mov
mov
and
hlt
aaa
mov
imul
enter
adc
inc
push
mov
pop
jb
mov
inc
adc
popa
movsb
or
ror
push
incl
cmpsl
mov
mov
inc
mov
sub
sub
js
addr16
test
dec
adc
mov
sub
and
sbb
popa
movsb
incl
fldt
rsqrtps
mov
sub
cwtl
fcmovne
and
jl
gs
clc
pusha
or
mov
test
cs
or
fisttpll
les
dec
and
sbbb
or
jmp
aas
pop
mov
xchg
pusha
inc
cld
cmpsb
mov
fwait
and
push
nop
addb
push
aaa
cmp
mov
test
jne
ret
jb
mov
push
or
test
mov
push
adcl
in
mov
and
sub
adc
xchg
adc
pop
icebp
stc
push
mov
repnz
xlat
call
jg
rcrl
xadd
push
push
dec
cmp
and
stc
xor
rol
test
sbb
jo
or
cmp
or
inc
add
icebp
fistl
loop
test
cmp
inc
adc
rcr
push
xchg
ljmp
out
sub
mov
mov
fstps
pop
repz
inc
lds
ds
inc
aas
adc
pop
fldt
adc
and
loopne
out
adc
ret
sub
or
mov
test
cwtl
sbb
pop
jo
push
cltd
mov
adc
adc
jb
fistpll
push
xlat
push
pop
roll
nop
adc
mov
clc
jmp
ret
dec
xor
sbb
jmp
ljmp
loope
fwait
dec
push
jmp
sbb
inc
push
out
mov
sbb
pushf
jo
xchg
add
xor
jb
jmp
sub
inc
arpl
ljmp
test
pusha
lcall
lea
fmulp
mov
scas
jecxz
jbe
pop
rcrl
movsl
xor
add
loope
nop
lds
andl
cmc
outsl
and
stc
cmc
ret
cmp
pushf
addl
mov
mov
ret
imul
leave
inc
or
and
sub
shll
sub
add
inc
ja
lcall
ret
mov
inc
push
scas
mov
shl
mov
shlb
or
fistl
rorl
fidivl
pop
cmpl
insb
adc
pop
pop
cli
notl
fldl
jmp
sub
aam
jmp
jns
sbb
rclb
and
mov
out
insb
add
mov
jns
push
and
out
movsb
adc
sub
jge
test
push
lea
add
shrb
pop
xchg
in
sbb
fist
add
cmp
and
xchg
sbb
mov
leave
pop
sbb
mov
orb
pop
cmp
jg
loopne
lods
jmp
clc
xchg
or
xor
aaa
cmp
or
adc
adc
pop
jno
sbb
into
push
adc
mov
xlat
cmp
add
xor
and
jnp
sbb
push
xchg
iret
aaa
les
in
jp
add
dec
jae
stos
mov
pop
sub
call
mov
in
inc
not
pushf
cmp
adc
aam
mov
pop
pusha
stc
mov
lahf
mov
and
jo
sti
mov
and
pushf
jns
jp
push
jmp
or
inc
popf
test
mov
and
fldl
mov
jecxz
jg
mov
sar
xor
sub
daa
aaa
nop
fdivr
sbb
push
pop
push
pusha
push
movsl
mov
or
clc
std
pushf
pushf
loopne
ss
pusha
je
cld
push
call
test
xchg
mov
stos
pop
pop
jg
sub
push
pop
or
jmp
cmc
jg
inc
mov
lahf
push
decb
jne
pop
push
idivl
lret
sbb
decl
mov
lock
jne
mov
je
fldcw
nop
pop
hlt
pop
loop
inc
add
ret
jp
mov
out
les
push
xor
mov
push
jmp
dec
xchg
cmp
mov
ljmp
cmp
cmp
std
pop
add
call
aad
inc
mulb
adc
test
adc
jge
icebp
mov
add
cmpsb
sar
clc
sub
push
mov
and
or
sbb
out
pop
xchg
push
xlat
adc
mov
pop
cli
aad
or
jb
and
clc
dec
lahf
clc
and
test
mov
and
mul
mov
pusha
pushf
test
lea
or
cmpsl
repnz
loopne
std
mov
sbb
pop
std
aas
mov
scas
xchg
mov
sub
mov
lcall
push
hlt
adc
sbb
loopne
push
jg
decb
call
adc
pop
hlt
jge
inc
pop
pushf
inc
popa
outsl
mov
cld
lcall
adc
dec
push
mov
insl
mov
gs
inc
dec
mov
mov
das
push
jnp
outsl
sahf
inc
mov
and
ja
mov
ja
adc
push
hlt
pop
scas
cmp
ljmp
outsl
aad
nop
sub
cmp
inc
jns
pop
push
and
in
fucomip
addr16
ds
das
aad
mov
js
cs
mov
lret
incl
sub
pop
adc
movl
pop
mov
lcall
rcll
dec
jns
mov
cmp
rorl
mov
stos
call
ss
lret
incl
into
inc
cmp
fmuls
jno
pushf
mov
mov
lret
out
popf
push
loopne
push
int
sahf
outsl
xchg
jle
sbb
jbe
out
and
sti
pop
push
or
aam
fistp
setno
push
mov
popf
test
in
fwait
or
jns
insb
mov
fs
mov
aas
mov
sbb
adc
mov
call
pop
mov
out
xchg
xor
dec
inc
sahf
pop
test
sbb
cmp
scas
sbb
stc
adc
and
test
hlt
xor
xchg
xchg
xchg
push
int
mov
fldl
jne
jg
jnp
mov
sub
push
cwtl
xor
add
push
mov
jl
sub
pop
mov
int3
push
push
fucomi
sub
mov
xor
cmp
jnp,pn
inc
add
cmp
movb
or
ret
test
cmpb
roll
fmul
lock
mov
xor
pmullw
inc
mov
push
roll
sbb
in
clc
xchg
or
call
xchg
push
push
pusha
pop
aam
clc
hlt
xchg
out
jae
or
xor
ret
dec
pop
sti
cmp
push
out
mov
icebp
addr16
cmp
xor
mov
xchg
or
pusha
and
sub
sbb
dec
rolb
mov
pop
mov
add
or
pop
lds
inc
push
mov
mov
daa
rcrb
sahf
dec
call
add
test
xchg
xor
dec
jno
call
stos
shr
nop
fs
out
add
adc
cld
xor
push
dec
lds
mull
adc
es
or
inc
inc
adc
sub
aaa
adcb
push
jmp
loop
ror
pop
repz
and
insb
loopne
dec
add
cmpsl
ret
sbb
jbe
mov
mov
add
gs
mov
or
test
clc
cmp
pushf
add
jmp
sti
push
cmp
add
and
xchg
add
cmc
push
mov
push
inc
xlat
xor
add
cmp
sbb
dec
mov
add
pusha
sarb
sarb
stc
xor
xchg
and
mov
loope
mov
ljmp
sbb
stos
mov
pop
sub
add
dec
repz
imul
xor
ret
sub
rol
cmp
mov
jmp
dec
out
loopne
fucomp
lsl
pusha
push
jmp
mov
pop
inc
mov
pop
jmpw
pop
pusha
stos
xchg
sbb
mov
je
mov
nop
mov
orl
or
frstor
jmp
fcomps
push
push
jmp
mov
add
dec
out
scas
ret
decl
xchg
mov
jge
fucom
pop
dec
ja
add
inc
call
sti
cmp
or
mov
arpl
jb
pop
out
or
jge
push
push
cs
outsb
jno
mov
stc
jmp
movsl
outsb
push
mov
scas
xlat
pop
push
cmpsb
and
out
std
daa
mov
dec
xlat
jne
scas
cmc
in
outsb
adc
in
mov
cmp
pop
xlat
sbb
xchg
scas
pop
push
jle
xchg
lds
push
or
add
sbb
call
fnsave
aad
pusha
pop
mov
jecxz
lea
sub
push
jae
pop
loop
dec
adc
nop
cmp
nop
push
mov
bound
leave
jg
bound
stc
jmp
enter
daa
add
call
fwait
mov
and
fstpl
cmc
inc
mov
cmp
pushf
les
mov
call
xor
lret
pop
mov
lea
pop
jo
sbb
or
push
hlt
mov
push
push
xor
inc
in
lcall
add
test
rorb
dec
cmpsb
mov
push
jmp
xchg
mov
rclb
cmc
dec
mov
std
sub
fs
hlt
sti
jne
stos
fxch
mov
aam
dec
mov
xchg
mov
mov
sub
sti
push
add
xchg
push
out
dec
das
inc
dec
mov
push
into
sub
pop
pop
or
fisttpll
imul
push
fwait
call
loope
sbb
incl
lock
push
sub
xlat
mov
mov
loop
test
adc
sub
lods
clc
out
push
xlat
sub
mov
sti
mov
pushf
cli
jge
pop
lods
push
mov
mov
mov
xor
dec
jecxz
adc
cmpsb
or
cwtl
xor
lea
push
ja
hlt
stos
ds
out
inc
add
xor
out
pusha
cmp
clc
inc
jmp
jbe
add
adc
push
cmp
mov
mov
push
incl
dec
int
xor
sub
notl
loopne
aaa
dec
and
cmp
jmp
push
lahf
adc
sub
jmp
dec
cwtl
push
sbb
jnp
pop
scas
mov
jae
rep
notb
mov
cs
stos
or
cmp
push
cltd
psubsw
lods
cmpsb
aam
adc
cmp
sub
setnp
cmp
push
call
loopne
or
lods
das
ret
xchg
jmp
inc
cs
inc
ret
test
dec
inc
or
out
push
nop
in
sbb
lcall
mov
call
mov
xchg
mov
aad
cmp
xor
or
das
sbb
rcr
bound
jge
xor
xor
push
sbb
cmp
sbb
xor
sbb
push
mov
sub
pop
popa
in
rcrb
ret
movsl
ljmp
in
mov
jns
push
leave
xor
mov
adc
mov
mov
add
pop
fisub
sub
rorb
mov
sbb
sbb
scas
sub
and
mov
in
add
xchg
loope
jb
scas
cmpb
jmp
testl
push
cld
jmp
mov
push
cmp
push
xor
shrb
mov
dec
and
pop
xchg
fldcw
addl
cmp
mov
outsl
rorl
ffree
cmp
mov
mov
int3
stos
or
xor
jo
mov
loope
adc
mov
xor
sub
stos
dec
sbb
sbb
pop
sbb
cmc
add
push
cld
push
in
cmp
das
mov
ja
push
lea
add
jge
popf
mov
loope
adc
int
stos
call
or
jnp
roll
lcall
lods
orl
fadd
mov
mov
push
jb
movsl
or
test
cs
jg
mov
test
int3
loopne
call
and
lret
lds
call
leave
pop
push
mov
xlat
mov
and
in
loopne
and
mov
pop
or
inc
pushf
ret
das
lds
add
dec
lea
cmp
or
icebp
loopne
mulb
jbe
popf
ljmp
dec
jo
dec
add
push
in
or
adc
and
sbbl
add
pop
or
inc
roll
mov
xlat
and
adc
fstl
jl
push
movsl
mov
or
cmp
lods
mov
jl
stc
inc
sbb
js
loopne
int3
callw
pop
not
sub
clc
and
neg
jp
sar
and
xchg
pop
aad
sub
notb
lcall
fmull
dec
into
pop
repz
out
mov
xchg
sub
mov
mov
adc
clc
sarb
adc
aas
add
repnz
mov
adc
hlt
stos
dec
adc
jge
data16
aas
pop
sahf
aam
adc
inc
mov
or
mov
mov
or
pop
orb
ret
loopne
mov
clc
loopne
insl
xlat
xchg
pop
or
gs
call
ja
gs
sti
sub
call
insl
ljmp
clc
sti
stc
cmp
mov
jo
out
es
pop
cmp
inc
int3
sbb
adc
jmp
sbb
adc
cmpsb
enter
and
lcall
add
cmp
or
xor
jmp
dec
lock
popa
dec
popa
mov
pop
incl
call
ret
jmp
ljmp
and
loopne
cld
xchg
in
rol
push
movsl
int
nop
clc
or
fcomi
not
xor
fild
jp
cmc
jmp
mov
add
call
test
cmpsb
sub
adc
les
out
pushf
out
inc
cli
sub
or
movsl
pop
outsb
inc
icebp
sbb
mov
les
call
repnz
shl
test
mov
jmp
jg
xor
rol
ss
ffreep
mov
or
push
mov
inc
mov
in
inc
mov
pop
pop
icebp
ror
mov
dec
dec
scas
add
dec
adc
sbb
adc
or
cmc
dec
mov
push
sbb
mov
addr16
sub
repz
add
leave
adc
add
mov
bswap
sub
mov
xchg
sbb
sbb
call
mov
push
jg
fstl
sbb
jno
push
incl
pop
clc
inc
sub
sbb
stos
imul
jmp
pushf
test
pushf
add
sahf
js
pop
adc
sbb
inc
sub
loope
stc
jns
pop
lds
adc
cmp
psrad
pusha
jmp
imul
aam
les
inc
cltd
add
int3
dec
fdivs
inc
ja
add
add
mov
std
or
test
dec
cltd
pop
clc
dec
call
mov
inc
leave
test
push
cmc
rol
xchg
clc
add
ds
int
ret
add
ljmp
add
add
cli
and
mov
jo
add
call
jnp
jge
mov
or
sbb
lds
sub
mov
jo
xlat
pushl
dec
mov
inc
daa
nop
pop
dec
cmp
or
nop
test
hlt
jo
cmc
pop
fs
pop
dec
pop
and
cmp
pop
sub
pushl
out
fist
lcall
push
mov
mov
es
add
and
or
xor
cmp
incl
jne
xchg
ss
pop
gs
sahf
mov
ss
mov
pop
jl
test
js
lcall
test
test
or
out
call
and
in
cmp
mov
and
sub
sub
shrl
push
stc
lea
sbb
loope
inc
xor
call
add
popl
inc
lcall
pop
pop
mov
cld
nop
push
mov
cmc
jp
pop
or
adc
outsb
pushf
or
xor
ss
pop
js
cli
pop
sub
jno
dec
aad
cmpsb
rclb
inc
sbb
cmp
call
mov
cs
out
mov
roll
adc
aas
sbb
data16
dec
les
sub
inc
cmc
lahf
cs
push
dec
sbb
mov
incl
mov
aam
movsl
pop
push
cmp
push
std
sbb
cmp
test
pop
inc
add
das
icebp
mov
in
dec
jnp
jno
sbb
mov
fs
sbb
adc
lea
fisubl
mov
inc
or
pushf
add
imul
inc
mov
sbb
into
fidivrl
sub
cltd
jbe
jmp
lcall
xor
leave
mov
mov
push
movhps
inc
add
mov
jns
scas
pop
dec
cld
mov
lea
mov
out
cmp
test
movsb
mov
aam
fadds
sti
movsl
cmp
jo
sbb
out
inc
aaa
test
cmp
add
cmp
scas
mov
push
in
call
daa
mov
push
adc
mov
push
adc
push
lods
push
push
dec
ja
cmpsl
mov
sbb
pop
call
insb
jbe
xchg
into
adc
pop
mov
fnop
lcall
sbb
jo
ja
outsb
push
gs
cmp
punpcklbw
dec
mov
ja
jge
pop
ret
call
jns
lock
pushl
jno
iret
pop
push
aas
inc
pop
mov
cld
mov
sbb
call
adc
dec
add
mov
movsl
rcr
or
mov
jo
pop
fwait
push
cmp
mov
push
stc
sbb
or
push
push
xchg
pusha
scas
popf
daa
sbb
dec
loopne
mov
sbb
sub
pop
dec
fcomip
leave
rol
ljmp
cld
jmp
adcl
fmull
or
fstpt
mov
jl
arpl
add
sbb
leave
nop
push
loop
jae
xchg
ltr
mov
mov
adcb
dec
les
lret
cld
push
dec
jl
lcall
dec
or
sarb
loop
aaa
lock
xor
cmp
scas
call
outsl
inc
push
mov
addl
addl
jmp
loopne
movsb
or
das
inc
push
pop
jecxz
and
sbb
cmc
sti
sub
adc
pushf
xor
or
rcl
es
adc
jmp
subl
mov
lods
ljmp
and
lret
mov
cmc
or
ret
inc
xchg
ss
hlt
mov
fcomp
mov
insl
mov
fnstcw
push
pusha
dec
add
adc
cwtl
es
push
out
ja
mov
out
xchg
dec
xchg
fmul
inc
dec
out
lret
sbb
mov
test
or
call
mov
sub
add
add
or
mov
iret
cmp
and
add
jae
test
fucomp
sbb
jmp
repz
pop
in
cmp
or
add
aam
cmp
jle
int
dec
xor
inc
and
bound
orl
mov
lcall
es
lret
decb
in
pop
hlt
mov
fimul
pop
mov
mov
fisubr
jmp
mov
pop
inc
pusha
adcb
mov
stos
call
lock
enter
jmp
lahf
adc
js
add
cli
dec
push
popf
xor
xchg
mov
inc
push
icebp
lods
sub
addr16
ljmp
cmpsl
mov
sbb
xchg
fld
xor
ret
mov
lret
loopne
jle
ss
jo
adc
gs
cmc
stc
mov
push
inc
fidivrl
aad
pushf
and
sahf
shr
and
dec
int
mov
insb
cmpsb
jne
adc
stos
mov
mov
add
lret
dec
insb
lock
fldl
inc
jg
clc
or
mull
jbe
es
sub
flds
sub
and
data16
ss
adc
mov
mov
lret
movb
fimull
sub
push
cmp
iret
das
loopne
adc
rcrb
or
mov
cwtl
add
loop
cmp
lea
test
insb
cmc
out
lock
adc
repz
add
adc
push
arpl
mov
pop
adc
jns
loope
cmpsl
xor
dec
mov
and
outsl
pusha
dec
ss
sbb
in
ljmp
push
xor
fwait
push
ss
sbb
jle
push
fsubl
das
add
push
mov
push
aad
fdivrl
pop
rorb
pop
cmc
cmpsb
mov
stos
mov
jmp
pop
jae
pop
sahf
xchg
xor
sahf
cmp
movsb
ljmp
mov
jg
adc
push
lret
ljmp
mov
mov
dec
imul
jne
push
ret
sub
jmp
or
popf
lock
cld
jg
in
push
aam
pop
into
add
out
daa
adc
test
mov
mov
outsl
xorl
push
popl
xchg
cmpsb
aam
cwtl
mov
mov
lahf
fmuls
mov
xchg
jg
pushf
pop
fiaddl
notl
ret
jns
aad
iret
and
sub
cmp
insl
ljmp
jg
std
mov
enter
and
aam
in
push
push
ret
insl
in
and
test
mov
test
je
in
outsl
pop
std
mov
mov
icebp
xchg
xchg
clc
and
mov
rolb
push
mov
xor
inc
mov
int3
shr
and
add
hlt
cld
stos
mov
jnp
loopne
pop
fdivrl
insl
dec
and
fistpl
jnp
jg
shlb
adc
test
imul
xchg
xchg
jno
mov
in
fistl
mov
adc
dec
mov
add
sbb
dec
inc
clc
incl
mov
ret
js
inc
sub
pop
lods
sub
pop
mov
add
jns
das
add
jg
dec
dec
addr16
aam
pop
rcll
fcomps
mov
lcall
int3
mov
es
dec
push
scas
hlt
and
jmp
ds
inc
insl
aam
test
repnz
incl
cld
ret
jp
pop
mov
mov
pop
ja
incl
cmp
jo
int3
sbb
xchg
sub
das
sub
push
and
aam
pop
insl
add
xchg
mov
outsb
add
incl
icebp
outsb
stos
add
outsb
out
repz
mov
in
popf
notb
or
inc
in
push
xchg
insl
dec
idiv
mov
scas
ret
jne
movsl
test
lret
sub
clc
fstpt
xchg
andb
in
fstpt
push
mov
int
imul
outsb
pop
mov
push
cmp
push
cmp
fstpl
add
xor
lea
inc
mov
jb
push
in
sbb
inc
xchg
and
pushl
inc
or
lret
dec
and
or
or
incl
mov
jge
fildl
mov
cmp
aam
pop
iret
loopne
cli
fildll
fsubl
adc
test
popf
pushf
mov
dec
mov
cmp
insl
popa
bound
push
and
outsl
insl
mov
js
jb
sbb
fbstp
sbb
mov
test
ret
dec
test
enter
aas
add
lea
cmpl
xlat
mov
mov
in
or
dec
dec
add
aam
push
aam
adc
test
outsl
fcmovnu
test
fiadd
fsubs
adc
incl
test
mov
js
adc
nop
insl
mov
dec
dec
ds
pushw
add
jnp
jno
xor
push
ds
divl
insl
xchg
iret
sub
xchg
mov
call
mov
ret
pop
int
fistl
lea
shlb
add
xchg
imulb
pop
mov
pushf
add
dec
ja
mov
jecxz
xchg
jmp
repnz
repnz
mov
push
stos
sub
rcrl
mov
push
fisub
dec
cmp
gs
push
dec
inc
add
vcvtsi2sdl
jp
fsub
pushl
mov
mov
cmp
in
inc
jle
xchg
cmovl
jmp
fcompl
pusha
xchg
fs
mov
push
cmc
inc
adc
pop
cli
lds
loop
gs
or
fisttpl
pop
cmc
inc
jg
dec
decl
pop
mov
in
hlt
jecxz
lcall
mov
add
xchg
mov
mov
hlt
xor
xchg
mov
arpl
aas
add
mov
pop
call
jle
repz
dec
inc
cmc
mov
jg
jmp
pop
cli
fsubs
mov
sbb
mov
dec
mov
in
pushl
inc
inc
or
aad
or
jp
or
push
push
pop
scas
mov
ret
or
pop
outsl
dec
mov
movsb
je
dec
lahf
pushf
loop
fwait
arpl
jg
xchg
xor
lds
xor
lea
mov
stos
gs
inc
or
inc
jno
or
cmp
inc
mov
and
and
fs
sbb
xchg
mov
dec
test
lcall
outsb
das
xchg
push
jbe
pop
fs
insl
addr16
decb
lds
xor
test
in
fisttpl
lret
push
mov
and
rcrb
mov
adc
decl
mov
lret
cmc
pop
cmp
iret
push
jp
js
pusha
lds
pop
clc
jmp
push
cltd
jmp
js
push
jl
mov
ficomp
push
das
mov
or
mov
imul
fstp
ja
jne
testb
fdivrl
in
or
and
cmp
inc
ja
mov
ja
ds
pop
incl
lea
adc
sub
or
pop
mov
xor
jg
std
mov
jnp
xor
mov
fsub
outsl
sbb
in
push
push
dec
aad
popf
aas
sub
fildll
ljmp
pop
lahf
icebp
push
dec
xchg
lock
jg
inc
inc
pop
lret
lret
scas
stos
cmpb
xchg
into
jb
test
out
cs
imul
je
loop
jnp
sub
in
loop
push
bnd
jmp
imul
adc
lds
mov
jno
mov
lret
sub
lds
pop
sti
inc
jnp
sub
push
repnz
out
outsb
loop
lret
subl
push
push
xchg
mov
xchg
sbb
inc
xor
xor
ljmp
xchg
std
rcrb
incl
push
fstl
dec
mov
jp
cld
mov
clc
cs
outsb
fildl
repnz
test
dec
stos
sbb
inc
inc
push
iret
aad
mov
clc
or
inc
add
ljmp
pop
mov
mov
adc
lock
iret
loope
loop
outsl
call
fwait
bound
sahf
pop
pop
or
insl
mov
jecxz
pop
adc
xor
push
js
imul
mov
xchg
pop
ja
test
pop
mov
sub
jmp
xchg
pop
push
sbb
xchg
mov
push
sub
mov
fisttpl
mov
mov
in
jne
mov
jns
je
pop
repnz
hlt
push
dec
pop
fistpl
lcall
xchg
and
cmp
xor
dec
push
mov
mov
lret
mov
incb
dec
jmp
push
adc
pop
sbb
call
mov
data16
out
iret
adc
loop
fwait
push
sub
mov
lea
shrb
lds
pop
pop
ss
mov
cmp
mov
and
sub
jo
loopne
mov
inc
sbb
inc
sbb
pop
pop
ljmp
dec
dec
fisttpll
mov
xor
mov
push
fcmovnbe
iret
decb
dec
push
pop
divl
jae
cmp
idivb
div
xlat
aad
add
cmp
push
fwait
push
cmp
pop
inc
pop
dec
out
jg
pop
xor
outsl
fisubrl
sar
lock
push
arpl
and
fisttpll
mov
xlat
leave
prefetch
loop
in
jmp
ret
push
xchg
pop
pop
or
sbb
imul
sub
and
push
lds
jge
jecxz
push
cli
push
jns
out
idivl
mov
aad
pop
cmp
adc
fstl
rorl
mov
gs
jl
insl
ret
mov
fwait
clc
lcall
jns
repz
ja
leave
jge
insb
and
loopne
flds
pop
lret
cmp
or
fucomip
call
adc
dec
inc
cmpsl
and
aam
pop
ja
loop
and
or
call
test
sbb
daa
xlat
ds
clc
inc
loop
xchg
scas
and
loop
push
mov
adc
adc
xor
fiaddl
jae
mov
repz
incl
out
imul
jmp
in
xlat
sbb
icebp
fisttp
mov
inc
push
enter
cmp
ret
lahf
dec
jo
mov
xor
scas
xor
and
or
sbb
xor
dec
dec
bound
loop
fwait
insl
dec
repz
push
pop
movb
pushf
mov
xchg
outsb
js
mov
jns
bound
push
xor
mov
js
in
mov
repnz
mov
and
and
mov
xchg
or
ss
push
push
int3
push
test
mov
mov
lds
test
popf
jecxz
jg
call
lds
pop
icebp
mov
mov
rolb
inc
leave
dec
lret
dec
inc
add
cli
jg
mov
jp
jle
scas
dec
movsb
scas
imul
jg
jge
test
loop
jo
push
lcall
xchg
adc
movsl
push
imul
jo
stc
lock
inc
insl
out
cli
fnstcw
and
vmovhpd
sub
xlat
lret
test
jp
jmp
and
js
incl
adc
sub
mov
pop
sbb
mov
lds
sbb
cli
mov
jle
arpl
mov
test
fisttp
mov
mov
fstps
xor
hlt
cmp
or
sbb
lcall
pop
adc
cwtl
sti
pop
or
mov
sarl
mov
shrl
in
fs
lahf
je
loop
fwait
outsl
popa
test
imul
dec
mov
outsl
pusha
imul
push
clc
imul
popf
int
fcomps
inc
jae
mov
mov
aaa
mov
cmp
xchg
inc
mov
pop
sbb
xchg
jb
jg
mov
fwait
test
xor
stc
mov
sub
outsb
rclb
mov
into
call
rorl
loop
mov
push
xor
xor
lock
xor
xor
lcall
xor
insl
xor
xor
in
mov
xor
xor
xor
xor
pushl
xor
xor
xor
xor
add
or
cs
add
and
aaa
int
and
sub
jg
cmp
mov
cmp
cmp
cmp
cmp
jmp
cmp
cmp
cmp
cmp
outsl
cmp
lcall
or
sub
inc
cmp
bound
cmp
jge
cmp
popa
jp
movsb
cmp
cmp
cmp
cmp
and
cmp
lret
ds
mull
aas
push
aas
gs
push
mov
aas
cmc
aas
cli
aas
shlb
pushl
sub
pop
xor
xor
xor
xor
xor
xor
loop
jmp
cwtl
xor
xor
xor
xor
add
sub
aad
fbld
pop
cmp
cmp
cmp
cmp
bound
hlt
cmp
and
outsl
add
cmp
cmp
gs
push
cmp
cmp
cmp
lea
cli
out
cmp
cmp
push
cmp
cmp
mov
ds
outsl
ds
adc
push
aas
sbb
and
sub
aas
mov
xor
rolb
add
cs
xor
xor
das
icebp
mov
loopne
cld
dec
xor
mov
std
xor
mov
xor
jno
jbe
xchg
sub
outsl
icebp
call
xor
xor
xor
dec
xor
xor
xor
xor
mov
jg
xor
xor
xor
test
mov
mov
pop
jmp
xor
cwtl
movsb
ss
ss
aaa
adc
sub
ss
ljmp
add
push
aaa
data16
test
aaa
sahf
cmp
hlt
decl
inc
pop
xor
cmp
inc
cmp
fwait
cmp
cmp
cltd
cmp
cmp
sbb
cmp
int
mov
sbb
add
pop
aas
xchg
aas
call
fildll
xor
xor
xor
jb
mov
mov
xor
xor
lods
xor
xor
clc
test
cs
ss
cmp
popf
sub
cmp
cmp
leave
sub
scas
ds
and
push
pop
adc
lock
lcall
jg
lcall
xor
xor
in
xor
xor
xor
jo
add
mov
xor
inc
aaa
dec
aaa
push
aaa
xlat
mov
push
cmp
lcall
mov
cmp
ret
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
lret
cmp
sub
xor
dec
jge,pt
test
lcall
jae
pushl
push
fs
dec
xor
mov
movsb
xor
xor
nop
xor
mov
in
adc
inc
xor
mov
ss
out
or
idivb
add
cmp
cmp
pop
jg
cmp
jno
jge
sarl
cmp
cmp
xchg
ds
jbe
aas
mov
ja
push
mov
push
or
and
pop
xor
pushf
aaa
add
cmp
xchg
jle
jo
addr16
xor
push
pushl
push
xor
daa
xor
xor
das
pop
cmp
cmp
cmp
cmp
cmp
cmp
cmp
jg
and
test
fnstsw
cmp
dec
ds
cmpl
ds
fdivrs
jmp
aas
cmp
aas
jb
nop
aas
xchg
mov
aas
mov
sarb
aas
int3
aas
sar
insb
rorl
fidivr
in
add
xor
mov
jg
xor
xor
xor
pushl
jp
xorb
xor
sahf
xor
xor
xor
outsl
std
ljmp
loope
xor
xor
and
xor
aaa
xor
inc
xor
arpl
mov
aad
xor
xor
inc
xor
dec
pop
fbstp
xor
pusha
dec
fstpt
mov
mov
cltd
xor
outsl
clc
pushl
xor
xor
xor
xor
jmp
xor
xor
xor
xchg
sti
jmp
xor
xor
xor
cmp
pop
xor
xchg
lahf
xor
lcall
push
mov
mov
xor
xor
xor
xor
xor
xor
xor
xor
xor
jmp
adc
sbb
and
and
sub
xor
inc
jnp
scas
test
mov
enter
in
decb
mov
or
mov
loopne
xor
adc
addl
push
or
push
xor
mov
repz
push
ss
cmp
mov
cmp
or
fistpl
sbb
jbe
cmpb
mov
repz
aaa
inc
push
out
ss
mov
movsl
mov
loope
out
adc
xor
xor
push
in
imul
aaa
xor
inc
cmp
sub
ret
cmp
cmp
lahf
pop
movsb
lods
and
aaa
adc
mov
xor
cmpsl
sub
adc
xor
aaa
js
cmp
cmp
cmp
cmp
cmp
stos
cmp
cld
mov
mov
das
dec
push
sbb
xor
xor
add
or
clc
decl
stos
xor
xor
into
ss
cmp
into
loop
mov
sti
in
cmp
cmp
in
clc
cmp
inc
pop
jg
out
or
adc
aas
faddl
jo
ss
incl
xor
xor
xor
xlat
jnp
push
xor
xor
xor
mov
daa
aaa
bsr
mov
and
cmp
inc
sbb
mov
and
jo
xor
push
xor
fincstp
or
add
sub
fdiv
ss
aaa
std
jg
aaa
ret
aaa
or
cmp
mov
sub
cmp
sub
icebp
cmp
cmp
icebp
aaa
pop
popa
add
dec
and
xor
xor
sbb
xor
out
xor
xor
xor
add
mov
call
add
mov
lgs
add
ja
pop
les
in
adc
divb
sbb
loopne
pop
test
inc
out
in
cmp
mov
cld
movl
stos
ss
sub
pop
ret
dec
adc
ja
call
ficom
mov
mov
and
add
iret
loopne
bound
jno
das
mov
faddl
mov
add
adc
sbb
push
nop
xor
mov
ljmp
sti
mov
sub
out
sbb
add
cmp
jb
mov
push
ret
add
add
daa
xchg
in
pop
jbe
jo
add
fadds
fsubrs
or
add
add
sub
addr16
mov
dec
mov
cmp
dec
rorb
cltd
shr
in
or
cmp
outsl
mov
jmp
sbb
pop
sbb
and
lock
adc
jbe
cmp
mov
mov
mov
in
cmp
insb
int
add
jbe
jg
std
and
das
cld
cmp
xchg
jle
scas
hlt
push
nop
je
inc
aaa
in
cmpl
rcr
push
adc
jb
decl
imul
adc
notb
pop
adc
sahf
and
xor
mov
incl
cltd
sub
xchg
dec
adc
inc
and
insb
cmc
fildll
sub
fcompl
std
ds
fistpl
pop
movsb
cmpsl
xchg
lahf
pop
xlat
pop
or
incl
dec
insl
jne
lods
outsl
lods
jnp
test
jg
idivl
imul
jmp
jne
inc
ds
cmc
decl
pop
inc
add
lods
cmp
or
cmpsl
test
jmp
mov
pushl
push
pop
ficomp
stc
sti
mov
mov
fs
mov
decl
jno
jne
inc
addb
insb
movl
shlb
in
insl
push
xchg
lods
xchg
or
push
fdivrp
ljmp
aam
lahf
mov
inc
xor
sub
xchg
xor
insb
mov
xor
mov
shrl
adc
adc
mov
inc
leave
and
mov
leave
outsb
jl
adc
jo
push
mov
icebp
dec
mov
out
pop
loopne
jmp
jp
dec
cli
les
push
ret
lret
enter
xchg
sbb
in
mov
pop
push
pop
js
lahf
mov
cs
or
mov
adc
ljmp
loope
insb
sbb
cltd
dec
sub
ja,pt
movsl
sahf
inc
dec
stc
out
cs
push
mov
call
xlat
cmpsl
ficompl
inc
inc
jnp
mov
mov
fwait
push
outsl
cmc
outsl
push
cld
negl
movsl
addr16
jno
xchg
lods
inc
imul
push
dec
aad
aam
mov
cmpsb
sub
sti
mov
rol
sbb
sbb
sti
pop
push
int3
insb
pushl
push
mov
mov
adc
jmp
xchg
stos
sbb
sub
call
clc
adc
jmp
out
int
sbb
popf
push
xchg
add
xor
incl
mov
mov
sub
sti
inc
pop
xchg
mov
inc
loope
mov
fabs
inc
xchg
and
jae
cld
leave
mov
inc
dec
mov
mov
jecxz
lock
inc
mov
ljmp
xlat
sar
ja
mov
dec
sbb
pop
call
or
cmc
cmp
mov
fs
lods
dec
mov
inc
lcall
or
pop
mov
sbb
rcl
jb
lcall
stos
fdivrs
push
aam
jg
arpl
pushl
and
outsl
shl
mov
sarl
mov
test
or
mov
or
mov
rol
and
sub
mov
fwait
adc
out
mov
test
iret
stos
inc
lock
lret
je
mov
push
ljmp
es
out
daa
xchg
add
cmp
sbb
dec
stos
mov
incl
mov
mov
test
mov
xchg
stos
lods
mov
adc
enter
or
jg
sbb
or
fnstenv
inc
inc
lea
mov
sarb
cmp
jno
cmc
pushf
jns
rcrl
inc
lea
mov
sbb
lcall
mov
imul
push
fcom
jnp
lock
scas
clc
or
scas
jne
ja
cmc
jmp
lea
xchg
jmp
rcr
rcrb
pop
pop
xchg
popf
aad
in
mov
call
cmp
repnz
ljmp
push
popa
jae
insb
lds
xchg
inc
scas
loopne
int3
dec
movsl
ds
dec
push
or
mov
lret
lods
popf
mov
inc
in
push
dec
or
pop
jae
xchg
mov
jb
push
mov
setge
loope
xchg
js
push
ljmp
or
mov
aam
and
cld
xchg
inc
aam
in
pushl
fidivrl
mov
addr16
mov
and
inc
add
or
fimul
pop
add
pop
or
sub
jbe
cmpsl
out
inc
or
and
jg
call
pop
dec
and
lcall
xchg
cmp
adc
enter
call
loope
sub
mov
mov
les
mov
sar
ljmp
xlat
add
fisubrl
add
fptan
movsl
aaa
sarl
pop
cld
pop
stc
es
mov
pop
in
out
jno
repz
stos
stos
cli
pop
fwait
cmc
idiv
jg
mov
lret
jo
ljmp
mov
aaa
das
in
cmpsb
test
frstor
add
loope
jno
loop
xorb
pushl
fnstenv
leave
pop
pop
int3
sub
call
negb
jge
test
xchg
movsl
xchg
or
and
add
call
pop
and
jg
fnop
lret
stos
repz
fdivrl
push
adc
adc
mov
and
vpminsw
call
mov
lods
loopne
fnstsw
sbb
adc
mov
or
loope
lods
dec
adc
sub
lea
mov
jg
mov
pusha
xor
bound
and
fisttp
repz
shll
or
test
xchg
shrb
ljmp
cltd
mov
dec
mov
dec
xchg
pop
fsts
sbb
xchg
lcall
data16
or
ja
sbb
or
mov
cmp
inc
repz
decl
mov
inc
pushf
in
jg
push
lea
sbb
xchg
sbb
insl
test
pop
shlb
das
and
sar
ljmp
decl
fsubl
sbbl
cld
movsl
cmp
mov
insl
int3
push
enter
ds
out
test
jge
sub
adc
and
dec
add
test
xlat
clc
mov
jne
std
ljmp
clc
fmulp
xchg
pusha
iret
pop
xchg
dec
cltd
cmp
nop
lods
nop
pop
test
sub
fdivs
xchg
adc
bound
fldt
in
ljmp
jg
out
arpl
and
and
sbb
decl
mov
rcrl
jno
hlt
cs
repz
sahf
add
daa
stc
or
into
jb
decl
loope
inc
out
fmuls
pop
bound
xchg
das
push
arpl
or
das
loopne
stc
lcall
das
cmp
sbb
push
std
and
push
lds
insl
lcall
jmp
sub
aaa
loop
jo
test
pop
ljmp
daa
repz
fs
adc
and
cmp
cs
pushl
and
imul
lcall
jne
inc
insl
push
and
divb
cwtl
lock
dec
lcall
push
ret
sub
andl
outsb
lods
dec
pushf
lock
js
push
dec
cmp
shlb
addr16
mov
movsb
testl
mov
movsb
xchg
xchg
clc
incl
sub
sahf
shll
pop
inc
and
adc
jbe
jbe
pushl
jbe
jae
sbb
xchg
icebp
pusha
in
mov
dec
pusha
xor
cwtl
add
lock
xor
push
js
rcrl
push
or
xor
aas
mov
jo
test
mov
call
loop
and
jo
and
xchg
mov
mov
and
jg
ljmp
ljmp
out
out
js
pushl
ljmp
clc
xchg
and
leave
sti
xor
xlat
xchg
in
inc
imul
and
call
sub
or
mov
fsub
stos
xchg
test
mov
aad
sub
arpl
jmp
cmp
adc
xchg
popa
xor
cmp
pop
sarl
leave
inc
fnsave
mov
jge
js
test
data16
sbb
lcall
dec
mov
sub
pop
add
cli
dec
cmp
call
push
rorb
mov
lahf
dec
dec
jmp
jb
push
jl
insb
lret
les
jbe
mov
lock
dec
push
jbe
mov
pop
outsb
out
sti
or
lcall
jo
lds
mov
mov
fldenv
out
xor
sti
mov
mov
pop
fcoms
stos
pop
pop
std
mov
and
loop
sub
mov
pop
clc
jmp
aad
in
xlat
cmp
or
pushl
gs
push
add
push
dec
push
cmpsb
sbb
sahf
push
aas
pop
negl
pop
std
ret
dec
push
scas
inc
fwait
jno
mov
pop
sbb
xlat
inc
pushf
xchg
mov
lcall
sahf
dec
sbb
cmp
dec
add
adcl
mov
loopne
mov
inc
xor
aaa
rol
sbb
dec
in
decl
mov
aaa
out
scas
in
aad
arpl
aas
jae
in
ss
mov
pushf
ds
call
mulb
or
fisubr
loop
adc
or
pop
jge
pop
adc
pop
fildl
mov
inc
jmp
xchg
sub
loope
cmp
std
push
call
adc
push
jp
adc
dec
pusha
mov
push
out
das
decb
sub
or
pop
sbb
inc
sbb
ret
lcall
jne
adc
jge
cmp
test
mov
xlat
gs
aaa
mov
decl
fcoms
imul
push
pop
sub
lods
pop
jb
fwait
jb
mov
test
js
push
inc
push
imul
sbb
push
lcall
cmp
pop
into
dec
sub
jns
pop
adc
decl
xchg
idiv
or
pop
mov
sbb
sbb
imul
incl
sarl
dec
fidivr
and
xchg
cmp
mov
lods
loop
sti
or
pop
cld
or
sub
jg
decl
mov
and
push
pushf
mov
xor
std
into
pusha
push
mov
dec
mov
aas
nop
jg
int
icebp
in
in
mov
pop
pop
sub
decl
lods
test
mov
scas
inc
nop
lahf
xchg
fwait
insl
movsb
outsb
cltd
lret
mov
ljmp
xor
ja
or
xchg
or
push
and
test
mov
lahf
bound
jmp
out
call
push
clc
popa
popf
sti
cltd
dec
cwtl
aaa
ss
mov
xchg
popf
or
repnz
sub
lcall
jb
dec
lods
push
xchg
sub
sub
sub
cmovle
stos
lods
mov
ljmp
je
bound
mov
jo
or
inc
aaa
cmc
mov
lock
pop
addl
out
insl
loopne
mov
adc
jge
inc
call
push
stc
jns
xchg
adc
adc
mov
stos
push
out
mov
leave
cltd
addr16
test
imul
or
fdivr
inc
or
and
cld
jle
jb
jecxz
add
mov
daa
dec
cmp
xor
iret
into
cmpsb
out
mov
into
movsl
xchg
and
cltd
mov
in
jmp
test
test
push
enter
mov
aam
cmp
call
repz
cmpl
jae
lret
lahf
mov
push
dec
insl
pop
or
ljmp
call
mov
loope
out
and
and
clc
insb
in
add
js
fwait
and
cmp
outsl
insb
dec
divb
test
sbb
pusha
push
call
xchg
add
iret
stc
push
mov
xchg
mov
pop
sbb
jmp
pop
jg
mov
lcall
xchg
into
mov
movsl
sub
fidivl
daa
aaa
clc
pop
lret
xlat
cs
add
das
hlt
pop
out
das
js
pop
mov
outsl
je
xchg
jb
mov
pop
out
xchg
enter
lret
jl
mov
ljmp
fistp
cmc
out
pop
lods
iret
xor
xchg
test
inc
movsb
dec
sahf
or
sub
sub
add
std
aaa
aas
aaa
add
xor
and
scas
mov
pop
shrb
xchg
lret
add
das
std
lcall
push
stos
add
mov
dec
mov
out
adc
decl
sbb
inc
imul
mov
push
decl
enter
ret
clc
fs
int
in
sti
mov
in
movsl
lods
enter
ljmp
repz
hlt
xchg
jge
cmp
not
or
xchg
stos
xchg
sbb
mov
fisttp
out
jmp
orb
and
xor
fst
xchg
aad
mov
and
push
pop
cmc
movsb
cmp
fwait
inc
adc
lods
sti
pop
mov
ljmp
gs
ja
mov
cmp
or
mov
cltd
push
addr16
mov
fs
call
aaa
xchg
fsubrp
ret
inc
mov
push
dec
arpl
inc
mov
pushl
outsl
jbe
cltd
jae
hlt
mov
cmp
sti
mov
lods
mov
not
jnp
movsl
push
sbbl
adc
push
ljmp
mov
fwait
pop
sarb
mov
jge
loop
iret
mov
cli
clc
iret
int3
ljmp
movsb
out
push
ds
andl
cmp
pop
lods
xchg
ficomp
sub
clc
jecxz
lahf
lcall
std
inc
enter
into
iret
aaa
cli
hlt
sub
jl
inc
daa
ret
test
mov
daa
int3
xor
pop
cld
pop
shrb
fistp
lods
fcoms
sbb
lcall
insl
mov
adc
incl
in
mov
shr
sbb
jmp
pop
mov
adc
adc
push
mov
fiadd
mov
jnp
xchg
jo
call
xchg
jae
sarb
jecxz
add
test
fnop
jmp
mov
lret
loope
inc
xchg
ss
out
pop
fistp
mov
aad
test
push
in
jl
inc
xor
sahf
mov
lea
cmp
es
in
inc
inc
fcompl
into
mov
sub
out
mov
xchg
test
inc
cwtl
sub
jg
xor
out
xchg
imul
adc
adc
addb
mov
lcall
inc
mov
add
dec
sub
xchg
cmc
adc
mov
push
outsl
hlt
add
fnstsw
push
incl
movsb
mov
cs
adc
cmp
lds
xor
mov
inc
ljmp
lock
movsl
pop
jns
push
push
pop
xor
popa
push
popl
in
sarl
test
je
lods
fbstp
sbb
lods
ds
inc
inc
or
jne
imul
rol
push
scas
cmp
loopne
cltd
cmp
lds
leave
jmp
cmp
pushl
cmp
icebp
cmp
push
jo,pt
fisttpl
notb
in
call
je
lods
stos
das
cmc
sbb
insb
scas
add
xchg
das
jge
data16
js
call
scas
out
pusha
fsub
pushf
insl
bound
or
outsl
adc
test
loopne
add
in
ret
cld
or
lods
lahf
xchg
inc
add
lret
out
pushf
or
sub
aad
sub
jmp
sbb
xchg
mov
mov
mov
popf
or
sahf
das
push
and
or
jno
mov
push
insl
or
pushl
and
popf
jecxz
mov
push
je
jge
ds
mov
sahf
adc
inc
pop
dec
std
repnz
push
test
dec
xor
ret
pop
daa
dec
adc
add
loope
lea
adc
in
cmpsl
ja
std
sbb
xchg
cmpsb
loopne
ljmp
clc
add
mov
push
mov
shrb
mov
or
fisttpll
sti
add
add
sbb
nop
or
and
cmpl
jg
mov
add
lret
mov
adc
xchg
decl
mov
adc
scas
icebp
push
imul
ret
sub
push
mov
xlat
mov
inc
adc
add
xchg
outsl
pop
nop
aam
or
shrb
jno
incl
pop
data16
pushf
cld
mov
dec
and
sbb
daa
mov
push
inc
cli
mov
sub
cli
xchg
mov
outsl
cmp
shrb
add
incl
loop
mov
mov
je
div
popf
addr16
out
inc
cmp
pushl
in
xor
lds
fist
fdivl
or
jg
mov
cmp
movsb
xchg
fs
cmp
call
fsubr
cmp
fidivl
add
push
shr
lret
add
adc
clc
incl
add
xor
fmull
xchg
in
push
lret
outsb
dec
cs
cmp
decl
push
inc
pop
adc
enter
les
pop
sbb
jne
enter
ljmp
aam
lea
aam
pop
inc
jmp
in
cmp
mov
xor
ljmp
adc
incb
sub
lds
lods
scas
cmp
pop
dec
pop
sbb
xor
imul
rcrl
inc
sub
icebp
sarb
js
pushl
mov
push
in
xor
push
repnz
jbe
ljmp
gs
mov
push
faddl
inc
fbld
and
push
push
movsl
inc
jb
lea
bound
mov
push
int
mov
cwtl
mov
out
mov
jbe
or
in
pop
sti
inc
lods
jl
lahf
jmp
sbb
xchg
fsqrt
xor
mov
dec
or
xchg
mov
jle
push
inc
pop
je
push
xchg
loop
mov
hlt
sbb
decl
push
std
dec
lcall
mov
arpl
push
icebp
mov
and
sub
scas
seta
mov
push
fcoms
insb
xlat
push
ljmp
dec
popa
icebp
mov
mov
pushf
int
add
push
xchg
iret
mov
sub
mov
jle
ss
mov
test
mov
or
push
and
fbld
stos
in
dec
or
jl
out
sbb
push
testl
xlat
test
jmp
jne
xor
dec
mov
arpl
sbb
jnp
jmp
aaa
mov
cli
sub
imul
xchg
fdivrs
cmp
mov
lcall
lock
cld
xor
mov
test
push
push
sub
push
push
pop
lret
jnp
mov
out
gs
sti
rcrb
mov
jmp
or
adc
mov
pop
pop
mov
or
mov
in
mov
or
dec
mov
loop
or
mov
scas
xor
mov
or
ljmp
daa
pop
xchg
mov
test
inc
out
dec
xlat
xchg
movsb
aam
out
fldcw
int3
jnp
lcall
incl
int
mov
int
insl
xlat
dec
jnp
or
cmp
cmp
push
std
enter
add
adc
lcall
jmp
repz
test
fidivrl
fsts
mov
mulb
cli
pusha
push
dec
sbb
jg
sbb
xor
add
leave
and
mov
testb
mov
cmc
decl
push
push
mov
mov
mov
outsb
push
into
mov
incl
aas
imul
outsb
xor
lds
xchg
xlat
into
fisttp
incl
repz
aas
inc
sub
call
fucom
mov
fidiv
loop
jg
jb
in
aas
xor
sbb
inc
dec
out
sbb
mov
pop
xchg
clc
jg
jp
mov
insb
cs
insl
pop
sti
adc
add
mov
rolb
push
and
adc
mov
mov
mov
out
inc
notb
sahf
test
push
movb
decl
xor
pop
sarl
cmpsb
jl
push
cmpsl
push
mov
adc
outsl
fs
mov
add
adc
mov
pop
inc
sti
sub
stos
inc
cltd
fwait
repz
cs
int3
mov
icebp
sar
fnop
sub
cmp
fisttpl
dec
loope
roll
mov
cmp
push
flds
and
pop
aad
push
lock
jge
imul
das
xchg
mov
add
arpl
js
inc
mov
sar
ljmp
icebp
xchg
cmp
push
add
sbb
push
jecxz
xchg
mov
add
clc
push
and
loop
lcall
pushl
enter
inc
scas
xchg
jp
push
or
sub
xlat
jecxz
repnz
jne
ljmp
add
sbb
movsl
int
arpl
mov
ds
call
call
paddd
stos
push
hlt
cs
or
inc
fcomi
cmp
shll
fldcw
sbb
les
push
ret
jecxz
mov
jle
lahf
fist
xor
pop
xchg
pop
mov
inc
pushl
rorb
adc
xchg
outsb
test
jno
inc
in
pushl
aad
nop
jge
jge
pop
mov
push
push
jb
jbe
lds
mov
jge
jg
in
adc
jg
icebp
sbb
clc
jmp
xchg
cli
mov
mov
lahf
fistp
xchg
imul
popf
pop
mov
dec
xchg
jne
movl
das
cmc
inc
inc
push
pop
jbe
sbb
daa
out
out
jns
dec
sbb
jns
mov
jno
lods
mov
ret
in
cmp
jecxz
xchg
jl
mov
xlat
outsl
addr16
sub
imul
lea
lahf
int
into
mov
neg
int3
add
xor
xor
scas
fisubr
insl
cmc
lcall
add
push
scas
push
shll
cmc
mov
incl
push
mov
frstor
cld
pop
rcrl
push
xchg
in
fild
ffree
orl
or
lret
mov
jl
mov
cltd
dec
fidivrl
icebp
in
dec
adc
add
decl
xchg
cld
les
int3
ficompl
xor
fucomip
push
cmp
cmpsl
loope
lods
mov
push
lock
insb
lret
cmp
fnstsw
cmp
adc
cli
stc
mov
cmp
cli
imul
mov
in
pop
jb
mov
aam
fcoms
ret
sbb
lcall
pushl
mov
movsb
mov
xchg
dec
mov
pop
pop
mov
ds
jmp
and
push
int3
inc
rorb
and
add
cmp
sar
add
sar
dec
lcall
fnstsw
xor
pop
or
in
mov
lahf
pop
push
call
insb
out
stc
out
ror
rorl
push
dec
push
cmp
sbb
orl
push
mov
jmp
jp
xor
lcall
adc
call
lds
mov
shrl
lret
scas
out
jb
mov
rcrb
jecxz
fs
lods
mov
fbld
addl
cmp
xor
aaa
cli
ljmp
mov
sub
sbb
cmpsb
xchg
push
xor
data16
ljmp
mov
into
sbb
int3
jecxz
ficompl
test
lods
lods
dec
jge
decl
popf
inc
fisttpl
jmp
je
dec
movb
sub
inc
mov
decl
ret
jl
out
out
sub
mov
cmp
fs
jns
mov
add
int3
inc
les
shrl
icebp
ljmp
dec
sahf
rcrl
jae
mov
push
fistpl
sarb
pushf
mov
mov
dec
dec
mov
lahf
push
outsl
mov
push
pop
xor
adc
adc
std
push
lcall
lock
out
adc
int3
cwtl
in
mov
cmc
imul
ss
imul
scas
ljmp
popa
adc
add
xor
lcall
in
bound
xchg
aad
xchg
iret
jb
mov
inc
push
xor
fs
lcall
add
fisub
sti
mov
data16
stos
mov
dec
aad
jecxz
das
std
push
pop
js
pop
das
test
mov
cmpsl
push
lahf
jno
mov
jg
js
insb
inc
jp
inc
insl
stos
outsb
dec
in
xor
dec
add
loop
inc
mov
in
cld
pushl
fwait
sbb
cltd
mov
rcll
das
adc
mov
pop
pop
adc
add
repnz
and
cmp
lret
sbb
out
iret
jns
loopne
fisttpl
xlat
sbb
in
loope
mov
jnp
add
sbb
stos
and
outsl
lock
fistl
sti
xor
jmp
jae
jne
lea
incl
inc
inc
into
jne
fcmovnu
test
pop
in
push
and
stos
sbb
jg
fsubrl
int3
repz
xchg
cli
jno
mov
jmp
mov
xchg
fcompl
mov
xchg
in
mov
std
sub
aaa
cli
jmp
repnz
sub
nop
loop
xor
clc
push
cmpsb
ds
mov
out
xor
jmp
dec
test
nop
icebp
movsl
popa
sbb
or
mov
pop
cli
inc
lock
int
cmp
je
into
jns
jae
aas
and
stc
repz
cmc
jb
xor
mov
fwait
scas
sbb
and
arpl
add
fcmove
jge
cmpsl
faddl
cld
dec
xor
les
xchg
inc
outsl
sbb
push
mov
push
aad
mov
fwait
sub
sbb
jl
aad
mull
sub
lods
mov
mov
lcall
icebp
dec
and
or
add
mov
jmp
jg
into
pushf
sub
stos
pop
ss
sub
js
lcall
jae
ds
mov
mov
pusha
arpl
jmp
stos
cmp
ds
add
and
jmp
jmp
mov
add
ja
negb
jnp
movl
jecxz
lret
pushl
inc
lret
inc
mov
jge
out
nop
cmp
jne
jl
daa
shrb
psubsb
ljmp
dec
mov
dec
ret
sahf
cmp
add
test
pop
mov
push
in
dec
scas
mov
dec
in
jg
push
pop
jle
fist
xchg
test
jne
add
push
fistpl
cld
add
sbbl
pop
jg
iret
cmp
mov
movsl
mov
stc
adc
mov
mov
inc
movsb
adc
ljmp
jg
out
push
aad
push
mov
scas
mov
ret
imul
call
dec
ss
pop
fsubp
jmp
or
xor
cwtl
xor
mov
add
sub
pop
jae
fsubl
fldt
notb
dec
pop
sub
rclb
insl
sub
jmp
push
dec
mov
fisub
and
idivb
jns
mov
call
adc
push
into
or
add
pop
and
cmp
les
mov
call
add
xchg
sbb
js
test
xor
inc
aad
call
jbe
add
cmpsl
lret
je
test
pop
out
push
std
pop
pop
mov
loopne
cli
jmp
bound
sub
aaa
aad
xchg
test
dec
xchg
mov
loopne
lcall
fmull
push
jbe
and
bound
dec
sbb
mov
mov
cmpsb
push
or
mov
and
lahf
int
mov
popf
cltd
sub
jge
adc
call
arpl
push
cwtl
jle
sbb
jg
test
push
out
sti
enter
jg
inc
or
addl
jmp
push
inc
pushl
out
jecxz
into
push
mov
scas
aam
test
pop
sbb
jg
and
fidivl
jmp
es
aaa
add
ds
mov
xchg
push
cmpsl
fcoms
pop
dec
mov
xchg
push
pushl
inc
out
xor
lret
insl
or
jne
enter
stc
cmp
cmp
sbb
pop
mov
hlt
push
add
mov
dec
jno
inc
pop
call
pop
call
lahf
mov
mov
xchg
add
inc
dec
movsl
stos
lods
sbb
sarl
mov
pop
loopne
insl
jns
rclb
dec
popf
jae
sbb
sbb
lea
mov
aam
inc
adc
add
mov
out
mov
xchg
ret
popf
cmp
loop
clc
pop
push
cmc
xchg
pushl
hlt
dec
or
fnstenv
std
adc
sbb
mov
pop
test
mov
push
add
xor
bound
jg
jo
in
cwtl
aam
mov
into
sahf
and
cmp
orb
loopne
lods
pop
ja
clc
jmp
js
push
imul
comiss
lods
addr16
mov
mov
bswap
loope
pushl
inc
icebp
xchg
inc
mov
mov
gs
js
jge
negl
mov
inc
mov
pop
sub
popf
or
jb
mov
push
aas
sub
adc
into
lods
add
scas
int
sub
and
mov
rcll
pop
or
or
call
outsl
out
nop
fwait
push
jge
jl
or
adc
pop
outsl
cmp
jnp
or
decl
ss
push
xchg
jl
in
sbb
mov
lods
mov
jg
js
mov
xchg
sbb
or
fucomp
jecxz
sub
shr
inc
out
mov
sbb
lcall
push
add
xor
loop
jne
fs
inc
inc
stc
push
xor
lcall
outsb
mov
rcr
cld
or
fmuls
sub
and
mov
ficoml
cli
incl
insb
rcrl
pop
mov
push
fmull
leave
out
into
gs
incl
lds
sub
mov
xor
outsl
pop
ljmp
loopne
xlat
xor
aaa
pop
mov
jg
pop
mov
pop
inc
rcll
fdivr
inc
ja
int3
test
push
pushf
mov
cmp
xlat
out
jecxz
call
imul
sbb
push
mov
lcall
idiv
lcall
pop
les
repz
pop
data16
sbb
jo
or
scas
cmp
decl
inc
mov
in
iret
or
xlat
in
mov
sub
cli
fnstenv
mov
pop
out
mov
jg
jno
rcr
mov
sub
cld
xor
ss
adc
sbb
jmp
adc
mov
and
add
or
add
call
out
dec
cmp
jmp
sbb
outsl
jb
mov
pushl
jge
push
out
xchg
cwtl
jmp
cmpsl
xchg
xchg
and
pop
add
cs
xchg
mov
inc
cltd
push
aaa
incl
aaa
xchg
shlb
mov
lret
and
jge
fcomi
pushl
cwtl
imul
add
push
std
push
add
xchg
scas
pushf
bound
cmp
mov
and
or
fildl
jge
xor
mov
in
mov
scas
cli
xchg
fwait
xchg
and
daa
lret
lcall
out
push
movsb
mov
out
jb
loopne
or
flds
jg
jg
mov
clc
lea
ror
mov
loopne
mov
in
sbb
pushf
mov
dec
in
push
mov
stos
hlt
jg
outsl
iret
xchg
jnp
loop
popa
adc
push
orl
pushf
in
ds
das
hlt
iret
pop
adc
mov
sub
pop
cmc
lcall
call
mov
pop
packssdw
cmc
in
sbb
addr16
jno
insb
data16
pushl
dec
sbb
cmp
cmc
mov
pop
mov
xchg
pop
scas
jo
cs
inc
ror
sti
adc
dec
in
sahf
shll
cmp
mov
cmpsb
cs
jae
add
ficom
jmp
repz
mov
pushf
push
or
dec
mov
mov
inc
jg
sub
cmpsb
mov
xchg
push
push
push
pushl
dec
mov
inc
or
dec
cltd
mov
pushf
pushf
mov
or
pushl
jg
into
dec
inc
fs
hlt
mov
jo
pop
ret
ss
decl
pop
fidiv
arpl
jno
cmpsl
jmp
repz
std
pop
ja
ljmp
inc
inc
adc
lcall
out
xor
je
add
ss
mov
xchg
out
ret
inc
std
incl
dec
pop
xorl
add
sub
pushf
inc
repnz
call
fsts
sub
daa
mov
cld
mov
dec
and
test
push
mov
cld
lret
outsl
push
push
xchg
les
ss
fistp
lcall
sar
in
inc
cmpsb
hlt
add
cmp
xchg
sbb
jge
jno
sub
jg
jmp
push
mov
adc
and
lret
jp
jmp
ljmp
fstpl
pop
cmpsl
jecxz
cmp
addr16
jg
inc
imul
fs
aas
lods
leave
cmpsl
movsl
xor
mov
mov
test
mov
mov
sub
pop
cmp
dec
mov
push
gs
aad
hlt
jnp
push
push
in
adc
call
mov
sti
popf
jle
loop
enter
ret
cmp
jle
lcall
lcall
or
cmpsl
pop
mov
pop
sahf
pop
bound
xchg
cs
cmpsb
add
loopne
lahf
test
mov
fisubl
loope
mov
loop
int3
pop
or
cwtl
iret
pop
pop
add
add
sbb
movsl
jg
xchg
fisttpl
outsl
dec
sarl
rclb
sub
enter
add
add
mov
loop
les
jg
jmp
fcmovnb
add
pop
loopne
or
xchg
inc
lods
cmp
lcall
mov
mov
sbb
sub
fsubrs
pop
cmp
mov
fistp
in
cli
ss
std
outsl
mov
sti
clc
in
inc
xchg
fucomip
jg
cmpl
or
dec
in
out
jp
lock
jmp
cs
xchg
nop
sbb
fwait
and
fwait
lcall
in
daa
incl
xor
xchg
mov
outsl
cld
call
and
test
jl
out
arpl
inc
outsl
pop
aas
ljmp
fnop
cmp
pop
mov
adc
lcall
aad
mov
ret
xchg
mov
pop
mov
dec
add
mov
lcall
inc
xchg
addr16
push
dec
fimull
push
lret
daa
mov
pop
sti
push
insb
inc
cld
pop
int3
jnp
test
pop
mov
lods
pop
scas
inc
dec
repz
sub
xchg
jne
mov
lock
pop
xchg
adc
out
adc
lods
lods
dec
addl
mov
jle
dec
je
sahf
xchg
into
jle
pusha
adc
pop
and
popa
cmp
inc
rolb
dec
fdivrl
sarl
in
cmpsb
pop
xlat
mov
mov
jb,pt
cmp
push
repz
fstpt
sbb
sbb
jge
movsl
stos
push
std
iret
out
in
inc
incl
or
ja
cmp
pop
insb
lcall
xchg
pop
cs
mov
dec
insb
int
movsb
das
ds
insb
sub
incl
xor
aaa
inc
mov
out
dec
and
or
arpl
cli
inc
or
pop
mov
xor
aam
mov
add
ljmp
ds
call
push
ret
mov
push
jns
popf
pop
cmp
jecxz
pop
decl
inc
call
pop
lds
stos
adc
fnstcw
push
shr
js
lock
loopne
jp
mov
ja
sub
incl
push
test
lds
push
lods
mov
cmp
incl
stc
push
fisub
jno
push
jns
loop
push
decl
mov
rorb
push
mov
cmp
pop
and
or
pop
cld
jmp
lods
pop
inc
push
fdivrs
xchg
pop
jbe
xor
and
inc
scas
insl
and
sbb
fisttpll
inc
jp
lds
fidivl
idivl
jns
dec
icebp
stc
sbb
mov
insl
ss
sub
movsb
std
jmp
popf
push
int
in
or
decl
inc
push
lahf
xor
mov
aas
sarl
roll
psadbw
stos
mov
ss
push
xlat
jae
pop
popa
pop
and
jge
inc
je
xchg
ret
jle
lds
adc
cli
incl
dec
add
outsl
mov
cmp
sbb
in
decl
std
or
push
outsl
addl
pusha
fldt
outsb
cmp
cmc
add
decl
popf
mov
gs
mov
add
stos
inc
inc
xchg
in
mov
jmp
add
cmp
gs
mov
cmp
or
dec
jmp
xor
ret
lret
rclb
jmp
rorl
jl
mov
xor
or
sbb
inc
or
mov
push
push
dec
push
lods
addb
mov
and
inc
xor
sbb
test
out
cwtl
lods
fistpl
idiv
sub
iret
cmp
dec
push
jle
mov
sahf
fistl
lret
roll
sbb
sub
divl
push
xor
push
sti
sub
decl
or
adc
dec
cli
xchg
insl
xor
clc
or
and
dec
bound
andb
loope
mov
incl
int3
and
test
inc
rcrb
xchg
mov
out
mov
mov
and
mov
adc
inc
icebp
fwait
cli
inc
sub
movsl
test
or
outsl
ret
pop
mov
shrl
pop
push
mov
loope
das
std
lcall
lcall
movsl
adc
inc
pop
shrb
lcall
jecxz
adc
cmc
loope
mov
mov
repz
call
push
add
jo
push
cmp
mov
insb
dec
inc
or
stos
loope
mov
mov
and
sub
inc
mov
mov
xlat
sbb
mov
loopne
daa
push
imul
nop
mov
push
cs
adc
dec
jp
or
lock
call
mov
js
push
mov
das
and
dec
lret
into
dec
stos
aas
mov
arpl
or
loop
pop
out
push
inc
mov
adc
mov
pop
cmp
jp
pop
leave
jecxz
or
lea
xchg
jp
sub
in
mov
test
mov
movsl
dec
decl
enter
fisubrl
cld
adc
jno
int
cmp
push
pop
sar
decl
jo
mov
mov
mov
dec
sub
mov
stc
mov
cmpsl
icebp
scas
mov
fistpll
mov
or
mov
out
mov
cs
mov
pop
mov
rorl
rcl
test
mov
or
insl
std
pushl
xchg
sub
orl
fidivl
push
jo
lcall
xor
and
out
xchg
addr16
or
jmp
fnop
sub
aas
and
loop
call
push
out
stos
hlt
push
mov
leave
test
sub
aaa
mov
or
wbinvd
mov
das
lock
call
incb
insb
out
stos
push
in
popf
decb
int3
cld
mov
daa
ss
mov
xchg
pop
loopne
fild
hlt
lcall
call
mov
cwtl
call
jo
dec
add
or
dec
xchg
push
rclb
sahf
mov
lret
das
lock
jp
cmp
jg
cmpsl
or
sbb
sub
mov
mov
mov
scas
mov
cli
decl
cmpsb
js
lea
dec
pop
sti
div
outsl
stos
mov
test
xchg
cs
mov
decl
pop
pop
jle
jl
test
call
cmp
pop
imul
mov
jl
stc
imul
rcr
sbb
cmpsb
push
xorl
lods
or
pushl
xchg
mov
dec
mov
cmp
test
int3
ljmp
std
mov
imul
stos
ret
sub
cld
jg
pushl
aam
lods
mov
std
and
repnz
pop
jg
inc
aad
xchg
dec
test
sub
movsl
sub
rorb
popa
push
ss
jb
sub
call
mov
std
mov
scas
mov
mov
pop
mov
sub
call
jp
push
loope
imul
xchg
arpl
dec
pop
call
xchg
test
ss
pop
sbb
sar
ret
sub
out
lret
mov
test
sti
testl
push
sar
dec
mov
add
adc
inc
sti
incl
push
or
sbb
notl
xchg
add
or
aam
es
push
fwait
or
pop
fidivrl
or
mov
xchg
cmp
xor
push
repnz
test
jl
test
fimull
loope
xor
ljmp
adc
sahf
mov
push
inc
das
sub
mov
int3
mov
js
lock
dec
repz
ljmp
dec
popf
gs
hlt
sbb
mov
aad
push
cmp
out
inc
mov
roll
mov
hlt
or
frndint
push
jmp
das
or
pop
cli
decl
cmp
xchg
cmp
and
out
adc
popf
clc
jns
mov
fucomip
add
fstpt
int
addr16
movsb
pop
push
mov
sbb
loope
test
gs
mov
mov
aam
xor
dec
popa
enter
inc
aas
add
inc
add
jg
xchg
mov
push
adc
dec
cwtl
mov
push
dec
push
decl
in
cli
iret
dec
test
mov
xor
cltd
cmpsb
pop
cmpsl
xor
lcall
fiaddl
inc
jae
movl
xor
jmp
inc
dec
jp
and
clc
fcmovnbe
outsb
cld
cmc
and
pop
add
xchg
test
movsl
jg
sub
ds
jns
xorb
fisubr
repz
jg
lcall
rcl
sub
cltd
jp
cmpb
ficom
pop
daa
adc
ret
les
push
loope
ljmp
sub
js
sbb
nop
sub
or
insb
gs
icebp
sbb
xchg
push
lcall
call
mov
push
jp
cli
rcll
das
sub
jle
insl
fwait
out
lret
lcall
out
lds
pop
fsubs
imul
pop
jg
inc
dec
push
sbb
js
adc
lock
not
adc
call
xlat
pop
rolb
adc
pop
inc
sarb
out
adc
addb
ljmp
mov
int3
andb
inc
aad
je
dec
in
adc
js
push
in
call
js
push
ljmp
or
movups
data16
pop
or
sub
or
xchg
test
cmp
mov
mov
inc
xchg
icebp
mov
mov
inc
int
xchg
jg
roll
cmc
out
sub
sub
clc
cmpsl
lods
xor
cmp
jne
jmp
movsb
fdivrp
stos
in
gs
jp
cwtl
lahf
movsl
imul
loop
pusha
sbb
imul
in
ret
rorb
jg
cltd
xor
and
stos
mov
mov
adc
cli
ljmp
ficomp
call
lds
add
inc
sub
push
rep
int3
in
push
and
incl
jbe
or
les
mov
pop
fiaddl
push
jge
lret
shlb
lcall
adc
sub
pop
sub
inc
clc
scas
xchg
and
lock
mov
jmp
out
jl
jne
sbb
jge
pop
sbb
cli
or
test
decl
dec
fildll
inc
sub
pushf
pop
int
or
mov
pushf
mov
mov
call
mov
adc
in
es
xchg
jb
js
pop
cli
jno
pop
mov
nop
jmp
and
icebp
adc
pop
mov
stos
pop
lahf
inc
jne
test
cwtl
decl
scas
sahf
jl
ja
cmp
adc
data16
es
mov
cmp
jmp
rolb
adc
not
adc
sbb
adc
incl
sti
mov
push
and
sti
scas
add
cmpsl
sub
cmp
adc
decl
inc
push
insl
addb
imul
test
negl
call
sub
imulb
jae
cmp
dec
stc
ss
leave
or
les
jg
addr16
lds
in
xor
clc
fsubrl
orl
jg
daa
fisubl
cli
cld
ret
outsb
sarb
int
push
cwtl
pushf
push
shrl
jne
insb
lock
add
decl
mov
fnsave
in
mov
stc
xchg
cmp
popf
mov
or
loopne
decl
inc
ss
mov
mov
push
push
mov
or
mov
pop
stos
jg
push
pop
in
or
cli
call
clc
loope
insb
call
imul
test
in
mov
mov
lcall
sbb
lcall
dec
decl
bound
popa
or
xchg
adc
icebp
ret
inc
jmp
jmp
lcall
and
adc
xchg
cld
jmp
out
rcll
ljmp
cltd
dec
cmc
push
jb
xor
jge
add
ljmp
imul
jmp
mov
sbb
mov
xchg
les
call
int
pop
pop
cltd
adc
pop
jnp
jno
call
pcmpeqw
xchg
adc
and
js
sbb
je
push
decb
icebp
ljmp
pop
pop
push
fprem1
popa
lock
xor
adc
das
inc
mov
push
mov
sti
pop
fs
aaa
adc
mov
jnp
dec
xor
out
insl
jbe
sti
in
out
xor
xchg
lods
add
lds
xchg
call
lods
add
and
aam
aas
xlat
in
pop
add
loop
dec
xor
cmp
mov
inc
mov
stos
enter
lds
mov
inc
push
mov
cmp
jle
push
or
mov
mov
aam
mov
xchg
or
cmc
bnd
jbe
push
push
adc
jmp
fsubs
xchg
and
push
and
mov
pop
xchg
insl
push
bound
xchg
repz
xchg
push
sub
aam
mov
mov
insb
sbbl
jnp
adc
cmp
loope
addr16
aaa
cs
add
adc
inc
xorb
mov
pop
aam
push
mov
lcall
fnstsw
mov
adc
add
aad
out
and
push
lahf
inc
xor
mov
push
mov
sbb
jne
lods
iret
in
es
inc
inc
xlat
lahf
pop
vpsubsb
cmp
jl
xor
decl
jmp
and
pop
pop
push
rcrb
fimul
mov
call
mov
mov
jae
ljmp
je
pop
pushl
outsl
and
insb
mov
pop
add
sbb
mov
mov
or
or
add
xchg
inc
jmp
add
test
mov
icebp
jmp
cmp
xchg
in
into
mov
jno
sub
fucomip
mov
aam
xchg
lret
bound
sbb
out
arpl
ja
xor
jg
scas
push
fsubl
cmc
out
dec
jnp
lods
sub
test
call
fimull
jl
int
or
fisttpll
push
push
pop
out
or
fwait
pusha
push
mov
and
lahf
out
fadd
ljmp
dec
add
jg
sbb
mov
mov
sub
fisubrl
fcmovne
sarb
cmp
and
or
daa
repnz
aaa
out
aas
lahf
mov
inc
int3
and
dec
ljmp
inc
fsubrs
or
bswap
fdivl
push
mov
mov
adc
aas
jo
insl
push
or
and
cltd
push
mov
xchg
sahf
push
jp
daa
data16
mov
mov
and
and
fidivl
movsb
jle
mov
inc
std
das
hlt
mov
repnz
lahf
xor
jge
xor
fucomip
dec
sarl
out
push
inc
mov
sarb
xor
std
push
inc
lcall
pop
push
pop
push
mov
jle
push
add
sarb
decl
jg
sbbl
bound
pop
mov
push
fsubrl
decb
aas
fbstp
sbb
xchg
out
sti
sub
js
ret
outsb
dec
in
mov
scas
outsl
xchg
add
push
jg
fidivl
mov
repnz
push
pop
push
push
fistpll
jg
xchg
and
call
lcall
mov
sbb
int
scas
mov
decl
outsl
dec
loope
push
repz
add
sarl
and
xchg
inc
ss
icebp
xchg
das
inc
cmc
mov
sub
call
or
decb
mov
push
out
push
lods
fbstp
das
stc
decl
adc
aad
clc
stos
jnp
ror
pop
test
or
add
ja
add
mov
sub
jg
pop
ljmp
cmp
daa
cmp
mov
stc
dec
push
mov
xchg
ja
mov
test
fdiv
lock
repnz
js
jne
fs
mov
mov
push
outsl
sub
mov
int3
lock
bnd
xchg
sar
orb
testb
dec
iret
add
stc
insb
jb
inc
push
ja
ljmp
mov
stc
mov
mov
pusha
mov
jg
jmp
lea
imull
movb
and
jo
lcall
add
addr16
sub
and
fldl
push
loopne
enter
sar
test
cmp
int
addb
sub
inc
fbld
les
ja
lcall
or
sbb
pop
and
inc
dec
jb
pop
dec
jae
imul
cmp
sub
jns
out
pop
addb
mov
dec
sub
incl
mov
xchg
lcall
gs
inc
into
icebp
mov
mov
adc
imul
arpl
test
lcall
mov
or
xchg
jp
lods
jle
cs
lock
cmp
sub
mov
aaa
push
sub
and
push
movsl
in
call
leave
dec
sbb
imul
mov
and
push
or
xchg
pusha
sub
inc
fdivs
push
pop
mov
pop
push
inc
outsl
sti
adc
das
into
xchg
aad
data16
mov
cmp
push
dec
pop
loop
nop
xor
jg
add
cltd
mov
mov
mov
test
fcomi
js
add
pushf
sti
arpl
mov
dec
mov
xchg
xchg
jmp
and
test
sub
sbb
in
or
sar
test
scas
dec
loopne
jecxz,pt
daa
leave
and
sbb
mov
mov
or
outsl
mov
xchg
in
loop
call
ret
outsb
rclb
mov
jb
in
nop
jbe
xor
pop
movswl
push
dec
pusha
or
test
icebp
out
fstpt
sub
xor
or
mov
push
lods
add
les
fcomip
mov
mov
pop
mov
outsb
jmp
aad
int
fistpll
pop
jae
ret
adc
in
xchg
lds
jnp
mov
incl
dec
mov
popa
xchg
xor
xlat
cltd
mov
decl
add
les
xor
cmpsb
sbb
pushf
jmp
push
mov
or
mov
das
std
jge
out
mov
movsb
mov
sti
jg
int3
dec
in
mov
jg
jg
push
sub
lret
leave
push
jge
xor
jl
ja
pop
out
inc
arpl
fs
call
jg
cmpsb
test
push
and
cs
dec
cwtl
lods
inc
in
add
add
mov
shl
push
pop
push
and
aas
jecxz
inc
repnz
pop
jg
dec
xchg
fnsetpm(287
mov
out
xchg
in
bound
sub
arpl
ficomp
insl
mov
mov
pop
scas
mov
adc
adc
mov
gs
daa
in
pop
cld
jg
xlat
int
movsb
sarb
sbb
loop
outsb
adc
lock
lcall
repnz
pop
xchg
mov
pop
adc
inc
jmp
into
outsl
dec
movsl
cmp
stc
xchg
sahf
out
or
scas
dec
sbb
push
mov
fwait
in
xor
push
pushl
cli
outsl
dec
shr
jmp
aam
scas
shlb
jo
jge
cmpsl
dec
jne
mov
add
fwait
xor
mov
adcl
incl
sahf
inc
mov
or
stos
mov
sbb
jmp
cltd
adc
cli
mov
mov
js
push
rcrb
iret
rcrl
and
movsb
push
jecxz
pop
aam
mov
int3
sti
jl
dec
pop
sahf
and
dec
add
mov
push
orl
movsb
stos
sarl
roll
popa
insl
push
push
call
jbe
rolb
lds
ja
xchg
xor
leave
outsl
out
adc
push
and
or
sub
stos
push
pop
cld
sbb
enter
xchg
pop
scas
mov
fnop
call
adc
push
jnp
xchg
dec
jo
mov
cld
dec
test
test
cmpsb
jecxz
mov
call
das
jmp
or
mov
cld
sub
sbb
adc
in
jnp
fnop
ljmp
rolb
jo
rcrb
lret
cs
mov
sub
dec
movsl
mov
aad
fstp
dec
notb
imul
lds
push
pop
jle
cwtl
ja
mov
scas
cld
outsl
cld
decl
sbb
cmp
hlt
sub
adc
repnz
cmp
xchg
fstpt
jno
cmp
sub
sbb
jle
push
fisttpll
add
cmp
jo
es
add
out
shlb
pop
dec
mov
push
fdivrl
daa
push
aaa
push
inc
outsl
std
mov
pop
ret
dec
push
repnz
out
xchg
in
aad
daa
ljmp
pushf
ljmp
movsb
push
mov
mov
ljmp
xor
add
or
fnstcw
ror
pop
div
cmp
jp
mov
lea
mov
cli
lcall
xchg
stos
push
jmp
cwtl
add
jge
mov
out
mov
sbb
lret
outsl
aad
fbstp
fdivrl
stos
add
fistl
jmp
dec
fs
inc
adc
mov
xor
jmp
mov
push
dec
mov
iret
ja
pusha
cmpl
xor
imul
in
dec
sub
clc
jg
decl
ss
lcall
idiv
in
push
imul
call
push
cmp
adc
cmpsl
xorl
fcmovnbe
mov
dec
and
dec
out
push
pop
mov
fsubrs
sbb
and
in
rclb
push
scas
adc
mov
fldcw
lret
dec
jp
iret
insl
popa
pop
int3
pop
data16
mov
pop
or
xor
mov
jmp
stos
jns
lock
xchg
ss
aas
pop
out
cld
pushl
fstpl
inc
adc
xor
pop
mov
xchg
inc
lret
popf
cmpl
cmp
pop
push
shr
mov
je
loop
cmp
xchg
aam
or
push
ljmp
fsts
jmp
ss
or
mov
push
mov
ja
in
bound
inc
lcall
adc
stos
and
push
mov
cmp
cmp
pop
test
aaa
xchg
jne
xor
lret
fbstp
jae
xorl
ljmp
pop
loope
out
inc
push
out
mov
mov
ds
jg
jmp
dec
adc
das
cltd
lds
mov
lret
mov
shll
iret
loop
stos
test
decl
out
and
push
cli
pop
enter
dec
enter
add
or
or
cli
inc
sahf
jnp
fdivl
outsb
xchg
dec
mov
fldcw
pop
dec
xor
xchg
bound
fs
pop
lea
ljmp
fwait
stos
aam
js
icebp
stc
jmp
xor
mov
pushf
insl
fbld
int3
jecxz
movsb
sub
ss
pop
ljmp
jbe
push
xchg
nop
add
push
lret
fbld
pop
fstps
cs
sub
pushl
ficompl
push
test
sbb
popa
pop
mov
je
jmp
xchg
movsl
inc
je
scas
mov
jbe
or
cmc
call
cmp
xor
ffree
cwtl
push
adc
adc
fucomip
mov
lret
lock
inc
jnp
adc
mov
aaa
adc
mov
sub
xlat
popf
jge
in
or
sti
jle
push
xchg
fsts
icebp
call
sti
iret
divb
jmp
jge
outsl
lea
jo
testl
adc
mov
cli
mov
clc
fistpl
adc
and
jne
inc
add
aas
jno
pushl
stos
xchg
popf
mov
pop
cli
les
lock
pop
xorb
jmp
mulb
fs
mov
or
xor
sti
insl
inc
or
ficomp
pop
pop
pop
int
or
pushl
dec
mov
or
lcall
lock
std
push
adc
aad
push
push
inc
into
ds
ds
movsl
adc
incl
push
inc
or
es
mov
scas
xlat
test
mov
gs
stos
push
mov
popf
scas
call
mov
push
subl
mov
sbbl
mov
cmpsb
test
out
das
push
and
das
xchg
rclb
jns
scas
repnz
in
lahf
shl
mov
mov
xor
imul
ds
ljmp
mov
cmp
push
and
adc
mov
xor
call
inc
cli
or
add
or
push
cmp
jmp
movsb
out
lods
clc
pop
imul
decl
in
hlt
mov
es
cmp
sub
sbb
ljmp
jl
jmp
sub
push
das
cmp
nop
das
std
lcall
sbb
jo
or
or
sbb
xchg
push
jge
dec
shlb
incl
cli
nop
dec
out
cmpsb
sbb
lcall
and
jnp
and
std
ror
imul
mov
dec
cmc
pop
sub
jb
bound
inc
jns
cmp
inc
je
fcompl
push
rcll
decl
mov
cltd
xchg
jge
nop
mov
jp
out
or
pop
push
mov
cld
incl
imul
add
mov
dec
mov
lods
sar
aam
or
dec
mov
sub
pop
mov
xrelease
es
fucomip
lcall
xor
inc
idivb
pop
xchg
jecxz
mov
mov
mov
or
mov
xor
cmc
cmp
xor
call
xchg
negb
jge
pop
test
jp
sbb
mov
push
roll
mov
xorb
adc
popf
fs
decb
xchg
lods
push
hlt
pushl
xor
mov
sub
dec
shrl
fistpll
pop
push
and
pop
loop
add
mov
ret
jb
sub
pushl
clc
sbb
pop
or
bound
aad
lcall
aas
in
mov
mov
movsl
xchg
push
adc
loope
pushl
mov
js
sahf
pop
rorl
mov
jg
add
jns
adc
cwtl
les
shll
cmp
mov
xchg
fldt
jmp
faddp
ficom
shlb
mov
int
subl
mov
adc
sbb
mov
jno
popa
jg
fwait
std
lods
pop
cwtl
jmp
in
data16
incl
cmp
sub
aad
mov
sahf
testl
incl
decl
push
sbb
or
mov
adc
xorl
ret
cli
hlt
xchg
mov
mov
jecxz
cmp
stos
mov
xchg
addr16
mov
mov
inc
or
lcall
mov
mov
ret
sbb
loop
lods
mov
pushl
jmp
bound
adc
lret
jmp
sub
mov
adc
xchg
iret
clc
mov
sbb
decl
cltd
stc
stos
lahf
dec
sti
sbb
push
jmp
fcomp
cld
out
cld
icebp
add
repz
pop
inc
popf
pop
mov
lods
jle
test
pushl
int3
mov
dec
push
jne
xchg
flds
pop
fistl
pop
loopne
inc
jo
sti
xor
in
sar
pop
mov
mov
pop
clc
pop
mov
xor
inc
mov
shrl
xor
mov
push
cmp
push
in
daa
push
scas
mov
movsb
dec
and
and
js
shll
call
mov
add
aaa
clc
mov
adc
or
adc
xor
jg
push
jmp
inc
lock
imul
add
imul
clc
xor
pop
and
leave
addr16
push
xchg
aas
mov
adc
lcall
pop
push
repz
push
mov
hlt
bound
cmp
jecxz
push
dec
aas
fdiv
push
in
incl
xorb
or
test
into
mov
push
imul
int3
mov
out
into
lea
sbb
jno
int3
insb
daa
lahf
arpl
bound
in
shr
jmp
lods
adc
cwtl
cmp
lods
lret
and
repz
push
stos
leave
mov
ja
das
push
cmc
jmp
push
inc
sbb
xchg
cli
jae
into
call
sbb
adc
divl
mov
or
mov
dec
fwait
adc
mov
or
inc
jg
mov
ret
mov
push
test
call
jge
icebp
scas
arpl
jp
es
pushf
aas
aad
mov
cmp
call
ljmp
add
add
out
mov
mov
in
inc
jae
sbb
cld
mov
mov
out
shll
ds
outsl
cld
jg
in
popf
stc
push
enter
xor
cmp
cmpsl
test
jmp
aas
popa
adc
inc
hlt
xorl
rcr
xchg
add
insb
das
icebp
aaa
cli
cmp
lods
les
dec
aam
mov
clc
fnstsw
decl
insl
ss
ss
addr16
cmp
mov
lcall
jle
xchg
cmp
jns
jbe
call
popa
mov
jmp
sub
popa
pop
and
pushf
rcrb
lea
jg
mov
mov
mov
stos
push
pop
xlat
mov
fnstsw
lcall
aam
or
nop
mov
sar
jge
hlt
fcoml
inc
jb
enter
adc
mov
rep
inc
divb
fstl
and
mov
shrb
lea
fbld
das
cmc
movsl
call
cmpps
lods
or
pusha
mov
xor
lea
push
mov
cmp
stos
cmp
sub
push
jg
fwait
lcall
cmp
sbb
ja
decl
xchg
in
cmpsb
lds
push
cli
sbb
movsb
cmp
stos
ret
incl
fidivl
mov
mov
les
cmp
mov
pop
inc
pop
loop
incl
or
jmp
in
xchg
cmpl
jmp
cs
out
rcl
outsl
out
sbb
jb
iret
loopne
mov
daa
addr16
call
xlat
and
mov
cmc
sti
jae
loop
std
push
sub
outsl
xchg
mov
sub
push
cmpsl
jnp
into
mov
dec
addr16
test
xchg
and
mov
adc
add
mov
inc
cmpsl
jae
jmp
cmc
repnz
xor
int3
lcall
gs
cmpsl
idivb
sub
adc
xchg
mov
test
call
lret
mov
dec
sub
dec
adc
cmc
push
outsb
rclb
loopne
mov
xor
mov
ds
mov
das
lock
xchg
out
inc
jno
outsb
mov
sbb
sahf
cmp
ss
dec
or
add
jmp
je
sub
cmp
cmpsb
out
sti
fstl
test
movsl
push
scas
pop
mov
jl
test
jmp
xor
lock
xchg
cmp
adc
or
out
das
jbe
fnstcw
cmp
push
xor
xchg
jno
mov
cmpsb
dec
ss
cwtl
lods
jg
pushl
mov
or
sub
sbb
lds
pop
es
aaa
jmp
cltd
jl
repz
ds
jne
sahf
adc
dec
pop
stc
xor
std
incl
push
sti
es
stc
dec
stos
sub
mov
mov
sub
push
stos
popf
icebp
xchg
mov
mov
xchg
pop
or
cmp
das
out
pop
hlt
jae
loopne
addr16
aaa
mov
outsl
out
js
inc
mov
xchg
lcall
fildl
fimull
xorl
dec
mov
rcrb
add
cltd
and
sub
add
pushl
dec
hlt
sbb
imul
or
adc
stos
xchg
push
rorl
push
out
mov
inc
pop
ljmp
fbstp
enter
xor
mov
js
lcall
sub
jo
popf
loope
pushf
imul
icebp
and
lcall
and
sarb
arpl
jnp
xchg
mov
dec
xchg
lods
mov
xlat
mov
or
xchg
mov
adc
dec
fimul
daa
repnz
mov
iret
sbb
xchg
push
test
clc
push
xchg
stos
push
ljmp
sbb
or
stos
mov
or
and
call
in
sub
push
mov
sti
cmc
into
test
dec
push
mov
iret
outsl
push
in
mov
add
mov
sbb
popf
inc
mov
xchg
or
xchg
frstor
mov
push
jne
ljmp
push
fwait
call
cwtl
repnz
inc
cmpsl
xlat
mov
sub
jbe
leave
mov
fwait
ljmp
icebp
inc
or
pop
outsb
enter
dec
ja
sub
mov
cli
call
push
push
add
xor
cmp
push
pop
jne
inc
jecxz
jmp
pop
call
mov
inc
adc
xorb
or
imul
icebp
mov
ljmp
lock
mov
lcall
add
jg
in
stc
jecxz
incb
in
dec
test
or
sbb
stos
outsb
loop
pushl
inc
pusha
push
scas
lods
xchg
pusha
sar
xor
push
mov
sub
xor
outsl
cld
call
idiv
outsl
cmp
jle
arpl
stos
push
lcall
fiaddl
push
and
sub
rcr
arpl
push
mov
sbbb
mov
call
decl
pop
clc
test
cmp
mov
inc
sbb
call
aad
std
pushl
sbb
dec
xchg
jo
mov
xchg
mov
ljmp
test
inc
popf
sahf
xchg
ret
mov
icebp
cmp
gs
fs
in
call
test
sub
mov
sub
sub
xor
cld
incl
repnz
mov
push
push
adc
imul
adcl
decl
xor
daa
xor
jle
lret
ret
sbb
pusha
cld
scas
or
jmp
push
test
or
add
in
mov
mov
inc
adc
lret
sbb
jg
inc
loope
std
out
les
mov
push
add
and
fsts
inc
call
cli
call
ds
cltd
xor
sub
nopl
scas
mov
or
lcall
jo
cltd
shrl
repnz
aaa
out
xchg
mov
imul
es
in
lcall
push
stc
das
dec
out
arpl
sub
imul
cmp
inc
call
push
sub
popf
pop
cmpsl
mov
movsb
mov
andl
cli
pop
cli
call
je
ja
sub
pushf
fildll
fisttpl
decl
pop
in
dec
push
cmpsl
jns
imul
mov
push
pop
call
inc
xor
push
xlat
dec
inc
add
arpl
imul
mov
out
jmp
xchg
jle
adc
ret
cmpsl
mov
mov
les
in
mov
cmp
jae
xchg
xchg
es
mov
add
push
mov
popf
andl
das
icebp
add
xchg
pop
xor
jns
mov
scas
xor
jmp
enter
and
jg
cmp
push
xchg
mov
rcrb
fnsave
std
clc
test
fcmovnu
pop
xor
or
lea
dec
mov
in
inc
ja
jne
inc
decl
iret
dec
sub
mov
mov
icebp
adc
imul
std
xchg
rep
outsl
test
enter
clc
lcall
push
jno
jne
dec
push
pop
mov
fsub
dec
adc
xchg
adc
sub
jno
push
daa
and
mov
test
ljmp
ds
push
in
lahf
mov
mov
sti
cmp
sub
mov
push
pop
test
pop
jl
mov
pop
pushf
call
movl
push
aaa
dec
jo
push
outsb
daa
adc
pop
and
jno
cltd
ljmp
inc
jae
mov
pop
adc
jge
adc
out
mov
cmc
test
call
incl
fcoms
push
pop
pop
jmp
cmp
mov
mov
add
sbb
sbb
stc
cs
xor
test
test
add
repz
aaa
lret
inc
mov
push
dec
and
push
or
mov
xor
xchg
xchg
push
sub
jle
je
mov
add
lret
add
dec
cld
jmp
mov
mov
je
dec
test
out
or
addr16
sub
neg
cli
pop
cli
mov
je
mov
sub
ret
jmp
jbe
mov
adc
sti
movsb
push
pop
movsb
out
repnz
xchg
inc
mov
fisubr
mov
fwait
vcvtsd2si
decl
dec
int
lods
lahf
test
mov
out
jecxz
add
es
clc
or
jp
or
jne
repz
sub
sbb
pushl
adc
in
mov
add
lds
add
xchg
pop
aam
inc
rolb
xchg
xor
clc
cmp
inc
cmpsb
aaa
mov
adc
mov
dec
loop
out
lcall
adc
ss
and
sbb
leave
rcrl
fldt
sti
ss
cli
cmp
call
pop
popa
test
xlat
mov
sub
mov
aaa
mov
cmp
outsl
mov
adc
jl
xor
cmc
cwtl
decl
and
jecxz
sbbl
add
ds
inc
pop
dec
xlat
inc
js
decb
sti
lods
fldt
enter
sub
outsb
pushf
in
mov
xchg
jg
decl
pop
js
adc
mov
lahf
jg
mov
lcall
popa
mov
mov
lret
js
inc
and
xchg
ret
mov
incl
and
jno
mov
mov
jmp
sbb
loope
lock
imul
insb
and
icebp
out
jns
negb
decl
pop
pop
std
jo
cli
shrb
shlb
or
in
mov
jmp
pushl
hlt
pop
or
mov
sahf
push
mov
jecxz
movsl
ficomp
decb
push
lcall
sub
or
aas
adc
mov
push
lock
sbb
cmpsb
jecxz
sbb
call
es
insb
lret
push
lcall
aad
fs
adc
mov
xchg
jge
imul
lcall
in
xor
in
mov
xchg
mov
adc
jg
fidiv
mov
inc
sbb
jns
push
sub
push
dec
fs
jmp
insb
jne
push
js
dec
fisubrl
in
sbb
popa
or
sahf
sahf
and
inc
xchg
test
out
cmp
notl
pop
int3
dec
and
in
push
call
decb
and
and
sub
or
incl
iret
call
xor
jge
icebp
repnz
push
dec
fcoml
jg
lcall
lods
mov
dec
inc
aad
dec
mov
loop
sub
push
leave
pop
in
or
adc
dec
std
decl
std
jecxz
jl
or
repnz
xchg
inc
xor
dec
mov
stc
sub
adc
das
lock
decl
repz
or
out
mov
inc
cli
cld
int
dec
lret
lds
cld
decl
jle
loop
cmp
sub
cli
or
das
adc
mov
and
sahf
adc
xor
xor
cs
push
fcmovne
jbe
out
jo
fbstp
cmp
es
rorb
mov
icebp
jp
sti
lcall
gs
pushl
test
mov
xchg
gs
std
push
mov
and
das
inc
insl
hlt
jne
fcompl
and
movsl
test
mov
add
pop
call
dec
repz
dec
arpl
lcall
and
scas
scas
hlt
decb
and
adc
or
push
insl
pop
push
repnz
pushl
bound
fsubrl
sbb
add
mov
repz
push
adc
mov
pop
push
sbb
out
push
sti
popf
mov
leave
icebp
int
in
pop
fnstsw
and
sub
incl
push
jae
bound
imul
loope
sub
cmp
enter
addr16
sub
aaa
decl
aaa
lods
dec
mulb
lret
jl
jnp
dec
xor
xor
cmp
std
push
mov
sub
mov
jg
or
cltd
cmp
xchg
and
jecxz
cmc
push
popf
stos
and
js
add
lcall
rorb
mov
les
sti
fist
leave
xchg
mov
in
push
or
sti
fimul
pop
cld
popa
push
dec
xor
int
ljmp
popa
ss
sub
jae
sti
out
popa
lcall
and
lret
add
fdivrp
mov
nop
or
je
sbb
dec
push
mov
repnz
dec
movsb
imul
inc
adc
xchg
jg
push
icebp
pop
sbb
ret
jg
push
jne
mov
cmp
cmp
inc
ljmp
loop
inc
sbb
adc
pop
js
xchg
loopne
fcmovbe
mov
inc
popa
fnstcw
aam
xchg
or
push
mov
repnz
loope
adc
test
sbb
decl
adc
inc
fucomp
jae
mov
jmp
mov
sub
adc
das
hlt
decl
repz
mov
cmp
ret
mov
cmpsb
sub
dec
jge
mov
sbb
pop
inc
adc
mov
nop
in
lahf
push
mov
test
ljmp
push
fwait
leave
jp
and
ljmp
sahf
mull
adc
jbe
popf
loop
jbe
or
imull
dec
insl
jmp
outsl
jns
mov
pop
and
insl
sub
mov
xor
into
scas
outsb
xchg
enter
test
xlat
pop
js
orb
out
push
fldenv
call
out
mov
jb
cmp
xchg
out
es
ljmp
fdiv
jg
jp
inc
incb
outsl
bound
inc
inc
fwait
mov
pop
jno
adc
inc
fsubr
incl
or
jae
call
jge
daa
mov
pop
mull
mov
fistpll
es
scas
in
arpl
gs
iret
jp
jge
sub
loop
jl
xchg
ret
inc
xchg
jnp
pop
or
push
movsl
or
into
xchg
pushl
inc
push
stos
mov
imul
scas
inc
inc
mov
inc
cld
ret
cmc
push
mov
js
sbb
dec
sub
sbb
movsl
mov
jg
cmp
and
cmp
lret
sarb
jmp
xchg
je
insl
cmp
cmp
decl
pop
clc
push
mov
imul
xor
pushl
jecxz
and
add
mov
mov
fsubs
mov
add
and
xchg
cmp
pushl
inc
sub
lcall
and
movsl
xchg
int
hlt
cmp
movsb
xor
andl
inc
mov
sbb
hlt
fldcw
xor
notb
lcall
mov
imul
lock
cmc
push
cmp
je
pshufw
cli
stc
aaa
in
pop
xor
and
mov
insl
cmp
pop
cli
adc
push
popf
dec
add
mov
jo
mov
sar
pop
clc
cmp
mov
mov
mov
fistl
jno
jmp
sahf
clc
push
mov
decl
hlt
out
ljmp
xchg
cmp
add
rorl
push
jg
sahf
js
movsl
jnp
dec
stos
nop
add
pop
mov
sub
jmp
pop
daa
repnz
inc
add
arpl
lcall
lcall
sub
inc
data16
push
push
xor
xchg
loop
mov
sub
sub
add
mov
mov
push
jg
call
addl
ds
test
adc
sbb
lahf
add
pop
add
jmp
lods
popa
push
mov
jg
loope
pop
loop
push
push
or
call
add
repnz
into
push
loope
repnz
add
inc
xor
and
add
cmp
decl
xor
sbb
fsubrl
loopne
xchg
leave
lods
cli
ret
cmp
fistp
xor
jns
push
iret
aad
adc
xchg
xor
push
clc
mov
lods
fbstp
jmp
mov
push
imull
arpl
cltd
jns
jg
push
scas
jns
inc
in
pushf
aaa
xchg
mov
cld
fsubs
push
add
fisubr
repz
jp
sti
insb
cmp
inc
int3
popa
iret
sbb
or
lcall
push
pop
mov
lcall
inc
push
xchg
pusha
ljmp
enter
or
jmp
and
jne
mov
daa
push
sbb
mov
adc
mov
movsl
incl
lock
push
clc
sub
sub
in
movsb
adc
call
iret
mov
jne
sbb
dec
mov
sbb
in
xor
fidivr
call
push
pop
xorl
pop
xchg
jmp
out
jo
xchg
or
inc
stc
adc
scas
lods
sarb
ja
pop
test
pop
jmp
sahf
in
fwait
add
sti
addr16
mov
sbb
jl
push
cmp
mov
call
jmp
sub
orl
mov
mov
and
jle
mov
call
clc
pop
test
xchg
push
cmpsl
sar
aam
ljmp
rolb
xor
inc
sti
daa
jl
pop
xchg
idiv
xchg
das
add
xchg
dec
inc
inc
decl
cli
int3
and
push
mov
lods
jae
dec
call
jns
cmp
lds
sub
cmp
sbb
pop
pop
das
vmovdqa
incl
sbb
aad
in
xor
pop
sti
jb
lods
pop
mov
push
incl
mov
xchg
dec
push
adc
sarl
fildl
les
pushl
jmp
dec
in
cwtl
push
xor
or
es
sub
dec
je
icebp
decl
lcall
inc
push
es
mov
stc
push
std
imul
sub
pop
cmpsb
inc
cs
cltd
pop
fidivrl
jmp
and
lds
popf
fs
mov
sub
outsb
dec
add
pop
mov
fldt
xor
stos
lea
jb
insb
xchg
adc
inc
jg
dec
push
xchg
cmp
testl
clc
mov
xchg
dec
add
sub
scas
in
add
cmp
jmp
and
lods
sar
mov
movsb
pop
lea
cmpsl
inc
jg
push
mov
dec
xor
lahf
imul
cwtl
dec
fwait
test
dec
adc
xlat
clc
bound
mov
push
mov
pop
mov
leave
mov
inc
aam
mov
mov
push
imul
mov
add
pop
das
aas
push
sar
ret
mov
loopne
sub
xchg
cmp
or
daa
or
sahf
das
cld
ljmp
loopne
jb
das
mov
fidiv
pop
fwait
cmpsb
or
mov
inc
xlat
or
call
cmc
lods
in
jae
cmc
into
test
pop
je
ljmp
pop
adc
ja
mov
lods
incl
ja
mov
incl
je
enter
lahf
jne
les
xchg
cwtl
inc
into
scas
test
pop
arpl
incl
cli
insl
inc
aam
or
inc
pop
adc
je
sub
mov
in
loopne
ljmp
stc
fcoms
xchg
cltd
rclb
mov
fwait
jp
ja
movsl
fcoml
movsl
shlb
cmp
clc
sbb
pop
test
mov
mov
dec
mov
sti
imul
sbb
mov
loope
mov
les
pop
cli
js
fisubrl
mov
inc
mov
ja
leave
dec
aas
sti
jns
jnp
clc
dec
sub
pop
sbb
inc
sbb
mov
shr
in
mov
mov
cld
xor
in
pop
shll
das
cld
decl
dec
daa
mov
loopne
mov
ja
out
imul
repnz
dec
fnop
aam
sti
icebp
faddl
jp
daa
out
cmpsb
xor
aaa
sub
sahf
scas
adc
pop
jmp
sbb
add
cmp
loop
sbb
dec
js
test
addr16
mov
ds
mov
mov
xchg
fwait
test
sahf
aaa
jne
ret
xchg
rol
jmp
mov
sub
call
and
int
jae
cmp
in
dec
popf
dec
outsb
stc
data16
adc
ljmp
jl
xchg
into
mov
sbb
inc
outsl
jmp
scas
insl
rcrb
mov
ja
mov
scas
data16
pop
xor
dec
push
mov
add
pop
push
int3
ret
popa
sub
adc
mov
inc
insl
daa
fstp
xchg
call
lcall
sti
fimull
dec
adc
sub
mov
ret
pop
pop
cltd
push
decl
xor
sub
push
test
pushf
mov
loope
call
mov
test
cmp
repnz
xor
mov
incl
mov
out
fwait
iret
loope
test
iret
xchg
sub
adc
add
push
pop
sub
pop
je
dec
add
pop
xchg
pop
in
ss
xchg
inc
xchg
push
dec
mov
and
add
jae
cltd
and
add
data16
out
aaa
cld
cmp
push
pop
or
cmp
dec
pushl
push
push
jp
mov
lea
call
lods
sub
scas
cmc
adc
adc
fdivrl
push
mov
add
pop
sbb
mov
and
popa
and
pop
dec
cltd
inc
xchg
mov
push
cmp
je
adc
ficom
jo
sbb
push
xchg
add
decl
sub
and
cwtl
push
test
sub
sub
call
pop
pop
notl
test
out
fs
jg
pop
cmc
mov
decl
jno
push
dec
jo
loope
sub
sub
add
inc
dec
cmpsb
adc
popf
xor
sub
sbb
xor
cli
or
pop
aas
inc
popf
fwait
fildll
enter
jae
jp
jle
inc
lret
and
push
aam
icebp
inc
pushl
jecxz
aaa
sub
call
sub
gs
std
or
lcall
mov
outsl
stc
sbb
xlat
add
adc
push
push
cwtl
jp
aam
popf
sbb
nop
ret
cli
jno
adc
sub
inc
mov
cmp
jmp
adc
mov
or
mov
xchg
or
xchg
inc
mov
ss
mov
xchg
jl
cmpsb
mov
or
add
jmp
sbb
mov
jns
sbb
fdivrs
jns
or
in
lea
imul
mov
cld
add
dec
cmpsb
sbb
lcall
outsl
jne
divb
out
or
jg
ljmp
pop
insl
loop
imul
nop
adc
clc
sbb
decl
ficoml
mov
inc
mov
pop
scas
adc
sub
aad
xchg
jmp
pop
ljmp
shlb
fiadd
push
inc
imul
fs
pop
not
hlt
lds
lds
clc
out
adc
je
and
sub
mov
repz
cmp
clc
inc
rol
loope
jle
rolb
inc
pop
mov
push
stc
dec
jo
mov
idivb
decl
popf
sbb
push
sub
hlt
push
mov
in
mov
insb
decl
insl
sti
outsb
cmp
js
addl
inc
fs
out
push
fstpl
mov
ret
sbb
xorb
mov
stos
push
lahf
add
mov
jg
stos
xor
adc
fisubr
insb
pop
xor
jg
pushl
jmp
push
and
pop
ret
or
ret
or
pop
sub
jg
out
pop
mov
mov
repz
sub
sbb
jo
lcall
inc
push
jle
xor
and
mov
and
xchg
ret
lret
or
ljmp
mov
lods
scas
cmpb
xchg
mov
std
addr16
push
xor
hlt
fldl
pop
push
daa
jbe
nop
push
out
sbb
inc
lahf
lock
push
stc
and
mov
call
or
dec
imul
push
cmp
outsb
push
push
cmc
push
add
lds
mov
push
jg
push
add
jnp
enter
call
rorb
push
jne
aas
dec
add
lcall
fsubr
jbe
loope
push
lock
jae
ret
and
in
jle
jmp
scas
test
insw
push
fwait
dec
cmp
ljmp
pop
mov
mov
push
inc
rcrb
mov
aas
rol
or
adc
sbb
cld
ja
inc
jecxz
repnz
push
daa
lret
dec
push
cs
in
cli
ljmp
lock
fmull
rcrl
jl
les
push
push
mov
sub
jl
add
hlt
sub
mov
mov
jmp
test
mov
mov
jbe
xchg
xor
fdivr
ljmp
adc
fldt
jns
add
ss
cmp
imul
cli
call
cmp
lods
loopne
leave
cmp
dec
sub
pop
or
inc
mov
mov
push
adc
push
es
cld
fist
adc
stos
call
sbb
dec
iret
push
mov
xor
std
inc
aaa
scas
lds
sub
xchg
cli
jg
pop
xor
mov
adc
lds
nop
sbbl
sbb
mov
mov
and
xor
sahf
jae
das
mov
aaa
rol
sbb
mov
pushl
adc
sub
mov
mov
xor
xchg
cwtl
mov
enter
jg
call
mov
xchg
xchg
push
sub
lret
jns
pop
or
pushl
cld
stos
mov
aas
xchg
mov
add
dec
pop
decl
sub
repnz
sbb
sbb
inc
sbb
cltd
add
lcall
dec
mov
lea
fdivrs
xchg
mov
adc
dec
mov
sahf
sar
push
push
jbe
dec
sahf
adc
sarl
sarl
in
push
mov
mov
insb
cltd
in
aad
fwait
int3
iret
hlt
stos
rcrb
xor
mov
fldt
cmc
jmp
push
xchg
mov
add
fsts
jp
jnp
mov
and
mov
mov
pop
xchg
je
aaa
stos
repz
and
cmp
loope
shrb
cmp
gs
jp
loope
in
out
call
jns
sub
fldt
stos
adcb
inc
lds
xchg
inc
cld
jg
lcall
negb
les
push
mov
std
mov
lods
into
cmp
clc
dec
outsl
int3
jl
ljmp
out
outsl
lods
mov
add
mov
shlb
loop
sub
jae
fdivr
outsl
mov
add
pushw
rorb
inc
fdivs
add
mov
lahf
in
xor
inc
lahf
add
pop
lahf
incl
ljmp
sbb
mov
lock
mov
int3
adc
call
jg
in
cmc
push
dec
leave
or
xchg
ljmp
mov
mov
cmp
pop
arpl
cmpsl
lea
add
push
call
sub
aam
dec
lods
sub
lods
pop
dec
mov
pop
push
jp
in
sbb
cld
and
ljmp
shr
jle
mov
jp
xchg
pop
in
popa
jmp
ret
std
jg
pop
inc
adc
mov
out
cli
mov
loope
sub
cltd
jmp
push
mov
or
int
jne
mov
aaa
pop
call
mov
clc
adc
dec
sbb
lcall
mov
cmp
je
jg
leave
cmp
lea
test
jne
fmull
cmp
int3
jns
xor
inc
repz
sar
hlt
nop
sbb
add
stc
jecxz
stc
xchg
and
je
mov
push
outsl
outsb
cmp
inc
xchg
mov
pushl
les
add
and
js
shlb
mov
jbe
das
std
ljmp
mov
fldenv
sbb
dec
dec
mov
dec
pop
call
jg
je
pop
jo
jb
inc
xchg
movsb
add
js
cmp
push
lods
rcll
and
pop
fcomp
mov
repnz
loop
jg
mov
fcomi
jo
add
xor
pushl
dec
xor
adc
outsl
or
pushl
cmp
jnp
adc
sub
mov
cmp
mov
or
into
jmp
sbb
cli
pushl
mov
mov
mov
call
pop
adcl
or
jmp
sub
fmuls
pop
cli
cli
push
push
lock
cmpsl
cmp
pop
sbb
daa
sbb
fidiv
fildll
lea
dec
insb
bound
pop
jmp
scas
insb
cmp
int
xchg
cli
jmp
sub
js
cmp
push
push
ja
insb
fldenv
rol
lcall
cmp
jnp
in
mov
std
push
push
in
movl
decl
mov
jecxz
dec
dec
add
ljmp
dec
mov
popa
and
scas
sbb
pop
pop
call
lds
movsb
loopne
decl
xchg
sub
leave
lock
mov
mov
jb
lret
mov
dec
push
hlt
imul
mov
sti
call
push
fadd
sbb
pop
jecxz
pop
push
gs
orl
inc
xchg
aas
rorl
das
mull
fdivl
sbb
inc
sti
stos
sub
fnop
out
ret
outsl
or
loop
call
ret
mov
cmpl
push
mov
lret
stos
fildll
mov
cwtl
outsl
daa
sar
call
outsl
lahf
pop
push
repnz
mov
jg
sbb
mov
orl
out
gs
cli
nop
lods
xor
lcall
mov
imul
outsl
inc
pushf
sub
loope
int
mov
add
sahf
fist
test
lcall
sbb
sub
dec
stos
xorl
fdivrp
push
xchg
and
rolb
repnz
push
xor
les
mov
mov
sub
call
jmp
inc
mov
outsl
test
out
xor
mov
jle
cmp
ljmp
pushl
cwtl
cmp
inc
aam
cltd
sarl
std
das
or
test
inc
pop
pop
pop
das
hlt
jge
faddl
xor
sub
in
ficom
xchg
or
sar
mov
int
adc
pushf
mov
cmp
xor
xor
push
sar
decl
mov
fild
adc
stos
test
stos
and
add
pop
je
cmpsl
push
in
ret
pop
out
xor
dec
ss
push
mov
sub
jp
int
test
stc
pop
or
pop
mov
sub
rorb
jle
jb
test
mov
fidivr
mov
dec
mov
mov
inc
test
jne
dec
cli
stos
cmp
push
call
in
repz
movsb
xchg
lret
push
ja
inc
dec
lea
sub
pop
clc
inc
dec
add
insb
int
ljmp
mov
push
sbb
mov
stc
dec
jo
jmp
mov
enter
outsl
mov
cltd
dec
call
mov
xor
push
xor
popf
push
mov
pop
sub
inc
cmp
ljmp
lea
rcl
cmp
lcall
clc
push
xchg
and
jp
call
mov
hlt
fadds
mov
cwtl
mov
cmpsl
out
aas
jb
call
in
jmp
ss
lret
xchg
or
sti
inc
fstpt
mov
incl
inc
xchg
test
xor
push
dec
fs
loopne
lock
add
mov
incl
nop
mov
adc
repnz
cmp
push
dec
push
cmpsl
mov
cli
decl
ja
or
xchg
jnp
cmc
mov
jnp
lcall
imulb
test
imul
lret
sbb
aas
ljmp
stc
std
mov
sti
mov
jmp
mov
popf
jno
ss
cld
or
cmp
pop
mov
iret
xchg
sbb
call
cwtl
xchg
push
mov
es
sbb
jg
ret
and
pop
stos
pop
and
aam
xchg
call
or
jno
jmp
ficompl
fs
decl
dec
addr16
xor
pop
mov
jle
lds
jne
xlat
je
call
and
ja
sbb
xchg
lds
shlb
cmp
call
incl
incl
pop
in
daa
push
and
arpl
rcrb
pcmpgtd
fcmovb
mov
aas
mov
clc
push
cmp
adc
push
cltd
insl
inc
and
cmp
mov
loopne
inc
fstl
inc
inc
movsl
pop
pushl
dec
clc
scas
movsb
lret
out
ljmp
repz
inc
sub
push
lret
xor
ljmp
jbe
push
test
sub
ss
pusha
inc
popf
divl
xchg
call
sub
es
pop
sub
lcall
xchg
hlt
dec
daa
pop
mov
out
sbb
pop
jge
popa
dec
and
mov
lret
test
jb
xor
insb
mov
sbb
sbb
push
xchg
repnz
jg
xchg
lahf
fisttpll
jae
add
stc
xor
lea
insl
xchg
ds
add
je
mov
xor
popf
test
loopne
sub
leave
iret
repnz
cld
pushl
lds
cmc
and
jae
scas
add
lahf
lods
jecxz
leave
cltd
sub
pushf
pusha
bound
mov
leave
or
lahf
sti
decl
mov
lret
push
not
rcrl
jle
iret
ss
incl
nop
xor
dec
enter
in
loope
rolb
add
cmc
sti
in
call
and
loop
adc
aas
popf
push
push
and
out
dec
mull
int3
call
cmp
and
adc
mov
sti
sbb
pop
dec
push
lods
pop
call
addr16
xlat
fild
sub
add
call
inc
sahf
xlat
jle
lods
inc
fidivrl
mov
xchg
inc
icebp
fbstp
mov
outsl
insb
xchg
jl
dec
outsb
test
fistpll
in
scas
out
and
cld
dec
mov
test
js
mov
popa
mov
nop
ljmp
lods
xchg
fs
push
sub
jne
pop
push
sahf
pop
and
clc
mov
aaa
push
pop
divl
stos
leave
and
cmp
clc
loop
cltd
inc
mov
or
cmp
hlt
lock
aas
lret
out
out
and
jmp
pop
pop
cli
lea
je
inc
sub
cmp
movsb
ss
pushl
dec
dec
cmp
jo
adc
aas
mov
mov
adc
stos
outsb
call
cmp
cmp
push
dec
xchg
test
lahf
or
mov
dec
daa
aad
insl
gs
stc
gs
incl
sub
cmp
push
push
cmp
and
sti
dec
xor
cmp
and
ret
leave
jg
in
dec
cmpsb
out
stos
fiaddl
int
stos
cmp
mov
adc
loop
mov
mov
xchg
sub
aam
call
lret
in
push
ds
mov
fadds
jg
mov
nop
xchg
mov
push
xor
pop
xchg
jnp
aas
cmp
xchg
mov
jge
sti
lds
orl
jg
jge
popf
sbb
push
push
sbb
jbe
pusha
js
mov
incl
mov
add
pop
pop
and
push
fsts
ret
call
inc
adc
pop
push
stc
xor
decl
pop
jbe
movsb
sbb
jno
add
pop
mov
sar
hlt
push
hlt
sti
dec
lods
cltd
fmuls
adc
idivl
jmp
or
xchg
jb
mov
and
test
shrb
pop
rorb
das
adc
call
pop
add
dec
inc
mov
icebp
jbe
std
mov
sbb
lcall
or
ds
insl
cld
jbe
sub
sti
cmp
dec
enter
xchg
cli
jg
ret
ficoml
sets
iret
pop
test
sbb
jecxz
push
mov
dec
xor
imul
sub
ret
fdivrp
call
pushf
pop
loope
movsb
pop
dec
das
pop
jne
bound
stos
lret
pushl
xchg
bound
fidivl
movsb
les
mov
and
mov
iret
jg
jl
add
test
jg
out
push
pop
mov
mov
jecxz
je
int3
jg
mov
int
test
ljmp
in
mov
jo
lea
lcall
mov
sbb
idivl
enter
sbb
movsb
pop
pop
outsb
sar
fisub
mov
in
jle
call
insl
divps
ljmp
cmp
jecxz
mov
inc
push
jle
sub
ret
xchg
xchg
incl
scas
out
das
stos
in
ret
pusha
fnstcw
vaddsd
xchg
ljmp
pop
loopne
mov
dec
xchg
xchg
jno
cmp
movsl
and
push
dec
imul
pop
fdivrp
ljmp
sbb
fist
roll
and
ljmp
cltd
sub
or
pop
pop
lret
and
imul
jl
sbb
jb
pushf
mov
shrl
cmp
sbb
push
push
mov
decl
mov
jo
fnstcw
mov
inc
outsb
lea
fucomip
lcall
push
mov
scas
jecxz
mov
es
push
daa
arpl
data16
or
fs
outsl
push
push
je
popf
pop
push
or
mov
pop
or
adc
scas
aad
xor
sbb
das
lock
aaa
sbb
test
enter
call
pop
cmp
fbld
cli
inc
popf
xchg
fisttp
xchg
pop
rorl
jmp
push
cli
jmp
jbe
adc
cmpsl
enter
daa
outsl
mov
in
lods
dec
pop
es
mov
xchg
or
pushl
adc
test
ja
xchg
sbb
shll
mov
nop
adc
pop
clc
mov
push
and
repnz
add
jbe
sub
jns
decl
jno
mov
adc
dec
add
fildl
sbb
in
xchg
sub
pop
push
clc
cmpsb
fsub
mov
ss
jp
mov
sbb
cmpsl
xchg
and
jno
ljmp
lock
cmp
xchg
repz
jae
outsb
icebp
imul
bound
cli
xlat
cld
cld
jg
in
imulb
hlt
xlat
mov
in
jne
mov
pushf
sbb
adc
icebp
mov
mov
ja
mov
sub
std
xchg
or
loop
cli
inc
xchg
xchg
test
push
add
push
add
fcomip
js
cmp
out
inc
insb
repz
and
ffreep
pop
loope
dec
inc
mov
call
inc
in
sti
xor
cld
pop
ds
pop
bound
stos
stos
xchg
ljmp
mov
movsl
loopne
cs
inc
in
mov
clc
out
cmp
das
icebp
jmp
adc
aaa
jae
das
lea
popf
scas
mov
adc
ljmp
scas
test
std
xchg
test
inc
cmpsl
add
mov
das
lock
push
loope
test
mov
sbb
add
test
ljmp
ret
cmp
pop
aaa
pop
sub
ljmp
xor
jg
cld
jp
mov
fisubr
cli
pop
loope
dec
mov
sub
add
in
jbe
mov
mov
jmp
ja
out
pop
and
lock
pop
icebp
jmp
movsb
stos
cmp
or
bound
incl
iret
xor
negb
fisubr
data16
add
bound
iret
cmp
dec
incb
gs
divl
aad
icebp
jno
sub
call
lahf
sbb
cwtl
leave
cmpsl
push
test
in
and
imul
sar
fildll
je
xor
sbb
out
stc
bound
add
popa
mov
ljmp
aad
pop
sub
and
xchg
mov
lahf
mov
push
jo
sbb
pushl
xchg
xchg
test
ret
or
adc
clc
push
js
out
js
jno
push
mov
int
jo
in
pop
jns
dec
adc
icebp
call
sub
cld
xor
mov
push
mov
xor
loop
out
inc
mov
push
inc
bound
push
stc
daa
imul
subl
pop
fidivl
test
shll
jne
cs
fnsave
mov
adcb
cmp
decl
idivb
negb
jno
cmpsb
notl
adc
out
and
and
jg
jns
int3
call
dec
jns
ret
push
mov
fsubrl
call
inc
dec
imul
fwait
ss
pop
out
mov
push
iret
dec
pop
sub
enter
cld
cld
pushl
cli
push
jns
sub
pop
push
jmp
or
dec
mov
xor
decl
lea
fwait
inc
aaa
push
inc
pop
or
cmp
dec
push
mov
mov
or
incl
dec
cmp
xchg
jmp
push
or
pop
adc
jp
lea
push
sahf
mov
lods
js
lret
adc
dec
hlt
dec
je
dec
cmc
cmp
sbb
stos
scas
jecxz
lcall
xchg
pushf
int
lret
pushf
imul
or
sbb
add
pop
nop
dec
jp
mov
out
gs
insl
call
in
cmp
cli
jmp
imul
pop
sbbb
jnp
adc
lcall
lods
sub
test
fadd
xchg
sub
sbb
pop
fimull
and
pop
jb
aad
out
ljmp
jmp
sbb
ljmp
into
sub
jle
jne
in
hlt
pushf
shrb
icebp
jmp
cmpsl
add
push
fdivp
jle
fnop
aaa
fs
or
popa
jne
xor
imul
jg
jp
out
lea
pop
and
repz
stos
push
lods
mov
out
fwait
stos
fidivr
decb
std
call
imul
stos
enter
repnz
cmp
mov
das
cld
or
or
jo
mov
fcoms
insb
mov
lea
push
rcrb
shll
sub
jp
lret
sti
push
push
jmp
in
iret
push
lds
push
mov
pop
mov
insl
aad
pop
cmpsb
lcall
xchg
ds
shrl
pop
andl
cmpsb
in
cmp
or
push
jge
inc
in
jb
mov
pop
fadds
pushl
fistl
mov
ret
dec
mov
adc
call
sub
inc
sbb
in
pushf
sbb
stos
test
outsb
mov
xor
xchg
std
call
dec
sub
fmuls
pop
mov
fcompl
pop
nop
int3
sarl
popf
pop
jle
and
decl
pop
pop
loopne
into
xor
in
and
pop
ret
mov
cmp
arpl
sbb
dec
frstor
dec
and
xchg
adc
mov
cmp
icebp
mov
xor
jno
aad
mov
lods
aas
aaa
pop
and
jmp
call
xor
xchg
push
and
jmp
iret
faddl
out
lahf
cmp
push
ret
nop
fistpl
lret
loopne
cmp
sbb
js
pushw
jg
jg
pop
jecxz
rclb
subl
iretw
xchg
in
test
xor
mov
in
incl
cmp
call
adc
sub
test
pop
mov
icebp
incl
imul
and
sub
lret
dec
xchg
cs
fcmovnu
mulb
je
lods
push
push
je
mov
xchg
pop
pushf
inc
jno
sbb
pushf
shrb
adc
sti
ret
repnz
add
mov
jg
push
int
and
ds
cwtl
sub
pusha
push
bound
outsl
push
loopne
clc
lds
out
lock
mov
js
lds
mov
push
das
into
gs
pop
mov
pushl
mull
inc
add
negb
in
daa
ror
push
xchg
int
popa
test
cmp
scas
mov
jmp
mov
sbb
aaa
popf
or
sbb
clc
sub
arpl
jg
test
and
inc
les
cmp
mov
mov
incl
or
popf
dec
adc
mov
adc
xor
negl
mov
xchg
pop
ljmp
lret
xor
neg
xchg
sub
icebp
push
jns
stos
xor
mov
xchg
mov
aaa
adc
fiadd
repnz
jb
mov
sub
sbb
jns
sahf
push
or
call
mov
mov
jmp
int3
dec
adc
mov
mov
sti
popf
jae
sahf
pop
or
pop
xor
ljmp
xchg
int
aaa
adc
mov
xor
add
iret
cmpl
hlt
incl
leave
fldcw
roll
sarl
inc
pop
daa
sub
outsl
das
in
push
rcrb
sar
inc
mov
sbb
dec
pop
cli
incl
mov
or
rclb
cltd
and
mov
mov
cld
mov
std
fcompl
in
pop
add
cmc
mov
jmp
xor
pop
lock
sbb
call
jg
mov
xchg
xchg
cwtl
inc
mov
enter
xchg
js
xor
push
lcall
repz
cld
rolb
movsb
push
and
shrb
sbb
mov
mov
mov
aam
mov
mov
lcall
xchg
jae
adc
loope
push
jg
and
sbb
mov
in
imul
jmp
cld
dec
cmpsl
ret
push
scas
jg
aaa
repz
clc
push
js
lret
ljmp
test
ljmp
es
and
xchg
and
lods
mov
pushf
incl
mov
ljmp
daa
dec
jge
jecxz
sbb
out
lock
inc
popa
inc
ljmp
pop
push
or
popf
cmpsb
sub
jg
or
cmpsl
sbbl
scas
lret
jne
inc
inc
cmp
ficom
add
icebp
or
sub
mov
ss
mov
add
cmp
fldt
fnstenv
lods
incl
dec
mov
pop
das
or
pushl
jle
jg
pop
inc
jg
out
cmp
std
xchg
xlat
lock
pushf
into
fs
movsl
jns
std
jg
incl
adc
cli
inc
push
fldl
int3
or
fwait
xor
ljmp
jg
dec
pushf
xor
in
sbb
dec
bndstx
mov
shll
cmc
and
std
test
cmpl
sbb
fucomip
jg
gs
and
out
add
ljmp
dec
xchg
xchg
cli
pushl
and
outsb
jb
out
sub
aad
ds
pushl
pop
ja
mov
pop
cltd
push
arpl
jb
and
cltd
pop
loopne
arpl
out
incl
into
or
data16
sub
push
xor
or
mov
and
pusha
loope
insb
stos
rclb
lahf
mov
jmp
cwtl
cmp
pcmpgtd
jmp
fsubrp
ljmp
mov
mov
imul
jo
lahf
pop
xchg
push
ror
cld
pop
loop
inc
divl
bound
test
push
pop
jg
call
adc
lea
inc
call
into
cld
push
xor
xor
aam
imul
pop
into
cmpsb
push
xchg
les
test
lahf
and
xchg
sar
lcall
adc
dec
jmp
xlat
cmp
add
mov
mov
nop
rorb
jmp
je
xor
fsts
jge
jg
mov
test
dec
loop
lret
xchg
mov
jg
pop
push
daa
mov
xchg
xchg
cltd
cmp
jno
mov
mov
jg
xchg
jge
inc
sub
pusha
scas
fisubl
add
mov
sub
xchg
mov
dec
out
push
add
inc
push
sub
gs
jmp
outsb
jg
pop
popf
lcall
jl
sub
cld
pushl
fcomp
push
out
fnop
push
int
sbb
fsubrl
jecxz
adc
mov
int3
mov
in
rcll
inc
adc
push
pop
and
out
cmp
jno
ret
mov
sub
inc
inc
jmp
add
enter
mov
fistpl
addr16
adc
cmc
sub
mov
dec
icebp
xchg
ror
and
popf
hlt
or
mov
js
add
je
jmp
jg
mov
es
and
andb
insl
jne
fcomps
test
fnstsw
push
rcrl
clc
bound
mov
inc
pop
std
mov
or
mov
mov
xor
xchg
test
out
xor
sub
cmp
sbb
enter
cmp
inc
jmp
int3
and
loop
xor
in
fwait
push
adc
arpl
pushf
xchg
mov
arpl
inc
incl
dec
push
cmpsl
out
dec
push
mov
mov
pop
push
mov
outsb
xchg
inc
pop
rcll
out
repz
sub
jg
adc
aaa
cmp
insb
or
fs
in
je,pn
jp
sub
or
jb
sub
jne
adc
mov
jnp
jno
sbb
fucomip
fnop
jge
sti
cli
popf
or
popf
xchg
mov
fisubl
add
aaa
clc
pushl
xor
cmp
mov
je
repnz
inc
push
icebp
das
cmc
fildll
inc
sbb
dec
push
dec
cmc
mov
adc
ljmp
lds
mov
mov
mov
inc
or
ljmp
cmc
fistl
lock
jmp
add
adc
js
dec
mov
jae
mov
daa
fisub
jae
adc
or
call
ljmp
adc
int
rcr
fidiv
das
add
fucomp
cld
dec
adc
pop
push
inc
xchg
xlat
push
loop
mov
jae
sbb
xor
pop
ret
lods
xchg
sti
push
in
sbb
pop
clc
jg
in
dec
push
jbe
int
mov
fsubrs
outsl
pop
sahf
inc
stos
in
lock
lcall
or
out
das
aam
fdivs
jo
ret
dec
enter
aaa
repz
pop
std
add
fs
lock
xor
jg
sbb
cltd
aad
mov
pop
mov
stos
dec
rolb
sbb
sub
insl
inc
shrb
or
std
ljmp
loop
jg
hlt
enter
push
ss
hlt
mov
aad
push
add
dec
incl
hlt
xchg
or
jl
sub
mov
in
dec
cltd
jge
cmc
pop
inc
sbb
sub
jnp
movsl
gs
aas
cmp
subb
ret
ljmp
inc
fimul
les
add
fsts
mov
adc
cmpl
cmp
mov
xchg
gs
jg
jb
add
xor
into
pop
inc
xchg
or
pushl
or
jg
sbb
mov
mov
loop
mov
dec
mov
ljmp
das
stos
int
cmp
ret
in
ljmp
dec
add
xlat
leave
into
sub
xchg
mov
repnz
cmpsl
out
add
stos
jmp
xchg
int
in
push
push
mov
fs
negl
pop
clc
jg
in
push
jl
ret
ljmp
mov
xchg
inc
jg
in
or
hlt
pop
push
repz
sbb
sbb
popf
stc
cs
call
mov
pop
xchg
dec
mov
jo
dec
sti
jb
fs
jmp
loop
or
inc
jbe
push
adc
inc
xchg
mov
ljmp
jp
sbb
xchg
or
jle
out
js
int
outsb
call
jmp
insl
cmpb
pop
add
push
mov
test
jge
stos
mov
jbe
jmp
ss
mov
cmp
adc
cmpsl
aam
pop
loope
xor
jno
add
ljmp
stc
cmp
mov
mov
cmpsl
cmp
xor
inc
in
faddl
xor
mov
fdiv
and
fcmove
outsl
cmc
jmp
imul
push
push
pop
jno
out
ret
mov
decl
cld
pushf
insl
outsl
mov
mov
pop
pop
scas
fcmovnb
or
addr16
jg
xor
pop
stos
rclb
jecxz
outsl
int
mov
jnp
fwait
xchg
call
icebp
decl
incl
push
pop
out
mov
and
jl
mov
das
decl
lret
inc
bound
ficompl
mov
fbstp
rclb
pushl
inc
jg
push
pop
aas
push
mov
xor
xchg
xor
call
pop
aam
dec
lahf
mov
iret
xor
xchg
push
mov
arpl
mov
xor
or
pop
cmp
push
mov
and
mov
or
or
ljmp
mov
sub
icebp
dec
stos
or
xchg
stc
repnz
aad
int
jnp
adc
inc
out
out
jg
insl
insl
cmc
lcall
fld
outsl
sub
scas
push
mov
hlt
push
sarb
mov
mov
scas
lahf
nop
bnd
outsl
sahf
in
xchg
std
dec
std
sub
jge
mov
rorb
and
fdivr
aaa
clc
sbb
ret
insl
pop
repz
cmp
push
rcr
push
jae
dec
pop
les
xor
sub
jg
popf
and
mov
mov
test
into
mov
jno
cmp
aaa
clc
ret
mov
inc
out
lret
imul
mov
jo
cli
incl
rcll
fdiv
jae
movsb
sub
out
in
mov
dec
insl
fsubp
std
incl
int
hlt
in
jne
cli
push
insb
mov
sub
mov
jg
mulb
dec
jnp
cli
inc
cld
test
cmp
pop
mov
sub
out
je
test
inc
xchg
mov
pop
fwait
rclb
mov
add
cmp
fnstsw
jmp
inc
repnz
and
in
push
in
mov
mov
cmp
xor
mov
std
decl
mov
inc
xor
sbb
inc
cmc
adc
das
insl
xor
mov
xchg
inc
mov
xor
test
jle
incl
jecxz
bound
push
popl
dec
inc
push
sti
xor
push
push
fs
pop
or
mov
adc
adc
push
push
pushl
insl
daa
pop
jbe
fisttp
push
and
push
shrb
aaa
push
cwtl
js
nop
jp
mov
mov
lcall
lcall
pushf
sbb
in
xchg
xor
out
cltd
fmul
lcall
dec
mov
fmuls
cmp
xor
jno
pushf
inc
cmc
outsb
cli
mov
push
aaa
mov
mov
mov
push
mov
fdivr
inc
xchg
pop
int
xchg
mov
sti
sbb
repnz
les
in
jo
incl
test
scas
leave
mov
das
lret
fwait
inc
loop
mov
cmp
out
jle
ficompl
xorb
jb
and
or
loop
push
pusha
cs
pop
ret
ljmp
sti
loop
stos
sbb
jg
add
scas
dec
xchg
push
dec
push
adc
ret
aad
test
fs
jl
jmp
jge
lds
mov
push
bound
inc
les
ljmp
cltd
pop
pop
sbb
cld
test
pop
mov
jb
dec
push
outsl
mov
xchg
cli
incl
add
movsb
pop
mov
scas
pusha
enter
lcall
sbb
bound
and
push
sbb
arpl
jne
mov
fidivrl
pushl
test
daa
jmp
cmpsb
pop
push
popl
fisubl
and
jae
add
jle
call
data16
push
test
lods
je
pop
pop
stos
xor
popa
dec
movb
test
pop
fnstenv
mov
stos
dec
jbe
pop
call
mov
jnp
pcmpeqb
cmp
fisubl
push
lcall
lods
out
cli
and
cld
lods
lea
push
dec
jge
leave
jne
or
clc
popf
and
fisttp
dec
sti
xor
lcall
icebp
pop
in
inc
mov
lds
push
cmp
push
ss
loop
test
pushl
lahf
mov
stc
or
aaa
xchg
push
in
loopne
push
jmp
pop
inc
jno
lret
sub
mov
and
fs
and
ficoml
insl
inc
in
jb
jg
add
test
inc
inc
sub
rcll
cs
repz
mov
xlat
testl
lcall
dec
adc
insl
sarl
xchg
stos
inc
dec
out
mov
push
sub
xchg
mov
pop
out
pop
into
ja
fwait
sub
and
fcmovnb
ljmp
les
and
out
fsts
fistpl
adc
popf
hlt
iret
sar
ljmp
cmc
inc
dec
adc
out
scas
in
xlat
mov
or
and
decl
mov
mov
mov
cmp
mov
pop
sti
mov
sub
incl
mov
scas
pop
mov
sub
xlat
push
ja
data16
or
mov
push
pusha
push
clc
mov
in
iret
xlat
mov
cwtl
xlat
popf
jmp
and
cmc
mov
or
mov
add
or
mov
inc
scas
or
and
sub
lcall
and
add
int3
iret
rcrl
imulb
popa
sbb
movsl
pop
push
icebp
pushf
push
cld
pop
add
icebp
cmp
test
test
aam
test
loope
jmp
test
sahf
lahf
pushl
std
test
insb
imul
mov
sarb
lahf
mov
stos
negb
cmp
mov
jmp
cmp
das
pop
mov
mov
std
ror
ds
mov
stc
and
sub
jmp
xchg
mov
enter
decl
jno
shll
jb
adc
fs
inc
insb
stc
outsb
ret
mov
out
call
rclb
push
mov
mov
mov
outsb
jae
cmc
nop
jg
iret
push
idiv
mov
jmp
mov
lods
and
add
cli
test
loopne
das
cltd
or
js
test
pushl
mov
jns
nop
mov
out
cltd
jle
add
dec
je
cld
pop
cld
decl
and
testl
mov
incl
inc
fstpt
lds
mov
mov
cld
mov
cmp
mov
ljmp
adc
int3
insl
scas
mov
jno
or
jb
push
push
aas
int3
daa
jnp
jb
into
cmp
cwtl
mov
loopne
out
pushl
jne
stos
sahf
out
rol
imul
sbb
or
cmpsb
es
sbb
clc
incl
pusha
inc
xchg
clc
xlat
repz
pop
sbb
loop,pn
sahf
call
hlt
push
mov
pop
outsl
jg
mov
pushl
fild
pop
cltd
bound
push
out
mov
jne
das
fsubs
dec
out
or
lds
adc
ficompl
test
jp
ljmp
xchg
cmpsl
test
scas
or
ss
js
xor
or
into
std
jg
sub
pop
dec
mov
xor
out
je
dec
jp
push
xchg
push
outsl
icebp
lcall
es
xor
and
push
pop
stos
sbb
jecxz
inc
sub
dec
jno
jnp
icebp
add
mov
pop
xchg
add
mov
mov
or
aaa
incl
mov
push
sbb
adc
repnz
jecxz
mov
push
cmpl
jg
push
sbb
sub
fisttpl
stos
popf
dec
into
push
jnp
mov
ja
call
lret
mov
rolb
pop
stos
mov
xchg
pop
sbb
pushf
push
jmp
cmp
push
and
ficoml
and
lret
sbb
cmp
mov
push
cli
jge
popa
ror
cmpsb
orl
outsb
jg
add
sar
jmp
stos
xchg
add
mov
ret
inc
inc
loope
or
and
fs
mov
loopne
out
add
test
xchg
xchg
scas
jnp
push
ljmp
dec
cmp
xchg
fstpt
push
rolb
es
outsl
sti
push
sbb
decl
neg
ss
adc
and
ja
and
xchg
push
insb
push
scas
sub
in
pushl
fs
sbb
jl
ds
jne
mov
jp
xor
stc
stos
sub
push
cwtl
or
lcall
cmpl
jg
aad
mov
loop
sub
mov
mov
pushl
in
mov
std
inc
clc
xchg
mov
jns
ret
aad
stos
cmpsl
xor
out
jp
jg
nop
push
dec
mov
cmp
sarb
aad
xchg
les
popl
fcomi
inc
rorl
jle
scas
andl
lock
pslld
addr16
pop
sub
ds
xchg
add
fs
in
sub
cs
adc
mov
adc
incl
ss
ss
pusha
sbb
pushf
scas
jae
jmp
mov
cmc
mov
rorb
add
stc
cmpsb
mov
pusha
jns
sub
call
adc
jecxz
js
enter
xchg
inc
push
call
call
mov
std
outsb
push
sbb
imul
cmc
mov
pop
loopne
push
movsl
add
mov
mov
ljmp
mov
lret
cmc
mov
jecxz
xchg
lret
adc
incl
popa
cmp
sbb
xchg
and
lret
dec
dec
xor
inc
scas
lcall
jmp
lcall
shlb
aaa
jp
daa
fs
fsts
das
jle
sub
jg
and
or
int3
lret
ret
add
and
or
rorb
jecxz
mov
aad
in
rcrb
inc
test
lds
xchg
imul
fisttp
imul
sub
lret
out
or
push
aas
enter
and
loopne
push
jg
call
int3
xchg
icebp
hlt
negb
or
add
gs
test
jg
push
cmp
gs
popf
push
sbbb
lret
ja
dec
ds
in
pushl
and
lock
jle
xchg
sbb
mov
pop
push
inc
sub
inc
jmp
lret
mov
incl
mov
jbe
and
push
ja
popf
mov
jge
out
sets
jmp
push
jns
sar
inc
ja
inc
jmp
adc
push
dec
cltd
xor
incl
or
pop
mov
ljmp
enter
test
and
sub
xacquire
sbb
push
and
sub
lcall
and
add
adc
shlb
adc
je
outsb
ror
mov
enter
adc
jp
out
lods
data16
or
adc
mov
adc
jp
movb
fnstsw
decl
cmp
xchg
mov
mov
pop
adc
pop
dec
add
inc
call
mov
and
adc
int3
ja
mov
dec
sub
stos
xchg
mulb
jmp
sbb
psubsw
loope
mov
ljmp
jle
jg
or
rcr
xchg
das
jg
cltd
addl
icebp
bound
jg
mov
pop
push
push
or
pop
cmp
aaa
lcall
orl
negb
test
jne
lcall
cmp
iret
lds
sti
dec
jge
add
fild
pop
lcall
push
mov
fnstcw
xchg
stos
adc
inc
lret
sti
xchg
lea
lea
xchg
cmc
pop
pop
popf
cmp
xchg
xchg
mul
imul
adc
jmp
lods
cmc
cmp
insb
pop
cmp
pop
aas
or
pop
clc
jg
adc
or
ret
les
popa
mov
pop
jg
decl
adc
into
dec
and
mov
and
jne
hlt
call
sbb
adc
sbb
es
mov
int
mov
ljmp
and
or
mov
sti
fcmovu
lahf
xchg
mov
movsb
in
leave
mov
test
imul
loope
sbb
xor
and
aam
imul
lret
and
jmp
mov
cmp
lcall
dec
push
pop
jp
jg
das
cmc
xchg
int3
mov
inc
pop
xchg
rorl
jmp
sub
call
mov
add
mov
pop
xor
xor
or
jecxz
decl
sahf
jl,pt
push
xor
imul
inc
sbb
add
ss
pop
movsl
hlt
sub
loop
dec
xor
cwtl
inc
in
daa
cmpsl
scas
out
cli
sbb
xchg
dec
xchg
pop
push
mov
adc
add
mov
mov
cmp
pop
loopne
add
das
aas
mov
subl
and
scas
mov
push
lods
out
pop
shr
clc
mov
test
incl
sub
movsb
js
js
jecxz
jo
xchg
les
out
cmpsb
mov
insb
xchg
or
push
aam
sub
lret
lcall
data16
fsubrl
xor
loop
psraw
jne
adc
call
cwtl
xchg
jp
inc
es
test
add
push
test
jg
pop
outsb
sahf
jg
outsl
pop
fs
sarb
push
mov
xchg
inc
pcmpeqd
fnstenv
loop
es
ljmp
jle
inc
push
mov
out
xor
inc
or
mov
xchg
inc
mov
lds
fcompl
jno
adc
cmpxchg
inc
ret
daa
pop
frstor
pushf
je
pop
mov
call
pop
xchg
dec
and
in
mov
jne
mov
jbe
cltd
xor
add
adc
cmp
fadd
mov
into
mov
popf
daa
jne
pop
pop
cli
das
insb
inc
xchg
bound
enter
cltd
dec
out
pop
stc
xor
movsl
dec
inc
mov
ja
adc
out
ret
xor
iret
jg
mov
xchg
loopne
jbe
subb
cltd
insl
and
cmpsb
mov
jnp
jmp
cli
sbb
das
mov
cmpl
push
rcr
mov
xchg
xchg
lods
dec
and
push
and
or
pop
push
scas
aad
jae
std
pop
sub
mov
cmc
ljmp
mov
movsl
ja
stos
cwtl
push
pop
rorl
dec
pop
sbb
lcall
outsl
adc
std
aam
mov
add
int3
enter
push
cmp
mov
xor
mov
fdivrl
inc
or
out
pop
test
jle
loope
enter
cmc
das
sub
insb
popa
aad
je
xchg
dec
lea
imul
fs
lock
cmp
outsl
addb
jnp
cmpl
lods
outsb
mov
push
jno
adc
call
scas
out
cmp
push
sub
add
sub
jle
add
jnp
bound
imul
int
push
sbb
mov
mov
scas
or
call
das
sbb
push
popf
sahf
hlt
mov
mov
push
sbb
push
jo
ljmp
xor
or
lret
jg
mov
lods
lcall
jecxz
hlt
decl
call
push
test
adc
pushl
push
imulb
xorb
rorl
mov
or
xchg
punpcklbw
call
cltd
icebp
sub
cmp
idivb
aas
mov
leave
idivl
xor
shrl
pop
cld
jg
cs
xchg
pop
out
xchg
cltd
stc
in
fmull
loop
cmp
adc
lcall
sbb
jo
into
sub
inc
cmp
movsb
jae
xchg
in
mov
fildl
pop
in
jns
out
inc
dec
xorl
mov
cmc
adc
lahf
test
ljmp
dec
and
insb
fisub
push
pop
fmul
fstpt
ljmp
sahf
and
rolb
jmp
out
iret
jle
scas
cmp
xor
hlt
loope
rolb
lcall
iret
dec
push
test
inc
xchg
xor
out
fisubrl
cmp
in
jnp
dec
cmp
fs
aaa
push
aas
adc
repnz
or
jg
imul
dec
push
ds
addl
xchg
push
add
rcrb
fucomip
loop
ja
inc
in
ds
jecxz
shrl
pop
xchg
add
fstl
sahf
push
cmp
inc
lods
inc
mov
jmp
std
jb
je
mov
xchg
jl
daa
lock
fbld
cmpsb
sbb
xchg
incl
jne
xor
ljmp
xlat
unpcklps
sub
daa
pop
es
ret
add
add
mov
lahf
dec
ss
movsl
pop
std
decl
dec
pushf
jp
push
jnp
adc
popa
dec
cmc
jmp
pop
xchg
xor
push
aaa
nop
cmp
in
sub
add
add
ret
mov
sub
pop
jae
call
fsubrs
sub
repnz
mov
adc
jae
mov
xchg
js
mov
mov
jne
clc
add
inc
mov
lods
sbb
xchg
add
in
pushl
add
cmp
cmpl
cmpsb
into
lahf
fs
push
mov
dec
cld
pop
xchg
lods
mov
stos
bound
jnp
cmp
dec
mov
lea
jns
push
out
jo
imul
xor
cmp
scas
pusha
insl
jg
sub
xchg
jbe
outsb
mov
ds
test
sbb
cmp
fldt
es
cltd
cmp
xchg
xchg
rcll
or
loopne
xchg
and
mov
and
pusha
rcl
fistpl
pop
push
ljmp
jno
jne
in
imul
pop
mov
leave
inc
movb
std
pushl
les
xchg
or
test
xor
xchg
or
jbe
decl
arpl
aaa
call
or
lcall
push
lods
push
jle
cmc
jg
lods
arpl
insb
in
jae
je
fidivr
jecxz
push
xchg
cmp
dec
add
decl
mov
xchg
leave
lods
ret
lods
nop
aam
repnz
icebp
sbb
jns
leave
pop
push
pop
mov
popf
mov
mov
ljmp
icebp
xor
mov
rolb
inc
stos
cmpsl
cmp
xchg
mov
enter
pushl
cmp
jg
jne
sub
daa
lret
adc
test
stc
sarb
aaa
push
inc
add
push
mov
or
lods
test
mov
fs
outsb
push
mov
mov
fwait
fwait
add
shrl
aaa
scas
cmp
xchg
sbb
std
clc
jns
stos
cmpb
mull
in
hlt
pop
push
loop
cmpsl
lea
fwait
movsb
ljmp
std
inc
jae
jnp
sub
or
push
das
mov
loop
into
mov
add
dec
cli
lcall
jo
pop
cltd
add
clc
aam
cmp
mov
movsl
insb
jmp
leave
xchg
pop
sbb
xor
insb
ds
sbb
or
xchg
notb
lea
jle
push
push
mov
adc
lods
pushf
loope
decl
js
imul
xor
popa
repz
out
or
imul
dec
divb
lea
xor
mov
xor
popa
inc
cld
jmp
adc
mov
sub
dec
mov
jg
aad
test
lcall
xlat
or
popa
fnsave
jmp
jecxz
sti
scas
add
jecxz
pop
out
inc
mov
jle
lcall
mov
add
xchg
jb
jno
cmpsb
xor
or
pushl
push
into
pop
inc
pop
mov
movsl
push
nop
movsb
inc
scas
icebp
clc
jb
and
les
test
mov
icebp
dec
into
and
lcall
test
sbb
ret
add
fldl
movsb
jmp
jae
in
loope
pop
jg
mov
cltd
sbb
and
dec
sbb
addr16
aad
pop
std
fildll
or
call
pop
dec
aam
mov
popa
dec
fstpt
push
jae
push
stc
sub
cmp
or
sbb
hlt
xchg
mov
mov
or
fisubr
jno
and
pop
fist
scas
cwtl
fnstenv
out
imul
push
inc
xor
stos
cli
clc
mul
imul
cld
push
dec
push
adc
dec
je
and
cmp
fwait
mov
clc
pushl
mov
aaa
enter
scas
ret
cli
push
ds
sar
jg
push
dec
jo
jl
push
imul
stos
xchg
ds
fbstp
adc
push
sbb
dec
xlat
or
mov
xor
mov
jg
add
repnz
ljmp
insb
add
test
loope
leave
or
sub
call
aad
pop
cwtl
xchg
xorl
xchg
cmc
ror
dec
dec
pop
mov
pushl
les
leave
xor
mov
es
xor
mov
pop
orb
daa
outsb
pop
and
sbb
push
mov
das
xor
push
mov
aam
xor
scas
pop
cli
incl
es
ret
cmc
mov
xor
mov
insl
fprem
jg
call
inc
repz
pop
rcrl
mov
sbb
movsl
incl
mov
cmp
sub
outsb
adc
inc
inc
pop
scas
jecxz
cmc
sub
imul
jge
adc
dec
movsl
andb
push
aam
sbb
adc
ret
fnstcw
jnp
fisttpl
fsubs
pushl
lcall
xor
addr16
aaa
mov
pop
dec
mov
cmp
sub
out
int
incl
addr16
daa
mov
movsb
fs
xor
pop
idivl
jmp
and
pop
js
mov
mov
cmp
jno
call
xchg
stc
lcall
call
incl
test
mov
fldl
mov
repz
ss
sbb
pop
jg
inc
sbb
imul
and
int
sti
insl
and
mov
cli
loop
fdivr
sbb
jg
sub
fiaddl
test
jmp
adcb
daa
xlat
push
insl
xchg
lahf
cmp
push
rcr
sub
dec
mov
std
mov
adc
sub
jecxz
xchg
sti
xor
add
ljmp
lcall
pop
sahf
dec
loop
pop
mov
push
inc
leave
stos
jb
inc
sbb
push
xchg
dec
aam
xlat
and
ljmp
dec
leave
dec
jmp
in
mov
inc
or
mov
ljmp
fs
scas
xchg
sub
sub
mov
mov
bound
push
sbb
xor
getsec
mov
cmc
cmp
mov
push
push
outsb
sbb
pop
rcrb
mov
ljmp
cmp
push
ret
call
cmp
push
loop
push
loop
add
fbld
mov
mov
in
mov
dec
outsb
fcomip
pushl
outsl
clc
ljmp
add
xchg
sub
push
xor
data16
out
jae
ljmp
sbb
scas
xor
push
out
ret
ljmp
pop
xor
fcompl
addr16
sbb
idivb
hlt
pusha
outsb
add
jo
movsl
mov
adc
push
lods
gs
push
jmp
jge
mov
lcall
out
dec
movsb
mov
shrl
aas
mov
xchg
push
in
push
sub
mov
mov
sub
andl
add
clc
inc
ret
dec
into
into
xchg
ds
or
dec
fildll
fincstp
and
cmc
jb
jg
decl
and
jmp
fidivr
call
jl
pop
mov
xchg
out
ljmp
rcrb
cmp
mov
pushl
mov
test
lds
mov
and
add
outsb
lock
pushl
mov
fcoms
insl
sarl
xchg
cs
std
in
or
dec
or
jae
xchg
push
adc
inc
dec
loope
mov
lret
jne
cld
lcall
push
inc
xchg
lock
addr16
jle
push
push
dec
insb
fsts
jb
xor
decl
mov
in
pop
cltd
aaa
outsb
jb
test
push
sub
push
outsl
cmc
decl
sbb
add
lcall
or
incl
repz
insb
aas
dec
rcrl
bound
lods
cmp
pop
ret
mov
js
leave
pop
sbb
loopne
jmp
sub
inc
rcrl
fist
inc
sbb
push
inc
and
dec
das
xor
mov
inc
call
xchg
mov
add
daa
jg
push
icebp
sub
mov
dec
int
mov
imul
jmp
lahf
divb
das
mov
or
mov
jg
aas
clc
dec
jmp
cli
pop
data16
inc
jge
mov
mov
fiadd
push
pop
out
fnstcw
push
rcr
mov
jmp
inc
push
in
decl
fistpl
loopne
xor
sti
decl
cwtl
jmp
cmpsb
daa
push
nop
sahf
sti
enter
ffree
inc
inc
xchg
ljmp
pop
aad
xor
aaa
xor
mov
add
cmp
sub
mov
sub
std
jle
dec
sbb
ljmp
incl
mov
jmp
ret
out
sub
cs
decl
popf
rcl
cld
ror
stos
popa
in
adc
scas
xor
imulb
mov
xchg
ret
xchg
jg
pop
movsl
add
xor
fwait
mov
lcall
cmp
fldt
lcall
fldenv
xor
cmp
call
add
mov
jno
cmp
aad
hlt
icebp
mov
sbb
loopne
fsts
incb
mov
lret
lret
fbld
call
jmp
sarl
dec
popf
inc
xchg
lcall
sub
clc
call
pushl
fwait
into
insl
and
mov
dec
inc
push
das
test
pop
out
daa
ds
sub
pop
jns
add
inc
push
decl
clc
and
adc
jne
jns
jecxz
cli
mov
call
cmp
ficomp
dec
jne
fnstenv
cs
pop
aas
mov
cltd
arpl
fnstsw
xchg
jne
pop
std
inc
lock
orl
and
mov
outsl
mov
xchg
test
pop
jle
inc
cmp
xor
jecxz
push
inc
xor
dec
dec
mov
mov
sub
xchg
fdivrp
ljmp
lods
lods
push
out
shrl
cwtl
fdivp
lock
loope
cmc
ds
orl
fucomip
outsl
fsubl
sahf
adc
test
add
xchg
or
jns
sbb
xchg
bound
orl
lock
lcall
or
jmp
jle
sahf
push
std
push
mov
lds
xor
jae
ljmp
in
adc
lcall
std
insl
sbb
adc
adc
lock
dec
fildll
out
push
daa
lea
mov
add
cmp
call
add
pop
sub
imul
repnz
decl
call
sub
push
in
lds
icebp
sub
and
jg
push
aas
pop
sbb
sub
sub
xchg
inc
mov
jae
lock
xor
jo
pop
sbb
incl
ficomp
xchg
lock
ljmp
jmp
pushl
or
in
push
aaa
pop
ja
pushf
ljmp
inc
xchg
call
dec
jno
mov
push
mov
aam
stc
inc
and
adc
insl
cmp
cmp
lcall
jp
sub
stos
pusha
mov
lock
pop
je
popa
jg
pop
cmc
push
lcall
mov
mov
aaa
xor
xchg
rcr
lahf
inc
or
test
pusha
adc
mov
int
std
lcall
mov
out
cli
frstor
jl
ljmp
call
sbb
fnop
pop
pushl
xchg
jmp
push
mov
add
adcb
push
fwait
mov
hlt
jmp
call
pop
in
test
pop
xlat
ret
mov
stos
or
adcl
xor
and
pop
ds
pushl
cwtl
lret
mov
pop
pop
cwtl
mov
stc
in
out
daa
pop
out
inc
sbbl
incl
or
push
pop
lret
into
xchg
pop
inc
rorb
xchg
or
call
mov
shrb
lods
dec
in
popa
pop
in
fmul
pop
dec
das
push
data16
rorl
lcall
pop
fdivrs
ljmp
fsubrl
aas
add
out
in
loop
jae
call
stc
xorl
jmp
fwait
sti
dec
and
sbb
cmp
adc
rolb
imul
mov
add
in
mov
icebp
sub
in
fwait
sbb
call
das
cld
mov
pop
je
dec
nop
lods
dec
lods
mov
ja
mov
push
and
mov
fucomip
xchg
xor
inc
mov
jns
mov
mov
xchg
int3
aaa
pop
testb
ljmp
cmp
cmp
cmpsl
imul
add
ds
inc
pushf
and
daa
dec
cmpsb
dec
and
mov
movsb
or
add
push
mov
stos
jge
xchg
lcall
jecxz
adc
adc
lcall
pushl
cmp
push
sti
ljmp
fstps
cmpsl
mov
incl
cmp
ret
aaa
xchg
mov
test
jne
outsb
icebp
decl
sbb
push
xchg
mull
push
and
dec
out
mov
pop
imul
cmpsb
call
cmc
sub
sbb
xchg
or
outsb
loope
mov
or
jg
jbe
mov
mov
hlt
push
scas
ret
jns
test
mov
incl
jb
xchg
repnz
xorl
lea
fucomip
or
sbb
mov
incl
mov
jns
insl
test
cli
dec
xor
cmp
push
jp
jb
or
aad
popf
jb
xor
mov
call
rcrb
shlb
iret
jae
popf
push
in
dec
fcmovb
shrl
icebp
test
hlt
fistpl
jne
leave
sbb
mov
outsl
cmc
sbb
jge
pop
adc
icebp
push
xchg
push
movb
sub
mov
dec
mov
in
mov
add
xchg
add
fistp
jg
f2xm1
mov
lret
std
leave
mov
jne
addr16
xor
xlat
xchg
aam
adc
shrl
cmp
cmp
call
jl
call
cli
jno
pop
cmp
push
cli
call
stos
xor
in
sub
pop
inc
jnp
jno
cmp
das
lock
aas
add
ljmp
ffreep
push
rorb
ljmp
xor
je
mov
stos
xor
pushf
mov
sbb
jl
pop
fisttpll
jmp
leave
loopne
ss
mov
mov
dec
ret
and
ret
mov
and
cmp
daa
jno
ljmp
lods
sbbl
ss
mov
pushf
push
pop
sahf
in
inc
rcrb
mov
cld
push
cwtl
js
and
sbb
inc
pop
jecxz
add
mov
decl
cld
cli
xchg
call
icebp
repz
pushf
fs
pop
sbb
les
sbb
outsl
std
outsl
std
notb
inc
jle
mov
lret
bound
dec
push
cld
cwtl
orl
incl
jl
ret
push
popf
mov
xor
ljmp
gs
mov
or
xchg
adc
mov
ficomp
ljmp
pop
and
decl
bound
inc
cmp
iret
push
sbb
movsl
call
or
xor
pi2fw
fucomip
mov
lock
test
push
cmp
pop
jb
test
call
cmp
or
sbb
push
pushf
iret
jmp
xor
pop
std
ljmp
bound
cmp
mov
mov
xchg
jp
mov
les
mov
sub
sahf
ja
lds
test
mov
cmp
sbb
mov
pushl
dec
add
jbe
out
push
sbb
incl
xchg
inc
and
add
and
inc
or
cmpsb
lcall
out
cmpsl
and
insl
mov
jmp
add
into
out
push
mov
aad
lcall
mov
mov
and
pop
cmp
add
xor
cld
fisubr
es
xor
incl
js
push
mov
iret
jns
enter
and
incl
mov
or
cmpl
xor
dec
pop
xor
out
mov
mov
mov
les
mov
xchg
mov
jecxz
repnz
push
scas
or
arpl
jmp
aas
fwait
sub
jmp
jmp
divl
mov
insl
arpl
std
sub
cmp
pop
call
adc
sub
jnp
cmp
push
std
aad
sahf
imul
test
mov
mov
sub
mov
mov
add
loop
aas
jmp
or
sub
mov
inc
jle
adc
jbe
cmp
cmp
jg
xor
xor
xchg
and
xchg
int3
jmp
cwtl
or
aas
xor
movsl
push
notl
xchg
jge
cmp
mov
xchg
inc
jg
inc
stos
ret
sub
sub
das
mov
inc
and
xor
dec
cmp
dec
jbe
xchg
pop
push
cwtl
out
mov
mov
adc
ret
add
unpckhps
fwait
mov
call
pushf
push
out
mov
ljmp
jmp
push
xor
xchg
xchg
iret
imul
gs
dec
mov
stos
movsb
jnp
rcrb
nop
ljmp
add
jns
int3
sbb
ficoml
addl
jecxz
fsub
pop
jno
movsb
fild
jge
jg
jg
cmp
movsb
or
xor
push
das
push
iret
dec
xor
movsb
pop
and
clc
jmp
stos
or
aaa
or
push
or
sbb
fildll
mov
sbb
and
add
xorl
aad
out
cltd
pop
mov
sbb
loop
mov
mov
jae
stc
mov
xor
sbb
fbld
stos
add
in
stc
mov
stos
cmc
imul
clc
jmp
cmp
imul
sub
push
rcr
and
add
aaa
rorb
in
xor
test
and
xchg
mov
lcall
jmp
pushf
test
push
mov
sub
and
or
call
lcall
ret
and
jns
xchg
sbb
lods
aas
sbbl
sar
fnop
push
push
rol
sub
and
mov
mov
shll
mov
cmpl
movsl
push
sub
jo
push
call
mov
inc
xlat
mov
pushl
je
pop
lret
inc
jl
pop
inc
aam
lret
orl
cmp
leave
in
pop
cmp
incl
test
xchg
jle
cltd
jle
in
je
jb
outsl
mov
adc
incl
lcall
push
and
push
pop
incl
out
lods
add
test
aaa
cli
dec
xor
repz
jle
and
dec
std
adc
int
je
mov
in
sarl
pop
fnstcw
cmp
mov
sub
test
jecxz
dec
mov
or
sub
pop
popa
repz
pop
cli
adc
lahf
dec
or
jne
jle
ljmp
fsts
fsubrs
xchg
fsubr
movsl
cmp
dec
lods
inc
lret
cmp
push
hlt
pushl
pop
push
clc
cmp
dec
pop
pop
adc
sbb
ds
inc
outsb
inc
mov
ljmp
andl
mov
out
lds
cmp
ret
imul
mov
das
xchg
psubusb
call
jg
in
aaa
pop
lahf
sbb
pop
dec
sti
sub
or
int
pop
outsl
decl
fs
call
xchg
enter
aam
aad
fcompl
mov
clc
fbld
pop
mov
dec
pop
jb
stos
cmp
rcrb
lahf
rclb
pop
xchg
xor
mov
rol
mov
sarl
pop
stos
jno
push
sbb
mov
jno
push
dec
pushf
adc
std
jg
cmp
cmp
xor
call
add
inc
add
inc
and
data16
xchg
inc
and
xchg
fnstsw
jg
inc
or
push
pop
cli
jg
adc
sbb
lea
jmp
in
inc
mov
aaa
cli
mov
sub
mov
sar
ljmp
aam
push
add
pop
bound
push
sub
adc
inc
xor
pop
mov
pushl
movsl
lds
pop
adc
movsl
loopne
pushl
clc
fistp
imul
cld
pop
jge
orb
ret
mov
call
imul
enter
lock
mov
mov
sub
cld
into
jle
mov
jb
xchg
inc
ja
outsb
cmc
jg
push
js
push
fstps
adc
decl
jb
cmp
push
mov
mov
movsb
int3
iret
bound
sbb
pushl
aaa
insb
mov
jecxz
push
dec
dec
daa
daa
or
add
cli
call
rol
pop
add
dec
repnz
insl
xor
sbb
sub
dec
insl
pop
inc
ljmp
cmp
sub
hlt
jns
fcoml
push
sbb
add
xchg
inc
std
inc
out
mov
mov
adc
ljmp
lret
inc
and
add
movsb
xchg
mov
add
fsubrl
pop
lods
fisttpl
lcall
aam
sbb
js
negb
out
std
pushf
mov
das
aas
out
movd
ds
movsl
sti
fnstsw
adc
nop
adc
sbb
lea
dec
inc
or
pushl
out
mov
enter
and
push
cmp
mov
lods
shr
jae
inc
inc
test
mov
inc
inc
call
or
ds
stc
repz
lcall
std
test
or
pop
mov
fisttp
in
aad
imull
pop
shlb
jbe
jb
mov
insl
in
je
out
jle
push
lods
fidiv
popa
ficom
fldcw
dec
lret
lret
dec
mov
icebp
mov
lcall
aaa
ljmp
jge
cld
rol
mov
incl
and
js
out
mov
pop
fstl
sti
jmp
pop
xchg
xchg
insl
push
lcall
jmp
ljmp
jmp
xor
aad
fistpl
popf
fs
dec
mov
jecxz
jnp
cmp
lcall
pushl
out
or
mov
hlt
das
ja
enter
jmp
xchg
jg
xor
lods
out
jnp
or
push
sub
mov
cmp
cmc
stos
lahf
pop
cmc
mov
jmp
pusha
push
jo
fcompl
dec
repnz
sub
push
test
pusha
rcrl
negb
dec
jns
sub
mov
mov
or
sub
lods
mov
mov
and
and
mov
pop
mov
mov
aaa
add
fildll
inc
outsb
jne
xchg
stos
mov
cmp
jmp
xor
hlt
dec
lods
cli
pop
pop
das
pop
mov
out
jne
mov
xchg
movsb
cmp
xor
aaa
arpl
mov
fsubp
repnz
popf
xlat
dec
lds
rclb
stc
loope
sub
pop
cli
cmp
out
jp
pop
ljmp
imul
aad
mov
xor
icebp
cmp
cs
dec
pop
mov
ret
mov
inc
pop
xlat
mov
add
mov
pop
imul
xchg
lds
clc
adc
sbb
jns
enter
add
fld
cmc
pop
mov
add
jecxz
test
cmp
aam
jg
pop
pop
ret
fstl
jl
or
rcrb
jb
repz
jne
inc
dec
pop
loop
jecxz
dec
int3
add
xchg
mov
aad
fisttpll
xchg
or
push
inc
jno
roll
outsb
loopne
mov
cli
pop
pop
dec
mov
fs
sub
and
or
call
push
arpl
xchg
out
mov
adc
inc
fwait
dec
push
jne
mov
aam
imul
jae
pushf
jg
clc
mov
and
test
jg
inc
mov
mov
jg
ljmp
loopne
imul
stos
sbb
in
mov
xor
ret
cld
push
jnp
dec
jne
or
repnz
gs
sub
mov
and
xchg
push
pop
or
fwait
decl
mov
xchg
xchg
pop
jne
sti
mov
jb
jnp
sti
and
pop
mov
in
ror
mov
icebp
xchg
test
adc
jmp
out
fcoms
decl
add
ja
inc
push
adc
iret
mov
or
pop
sub
imulb
sub
ret
js
dec
loope
pop
push
lret
je,pn
scas
push
fcom
rclb
or
add
xor
dec
sbb
push
iret
lock
push
add
dec
or
cld
sub
subl
shlb
lcall
call
pop
xchg
ljmp
aaa
pop
mov
jmp
stos
imul
xchg
mov
gs
inc
lods
aam
test
out
aas
idivb
add
call
sub
daa
mov
btr
sub
xchg
sub
repnz
sahf
sar
ljmp
xor
aam
dec
sbb
loopne
xor
add
mov
or
ljmp
jecxz
lock
jecxz
and
data16
ss
jae
icebp
fidiv
fimul
js
xlat
cmpsb
insl
outsl
stos
mov
sbb
jp
mov
or
movsl
xchg
or
imul
mov
je
adc
cwtl
xor
sbb
xchg
loope
call
dec
insb
std
les
es
mov
and
jae
sar
incl
dec
push
rcr
gs
leave
aas
xlat
les
sbb
pop
std
call
cmp
ds
lcall
cld
or
jmp
out
lahf
mov
int
push
jle
mov
inc
jmp
lods
cmc
loopne
and
cld
mov
or
sbb
cmp
movsl
mov
mov
mov
cmp
pop
clc
ljmp
sub
jae
push
mov
and
jbe
mov
clc
mov
pop
lds
sbb
aas
jg
outsl
sbb
pushf
ret
fistpll
cmpsl
jle
in
sahf
pushf
sub
rorb
and
jne
inc
imul
mov
jg
outsb
rcrb
int
adc
sub
das
lock
mov
sub
mov
and
nop
repz
xor
mov
sub
movsl
into
lea
dec
mov
call
arpl
cmp
dec
add
fmulp
stos
dec
xchg
add
popa
sbb
mov
mov
loop
inc
rol
stos
inc
cltd
sbb
leave
das
add
mov
stos
jne
ds
into
aas
outsl
cld
pop
adc
push
cmp
lcall
fbld
push
fcoms
push
cmp
pop
mov
psubq
and
sbb
jg
and
mov
aam
cmpsl
jnp
bound
and
ja
jp
adc
ss
lcall
enter
dec
stc
movsl
xchg
shll
xor
cwtl
outsb
inc
into
lret
outsb
pop
movsl
xor
cmp
jmp
cmp
mov
popa
sbb
das
jecxz
fildll
xchg
icebp
mov
jmp
jno
rcrl
ljmp
loopne
lods
notb
jp
adc
lcall
pop
mov
ljmp
mov
and
jne
jmp
sbb
and
jmp
fildll
inc
xor
cmp
sbb
xchg
sbb
adc
sub
outsl
pushl
gs
ucomiss
imul
repnz
push
sub
int3
sub
dec
jp
insl
incl
icebp
stc
jb
cmp
mov
or
ljmp
mull
adc
rcrb
jns
push
mov
subl
xor
add
js
mov
jge
adc
jo
xor
call
lcall
adc
xor
jg
subl
and
mov
inc
xchg
or
push
push
xor
pushf
mov
sub
icebp
adc
pop
or
test
lds
cld
jns
std
incl
enter
movsb
pop
mov
mov
sahf
inc
lsl
push
xchg
in
in
popf
push
test
clc
mov
lock
cmc
mov
adc
idivl
fidivr
iret
pusha
add
nop
jo
or
fisubrl
lods
outsl
hlt
mov
adc
clc
mov
test
decl
leave
fnstsw
jbe
cwtl
out
cmp
mov
ja
sbb
sti
cmp
inc
incl
jge
xchg
dec
mov
cltd
inc
rolb
popf
push
loop
jl
call
in
fsubrl
and
adc
mov
mov
into
es
in
dec
pop
jo
and
daa
sbb
pop
dec
pushf
adc
adc
inc
or
ret
or
enter
cli
dec
push
stos
and
outsl
out
pop
and
ret
lods
pop
div
mov
dec
fcoms
lea
std
push
cmpl
jmp
or
adc
cli
das
cmc
lea
les
xor
scas
fisubrl
pop
sbb
andl
xchg
mov
or
cld
lret
bound
jg
add
loop
pushl
xchg
pop
or
or
mov
es
popa
cs
push
rdmsr
int
push
incl
out
imul
iretw
add
cmp
call
das
cmp
dec
mov
sbb
decl
and
pop
clc
mov
arpl
inc
jae
jo
pushf
cwtl
test
sbb
call
inc
notb
iret
rorl
or
nop
dec
fs
sbb
push
mov
movsl
or
cmp
aad
xchg
cld
dec
ljmp
inc
and
inc
scas
data16
ds
test
fucomip
pop
imul
xchg
cmp
jg
xchg
mov
lret
pop
cli
jg
test
aaa
ds
dec
rclb
xchg
ljmp
dec
ljmp
jl
cmpsb
add
sbbb
movsb
ja
ss
jb
pop
lcall
ljmp
insb
adc
popa
cmc
mov
pop
push
arpl
mov
push
jnp
mov
call
sub
sbb
and
dec
pop
mov
jb
cmovle
or
bound
jg
call
and
imul
into
popf
cmp
in
xor
inc
packsswb
ret
js
jae
movsl
icebp
mov
add
js
cmp
fistp
push
adc
mov
lea
and
lcall
mov
jl
pop
mov
pop
push
xchg
pop
pop
mov
pop
xchg
inc
sti
ret
or
lcall
jle
dec
inc
mov
jmp
inc
adc
stc
stos
lock
adc
or
outsb
xor
loope
aaa
clc
fidivr
jne
out
push
or
xor
insb
movsl
jg
leave
push
mov
push
dec
lods
jnp
movsl
daa
sbb
pop
cmc
das
push
clc
jmp
mov
sub
out
push
std
cltd
test
pushl
dec
daa
loopne
test
int3
mov
dec
inc
icebp
push
outsb
mov
jmp
call
enter
cld
mov
lds
mov
xchg
notl
jge
inc
or
cli
jo
jmp
sar
pop
movsb
cmp
xchg
lret
mov
jae
aam
das
sti
and
add
pop
rorb
inc
movsb
ss
roll
lcall
jg
or
adc
dec
cwtl
cld
fwait
mov
inc
or
sbb
push
scas
and
lods
mov
not
sbb
loopne
jns
adc
mov
add
jmp
ficompl
or
lcall
hlt
ret
mov
aaa
clc
mov
inc
ja
mov
dec
jp
push
mov
lods
sub
mov
adc
jl
jno
sahf
adc
test
or
xor
jmp
loop
inc
adc
pusha
xlat
popa
insb
pop
sbb
push
imul
adcl
call
and
pop
out
fidiv
mov
adc
rcl
sahf
cmp
mov
cli
mov
pop
sub
ja
sarb
cmpsb
sar
cmpsb
movsl
movsl
push
aaa
cli
mov
repnz
push
sahf
or
movsl
mov
outsl
std
call
push
ret
fidivl
push
pushf
or
xorl
in
call
pop
xchg
cmpl
mov
or
out
hlt
call
incl
jno
cli
out
mov
and
rol
lods
sarb
cli
mov
sbb
ja
sbb
fs
icebp
push
xadd
sar
ljmp
inc
popa
lea
pop
jno
pop
mov
es
adc
dec
or
jmp
inc
in
xorb
fwait
sar
mov
mov
fcmovb
xchg
push
cltd
xchg
xor
add
or
sub
xor
jno
fdivp
mov
mov
dec
adc
in
aad
test
cmp
sub
push
pop
adc
call
mov
fbstp
jo
push
in
lock
incl
aad
fistl
leave
xchg
mov
out
cltd
cmp
or
shll
mov
ljmp
push
aam
adc
add
je
pop
pop
push
or
out
pop
in
jae
pop
incl
lcall
mov
data16
sub
jecxz
test
fistp
lret
cmp
cltd
pop
and
imul
lods
xchg
divl
inc
insb
and
fwait
adc
xor
add
addr16
das
push
icebp
jg
push
mov
adc
fs
loop
dec
rorl
pop
fnsave
mov
cmc
imul
lds
mov
aam
or
mov
sub
sbb
sub
fiaddl
push
jle
xor
pop
cwtl
std
sar
ljmp
jne
pop
popa
dec
aaa
aaa
pushf
rcrl
pushf
sbb
and
jo
int3
fmuls
sahf
pop
arpl
push
test
test
test
mov
xchg
repnz
mov
push
xor
mov
xor
dec
jo
dec
mov
hlt
dec
pop
and
int
jb
add
pop
adc
ja
loope
mov
add
mov
in
test
addr16
std
aaa
stos
into
leave
mov
pop
out
fstps
rol
mov
pushl
loop
nop
adc
mov
dec
pop
dec
mov
fldenv
lea
jne
push
jp
xor
cli
mov
xor
and
sbb
pop
pushf
cld
das
push
in
ret
xor
lock
mov
inc
lods
rcrb
jl
sbb
sbb
cmpsl
ret
movsl
pop
inc
mov
fsubrp
mov
fisubr
call
push
sbb
call
sub
fcmovbe
lock
ljmp
pop
std
clc
out
jbe
mov
sahf
nop
cmp
cmpsb
mov
incl
repz
imul
and
mov
or
xchg
mov
int3
sub
lds
das
repnz
lret
incl
std
scas
cli
sub
cmp
mov
add
cwtl
and
std
incl
mov
movsb
xchg
pop
mov
mov
and
mov
pusha
call
jg
inc
jg
out
inc
mov
lea
ret
pop
clc
incl
std
subl
xchg
lea
and
pop
add
xchg
ret
aas
mov
call
ss
pushf
lock
js
pop
dec
push
push
call
test
and
loop
cwtl
pop
jbe
mov
add
sub
xchg
jge
incl
jp
mov
or
or
jmp
insb
lahf
push
xor
pop
mov
lret
xchg
lea
test
addr16
cld
ljmp
int
push
adc
pop
cs
jno
cmp
sub
inc
divl
fs
aam
insb
dec
and
or
fcos
cmp
repz
push
jmp
loopne
xchg
xchg
pop
add
movsb
inc
cmc
dec
xchg
push
dec
movsb
dec
pusha
dec
push
test
jmp
inc
out
test
jp
mov
jmp
stos
pop
repz
gs
pop
in
int
cmpsl
sarl
pop
das
mov
mov
jmp
pop
sbb
xchg
push
adc
mov
pop
jl
outsb
xor
mov
pop
dec
dec
xor
ljmp
mov
xchg
insb
jecxz
incl
xchg
push
and
jo
inc
adc
mov
std
incl
mov
adc
xor
bound
incl
incl
rcll
mov
xchg
mov
cmc
repz
and
lea
sar
pop
call
into
in
daa
mov
jge
push
push
sbbl
sub
mov
fnstsw
outsb
dec
mov
pop
adc
aaa
outsb
jb
cmc
outsl
cld
incl
pop
and
aad
lcall
lds
cmpl
push
pop
mov
mov
lds
or
stos
or
or
call
imul
out
iret
cmp
mull
imul
lods
fstl
xlat
xchg
outsl
call
jmp
jb
rclb
aaa
or
call
or
pop
and
outsl
cld
dec
cld
pop
and
mov
in
or
icebp
mov
sahf
jno
jo
xchg
das
std
decl
adc
push
push
xor
inc
das
out
inc
lods
outsb
subl
jae
call
adc
aas
scas
popf
mov
push
sbb
push
fild
loopne
push
pop
lock
inc
mov
mov
mov
ljmp
or
inc
dec
push
dec
cmc
test
sbb
add
push
out
cmc
jmp
insl
lds
push
nop
hlt
xchg
mov
test
daa
fldt
out
mov
dec
and
dec
mov
pop
insb
mov
scas
mov
lcall
sub
xchg
enter
aam
sbbl
outsl
dec
popf
xchg
inc
movq
jmp
lret
imulb
inc
in
jecxz
and
inc
mov
insb
fnop
inc
mov
mov
dec
cmp
cmp
lret
fdivs
sub
orb
js
mov
push
add
mov
mov
leave
dec
stc
inc
idiv
jmp
inc
push
pusha
lcall
mov
jp
xchg
ljmp
inc
mov
rolb
sbb
jae
sbb
push
insb
jge
mov
push
test
pop
ret
dec
adc
mov
in
jb
dec
inc
jmp
mov
ljmp
pop
sbb
jle
cmpsl
mov
inc
push
and
lds
inc
je
fwait
jno
pop
xchg
lcall
jmp
es
sub
push
sti
pusha
fs
cld
movsb
mov
iret
cmp
pop
stos
nop
jl
hlt
ljmp
inc
in
mov
pushf
rcl
mov
out
sahf
mov
cmp
call
mov
into
mov
mov
adc
fisttp
fildl
xchg
hlt
jmp
cmp
mov
mov
lock
call
mov
inc
div
lea
cmp
add
mov
xor
pop
call
mov
dec
dec
movsb
arpl
cmp
fucomip
fcomi
test
adc
imul
leave
stc
cwtl
pop
leave
arpl
ret
movsl
repnz
dec
fmull
aas
and
ds
mov
pop
fldt
jl
add
dec
push
pop
pop
pop
enter
inc
pushl
push
cli
dec
push
imul
lea
mov
jg
pushl
pop
into
nop
sub
std
push
fstl
cmp
imul
fild
sbb
stc
dec
out
insl
divb
push
mov
sar
fldt
cmc
pop
js
mov
arpl
jmp
cld
mov
jg
stc
or
aas
and
xor
ljmp
inc
push
popl
mov
movsb
movsl
sub
out
and
cwtl
pusha
cmpsl
dec
or
out
lcall
jns
aaa
addr16
and
ds
adc
incl
outsl
das
xlat
cmp
pop
imul
rclb
or
cmp
dec
jle
xchg
fidiv
inc
fs
into
inc
pop
push
inc
nop
movsl
into
xchg
outsb
mov
shr
mov
pop
xchg
sub
fabs
pop
xchg
addr16
mov
xor
xchg
pushl
cmp
cmpsb
sub
inc
out
mov
icebp
push
mov
sub
adc
stos
jg
les
and
pop
loop
pop
mov
test
out
mov
outsl
push
or
test
cmpsl
pusha
outsl
in
lcall
inc
xor
xchg
and
cmp
mov
pushf
pushf
je
xor
jecxz
jp
adc
jbe
fwait
or
shlb
mov
loop
sbb
fisttpl
fsubrs
out
mov
lret
je
dec
ljmp
xchg
dec
in
cld
jo
clc
inc
cmp
shrl
pop
pop
or
push
mov
add
fs
pop
mov
xor
test
sbb
in
mov
add
ljmp
roll
mov
icebp
addl
call
dec
ja
stc
add
lock
ds
adc
int
cmp
cmp
jns
push
jg
rorl
jge
jb
add
std
and
push
and
shrl
call
test
or
std
push
popl
sub
xchg
push
cs
jmp
in
lcall
and
imul
fdivs
mov
add
sub
xor
add
pop
aas
fidivr
lods
shr
mov
push
xlat
sarb
mov
out
call
cmc
mov
iret
sub
fistpl
jmp
pop
lds
pop
mov
lods
mov
pop
pop
sahf
xor
repnz
les
insb
xor
call
frstor
mov
out
out
mull
adc
decl
inc
pop
jle
xor
xchg
imul
movsl
xor
sti
call
push
add
ret
out
fidivl
imul
stos
aas
mov
cmp
loope
ljmp
adc
and
call
int
dec
test
and
or
mov
sbb
icebp
scas
xor
pop
sbb
lcall
sti
popf
pop
cmpsb
push
inc
dec
fildll
jo
jb
lahf
lcall
add
orl
das
jle
or
adc
jno
popa
andl
cld
lret
or
mov
xchg
inc
lock
pop
dec
mov
popa
out
jmp
imul
imul
ds
jmp
mov
mov
inc
mov
inc
test
push
add
cmc
call
int
in
jb
fsubs
imul
rol
sbb
das
cmpl
aad
jg
ljmp
lret
decl
repz
jne
shll
fistl
dec
aam
mov
dec
cmp
and
or
test
lock
lods
dec
sahf
ret
lock
pop
call
mov
push
jle
pop
hlt
fnsave
inc
inc
sahf
lcall
mov
inc
rclb
ss
push
insb
mov
orb
jbe
sbb
add
emms
cmp
ljmp
movsb
cmp
lods
addr16
sbbb
and
add
adc
mov
push
cmc
mov
or
loop
decl
call
cmp
jg
test
inc
test
sti
mov
mov
iret
loop
frstor
cmp
gs
mov
pusha
std
pop
push
ljmp
jb
fsubrs
sub
sub
ss
jp
movsb
insb
dec
in
mov
jle
pop
sbb
outsl
ret
add
add
and
adc
cmc
decl
pop
stos
lahf
xor
cmp
pop
test
sub
mov
inc
dec
hlt
or
daa
je
add
mov
push
int
icebp
inc
outsb
add
fnstcw
mov
ret
ljmp
inc
cmp
or
out
cli
jmp
shrl
incl
enter
pushf
push
xor
out
xchg
or
mov
bound
mov
andl
pop
cld
lcall
cmpsl
pushl
xchg
mov
bound
jmp
mov
nop
cmpsb
jge
insl
sbb
call
call
push
adc
stc
ljmp
mov
cmp
xchg
iret
inc
jno
or
push
mov
xor
xchg
cmp
call
lret
mov
sbb
stc
push
out
imul
pop
dec
jmp
pop
inc
mov
push
fdivrs
inc
mov
repnz
mov
hlt
clc
sti
fsubrp
dec
dec
mov
inc
xchg
enter
shrl
mov
outsl
popa
rcrb
mov
cli
js
cwtl
pop
mov
push
lcall
sub
xor
jo
sbb
scas
add
cli
xor
dec
mov
inc
pop
outsl
aam
fwait
push
push
cli
mov
std
fnop
imul
xor
in
hlt
clc
xorl
adc
lods
rcr
inc
dec
out
inc
outsl
sbb
dec
inc
call
add
loop
leave
mov
adc
ficomp
mov
fwait
ljmp
jmp
adcl
pushf
jb
fsubs
lea
ljmp
mov
push
sbb
mov
les
mov
ljmp
ljmp
jns
jno
addb
lahf
lea
mov
xor
push
add
pop
ljmp
adc
rcrl
mov
jb
fistl
icebp
cli
ffreep
inc
inc
cs
xchg
lods
stos
ja
gs
xor
push
mov
iret
and
and
add
and
sbb
cmc
out
mov
mov
in
xorl
fnop
mov
pop
ljmp
out
jnp
test
lcall
arpl
aas
pop
push
sub
xchg
pop
fldcw
mov
in
mov
cli
outsl
outsl
lock
jle
adc
adc
push
pushl
cmp
inc
jmp
sbb
push
aas
mov
ljmp
mov
jne
cmp
je
cwtl
iret
mov
jmp
outsl
cld
jmp
dec
fdivr
jl
popa
lahf
icebp
jecxz
es
scas
mov
adc
or
sbb
push
aad
push
cli
xor
nop
stc
jb
jmp
mov
insl
or
fnstsw
call
xchg
push
cwtl
stos
cmp
dec
mov
mov
xlat
repnz
sub
xor
mov
mov
shrb
nop
stos
aaa
ljmp
movsl
imull
pop
jge
lcall
ja
jmp
enter
mov
incl
adc
pop
pop
mov
push
ljmp
adc
daa
aam
mov
fwait
xchg
or
mov
rclb
inc
pop
jmp
cmp
or
or
lds
push
movsl
and
js
divl
sbb
or
out
subl
and
sbb
in
mov
decl
in
ja
stos
out
mov
jne
lods
lods
test
cmc
fs
sub
hlt
lds
sbb
sub
pop
xor
lea
adc
loope
sbb
mov
inc
inc
repnz
jbe
arpl
mov
jg
out
in
sarl
arpl
sti
fcmovnb
sbb
push
xor
or
iret
popf
pop
ret
xchg
jp
ror
lcall
ljmp
sbb
addr16
sahf
push
ficom
cli
jg
sahf
jo,pt
cld
sarb
sahf
fnstsw
adc
imull
outsl
xlat
xchg
or
mov
lcall
mov
mov
pop
mov
add
sar
incl
das
pop
mov
nop
in
sub
movsl
ds
push
mov
das
mov
push
mov
dec
movsl
cmp
fidiv
xchg
int3
dec
xlat
incb
bound
jmp
loop
out
iret
cmpsb
movsl
mov
and
xor
in
or
mov
loope
outsb
inc
scas
repz
hlt
in
fs
pop
push
imul
dec
lcall
sbb
dec
sbb
call
mov
data16
adc
xor
dec
push
ss
int
ljmp
adc
fildll
adc
jb
jns
imul
stos
sub
mov
aam
sti
neg
fwait
adc
jle
dec
lcall
cmp
mov
pop
push
inc
inc
call
cmp
jmp
lcall
jmp
outsl
pop
jae
aas
dec
fistpl
pop
aaa
xor
cmc
ret
fstpt
lcall
push
and
jmp
inc
je
mov
pop
fsin
shll
jle
hlt
test
clc
jge
xlat
add
or
xor
or
pop
mov
cli
jbe
aam
dec
xrelease
mov
mov
mov
ljmp
pop
imul
or
mov
imul
int3
repz
or
jg
aad
push
inc
xchg
daa
push
movsb
or
dec
pop
insl
outsb
and
pop
dec
mov
std
fisub
fadd
fiaddl
push
aam
xchg
fisubl
fist
jg
lcall
or
fwait
push
cmp
in
push
orl
cwtl
or
mov
pop
mov
incl
adc
or
cli
fs
adc
sub
or
mov
jle
outsb
or
cld
call
pop
out
dec
and
ljmp
xchg
add
mov
push
jp
mov
push
push
cmp
jle
sub
imul
std
scas
sub
repnz
enter
push
add
mov
in
jns
scas
adc
pop
js
fs
sbb
call
mov
pop
inc
pop
dec
mov
in
inc
push
push
and
jp
in
dec
pop
sub
lcall
incl
insl
mov
mov
and
mov
dec
inc
incl
xor
fisttp
or
insb
mov
fdivrs
aaa
push
ja
inc
push
mov
pop
arpl
mov
and
mov
xchg
clc
cmp
xor
lods
pushl
and
cli
add
call
cmp
xchg
sarb
mov
popa
mov
cmp
cmpsl
call
ljmp
lock
je
test
data16
ds
aad
jmp
pop
or
dec
jno
imul
sub
jge
mov
out
mov
mov
pop
pop
xchg
mov
mov
mov
cwtl
mov
aad
mov
adc
xchg
ds
add
rolb
test
mov
rolb
cmp
test
pop
cli
aaa
lcall
jnp
clc
inc
push
jecxz
mov
jno
jb
lcall
lcall
lahf
pusha
mov
pop
cmpsb
or
leave
imul
rorb
and
sub
pop
xchg
ljmp
sub
in
or
ljmp
cmp
daa
loop
mov
or
xor
out
ja
lock
sub
jmp
mov
cmp
sub
mov
rclb
cmpsb
mov
cmc
stos
inc
sub
xor
pusha
insl
mov
cmp
lods
mov
dec
inc
jl
jo
stc
xchg
cmpsl
jg
incl
fbstp
fdiv
daa
xchg
lds
nop
enter
mov
or
adc
pop
ja
dec
inc
inc
cmp
pop
cwtl
in
mov
sbb
hlt
cmp
dec
jne
out
adc
push
mov
sub
ljmp
sbb
inc
pop
insl
lcall
sub
push
cli
pop
cli
jg
subl
repz
stc
sub
and
fdivrl
test
and
fsubp
mov
dec
cltd
aas
cld
and
in
mov
lods
mov
inc
pop
xchg
pop
mov
jecxz
inc
ror
or
loop
adc
or
sbbl
mov
imul
lcall
fs
test
pop
aam
pushf
mov
or
pop
insb
leave
mov
mov
loope
lret
movq
decl
mov
ret
out
mov
xchg
jle,pt
cmc
neg
lods
out
fcmove
add
test
mov
stc
fistpll
add
cli
mov
jmp
stos
fdivl
loopne
cwtl
cli
adc
push
dec
sbb
mov
jg
jge
inc
jp
aad
lea
int
adc
lods
imul
out
xchg
sub
movq
pushl
pushf
loope
clc
mov
push
std
in
rcr
push
mov
sbb
mov
sarb
cmc
and
sarb
sub
into
sbb
jg
pop
lret
jl
xor
cld
jne
ror
mov
inc
push
and
pop
mov
sti
fsubr
push
pop
lods
mov
imul
inc
mov
mov
fidiv
daa
push
dec
xor
call
mov
xchg
add
notl
movsb
cltd
rcrl
in
ljmp
das
lcall
clc
stos
movsl
test
mov
xchg
fmul
dec
scas
sahf
das
std
decl
or
aas
lcall
ljmp
rcr
loop
xlat
leave
out
dec
sti
and
ds
inc
test
mov
sbb
mov
mov
cmp
imul
popf
in
and
jge
fcmovnb
outsl
xchg
fwait
test
aam
imul
ss
repnz
add
xor
dec
clc
stos
and
xor
ljmp
pop
orb
rcll
repnz
arpl
pop
jnp
mov
push
in
insb
sarl
orl
push
jmp
xchg
mov
lcall
sub
adc
xor
sub
jg
inc
fildl
and
test
inc
rcrb
movsl
lcall
push
in
pop
lret
mov
popf
lret
js
into
push
in
cld
aaa
testl
inc
xchg
add
outsl
fcoms
pop
cmp
xchg
xchg
imul
sub
jmp
adc
mov
stc
cmovge
mov
add
xor
lret
into
inc
test
mov
test
lods
pop
mov
jno
inc
push
jle
push
sbb
scas
clc
push
icebp
ret
xor
outsl
jno
mov
ret
in
push
mov
repnz
mov
mov
and
call
ficom
adc
loope
into
mov
xchg
dec
and
std
int
add
xor
in
xor
hlt
decl
xchg
clc
mov
mov
or
pop
into
push
push
inc
ljmp
push
bound
adc
sub
mov
ljmp
sahf
pusha
xor
imul
xor
or
sub
push
mov
fsubr
ss
mov
es
rorb
out
cwtl
aas
add
push
lcall
std
mov
lret
push
fstp
cwtl
out
mov
xchg
lcall
in
push
lcall
mov
jns
adc
push
lea
nop
jb
aam
pop
inc
leave
es
or
lcall
sbb
fidivrl
std
mov
adc
mov
mov
add
sbb
push
cmp
mov
mov
aaa
call
mov
cmpsl
or
shll
dec
push
push
push
pushf
push
cmpsb
out
jg
mull
or
jl
aam
adc
movsb
dec
mov
arpl
incl
jne
push
sbb
movsl
mov
dec
mov
jmp
dec
xor
pop
out
mov
es
or
sub
dec
daa
pop
addr16
mov
inc
fdivs
mov
lcall
leave
movsl
pop
xor
sbb
sbb
xor
fild
push
leave
mov
jns
mov
iret
loopne
call
in
out
int3
dec
sbb
adc
jno
dec
sub
mov
cmc
lcall
mov
push
mov
ljmp
sub
adc
call
je
imul
lahf
pusha
jmp
cmp
dec
outsl
lcall
fwait
inc
cmp
leave
sti
ficoml
rol
inc
cmp
ret
mov
ljmp
popa
loope
fs
pop
lock
xor
add
push
and
mov
bound
mov
dec
mov
aad
inc
insl
mov
and
inc
addr16
mov
je
pop
ljmp
jmp
orl
decl
cmc
dec
lods
pop
cmp
jae
dec
fildl
push
fild
imul
mov
cmp
mov
and
or
xor
xchg
push
pop
push
mov
movsl
xchg
jmp
xlat
add
call
dec
sub
rolb
ljmp
mov
adc
or
call
cmc
in
adc
jo
sub
ljmp
xchg
cmpsl
push
pop
xchg
pusha
add
cli
das
hlt
pop
out
mov
psubsw
cmp
pop
jl
and
lcall
xor
inc
pop
lods
jne
push
dec
enter
adc
dec
test
lcall
jecxz
mov
popa
notb
jecxz
xchg
push
cmp
dec
xor
daa
data16
ret
popa
ds
jg
scas
jle
ss
pop
ss
jle
lods
pop
push
pop
shl
xchg
arpl
ljmp
out
and
xchg
mov
sbb
es
jg
pop
and
sub
arpl
lock
sub
mov
shrl
pushl
ss
int3
mov
dec
movsb
stos
pop
stos
pop
sbb
bnd
mov
push
ljmp
call
push
pop
testl
imul
lcall
mov
sbb
outsl
cmp
sub
addb
jle
clc
mov
lods
or
cwtl
xchg
arpl
int
cmc
in
jns
or
inc
sbb
sub
lods
xchg
push
cmp
repz
inc
cmp
mov
imul
stos
ror
mov
iret
lcall
in
and
xchg
jb
jmp
xor
fildll
hlt
rcrb
push
pushf
sub
dec
add
fstl
aad
das
std
lcall
adc
movsl
dec
cmp
out
xchg
sub
cli
pushl
push
call
es
push
pop
popa
test
into
hlt
add
in
call
jge
sub
js
xchg
es
sub
int3
sarb
pop
sbb
pop
icebp
mov
mov
dec
cwtl
fbstp
lds
and
fidivr
cli
mov
pusha
fstps
out
in
notl
mov
sahf
mov
xor
ljmp
cltd
jge
stos
xchg
and
push
add
jge
inc
pusha
lahf
imul
rorb
lahf
push
enter
js
mov
cmp
sub
sub
ficoml
sub
sbb
jg
xchg
mov
movsb
push
lahf
sub
aaa
jbe
add
call
sbb
mov
cs
cmpl
aad
mov
clc
pushl
xor
or
cmp
sub
lret
jg
jno
das
shrl
push
pop
sub
xchg
adc
std
or
das
cld
sarb
mov
dec
xor
xchg
mov
dec
aas
inc
inc
mov
hlt
lods
sub
aaa
insb
xchg
sbb
fsubl
fisttp
incl
pop
jo
mov
mov
push
lock
mov
imul
cltd
lods
imul
mov
cmp
test
mov
mov
mov
fcoml
rol
push
push
hlt
call
fdivrs
fildll
fildll
call
int
dec
xchg
stos
sub
outsl
cld
inc
adc
inc
or
out
insb
aas
mov
dec
mov
pop
mov
pushl
xor
mov
jecxz
out
dec
outsb
cmpsl
mov
jns
dec
add
loop
loopne
ret
clc
lcall
in
lcall
loope
pop
pop
lcall
ljmp
mov
out
pushf
adc
xchg
test
cs
cmp
xor
xor
fmuls
push
test
mov
iret
cwtl
lret
je
mov
add
jle
mov
flds
sbb
pop
pop
pop
add
pusha
mov
mov
xchg
mov
jne
add
jns
pop
int3
outsl
std
fnop
inc
inc
dec
ljmp
out
repnz
inc
jne
push
mov
fs
aad
rcl
aaa
dec
and
jae
les
or
jnp
pop
cli
pop
call
cmpsb
pusha
sahf
sub
lods
cmpsl
adc
pushl
ja
and
mov
push
repnz
int
and
xchg
fwait
add
movsl
inc
bound
sahf
pushf
add
adc
test
adc
incl
sub
push
adc
add
shrl
fidivl
mov
fistpl
sbb
shl
adc
xchg
dec
cmp
ljmp
pop
or
mov
stc
inc
jle
sbb
add
jnp
lcall
mov
subl
ja
out
sbb
push
xor
sbb
adc
ljmp
lcall
notb
fidiv
pop
inc
fs
jecxz
icebp
rcll
mov
mov
arpl
jne
xor
inc
jb
iret
int3
out
das
lock
rcrb
lods
push
mov
mov
add
sbb
add
lcall
mov
add
in
xchg
int
stos
cmp
ret
ss
xor
adc
add
incl
cs
cmp
cmp
movsb
pop
inc
lods
popa
dec
aam
and
leave
fbld
fucomip
or
cmpsl
lea
pop
clc
call
das
lds
pushf
push
push
dec
lcall
mov
xor
lcall
movsb
or
je
add
fdivrs
mov
jp
mov
rol
inc
xchg
mov
out
loopne
sbb
xor
test
add
incl
addr16
adc
xchg
fimul
pop
add
in
mov
push
jmp
outsl
xchg
inc
idivb
push
dec
es
jne
pushl
cmp
cmp
sub
dec
cmp
pop
push
lock
sub
jbe
xorb
add
xchg
pop
leave
cs
mov
adc
repnz
fisubr
xor
lock
cld
pop
js
pop
ljmp
inc
xchg
sbb
xchg
mov
cmp
imul
push
inc
lret
popf
add
lret
in
pop
mov
mov
mov
call
jmp
push
cmp
dec
cmp
cmp
xchg
pop
outsl
mov
jns
gs
xor
mov
ljmp
mov
cmp
pop
inc
add
xabort
rcr
loop
outsl
loope
iret
rcrl
inc
pop
scas
jge
aam
sbb
stos
pushl
jae
mov
jmp
inc
stos
xchg
bound
mov
movsl
ss
mov
lods
mov
adc
add
jmp
int3
mov
xor
cwtl
hlt
adc
scas
pusha
shl
lcall
movsl
inc
lea
in
lret
movsb
js
fwait
cmp
mov
inc
mov
pushl
jg
loope
aad
mov
rorl
sub
jmp
cmp
mov
lods
or
cmp
clc
out
movsb
rolb
pop
decl
cmp
and
dec
stc
rorb
cld
in
and
int3
loope
sub
je
mov
fistpll
mov
pop
test
xlat
and
stos
xor
pop
mov
call
lret
adc
inc
sbb
xchg
rorb
nop
mov
sarb
and
or
dec
es
mov
mov
or
jp
movsb
inc
add
incl
push
fildll
decl
xor
cmp
in
mov
aam
in
ljmp
pop
lods
mov
in
fs
xchg
popa
out
push
dec
adc
push
leave
xor
std
cld
out
jge
arpl
ret
xchg
lea
call
inc
repnz
lock
xchg
pop
js
test
pop
ljmp
jne
jp
mov
sub
jmp
adc
rclb
cmpsl
imul
call
xor
push
push
jne
cmp
ljmp
dec
push
insb
push
cmp
mov
mov
or
mov
popf
lock
decl
in
loop
cmp
xlat
decl
stc
dec
ds
loope
adc
idiv
jl
inc
hlt
cmp
test
loopne
bound
mov
jb
lea
adc
js
jnp
xor
ror
popf
ljmp
incl
and
mov
xor
addr16
mov
mov
mov
in
loopne
out
xor
in
fsubr
push
sub
cmc
jg
dec
or
jno
ficompl
decb
fistpl
and
sbb
mov
xchg
jmp
push
dec
in
or
or
test
mov
out
std
or
call
xor
scas
jle
pop
addr16
push
fnstcw
aas
pop
xchg
sub
mov
shlb
mov
inc
stos
jp
cmp
adc
clc
jg
cs
stc
mov
inc
int
xchg
jmp
mov
dec
inc
cld
decl
or
scas
les
loope
ret
cmc
xchg
incl
out
mov
jmp
push
ret
call
ja
lds
jmp
fstpt
mov
test
inc
aad
add
test
xchg
test
data16
sbb
push
push
push
adc
jne
cmp
sub
stos
jne
jp
loopne
push
rorl
mov
push
cmc
nop
add
mov
outsl
mov
mov
xor
mov
jmp
adc
in
and
add
pop
inc
aam
jae
push
jle
jae
sub
lcall
dec
jb
add
inc
test
fldl
push
add
pushl
mov
push
call
ja
mov
cmp
jne
incb
push
push
mov
mov
mov
mov
pop
push
lods
cmp
xchg
or
jmp
jmp
add
mov
cmp
jmp
rol
in
push
add
add
and
mov
pop
pop
pop
pop
jmp
pop
mov
xchg
and
sub
add
movsl
popa
loope
rep
pop
and
sbb
test
cmp
add
inc
sbb
and
xchg
push
inc
mov
or
loope
mov
shr
mov
popf
adc
mov
in
out
cmpsb
mov
cwtl
or
jmp
xor
out
xchg
mov
add
je
add
sub
or
push
in
cmp
add
jmp
push
adc
sti
in
in
and
decl
loop
jmp
mov
jg
mov
mov
repnz
or
das
pop
mov
das
mov
clc
lods
stos
jmp
mov
sbb
inc
adc
test
mov
fadds
mov
fsts
lods
dec
test
xor
inc
pop
jge
fldt
adc
cmp
xor
sbb
add
mov
cli
rorl
scas
es
ret
sbb
mov
push
lods
add
inc
dec
or
cwtl
mov
loopne
ja
jb
sbb
dec
pop
test
es
push
add
pop
cmp
jbe
mov
and
rorl
loop
das
icebp
ljmp
xchg
mov
mov
add
add
add
pop
jmp
sub
ss
cmp
xorl
imul
add
jne
ret
cmp
push
mov
inc
sti
sub
push
push
add
jg
mov
jg
clc
push
movzwl
add
lea
cld
jg
dec
shrd
sub
inc
or
clc
jne
inc
xchg
mov
add
inc
pop
loopne
add
and
or
sbb
cltd
push
mov
lods
lods
xlat
and
mov
sbb
mov
push
test
popa
jne
mov
ret
ret
or
push
xor
mov
add
mov
mov
test
fs
incl
test
xor
ret
bound
add
cmpsb
imul
subb
jne
xchg
lods
stos
add
inc
outsl
and
dec
push
adc
inc
inc
push
and
fistpl
push
dec
push
add
and
fs
or
orb
jbe
jns
outsl
sub
test
outsb
arpl
mov
outsb
imul
je
fs
popa
insl
imul
std
add
jae
outsl
jb
lahf
and
mov
sbb
push
mov
mov
cmp
mov
ljmp
xor
dec
jne
jmp
xchg
pop
ret
lea
inc
loopne
mov
add
adc
sub
add
ret
sbb
push
das
or
or
push
ss
add
jnp
add
das
orb
xchg
mov
sahf
mov
push
movd
movzwl
mov
add
mov
push
xchg
and
push
push
sbb
or
push
xchg
scas
cmpsl
add
mov
sub
popf
xchg
arpl
call
ret
push
aaa
push
add
add
or
or
adc
sbb
sub
cmp
frstor
push
pusha
jo
mov
add
out
int
roll
pop
mov
or
or
or
cld
and
movups
adc
adc
rcll
inc
scas
lcall
push
push
cmp
jb
push
mov
stos
push
mov
dec
xchg
mov
adc
or
ja
ja
sub
jmp
or
mov
decb
insl
mov
cmp
or
inc
adc
into
shr
mov
ss
je
or
add
pop
mov
mov
push
mov
lods
inc
and
xor
addl
push
pop
ret
cwtl
or
ljmp
push
inc
out
stos
sub
and
mov
inc
insl
cmp
mov
jbe
xor
mov
mov
sub
inc
inc
cmp
mov
jb
mov
inc
add
jp
inc
or
ljmp
inc
adc
add
jns
icebp
pop
ja
push
adc
add
sbb
xchg
inc
inc
mov
jo
xchg
push
pop
in
adc
xor
cmp
inc
mov
std
outsb
xbegin
jne
mov
mov
fsubp
mov
sub
mov
mov
scas
lock
or
jmp
add
stos
mov
mov
iret
orl
dec
cld
sahf
mov
mov
lcall
add
push
or
xor
adcl
adc
test
jbe
mov
je
xchg
dec
mov
pop
test
sbb
insl
int
cmp
jo
lea
inc
mov
ja
add
push
add
and
add
or
mov
mov
inc
mov
add
add
mov
add
loop
push
scas
add
fucomp
ret
pop
lret
stc
or
adc
push
lret
inc
jmp
add
test
mov
xchg
mov
out
inc
mov
out
jmp
cmp
jae
add
sbb
inc
mov
sub
xor
mov
xor
and
xor
adc
or
or
jns
cli
mov
mov
fiadd
sbb
outsb
ret
jb
jae
xchg
inc
add
mov
sbbl
mov
aas
mov
add
push
push
call
xor
mov
and
aad
mov
movsb
mov
cmp
xchg
lea
xsetbv
cmp
arpl
lea
or
xor
sub
shr
fcmovnb
push
std
jge
pusha
xor
add
ret
repnz
add
ss
dec
lea
movl
clc
addb
push
add
fsubr
inc
movsb
mov
push
add
pop
add
mov
inc
inc
inc
jp
stos
call
imul
xor
jle
test
int
sub
adc
mov
stos
pop
scas
push
add
outsl
mov
enter
adc
std
adc
lea
mov
or
or
adc
ret
xor
pop
lea
rclb
aaa
sub
mov
add
fucomp
jg
and
sbb
inc
jmp
jne
push
pop
mov
and
and
sarb
jge
mov
and
dec
and
ss
adc
movsb
jae
and
movsb
mov
js
cmp
pop
and
inc
dec
aaa
xchg
jl
sbb
push
call
lock
lea
sbb
mov
lods
cmc
sub
mov
movb
insl
cmpb
or
or
jmp
sbb
push
lea
nop
dec
mov
aas
lods
pop
stos
jecxz
pop
sub
xchg
in
adc
sbb
movl
xor
cld
adc
cmpl
mov
jae
fisttpl
push
cmp
jle
jmp
incl
jbe
and
shr
inc
mov
push
sub
push
adc
xchg
dec
mov
cld
and
push
pushf
leave
aam
xor
scas
aam
mov
or
mov
or
aad
or
shr
into
xor
push
or
iret
mov
shr
outsl
mov
cmp
psrad
xor
imul
jbe
les
add
xchg
pop
mov
jl
into
fstl
loope
sub
pop
jl
cli
je
cmp
jb
fstl
dec
mov
stos
inc
add
push
cs
jnp
dec
inc
lret
mov
and
mov
lods
or
sub
out
mov
enter
out
adc
pop
dec
inc
int
out
sbb
pop
xor
icebp
sbb
lea
jmp
add
es
mov
mov
imul
pop
push
xchg
sub
fcom
imul
push
sub
dec
xchg
iret
insl
push
add
add
lret
mov
loope
xchg
in
mov
decb
or
adc
cmp
scas
jae
or
or
inc
mov
mov
push
adc
ds
aad
mov
enter
lods
mov
cmp
loopne
or
jb
lods
mov
mov
or
sub
add
cmc
or
shrl
sub
add
and
add
add
dec
pop
addl
adc
enter
cs
xlat
test
test
add
jmp
xchg
adc
sarb
mov
mov
arpl
test
mov
or
add
pop
and
inc
rclb
mov
add
dec
push
pop
jo
pushw
adc
stos
mov
inc
add
jmp
call
cmp
adc
repz
repz
rcl
cmpsb
ret
incl
test
jbe
push
es
mov
rcrb
cmp
xchg
xor
ljmp
outsl
sub
fstpt
hlt
adc
out
dec
sub
add
adc
fidivl
xor
call
xchg
sbb
inc
jle
jbe
aad
ja
sar
cmp
mov
dec
add
arpl
cld
std
push
pop
push
xchg
popf
jmp
and
in
mov
ret
add
leave
pusha
or
lcall
test
imul
out
add
clc
mov
dec
push
adc
pop
cli
add
push
dec
mov
shrb
jge
mov
movl
mov
xchg
clc
faddl
ret
repnz
in
pop
loop
dec
jecxz
test
push
aad
addb
ljmp
mov
and
pop
or
or
push
pop
push
pushf
add
ffree
add
jl
xlat
cmp
aam
pushf
jmp
and
add
sub
mov
clc
jmp
int3
add
mov
sahf
pop
into
je
decb
mov
addr16
mov
nopl
loopne
or
and
jbe
aam
adc
or
mov
pop
push
adc
sbb
lods
mov
xor
inc
jmp
mov
into
and
xchg
sti
cmp
lock
inc
mov
fistl
dec
add
mov
imul
add
push
mov
adc
add
inc
loope
mov
cs
adc
sub
push
jmp
sub
pop
mov
pop
test
mov
or
add
scas
pop
imul
and
sbb
sbb
inc
add
sub
scas
and
and
outsl
pop
adc
cmp
jmp
sar
movlps
push
xchg
data16
mov
mov
sub
or
lock
pop
test
add
sbb
jge
mov
cld
sbb
add
aam
push
ret
call
es
test
push
and
mov
inc
jg
add
ss
aam
and
dec
cmpsl
xor
add
xchg
dec
sbb
dec
aas
push
out
xchg
insb
lret
mov
ret
js
sti
out
ljmp
es
insl
add
decl
push
mov
jl
jge
sbb
xor
mov
das
cld
pop
loope
and
test
aas
xchg
addl
insl
clc
lcall
mov
insl
out
xor
pop
adc
adc
and
decl
push
ret
mov
repz
call
aam
jl
pop
icebp
sti
and
rcrb
add
or
ja
lret
push
dec
inc
mov
mov
or
call
add
mov
arpl
push
subb
jg
stos
cmpsl
out
std
outsl
cld
test
loope
jge
std
out
call
add
insl
test
mov
pop
movsb
cmp
insl
push
push
or
je
incb
pop
sti
jno
jmp
push
cmp
pop
cli
inc
jg
mov
pop
add
or
mov
pop
adc
sub
rclb
fnop
pop
push
out
push
mov
inc
imul
sar
ret
dec
out
fidivl
push
loope
call
ret
jno
inc
cmp
leave
outsl
or
xchg
pushf
add
addl
loopne
outsl
sar
and
cwtl
dec
dec
cltd
and
aam
pop
fdivr
outsl
adc
loop
and
test
cmpsb
xchg
inc
add
push
aaa
add
test
xor
stos
hlt
cmc
scas
push
clc
jl
rcr
add
or
mov
aas
jmp
adc
mov
sarb
ret
jbe
pop
sbb
sub
add
jge
lock
or
pushf
dec
jge
stc
in
dec
dec
inc
mov
adc
add
fisubrl
xchg
sti
fstpl
std
loope
ret
add
cs
xor
adc
add
jle
int3
test
mov
stos
clc
inc
clc
cmp
fldl
js
mov
lret
movsl
cli
mov
cwtl
cwtl
into
sub
add
nop
cmp
dec
adc
rorb
pushl
dec
vcomisd
cwtl
stc
movsl
jp
sub
jp
decl
sti
jae
in
in
out
std
jbe
ljmp
call
outsb
xchg
add
adc
adc
mov
jno
out
push
sub
jo
add
decl
mov
cmp
inc
jl
fdivrs
in
mov
and
sbbl
sub
imul
or
sbb
push
mov
fbld
loope
inc
fadd
clc
rcrb
fidivr
push
xchg
loopne
das
std
aam
sub
xchg
mov
lock
int
insl
loope
sub
or
incl
and
js
in
fmuls
mov
and
pushl
incb
das
adc
jo
xchg
xor
scas
lea
stos
loopne
jg
adc
lods
movsb
xchg
shl
dec
mov
sbb
xor
push
adc
mov
loop
je
mov
mov
ret
jo
pop
adc
lods
and
mov
pop
jecxz
add
aaa
pop
dec
mov
shld
sarl
dec
inc
push
mov
insl
rolb
lret
out
js
push
insl
subl
xchg
add
inc
repz
ja
jb
xchg
jne
ret
sbb
repz
int3
adc
out
push
dec
jns
lret
adc
int3
int
push
inc
notl
mov
lcall
add
cmp
jge
leave
in
xsavec
mov
sub
clc
fnstsw
sub
or
popf
cltd
add
mov
cmpsb
call
jge
test
xor
push
mov
xchg
or
mov
inc
insl
or
and
pushl
inc
ljmp
and
pop
sbb
push
sarl
or
adc
jmp
insl
jmp
call
out
ret
pop
jge
popa
rcrl
mov
cwtl
lds
adc
loopne
cmp
cwtl
lods
add
and
fisub
or
mov
jb
push
fildl
imul
cli
jl
mov
rorb
and
ficompl
stc
cmp
mov
sbbl
dec
inc
or
in
cmp
jp
rcl
dec
adc
jmp
pop
adc
cmp
je
in
jo
cmp
loope
ljmp
andl
push
pop
dec
cmp
addr16
sbb
ds
or
lods
mov
lea
jge
out
lods
sbb
test
clc
cmp
addr16
incl
push
movsl
inc
test
pop
adc
scas
sbb
and
jp
fcomps
add
decl
mov
pop
bound
jbe
das
aam
test
push
icebp
pop
inc
pop
lds
mov
fistpl
icebp
repz
mov
inc
pop
cmc
mov
sub
sar
push
jno
inc
rol
in
sti
inc
inc
add
cmc
mov
ficoml
mov
scas
in
mov
pop
push
inc
aam
out
fbstp
add
jg
test
outsl
pushl
pop
pop
sub
pusha
mov
pop
push
sub
mov
mov
movsl
std
lds
pop
icebp
inc
jne
dec
cmp
aaa
mov
ljmp
fistp
pop
push
lds
jl
stos
xor
jbe
push
jbe
or
loopne
pop
lret
popa
fdivl
mov
pusha
fisttpl
sbb
stc
fwait
lds
pop
cld
nop
cwtl
sahf
jmp
mov
idivb
pop
xor
in
inc
sub
inc
or
xchg
iret
mov
mov
mov
es
pop
cltd
mov
incl
loop
js
push
decl
lock
mov
lods
inc
insl
adcl
pusha
mov
mov
out
imul
sbb
cld
das
adc
enter
test
sub
pop
cmp
cmpsl
mov
cmp
lds
loopne
jp
inc
subl
stos
int3
jmp
pushl
and
test
sub
mov
cld
insl
or
pop
mov
aam
mov
mov
decl
test
inc
lds
pop
lcall
out
pushl
iret
lock
cld
fisttpl
lds
iret
in
lret
aas
or
out
decl
mov
and
data16
push
test
jmp
stc
cmp
loop
fwait
bound
mov
push
mov
iret
dec
aas
dec
xlat
push
add
or
out
jecxz
mov
incl
in
js
jmp
sbb
mov
insb
int3
push
sbb
orl
shrl
in
in
cmp
mov
das
cmp
cld
rcrl
push
fnstsw
mov
negl
fcmovb
clc
jmp
sbb
in
call
popl
les
add
push
inc
add
lea
dec
les
fisubl
cmpb
scas
ret
sahf
loopne
cld
scas
sub
mov
dec
test
jmp
pushf
xchg
call
pop
lahf
mov
data16
shrl
clc
pop
pop
push
cmp
lds
push
and
mov
cmp
inc
push
mov
jl
push
mov
mov
cmp
mov
jecxz
daa
mov
sub
inc
sub
adc
push
pop
fsubrs
les
xchg
mov
mov
fwait
or
sub
test
fnstcw
inc
lds
mov
sti
push
repnz
repz
mov
movb
repnz
pop
inc
mov
jle
push
dec
addr16
int
sbb
lock
pop
mov
sarl
push
rol
stos
scas
shll
fnstcw
pop
jl
enter
jmp
pop
xchg
cmp
pop
test
push
pop
xchg
movsl
dec
cld
out
lds
pushf
jge
sub
push
pop
adc
lds
jp
sbb
jno
std
in
mov
out
push
add
add
cli
insb
push
adc
sub
mov
in
and
lds
push
xor
arpl
ja
dec
lret
inc
mov
or
lds
mov
and
repnz
out
ds
fst
sbb
les
out
xlat
inc
fimull
dec
dec
xchg
lahf
or
lcall
add
inc
mov
lds
pop
xchg
mov
fidivl
add
lock
mov
test
xchg
addr16
xchg
mov
cmp
insl
mov
clc
mov
fst
ja
jno
pop
gs
insb
std
lea
fs
es
clc
pop
stc
mov
mov
mov
mov
ja
sar
pop
sbb
xchg
mov
ljmp
xor
mov
pop
sub
lock
loop
mov
int
clc
pop
adc
xchg
gs
mov
mov
test
int
das
int
add
adc
jmp
and
jnp
insb
pop
inc
loope
dec
dec
lds
test
mov
fcoms
xchg
ss
test
xor
sar
shrl
out
movsb
hlt
in
pminub
clc
add
faddl
or
fimull
ja
mov
fisttpll
cmc
jge
dec
test
in
pop
lret
adcb
mov
dec
jnp
scas
dec
mov
enter
cwtl
sti
cmpsb
mov
mov
cs
data16
lcall
shr
decl
loopne
mov
movsl
mov
xchg
push
pop
test
imul
call
dec
lods
or
mov
add
repnz
mov
jmp
add
xchg
sbbl
jmp
mov
jb
mov
es
lods
imul
push
xchg
fcoms
cmc
mov
das
testl
ret
lea
addr16
add
lods
push
adc
lret
ret
xor
mov
xor
xlat
sub
mov
js
sbb
movsl
add
lcall
xor
add
xor
mov
and
push
fiadd
add
pop
sub
cmp
add
andb
push
add
mov
sub
rorl
xchg
dec
add
push
sub
jb
cmp
aad
add
jbe
outsl
data16
add
xchg
pop
popa
lock
push
gs
push
or
jne
push
add
push
add
mov
add
add
popa
sar
aam
imul
and
mov
push
loopne
or
mulb
orb
pusha
mov
bound
jae
adc
outsl
outsl
jo
inc
rorb
insl
push
pushf
and
je
scas
insl
fcomi
pop
adc
jbe
outsl
shlb
push
mov
popa
bound
sub
inc
imul
popw
dec
outsb
outsw
adc
xor
add
sti
push
mov
mov
jo
inc
gs
push
scas
adc
push
jo
or
or
or
into
or
int
xchg
loope
packsswb
outsl
inc
push
cmp
add
test
pushf
mov
pop
jb
or
push
cmp
add
inc
hlt
cmp
outsb
add
test
inc
and
add
push
pop
and
popa
adc
xor
or
cmp
xchg
pop
jb
jae
out
adc
lds
sbb
and
sub
mov
outsl
insl
and
cs
or
cmp
pop
je
jo
adc
and
data16
push
mov
orb
popa
cmpsb
mov
test
pusha
xchg
shll
pop
or
mov
lahf
add
bound
sub
mov
in
lret
int
and
add
fsubs
adc
xor
and
add
addb
pop
xor
add
icebp
add
call
cmp
imulb
and
pop
nop
and
mulb
mov
sti
and
aad
adcb
nop
or
add
fmuls
daa
push
mov
push
or
mov
dec
jp
adc
push
add
add
mov
adc
mov
add
add
nop
incl
add
add
add
inc
add
call
int
jmp
nop
nop
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
