out
call
in
sub
andb
push
push
push
push
xor
pop
lea
fcomi
stos
push
ljmp
pop
xor
jmp
mov
pop
ja
test
add
loop
mov
dec
gs
in
in
dec
mov
xor
cs
jbe
dec
mov
insb
jmp
mov
push
call
pop
mov
jg
mov
push
push
push
push
push
mov
push
push
call
mov
and
adc
clc
lea
push
add
in
and
call
jbe
adc
adc
pop
mov
or
adc
pop
pop
pop
leave
ret
add
aaa
fstpt
push
xor
push
push
push
cmp
test
je
push
jae
adc
xor
mov
add
push
push
push
or
fwait
mov
lock
add
clc
fcomps
push
pop
mov
pop
insl
movzwl
ljmp
addr16
or
or
cmp
xor
cmp
mov
in
je
push
adc
pop
or
xor
cmp
jne
hlt
jmp
push
testb
push
pop
inc
cmp
push
cmpl
sbb
push
push
or
scas
dec
mov
adc
mov
pop
cld
sub
ret
lock
ret
repz
sub
inc
scas
ja
gs
enter
clc
inc
xchg
xor
sbb
sub
cmpl
je
adc
adc
data16
add
or
push
cmp
les
dec
and
lods
jmp
pop
push
fs
popf
insl
ret
insl
negl
test
gs
into
loopne
add
outsb
cmp
daa
push
or
add
jb
jb
sub
outsl
or
addr16
popa
add
insl
cs
lret
in
and
inc
ljmp
jb
pop
in
jae
out
pop
out
inc
lock
lcall
repz
outsb
xor
imulb
cmpsb
imul
pop
push
xor
xchg
fstp
fsubr
xchg
rep
or
push
mov
pop
mov
out
jmp
pushl
adc
adc
push
mov
ror
mov
inc
inc
dec
dec
test
jne
push
pop
jmp
lahf
xor
push
push
push
inc
push
xor
push
add
add
cmpb
subl
rclb
imul
sub
push
cmp
lret
push
jbe
push
cmp
xlat
cmpl
jne
and
fs
mov
mov
push
push
adc
pop
fcmovnbe
xor
or
adc
add
dec
scas
sub
and
jb
aas
jmp
ret
pop
pop
pop
or
mov
inc
xchg
xchg
mov
out
test
push
lea
mov
sti
mov
mov
inc
jns
mov
adc
data16
popf
cs
mov
adc
xchg
adc
xor
mov
and
fcomip
arpl
and
push
call
or
das
cld
incl
push
push
xor
mov
test
je
enter
push
push
add
test
call
imul
adc
andb
xor
sbb
inc
sbbb
cli
mov
push
mov
mov
inc
inc
test
jne
pop
adc
aad
mov
cmp
xor
rcrb
repz
gs
push
add
je
movsl
pop
lcall
fstps
add
mov
or
jne
cmpsb
fwait
lahf
lods
insb
inc
or
test
add
xchg
lret
inc
add
stos
mov
ror
in
test
push
push
test
inc
pop
jecxz
or
pop
fcmovnbe
fsincos
xor
loopne
mov
push
jb
xlat
sbb
add
mov
mov
add
dec
push
mov
in
mov
std
cmp
cmpsb
test
aaa
aaa
sub
data16
xchg
xchg
jb
inc
into
loopne
xchg
jne
xchg
outsb
pushf
pushf
insb
nop
mov
fstpl
pushf
in
loope
or
int3
cld
mov
xchg
or
clc
push
jg
mov
push
push
aas
cld
and
mov
orb
mov
and
insl
adc
nop
scas
jne
push
adc
call
sbb
jae
ret
ss
test
dec
inc
push
push
push
adc
adc
fwait
or
fldt
or
adc
loopne
imul
addl
sar
fwait
sar
sbb
add
ljmp
mov
popf
jle
stc
in
in
jl
inc
or
xchg
lahf
adcl
pop
jb
cltd
fcomp
cld
xor
gs
or
pop
inc
mov
sbb
inc
ret
int3
out
lock
and
add
flds
add
or
adc
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
mov
add
addr16
jl
pusha
xor
lcall
pop
pushf
stos
mov
imul
push
pop
jbe
rcrl
xor
dec
adc
xor
jmp
adc
dec
ret
arpl
incb
pop
add
outsl
arpl
push
call
ja
push
xor
bound
push
jb
jbe
insb
gs
cld
lcall
jae
gs
xor
pop
add
push
dec
inc
inc
and
sti
fild
and
jo
push
outsl
imul
and
sbb
dec
pop
or
daa
imul
andl
cs
insb
cmp
sub
push
in
xchg
or
xchg
cmp
mov
cmpl
ljmp
push
jle
nop
add
inc
dec
mov
leave
dec
nop
cmp
dec
inc
dec
mov
inc
nop
push
xchg
dec
adc
dec
push
push
pusha
ljmp
add
add
nop
add
xor
mov
add
mov
add
add
pop
mov
int
mov
jg
push
jb
addr16
insl
and
outsb
outsb
outsl
je
bound
jb
outsb
and
pusha
mov
and
fs
xchg
sbb
push
sarl
fwait
out
mov
add
add
push
rorl
adc
push
shrb
out
push
aam
fs
mov
mov
fldt
mov
mov
daa
cld
pop
cmp
push
xchg
pop
movsl
push
rolb
imul
fiadd
stc
xchg
stos
add
dec
loopne
and
add
in
shrl
add
and
add
clc
fiadd
pop
into
pop
xchg
fisttpll
and
xor
mov
push
inc
scas
dec
dec
pop
clc
mov
mov
xor
add
add
xor
add
imull
bound
pop
mov
mulb
fwait
mov
je
mov
in
dec
clc
leave
pop
sbb
cs
push
push
pop
cld
sub
mov
add
xor
cmpsb
fnstenv
in
lock
out
pusha
add
jb
insb
outsl
arpl
sti
add
bound
push
lock
imull
stos
daa
add
mov
add
push
fldenv
fsub
hlt
stos
and
cmpsl
push
add
jle
cmpsb
imul
mov
add
xor
xchg
and
sahf
add
cmpsb
pop
add
imul
imul
imul
insb
shrl
lods
mov
mov
sub
call
sbb
clc
add
fwait
scas
xchg
add
fnstenvs
lods
adc
and
cmp
addr16
cmpsb
imul
mov
stos
xchg
add
inc
rcll
xorl
mov
or
pop
movhps
es
lods
addb
stos
xchg
add
dec
xor
cmp
jle
punpcklbw
and
dec
outsb
je
pop
sub
gs
gs
xchg
mov
fmull
sbb
push
gs
fs
sub
adc
fcos
dec
jo
outsb
push
jb
inc
adc
lahf
fildll
dec
dec
dec
dec
inc
push
and
add
add
orb
jnp
adc
movsb
imul
mov
add
push
pop
push
or
fiadd
add
sub
add
fistp
push
adc
and
mov
add
pop
mov
sbb
mov
sub
insb
ja
aas
test
fdivrs
lret
scas
or
sarl
xchg
pop
add
pushl
push
jbe
sbb
inc
mov
and
xchg
pop
or
pop
or
lret
incl
sbb
ret
xchg
and
roll
das
xor
mov
xor
ud2
push
add
outsb
stc
repz
add
ja
jae
push
packsswb
je
jne
jb
gs
inc
or
push
incl
lods
jmp
gs
add
push
inc
jb
push
and
ja
lcall
ja
or
push
mov
jae
pop
and
addr16
xor
push
sbb
call
and
pusha
pushf
movw
push
lea
jmp
repnz
mov
das
je
cs
jae
add
fimul
subl
outsb
mov
mov
je
jo
mov
jno
gs
inc
js
add
push
xchg
das
adc
jo
lahf
je
outsl
outsb
xor
add
hlt
adcl
push
xchg
pop
je
ja
jne
in
lock
and
cs
adc
add
lea
jg
aad
jnp
test
push
or
push
push
out
mov
cmp
cmp
mov
das
dec
mov
inc
cld
or
push
and
or
lea
add
or
push
or
nop
clc
out
fistpll
inc
and
sbb
clc
aas
pusha
cmp
adc
inc
dec
testl
xor
mov
orl
aaa
mov
or
mov
icebp
jb
and
cmp
pusha
clc
sub
ljmp
aaa
and
insb
popa
jne
arpl
bound
jne
pusha
inc
lea
mov
pop
ljmp
push
imul
inc
inc
inc
push
dec
inc
popa
xor
jb
neg
outsb
lahf
fisttp
cmp
cmp
pmaddwd
sub
imul
subps
arpl
jae
push
mov
arpl
into
mov
stos
pop
inc
lods
adc
add
cmp
mov
aas
add
cmp
cmp
xor
xor
add
stc
pop
stc
xchg
cmp
xor
cmp
cmp
xor
xor
xor
lret
iret
incl
xor
xor
aaa
xor
xor
sti
jbe
xor
sysenter
add
shl
mov
push
push
sbb
add
add
lahf
mov
ljmp
inc
outsl
ja
and
push
jnp
popa
outsb
jnp
inc
das
cmp
nopl
jb
leave
sbb
js
les
xchg
xchg
pop
enter
dec
mov
std
stc
lcall
pushf
fstpl
push
add
in
push
xor
jmp
push
mov
mov
pop
in
adc
bnd
adc
push
push
mov
push
mov
jne
jle
mov
rorl
call
and
in
push
push
call
dec
mov
lea
mov
sub
sub
mov
movb
inc
or
movb
or
push
js
inc
add
push
add
imul
orl
mov
jmp
mov
ret
mov
mov
rclb
or
adc
aaa
fcmovnu
out
in
cwtl
push
call
or
add
jae
insl
or
loopne
push
mov
fcmovnu
mov
es
call
xor
sbb
push
movzbl
out
out
inc
cmp
adc
out
pop
pop
jp
adc
add
mov
andb
inc
or
fisttpl
xor
aas
enter
call
pop
jl
push
fidivl
pop
mov
nop
mov
movsb
sub
pushl
cmpw
jne
mov
add
cmpl
mov
push
add
and
inc
inc
add
and
add
ds
and
mov
imul
xchg
nop
pushl
daa
xor
inc
jne
or
in
xor
cmp
je
mov
cmp
je
insl
mov
sti
or
divl
adc
pop
cmp
ja
jge
add
mov
in
xor
mov
adc
adc
mov
inc
jmp
cmp
jb
sub
je
addl
or
dec
pop
sbb
lea
nop
xor
int
adc
enter
jmp
loopne
jecxz
or
out
jmp
or
push
sub
push
jp
dec
push
mov
sti
fisttp
call
mov
cmp
jg
add
jge
push
push
push
sbb
or
mov
adc
sub
mov
dec
loop
fcmovbe
mov
push
dec
push
push
pop
sbb
call
push
or
imul
js
lods
dec
cmpl
adc
sbb
testl
push
adc
mov
lea
movsl
add
mov
movsb
mov
inc
enter
pop
mov
dec
fisttpl
iret
lock
mov
inc
lods
dec
dec
mov
mov
or
enter
rcrl
or
mov
jp
add
cwtl
jge
add
cmp
or
push
jno
jg
inc
das
pop
adc
ds
adc
cli
push
push
cmp
jbe
jne
je
mov
jmp
push
push
inc
clc
push
cs
mov
push
sub
aad
add
leave
ds
pop
xor
adc
adc
data16
mov
dec
or
pop
call
pop
lock
mov
sub
pop
mov
cltd
insb
mov
test
push
adc
xor
inc
xor
out
push
push
sbb
je
pushf
out
xor
inc
cmp
mov
pop
dec
cli
lahf
in
not
mov
or
sub
lock
sbb
divb
push
call
push
sub
sbb
cmp
add
add
mov
jo
in
and
and
sarb
loope
or
dec
lret
test
mov
push
imul
aaa
fucomi
push
adc
mov
cli
adc
sbb
mov
incl
dec
addr16
clc
jle
xor
cmp
jle
pop
call
or
jno
cmp
ja
cmp
or
cmp
je
test
shr
pop
push
mov
incl
mov
push
in
jne
cmpl
fcmovnu
jmp
incl
mov
cmp
jne
xor
cmpsb
lods
add
add
adc
jmp
andl
out
sbb
addr16
jne
jl
inc
cmp
mov
xor
fmul
jmp
notb
lock
mov
incl
lret
xlat
faddl
ja
jne
data16
repnz
loope
ja
add
or
sti
jmp
lods
mov
rorl
add
jb
jl
fcmovnb
jbe
aaa
ret
add
lock
inc
push
ja
fidivr
pop
push
cs
pop
and
jmp
xor
sti
sbbl
insb
add
xor
pop
loopne
and
mov
popf
or
call
sbb
mov
inc
sub
pop
inc
idiv
adc
mov
call
inc
jmp
andb
mov
jmp
xor
mov
add
mov
sub
and
inc
xor
adc
dec
fldl
xchg
add
jle
jl
xor
adc
adc
adc
loopne
xlat
mov
cmpsl
call
adc
cmp
cmp
or
and
pop
out
pop
faddl
imul
sbb
mov
pop
ja
xor
dec
jbe
cmpb
jne
movb
inc
incl
icebp
cmp
jb
mov
shrl
or
incb
and
andl
push
or
inc
sub
mulb
or
imul
adc
and
fadd
jbe
push
add
fildl
mov
push
cmp
jecxz
push
add
cmp
mov
adc
loopne
cmp
jae
incl
lret
shr
add
fbld
or
inc
inc
push
mov
dec
or
sub
outsl
sbb
or
rcll
or
mov
pop
mov
rorb
rolb
or
rcll
cli
push
loope
or
jne
cmp
push
xchg
dec
mov
lock
add
pop
fmuls
stos
pop
nop
xchg
outsb
fcmovne
lds
or
pop
jbe
or
fisubrl
cwtl
cmp
sti
not
and
push
jl
and
or
loopne
incb
adc
xlat
sbb
sar
mov
shl
or
mov
add
repnz
not
and
sub
mov
add
lea
insl
outsl
out
test
or
js
add
push
aam
cs
in
int
inc
fisub
fimull
add
lea
mov
out
xadd
adc
pop
inc
sub
mov
and
in
not
cmp
add
repz
sub
rorl
push
shr
or
add
dec
ljmp
jg
push
fbld
mov
mov
cmc
sbb
jmp
push
idiv
mov
push
push
movd
not
and
das
mov
mov
push
hlt
adc
jns
mov
xchg
rcr
mov
roll
into
mov
mov
sbbb
or
out
or
adc
test
mov
add
ret
inc
or
xor
or
inc
std
sbb
add
out
cmp
popa
xor
add
sbb
lret
lret
jne
les
repz
fcomp
cwtl
subb
mov
pop
or
and
not
ficomp
sahf
popa
das
pusha
adc
pop
scas
testl
sti
mov
pop
les
subb
add
imul
mov
mov
adc
sub
ret
push
fcom
add
fisubr
mov
pop
fnstcw
pop
xlat
mov
repz
nop
imul
xor
lret
ja
fmull
or
xchg
jno
pop
fndisi(8087
popf
std
stos
lods
es
add
adc
fidivr
stc
lods
mov
pop
aaa
das
push
mov
cmpsb
pop
lretw
mov
xor
cmp
or
and
or
popa
cs
adc
add
or
mov
ret
lods
mov
and
aad
aam
pop
imul
mulb
push
imul
sbb
lock
shlb
clc
jg
jge
dec
cmp
inc
rorb
cmp
or
fadds
hlt
push
fisubr
clc
jb
repz
pop
pop
or
push
repnz
sar
mov
movsb
and
imul
and
call
insl
fwait
icebp
imull
mov
lcall
call
xlat
lods
mov
inc
jnp
fdivs
push
adc
test
rorb
arpl
pop
and
sahf
pop
mov
clc
cmp
mov
clc
in
int3
cli
fnstcw
out
adc
cmp
or
add
int
lods
fidivl
and
sbb
loopne
in
lret
outsl
pop
ret
inc
enter
aaa
or
mov
mov
mov
push
fbstp
ret
fimul
xchg
imul
gs
int
push
fsubrp
mov
adc
inc
loop
or
repz
out
or
fcmovbe
fdivs
faddl
sbb
mov
aam
mov
cmc
bound
repnz
not
daa
sub
aad
flds
outsl
adc
int
movl
mov
mov
adc
mov
xor
xor
test
fstpl
cmp
sbb
test
xor
in
and
cmp
sbb
cmp
js
repnz
adc
inc
sti
xor
in
mov
repnz
or
in
mov
call
in
inc
inc
ljmp
inc
push
sbb
xchg
mov
push
adc
cltd
jb
lret
pop
sub
push
int3
pop
pop
xchg
outsl
jecxz
dec
mov
cli
xor
rcrb
mov
sti
pop
mov
jae
or
mov
mov
jle
sub
testl
mov
xor
imul
out
pop
cs
mov
mov
fidivl
cmc
je
lea
test
out
aam
xchg
jae
adc
fisubrl
fidiv
test
jle
pop
out
cmp
or
gs
push
aas
sbb
cmp
rcl
fldenv
js
jbe
les
mov
jle
ja
divl
sarb
jp
jl
pop
je
pop
push
lret
pushl
or
sti
fdivp
cmp
lods
les
pusha
imul
sti
mov
fdivs
fisub
adc
stos
rcrb
sbb
ss
shl
ret
sbb
jl
fs
loope
int3
or
inc
push
or
movsb
mov
repz
and
jns
jb
hlt
cmp
mov
or
adc
mov
xor
cmp
pop
pop
gs
sbb
outsb
fs
rcrl
gs
xchg
int3
or
push
or
ja
mov
lcall
hlt
out
call
insl
data16
unpckhps
sbb
repz
rcrl
test
sub
cmp
call
scas
dec
jle
outsl
jecxz
jp
sbb
addl
xor
sbb
dec
outsb
repz
sub
jecxz
jp
ret
add
mov
add
in
fdivl
mov
outsb
sub
cmc
jle
test
sbb
ja
mov
xor
out
in
cmpsb
gs
mov
ret
iret
fwait
aam
rcl
sub
pslld
ret
loop
pop
mov
pop
rclb
xor
mov
xor
out
xlat
stos
push
pop
cli
pop
add
pop
movsb
mov
mov
fisttp
or
pop
call
and
js
cmp
roll
xor
cmp
jp
jge
cmp
jl
js
sub
push
push
push
sbb
adc
inc
or
int3
lods
sbb
push
insb
mov
adc
xchg
mov
outsb
lea
lods
fldt
pop
inc
addr16
clc
inc
fldt
iret
jb
adc
mov
mov
push
adc
add
sbb
cmp
enter
dec
jne
xchg
imul
add
out
push
lea
je
push
rorl
add
lahf
mov
pop
mov
sub
push
cld
push
fmuls
jl
shrl
sbb
add
test
outsl
repz
add
stos
cmp
loop
aad
sbb
mov
adc
xlat
clc
call
or
insb
ficom
push
add
lods
jns
call
sub
mov
pop
cmp
sbbb
or
dec
cmp
out
or
dec
lea
test
or
lea
push
lock
pop
adc
mov
insb
fdivrs
fsts
loopne
pop
int3
rolb
aam
ljmp
lcall
dec
std
call
push
imul
or
lahf
iret
out
call
gs
das
lock
repz
bnd
hlt
gs
divl
add
mov
pushf
or
loopne
or
mov
inc
call
lds
and
lods
mov
mov
lods
fwait
pop
mov
fimul
mov
lods
cwtl
into
inc
insb
outsb
fcmovu
mov
jo
jbe
fmull
inc
push
pop
cmpsl
push
sub
inc
ds
cltd
loopne
dec
std
in
add
ds
fcomi
in
push
push
movb
in
dec
out
push
out
push
fdivrs
pop
lock
icebp
inc
repnz
mov
mov
add
rolb
xor
sahf
push
mov
push
sub
add
lret
repz
insb
pop
mov
sbb
push
sbb
and
or
add
and
inc
jae
or
mov
and
adc
or
sub
push
adcb
add
adc
pushf
nop
add
fsts
adc
mov
loope
mov
xor
test
fwait
inc
dec
imul
pop
mov
sub
push
jo
xor
les
adc
jnp
xchg
pop
push
mov
push
mov
sbb
push
dec
test
test
subl
push
jmp
mov
inc
add
mulb
insb
pop
lock
and
ja
adc
push
cmp
jo
cmpsb
test
popa
and
jae
jge
test
scas
pop
adc
adc
sbb
inc
outsb
sub
test
push
outsl
movsl
jbe
xor
dec
rolb
pusha
xlat
insl
mov
sub
add
hlt
push
jbe
xchg
insl
pop
call
mov
jmp
mov
jp
inc
inc
inc
mov
das
cmp
imull
xlat
pop
mov
enter
and
shrl
rorl
and
xchg
push
andw
insl
and
subl
lock
push
dec
cld
pop
jb
bound
lahf
push
push
movsl
adc
mov
cmp
cmp
mov
out
sub
in
jo
add
dec
dec
pop
cmp
pop
push
mov
mov
add
cmp
das
fsubrl
mov
add
xchg
push
push
int3
enter
push
mov
enter
push
aad
push
aad
pop
ret
ficompl
cwtl
cmp
mov
addl
pop
cmp
pop
cs
cld
into
dec
cmpsb
and
je
dec
xchg
inc
add
sahf
sbb
pusha
pop
jb
adc
push
inc
xor
sub
xchg
or
lea
cmp
clc
add
push
call
pop
pop
cmp
push
lcall
clc
inc
sub
cwtl
mov
pop
cld
call
je
xor
scas
push
or
jo
push
jo
fcmovbe
jnp
dec
ds
xor
cld
movl
inc
fimull
enter
pop
xchg
lock
jns
xchg
or
push
dec
or
xor
lock
cmp
je
cmp
jne
push
pop
xor
fcomip
int
call
push
fildll
mov
orl
stos
int3
test
adc
int
sbb
push
or
enter
roll
cs
mov
lock
adc
dec
hlt
ret
cmp
and
ret
adc
push
ja
inc
jmp
cmp
pusha
jle
push
mov
clc
test
xchg
in
mov
sbb
mov
mov
mov
test
test
push
and
sbb
lret
mov
nop
test
loopne
scas
mov
adc
mov
out
xchg
mov
bound
and
call
int3
push
dec
mov
stc
mov
mov
pop
xchg
sub
pushl
stos
lcall
sub
lcall
or
fwait
sti
inc
xchg
or
sti
sub
mov
fldt
pop
add
jg
std
pop
sub
not
into
xor
clc
fnstcw
mov
jl
cmp
in
fstps
xor
mov
pushf
negb
push
mov
push
sti
into
pushf
decl
int3
cmp
mov
out
pop
add
mov
adc
or
xor
cmp
je
jo
popa
scas
lea
cwtl
aaa
data16
and
std
in
outsl
cmpsb
cmp
in
sbb
pop
adc
mov
pop
xor
pop
jmp
call
push
mov
mov
mov
je
jmp
cwtl
xor
idiv
xorb
xchg
adc
jmp
dec
outsb
lods
mov
mov
cmp
ss
mov
test
shlb
lahf
push
push
arpl
push
push
pusha
stos
or
push
inc
push
jo
push
inc
inc
sbb
mov
nop
leave
lods
lods
push
lret
in
scas
insl
mov
mov
mov
mov
jb
pop
cs
mov
mov
mov
mov
mov
hlt
jb
outsb
mov
rcl
js
mov
jo
insb
aam
aad
mov
lcall
fistpl
pop
mov
xor
loopne
test
loop
jecxz
mov
mov
pop
in
push
out
dec
out
xor
insb
fwait
call
jle
jae
xor
jo
imul
sub
xor
outsb
mov
les
lds
mov
lcall
lret
cmp
scas
imul
xchg
xchg
mov
lcall
pushf
adc
jnp
mov
mov
mov
xchg
inc
mov
cmpsb
xor
mov
fwait
cmpsl
test
push
test
or
xor
clc
ds
hlt
cli
jns
inc
or
xchg
lea
dec
xor
hlt
xlat
inc
or
pop
sub
inc
lahf
cltd
pushf
adc
xor
aaa
xor
lret
pop
jmp
push
in
cmp
inc
lods
add
dec
cs
data16
idivb
in
mov
sub
in
fnstenv
lcall
cwtl
jb
mov
jne
pop
xchg
xchg
push
and
hlt
adc
cmc
adc
lea
insl
and
div
jge
jg
lea
and
sub
push
inc
jge
sti
or
popf
xchg
es
xchg
xchg
push
add
loopne
into
imul
mov
cmp
xor
xchg
pop
mov
sbb
daa
inc
inc
lds
inc
sub
jnp
scas
nop
jmp
aaa
sbb
int3
test
insb
add
sbb
mov
jns
or
aas
mov
nop
repnz
sbb
out
in
mov
addl
int3
int
cmp
push
adc
std
inc
movsl
pusha
xor
stc
push
sbb
mov
mov
pop
stos
aam
xor
fildll
fadds
addr16
push
bswap
aam
sarl
sub
je
shr
cld
xchg
push
sti
jg
inc
or
and
mov
adc
fcoms
jne
mov
scas
je
lock
pop
pop
popl
arpl
inc
add
jno
sbb
out
pusha
push
push
push
push
fnstsw
mov
lahf
push
out
jecxz
xor
or
inc
add
fdivs
and
call
adc
mov
pop
leave
ret
aad
movsl
or
inc
cld
pusha
mov
bound
push
cmc
nop
cmpl
orl
push
pop
jmp
adc
add
adcb
sbb
mov
sub
rclb
jle
jo
test
enter
and
cmp
xchg
and
int3
lods
add
std
sbb
push
cld
das
mov
lea
push
push
cmp
push
nop
out
jae
push
call
push
sbb
cmp
stos
insl
add
sbb
sbb
add
adc
es
sub
xchg
and
push
js
std
pusha
and
xlat
jmp
push
add
scas
and
add
ret
xchg
cld
call
sti
pop
jp
in
andl
call
jo
rcr
fsubrl
xchg
jl
add
adc
mov
ret
dec
pop
ret
mov
xchg
sarb
mov
pop
ret
subl
gs
into
jp
imul
insb
popa
push
dec
push
imul
das
fsubs
ja
fldt
imul
imul
lcall
cld
int
insb
mov
insl
jle
lcall
mov
xchg
dec
je
mov
mov
lcall
mov
xor
pop
push
outsb
push
fs
mov
xor
enter
mov
mov
pop
lret
in
out
mov
pop
cs
jmp
mov
pop
inc
jb
icebp
ret
and
repnz
jo
jb
inc
mov
inc
pusha
push
js
mov
js
addr16
cwtl
push
push
cmp
xchg
test
mov
mov
pop
push
imull
ret
pop
xchg
pop
push
hlt
add
xor
xor
test
mov
mov
mov
lock
negl
add
add
lcall
lret
test
call
shrl
ja
jne
bnd
fwait
cmpsb
imul
insb
je
daa
mov
in
leave
insb
cmp
rcrl
addr16
movsb
mov
insl
pop
mov
inc
loopne
jb
add
mov
stc
sbb
mov
addr16
xor
mov
mov
inc
lret
fsubrl
sub
shl
xor
pushf
or
es
sub
jp
enter
push
inc
mov
andb
dec
push
pushf
ljmp
in
xchg
xchg
clc
lock
cmp
mov
fldl
or
ret
imul
mov
popa
xchg
clc
inc
lods
sbb
outsb
test
cmp
mov
pop
sub
sub
push
pop
push
adc
and
push
or
jne
out
sub
or
and
subl
test
push
sbb
es
out
mov
xor
mov
and
jae
mov
mov
mov
lcall
jae
mov
mov
pop
mov
mov
adc
mov
lcall
enter
pop
ss
lret
int3
int
das
cmpsb
imul
cmpsb
jmp
rcll
aam
aad
xlat
aaa
fdivrs
mov
mov
xor
cmpsb
imul
fnstsw
jae
loop
mov
shl
in
xor
out
xlat
insb
fwait
cmpsb
call
jmp
daa
imul
out
out
fs
es
jae
repnz
lcall
sarb
cmp
cltd
mov
notb
idivl
loop
repnz
rolb
adc
push
jo
je
cltd
pop
cld
or
push
arpl
lock
clc
sbb
xchg
sbb
nop
scas
call
and
mov
fisub
inc
sbb
cmp
loopne
mov
icebp
cmp
sub
pop
pop
inc
testl
ljmp
outsb
push
gs
sbb
cmp
and
aam
mov
lahf
daa
aas
pop
lahf
pop
call
xchg
or
insb
adc
sbb
addr16
dec
jge
fistpll
push
mov
js
pop
cli
push
rclb
or
call
cwtl
shrb
xorb
add
and
add
or
and
es
outsl
and
mov
mov
sbb
jo
sbb
jmp
les
out
jbe
fistpl
push
inc
mov
mov
mov
rcrb
divl
cmpsb
jne
adc
add
xor
push
cld
push
sbb
fucomi
sahf
dec
call
push
loop
das
jb
adc
xchg
lret
scas
push
and
les
prefetch
xchg
sbb
movsb
mov
mov
mov
add
rcr
aad
push
rol
mov
jmp
ss
mov
and
xchg
popa
add
jb
adc
jge
nop
and
pop
je
ret
sbb
jbe
mov
sbb
repnz
aad
push
mov
push
push
lret
out
and
mov
mov
mov
dec
mov
not
add
or
mov
setno
cmp
push
xchg
jmp
outsb
out
mov
lcall
cltd
push
idivl
lret
xor
xchg
pushf
push
push
xor
subl
and
add
inc
xor
dec
in
add
call
lret
jae
arpl
gs
inc
jp
mov
ret
inc
sbb
push
inc
sub
decb
sub
test
pushf
xchg
push
xchg
fnstcw
jns
jge
adc
xor
sti
mov
push
jmp
in
pushf
pushf
fwait
xor
mov
mov
inc
in
pop
push
fdivrs
xchg
adc
mov
mov
pushf
adc
push
jmp
mov
cmc
mov
cmp
cmc
pop
decl
sbb
pop
pushf
pop
sbb
dec
decl
jmp
dec
sbb
pusha
jg
int3
or
addr16
ror
sbb
jmp
hlt
jns
or
mov
or
call
ss
call
insb
jg
xor
arpl
push
insl
aas
push
stc
lea
add
sub
clc
lahf
mov
call
cld
add
scas
sbb
lods
clc
fwait
adc
sub
jle
call
mov
rolb
rol
dec
mov
add
mov
loope
push
in
jge
xchg
lea
jmp
repz
ret
sbb
stc
jmp
jecxz
dec
pop
add
rol
sub
clc
push
jge
arpl
add
add
push
shr
jg
mov
je
data16
dec
data16
push
mov
push
pop
or
push
add
xchg
mov
sub
sbb
aas
std
cld
adc
add
xor
popf
cld
add
loop
enter
add
xchg
fsubr
stos
xchg
js
jnp
add
lea
xlat
ds
adc
in
dec
test
add
mov
in
inc
pop
push
lods
or
out
repnz
cli
sub
and
sbb
hlt
pop
mov
jge
xor
or
jmp
pop
xor
add
pop
jbe
cmc
sti
sub
sti
jnp
push
or
xchg
jl
pusha
rcrb
mov
lds
popf
packsswb
int3
negl
cmp
jg
adc
jp
xchg
outsb
adc
and
in
outsb
adc
push
rolb
nop
pushf
fucomi
jge
mov
or
or
add
sub
sahf
and
nop
mov
fdivr
mov
inc
cmp
jl
iret
fnop
ret
jmp
or
call
ds
mov
fdivl
decl
jge
or
gs
fdivl
mov
repnz
sbb
dec
ret
mov
shrb
mov
stc
and
popf
loope
fdivr
rcl
add
pop
subl
add
imul
fnstcw
pop
sarb
je
push
adc
lods
mov
push
pop
pop
or
popf
call
jg
push
dec
fdivrs
fidiv
dec
push
sub
insb
arpl
cmp
and
xchg
imul
and
sub
push
aam
in
sbb
push
je
fiaddl
sub
xor
add
xor
lds
ret
jl
pop
push
movlps
add
pop
inc
cmp
sbb
int3
enter
popa
mov
or
clc
mov
stos
or
add
mov
lret
int3
rcl
fcomp
in
xor
dec
push
cmp
int3
sub
xor
fist
mov
xchg
stos
inc
les
fcoms
lcall
adc
sub
adc
adc
fcmovb
adc
mov
mov
pop
mov
jge
sbb
push
test
insl
iret
sar
inc
jl
das
dec
pop
cmp
pop
adc
inc
lock
or
repz
mov
mov
cltd
mov
or
das
addr16
cmp
and
mov
nop
xor
add
dec
mov
add
xor
movsl
dec
xchg
test
sbb
inc
mov
fcoms
or
in
cs
add
sub
out
add
push
xor
push
ds
gs
xchg
gs
dec
dec
dec
inc
xchg
gs
xchg
push
cs
insb
test
and
fsubrl
test
imul
jb
cmpsb
imul
imul
push
idivl
mov
lret
je
dec
jo
lret
mov
lret
push
gs
gs
fnsave
inc
xchg
xchg
imul
ds
lcall
pushf
inc
popf
sahf
lahf
mov
mov
js
movsl
cmpsb
xor
push
xchg
dec
je
jo
adc
dec
lea
push
jmp
gs
pop
xchg
gs
jae
inc
daa
lret
mov
inc
dec
outsb
je
lret
mov
daa
gs
je
outsl
sub
mov
outsb
outsb
arpl
lock
call
mov
xor
or
xchg
in
faddl
fisub
cmp
fnop
add
jg
add
std
or
jne
add
or
mov
int
ficom
dec
addr16
pop
rol
sub
inc
hlt
int3
add
push
sub
pop
repz
push
je
mov
jmp
add
push
pop
pop
pop
bound
fwait
stos
sti
je
push
lfs
add
jns
lea
fildll
je
ret
movsl
sti
in
push
inc
je
sbb
xor
repz
fnop
negb
roll
pushf
add
push
sbbb
push
jne
pop
cs
lock
daa
ror
mov
xchg
inc
add
test
add
orb
xor
call
adc
fbstp
mov
les
aas
sub
lret
lsl
sub
lea
pop
mov
push
and
lret
sub
jbe
adc
sarl
or
sbb
test
lret
mov
or
adc
cld
je
push
jo
icebp
jne
sahf
addr16
pop
cmc
and
mov
hlt
push
in
add
sub
push
sti
sbb
jge
add
cmp
jmp
js
je
or
inc
ret
divl
rolb
jbe
pop
or
mov
popa
es
pop
xor
mov
jle
jmp
xor
daa
clc
out
test
movsb
push
shrb
call
stos
cmpl
arpl
out
gs
ficom
sahf
mov
xor
aas
push
lcall
je
repnz
je
repz
jo
dec
xor
jae
jne
in
push
shll
fmull
and
add
or
fwait
mov
lret
jb
loopne
sub
add
out
ds
cld
cmp
jb
icebp
in
enter
or
jbe
jl
xorl
sub
or
xchg
test
fcomps
incl
sub
clc
pop
or
ret
add
je
xchg
pop
pop
mov
push
and
or
sub
xchg
out
push
jle
mov
int
adc
pop
pop
fimul
add
je
sbb
je
pop
pop
pop
pop
or
jle
adc
adc
add
xchg
call
xor
and
int3
mov
aas
push
ljmp
add
sbbb
add
jns
add
sti
in
rclb
or
std
add
pop
call
dec
aas
ret
gs
xchg
xchg
popa
je
outsl
outsb
gs
pop
xchg
cmp
insb
shrl
lcall
clc
stc
and
cld
xchg
sbb
mov
insb
cwtl
cmp
std
je
ljmp
push
lds
adc
ret
aas
sub
xlat
lahf
xchg
sub
add
scas
and
jae
adc
jle
or
pop
fs
xchg
sub
or
cwtl
cmp
push
push
or
cld
pop
mov
push
pop
push
pop
push
das
mov
cs
out
aad
cmp
add
test
mov
add
sub
mov
ljmp
and
daa
adc
adc
dec
push
mov
loopne
inc
mov
cmp
mov
sbb
adc
daa
add
mov
add
fmuls
cmp
xlat
je
fisttp
ficoml
es
jne
outsl
loope
and
mov
aam
pop
jno
sub
xor
out
pop
and
cltd
nop
add
add
aas
popa
arpl
xor
sub
mov
outsl
outsb
xor
xor
cmp
cmp
je
fsubs
mov
xchg
lods
fs
popa
arpl
pop
xchg
imul
pop
xchg
arpl
je
outsl
fstl
jne
shrb
mov
add
sub
jb
imul
mov
push
loopne
loope
jns
push
in
out
adc
or
pop
mov
pop
sub
pop
xchg
cmpsb
imul
or
sbb
or
aad
aaa
andb
or
add
mov
sbb
mov
std
lods
push
adc
mov
xchg
mov
clc
stos
clc
inc
jecxz
dec
and
notl
mov
call
sti
or
xlat
fnsave
imul
es
lcall
xchg
mov
fdivr
xor
cmp
inc
xchg
xor
add
das
clc
stc
sti
popa
dec
sar
sti
cld
negb
cmp
cmp
mov
cld
sarl
test
or
mov
xlat
imull
jb
lret
fs
or
xlat
or
xchg
fdivl
and
xchg
stc
sbb
mov
ds
je
lds
jle
mov
jns
mov
sbb
push
incl
iret
sbb
jmp
push
insl
adc
jle
dec
or
push
rcl
mov
mov
fsubl
fcmovnb
pop
jb
shlb
leave
adcl
sub
lock
jl
icebp
jmp
call
lods
call
adc
add
xlat
pop
call
dec
mov
push
vhsubpd
inc
ret
clc
jmpw
popf
cmp
daa
and
xor
sbb
inc
loope
loopne
aaa
mov
fisubrl
in
and
push
sbb
out
imul
push
mov
lret
insl
bound
jne
fstps
dec
pop
aad
cs
or
xor
push
jo
cmc
mov
cwtl
adc
mov
inc
inc
std
jg
inc
jbe
xchg
cld
in
mov
cmp
insb
out
jns
lcall
imul
clc
push
jns
mov
ficompl
cmc
sbb
mov
xor
mov
aas
jo
xor
inc
and
sbb
jne
ret
push
insl
and
inc
cmp
jb
popl
xor
popa
movq
mov
icebp
ljmp
movsl
cwtl
movsb
dec
adc
mov
or
xor
mov
outsb
daa
cs
fs
xor
jb
arpl
jb
xor
arpl
outsl
and
add
insl
jne
sarb
fs
js
lock
mov
sub
dec
je
push
push
pop
lahf
pop
call
sub
cs
mov
pop
xor
lea
and
pusha
cmpb
or
add
and
shlb
mov
sub
outsl
sub
iret
sub
xor
inc
lods
std
push
push
rclb
imull
nop
dec
cmp
xchg
popa
mov
loopne
pop
nop
loope
xchg
and
push
push
sub
lods
and
add
loop
pop
push
mov
push
mov
jno
gs
inc
dec
mov
cmp
sbb
orl
xchg
and
inc
loopne
in
mov
jb
hlt
sbb
outsb
add
add
jb
add
and
inc
clc
add
add
imul
push
insb
jo
jo
push
mov
insb
insb
test
pop
add
lret
leave
popa
je
xchg
add
dec
rorl
outsw
pop
sbb
mov
lock
and
movzbl
fs
inc
push
xchg
xchg
xchg
js
push
sbb
pop
mov
das
sbbb
push
dec
inc
and
xchg
or
enter
les
out
push
xchg
and
sbb
pop
adc
push
rcrb
movsb
imul
add
lcall
dec
xlat
push
pop
hlt
dec
je
dec
xor
bound
push
inc
and
and
fistl
je
js
insb
bound
lea
ja
mov
inc
subl
hlt
test
cmp
sub
lahf
xor
out
cs
call
inc
out
incl
mov
ret
mov
enter
inc
and
jno
pop
jo
or
enter
cmp
lock
inc
xor
imul
in
jge
nop
in
out
sbb
mov
in
add
mov
int
cmp
jns
jae
xor
andl
imul
cmp
mov
shll
push
popa
jb
adc
inc
inc
push
mov
mov
pushf
in
std
in
mov
js
enter
in
lcall
popa
arpl
cmpsb
imul
imul
imul
mov
imul
cmpsb
imul
scas
mov
incb
stos
sbb
xor
insb
sbb
cmp
das
xor
add
dec
xorl
cmpsl
jb
xor
xlat
jne
jne
bound
xor
jae
xor
arpl
xor
mov
insl
cmp
dec
xor
cmp
ret
int
mov
nop
add
cs
sbb
pop
pop
outsl
push
cltd
sahf
pop
dec
repnz
xor
add
pop
call
push
shll
mov
sub
add
sub
repnz
in
int3
enter
add
adc
push
mov
stos
pop
jno
ja
scas
fsubs
notl
mov
out
pop
mov
inc
or
loopne
mov
cmp
mov
rcrb
or
push
mov
cmpsl
cmp
mov
mov
dec
sbb
and
aas
mov
mov
push
lea
or
mov
popf
mov
sub
das
push
iret
mov
call
call
lahf
inc
pop
dec
cmpl
inc
test
jbe
add
outsl
and
dec
aam
ds
lahf
mov
mov
mov
repnz
xor
inc
fistpll
shll
mov
push
or
cli
add
xor
decb
adc
das
and
pop
push
push
pextrw
int
or
or
call
cld
std
adc
xchg
adc
mov
cmc
insb
cltd
adc
mov
mov
fwait
sub
or
add
enter
mov
xchg
int3
mov
xchg
pop
mov
ficomp
fwait
mov
fisttpll
test
popl
xchg
pop
xor
add
inc
outsl
sub
leave
pop
mov
push
mov
add
xor
xchg
int
ja
insb
push
jl
xchg
xor
mov
insb
ffreep
sub
push
add
call
push
addl
test
mov
pusha
inc
outsl
jle
mov
mov
and
cs
fstps
push
ds
lcall
sbb
push
sbb
daa
add
add
pusha
inc
scas
mov
mov
or
inc
xchg
sub
mov
data16
cmp
adc
push
or
mov
cmp
ret
push
mov
and
rclb
out
and
push
mov
call
jp
aas
push
ss
push
ret
mov
push
sub
rolb
xor
pop
sub
push
pop
adc
or
mov
jmp
inc
insb
sbb
cld
and
icebp
pop
add
aaa
xor
je
clc
jae
loopne
roll
add
mov
sub
repnz
add
data16
inc
std
imul
mov
cmp
dec
shrl
jae
mov
xchg
mov
arpl
inc
cmp
adc
stos
fldl
mov
movsl
dec
ret
bound
lods
and
aas
repz
adc
pushl
pushl
outsb
or
arpl
divl
mov
mov
mov
or
mov
out
lock
lcall
jle
cmp
or
jmp
cmp
mov
scas
lret
insl
cmp
mov
outsl
ret
jbe
stos
fsts
fdivrs
pop
jns
insb
push
push
call
push
jns
ds
call
sahf
adc
dec
jne
mov
xor
xchg
pushf
and
rcll
adc
icebp
inc
push
push
sbb
cmpl
and
adc
sbb
or
jecxz
push
pop
mov
or
dec
and
insl
dec
push
ds
das
sub
out
push
add
and
cwtl
test
pop
add
std
sbb
repnz
xchg
sarb
add
test
or
add
dec
push
push
lock
jne
mov
push
aaa
fninit
sub
aam
cmp
inc
cmp
jne
push
stc
pop
ja
lock
fisttpl
push
lea
enter
scas
pop
out
addl
mov
jl
insb
add
sbb
pop
adc
test
lahf
mov
pop
pop
aaa
shr
and
popa
fcom
jmp
cmc
mov
aaa
push
ss
stos
sub
mov
push
push
imul
sbb
adc
aas
or
jns
adc
aaa
and
xor
int
push
add
lret
cld
sub
cmp
adc
out
js
push
lret
or
movsl
mov
mov
cmp
jl
add
jg
das
or
or
cmpsl
sbb
mov
mov
aaa
jg
inc
inc
cwtl
jl
jns
push
push
sbb
push
outsb
add
das
ja
call
js
sub
pop
ja
mov
adc
loopne
add
sbb
sbb
add
pop
aad
adc
adc
or
xor
repz
sbb
or
cmp
mov
mov
xchg
xor
pop
xor
negb
lret
mov
lret
dec
imul
mov
dec
outsb
jne
inc
add
mov
push
lret
mov
sub
xor
cmp
mov
pop
stos
aad
dec
imul
outsl
std
pop
inc
dec
xor
arpl
popa
je
fs
out
xor
lcall
dec
imul
outsl
pop
push
mov
cmc
movsl
divb
idiv
xchg
stc
fldenv
sti
cld
jb
pop
dec
xchg
gs
dec
bound
xchg
sub
imul
imul
xchg
push
orl
rcll
mov
lcallw
mov
mov
or
xchg
insb
and
in
mov
jne
pop
out
add
lret
mov
lds
xchg
daa
pop
and
pop
nop
add
push
loope
clc
rolb
mov
mov
movsb
sbb
stos
mov
mov
mov
adc
mov
rcr
jnp
pop
into
mov
mov
in
movsb
adc
mov
xor
and
lock
push
aaa
xlat
test
adc
mov
or
add
rolb
adc
jb
negl
fistpl
rcrl
mov
xchg
addr16
adc
call
stos
rcrb
add
orb
adc
dec
in
push
jae
fwait
mov
in
std
push
or
icebp
mov
sahf
push
push
div
clc
push
out
outsb
lcall
jmp
push
jle
jl
jl
or
mov
mov
int
add
ficom
mov
xchg
xchg
pop
jo
mov
mov
inc
mov
shlb
sbb
adc
rcr
mov
add
fldenv
mov
sub
insb
fistpl
sbb
sub
add
add
lods
push
xor
adc
xor
lds
mov
imul
pop
push
xchg
adc
enter
add
cmp
std
add
push
cld
pop
lds
cmpl
lahf
add
jle
add
jo
jle
aam
outsb
jo
cmp
cmp
sbb
pop
jb
insb
add
testl
dec
or
imul
push
aam
adc
fcoml
icebp
ret
or
fisttp
mov
inc
jb
push
add
lea
xchg
lcall
out
or
sub
jmp
pop
add
or
mov
jmp
sahf
gs
call
jno
mov
das
push
mov
ret
mov
lahf
out
data16
mov
adc
adc
andl
or
jmp
jle
movzwl
das
adc
jne
daa
add
add
test
inc
call
je
cmp
jne
mov
fadds
adc
movsl
mov
mov
lar
data16
lock
cmpsl
mov
movsl
jae
push
sub
add
adc
pop
mov
lea
ljmp
inc
inc
cmp
jl
add
jmp
arpl
push
mov
push
repz
stos
push
jno
push
push
fildl
fldenv
push
add
jbe
add
adc
iret
jb
xchg
test
je
and
mov
pushl
add
push
imul
clc
loopne
push
push
cmp
mov
and
out
or
inc
push
mov
cltd
int3
inc
scas
mov
das
mov
data16
scas
les
lods
push
mov
call
fcmovne
jbe
lahf
inc
aaa
pushl
lcall
and
cmp
pop
jae
rcrb
sbb
mov
sub
jns
cmpsl
cs
cld
nop
or
dec
push
into
push
popa
fdivs
jge
inc
rolb
mov
xchg
inc
cmp
testb
je
fidivl
push
mov
sub
shr
or
adc
push
gs
xor
inc
sub
adc
mull
push
or
outsb
enter
lods
jno
data16
adc
mov
mov
lods
andb
and
push
popl
and
dec
iret
sarl
push
dec
nop
sbb
stos
mov
adcl
mov
in
fs
and
jl
nop
gs
xchg
xchg
in
outsl
gs
cmpsb
mov
fs
or
cmpsb
imul
lods
push
gs
adc
push
xchg
push
das
or
loopne
jbe
iret
jns
pop
add
sub
adc
and
pushf
add
fwait
loopne
call
add
xlat
push
repnz
in
add
adc
add
add
adc
and
inc
cmpsb
in
lcall
test
add
pop
push
les
mov
push
cwtl
cli
fwait
or
ror
sbb
shlb
inc
and
add
xor
jbe
and
stos
idivl
clc
sbb
insl
dec
cld
push
mov
push
fisttp
sbb
sub
push
push
jno
cmp
call
sbb
jl
sbb
push
cmp
or
inc
jo
push
adc
pop
pop
adc
sub
push
loope
mov
jo
mov
aaa
jge
aam
push
pusha
insb
inc
loope
or
pop
add
mov
out
push
jecxz
fwait
add
int
dec
inc
out
test
test
aaa
mov
scas
dec
cmc
jmp
fwait
sti
inc
faddl
scas
mov
iret
lea
les
add
lock
pop
mov
insb
cltd
fcomp
mov
inc
inc
ret
je
cmp
ds
je
xlat
push
mov
daa
pop
adc
jmp
mov
pop
push
add
jle
push
fsubs
mov
or
pop
subb
pop
stos
sbb
ds
push
push
call
adc
fisubl
mov
jo
cmp
sbbl
sbb
bound
cmp
jl
rcrb
push
cli
movsb
and
adc
push
jmp
sbb
les
add
sbb
stos
fisub
pcmpgtb
dec
out
ds
adc
shrb
outsl
fstps
imul
movsl
addr16
in
in
add
out
jb
outsb
cmpsb
push
pop
loopne
jae
std
ja
dec
aaa
loop
jcxz
push
jne
popf
push
int
cltd
in
ds
jb
xchg
popa
data16
gs
xor
gs
xor
aad
xchg
gs
cs
pop
rcll
std
push
faddl
or
cmp
cld
andl
sub
hlt
xor
cmp
cmp
cwtl
lods
addl
pop
xlat
push
mov
das
or
subb
cwtl
adc
into
push
cltd
or
cmp
es
mov
push
pusha
ds
fsubs
mov
call
inc
add
xor
pushf
lea
push
pushaw
or
mov
and
inc
sti
jle
push
test
cmp
pop
jns
js
je
mov
cmp
or
movsl
fildl
adc
add
add
andl
gs
or
push
mov
add
call
add
inc
addl
insb
enterw
in
leave
std
roll
mov
jmp
sbb
xor
enter
sbb
mov
bsf
and
push
jns
dec
shrb
fsubrs
arpl
sti
jge
push
jo
mov
xchg
mov
cld
mov
xor
fnstsw
rcrb
movsb
test
movsb
imul
jmp
inc
pop
inc
push
inc
cmp
je
mov
out
push
jne
fmull
xchg
xchg
andl
add
dec
mov
aaa
or
add
int3
fs
xor
sub
xor
add
cmp
fist
dec
xor
jl
mov
mov
pop
int3
enter
movb
inc
inc
inc
inc
in
fcom
loopne
adc
gs
xlat
pop
xor
cmpsb
adc
mov
pop
mov
mov
daa
pop
stos
adc
test
movsl
or
dec
jae
movsl
xor
enter
xor
les
stos
rorb
mov
add
xor
test
inc
mov
call
jne
jb
outsb
je
jb
arpl
ljmp
jb
adc
gs
outsl
outsl
insb
push
xor
popa
insl
out
jg
jo
push
add
jb
jne
insb
and
insl
mov
adc
jo
adc
ret
mov
insb
andb
inc
fs
out
dec
sub
imul
push
add
fiadd
cwtl
add
je
gs
fldt
fistpl
cmovbe
outsl
arpl
or
jp
push
stos
std
mov
adc
dec
outsl
fs
adc
lods
sub
imull
ljmp
xchg
add
fs
push
pop
dec
div
je
inc
jns
add
or
and
or
dec
ss
add
or
or
test
inc
fildl
gs
nop
pop
popa
imul
jb
outsb
and
push
push
mov
fldl
push
gs
outsl
pop
push
sub
gs
sbb
lods
inc
sbb
shrl
sahf
aad
push
jo
inc
push
cmpsl
imul
cmp
or
lret
fsubr
data16
push
das
push
add
cmp
pop
lcall
jae
mov
popa
push
inc
jne
add
stos
dec
gs
outsl
imul
test
jns
insb
or
mov
jle
imul
pop
cmp
inc
add
jns
fucomip
imul
inc
stc
nop
loope
out
aas
imul
jb
bt
jno
cmp
push
insb
mov
subl
adc
push
jae
jbe
test
in
jne
fwait
popw
mov
stos
push
out
addl
fcmovnb
test
insb
jae
arpl
push
outsb
push
arpl
push
lock
inc
dec
inc
push
dec
inc
outsl
and
add
jo
je
aaa
push
movsl
mov
mov
outsl
ja
add
out
js
mov
dec
gs
mov
popa
xor
adc
pop
cmp
dec
std
inc
pop
pop
ss
gs
dec
jae
mov
xchg
jae
out
add
mov
mov
aad
jecxz
jbe
and
push
push
mov
push
cmp
ss
pop
or
inc
loope
adc
inc
in
movl
insb
arpl
int3
scas
out
mov
and
jb
insl
and
ficom
and
xchg
mov
lcall
and
lea
inc
dec
mov
add
mov
test
sub
leave
lods
add
jne
pop
or
jne
add
or
inc
inc
push
inc
push
push
or
lods
or
inc
jecxz
or
xchg
or
sahf
xor
mov
lret
pop
fdivl
cmp
mov
clc
pushf
or
std
push
xor
pop
add
pop
adc
insl
jmp
dec
xchg
popa
push
sbb
pusha
lods
cld
mov
xor
outsb
insb
jns
mov
adc
pop
test
lea
cmp
mov
and
xor
pop
push
add
dec
loope
jae
mov
xor
nopl
sbb
xchg
ja
sti
and
and
test
or
out
jnp
adc
outsb
sub
or
loope
clc
pusha
in
pop
jbe
add
ss
mov
ret
cmp
ret
sti
add
cmp
dec
mov
aad
loope
ss
imul
pop
imul
addr16
ja
jae
nop
rclb
sbb
out
insl
test
push
push
addl
xor
mov
mov
fcoml
jbe
jmp
sbb
dec
jg
clc
sarb
push
dec
and
sub
popa
xlat
inc
addr16
mov
bts
jmp
fstpl
call
fcmovnbe
ja
or
stos
cmp
call
mov
push
mov
push
push
jmp
and
iret
adc
inc
cmp
lret
adc
iret
in
and
lret
sbb
add
or
bound
dec
jb
fnstenv
addb
insb
add
xor
jge
fistl
fwait
xor
add
orb
inc
or
dec
xchg
push
add
and
lar
jb
jecxz
lods
mov
call
pop
clc
into
push
inc
sbb
out
mov
sub
pop
fsubrp
pop
xchg
mov
fild
incl
cs
push
add
push
andb
fldenv
sbb
rcl
fstpl
adc
pushl
sahf
xor
pop
ja
push
shlb
or
xor
jl
dec
inc
rcrb
push
popf
jae
movsl
push
cld
mov
les
add
push
mov
adc
inc
call
int
xchg
fwait
lahf
dec
fistl
shr
lahf
frstor
inc
shll
inc
aaa
dec
hlt
in
sahf
ljmp
dec
fstp
add
aam
xchg
cld
or
mov
mov
cli
pop
xchg
mov
jmp
dec
cmpsl
mov
pop
sub
out
test
out
shlb
xor
aas
push
leave
cmp
cmc
adc
xchg
dec
daa
sbb
cmpsl
cmpsl
rep
pop
clc
push
call
in
idivl
movsb
icebp
add
pshufw
mov
cmpsb
out
jb
adc
in
mov
and
rolb
push
fild
dec
rcrl
cmp
rcl
mov
sbb
add
dec
outsb
das
dec
ljmp
mov
aad
sub
ds
imul
sbb
lsl
aas
mov
mov
add
jg
xchg
movsb
in
jbe
outsl
mov
out
adc
sbb
psadbw
sub
fldcw
sub
jg
inc
fst
call
fistp
pushl
dec
fistl
out
jle
mov
incl
addr16
in
pop
jmp
out
mov
imul
fwait
ss
fisub
xchg
or
dec
add
popa
ret
int
xor
pop
mov
fidivr
xlat
push
jg
neg
cmp
sub
fdivrp
mov
xlat
pop
push
ret
loope
in
repz
out
xlat
jo
out
mov
loopew
fsubp
xor
jecxz
pop
out
mov
das
fiaddl
sbb
push
mov
js
rcll
cmp
mov
fidivr
mov
push
push
js
mov
ja
pop
fsubr
mov
das
daa
mov
popa
ss
fsubp
mov
mov
dec
addr16
ja
cmp
push
aas
lahf
push
out
mov
xchg
aaa
mov
pop
rcrl
fnop
cmpsl
push
or
ljmp
mov
jnp
sbb
imul
push
out
sbb
incl
clc
out
mov
cmc
bts
cmp
shr
fist
mov
fcomps
or
lcall
sbb
sub
test
call
mov
mov
movl
or
mov
call
inc
and
adc
ret
sub
lahf
mov
adc
push
call
jl
mov
push
cmc
mov
xor
add
fmuls
inc
jno
cmp
cmp
mov
xchg
pop
pop
sub
cs
not
xchg
loop
aas
rolb
outsl
or
mov
cmp
cmc
clc
dec
adc
stc
mov
rorb
inc
mov
adc
dec
inc
lea
xor
in
mov
mov
rolb
call
outsb
jnp
mov
and
mov
fistpll
inc
dec
inc
adc
add
data16
sti
inc
roll
pop
bt
rcr
sub
lret
stc
pop
dec
inc
arpl
or
cmc
test
test
test
negb
je
lds
pop
pushf
sub
inc
lea
call
mov
sbb
inc
sub
and
flds
add
fucomp
popa
sti
cmp
test
adc
enter
pop
call
cmp
cmpsb
jbe
bt
mov
add
inc
pop
adc
lods
push
mov
mov
sbb
xchg
vandnps
in
enter
cltd
sub
jo
neg
mov
int
cld
rolw
mov
add
jmp
outsb
in
xlat
out
popf
outsl
lahf
pop
mov
adc
mov
jg
jo
es
mov
pushf
mov
dec
adc
jb
jg
ja
shl
bt
and
adc
mov
inc
clc
or
adc
pusha
sbb
mov
adc
or
out
orl
jle
inc
call
enter
xchg
push
mov
push
adc
jecxz
loop
push
shr
pushf
jmp
not
sar
inc
sbb
or
faddl
call
aas
adc
shr
jmp
cmpsb
aaa
mov
cmc
mov
movsl
call
enter
jg
test
fwait
aaa
cld
cmc
sub
adc
shrl
jp
ja
outsb
mov
mov
jl
add
cmp
pop
sub
push
xor
jmp
enter
aam
jns
push
repnz
and
ds
dec
shl
dec
mov
out
pop
dec
push
dec
add
xor
fs
dec
scas
mov
pop
repz
or
clc
push
push
popf
jnp
fnstsw
and
loop
insb
mov
push
in
add
push
lret
in
cli
pop
stc
jmp
cmpsl
pop
add
push
inc
rorb
sbb
aaa
ss
aad
jno
movsl
aaa
mov
push
and
shll
nop
jp
mov
cld
sar
daa
push
cmc
pusha
not
jmp
fadd
aad
loopne
sbb
sti
clc
cmc
cltd
sbb
inc
or
scas
andl
inc
jmp
xor
cmp
test
fistpll
cmc
push
and
xor
or
add
or
jge
jne
xchg
or
push
mov
jge
add
bound
inc
push
add
inc
mov
inc
mov
and
ja
xor
jb
mov
mov
sahf
ror
test
cmc
call
jle
lcall
and
in
insb
lret
cmpsb
cmp
cmc
and
or
jl
out
je
or
push
shll
push
jo
jb
inc
mov
out
arpl
fistpll
add
inc
adcb
add
xor
popf
or
pop
addr16
xchg
daa
cwtl
add
call
mov
dec
and
and
xchg
ljmp
mov
cmp
sbb
pop
sub
jmp
inc
imul
add
cmpsb
ljmp
sub
or
std
inc
xor
lock
ror
sete
push
fisubr
inc
aaa
outsl
repnz
jp
test
inc
fildl
cmp
cmp
test
cmc
pushf
mov
fimul
mov
push
pop
jp
rcll
cltd
pop
cmp
ret
rcr
icebp
ret
call
push
pop
call
lcall
pop
js
aaa
add
mov
aad
lods
mov
notl
jbe
mov
call
daa
mov
cmp
or
rolb
call
je
jmp
add
inc
out
pop
pop
fcoml
and
lcall
pop
mov
les
jg
stc
mov
jmp
pop
mov
clc
jmp
add
mov
jnp
in
lahf
daa
scas
and
pop
es
and
imul
ret
mov
jle
les
sbb
aad
jecxz
pushf
and
add
ret
jae
cwtl
pushf
clc
push
add
cmp
mov
mov
pusha
mov
xor
icebp
mov
mov
xor
rcl
push
cmp
std
rcr
js
mov
and
push
jg
push
arpl
push
sub
xor
imul
clc
mov
jge
mov
or
cltd
adc
jg
fadds
pushf
pop
mov
popa
inc
dec
icebp
jmp
imul
bswap
pushf
pop
js
lods
div
mov
inc
or
push
xchg
shr
sbb
test
mov
xchg
add
or
or
mov
bswap
lea
sub
push
cmp
lahf
mov
add
or
or
scas
lret
clc
pushf
call
adc
adc
das
rorl
cltd
ret
ljmp
cmp
adc
loope
addr16
in
pop
ja
or
push
or
inc
or
std
sti
pop
pop
out
xchg
shlb
xchg
bound
out
andl
inc
mov
or
shl
add
pop
dec
fsubl
leave
push
pop
pop
andb
sbb
cli
call
pop
mov
cli
jns
add
fucomi
pop
icebp
pop
into
imul
ret
idiv
cwtl
call
lock
and
fdivrs
sub
lock
push
sub
and
outsb
jg
insb
lock
or
std
sub
xchg
stc
push
call
xor
xchg
and
stc
lea
enter
cmp
lock
push
adc
sar
push
mov
jg
cmc
sbb
sbb
clc
add
stc
mov
mov
adc
adc
cltd
fidivrl
mov
xchg
jle
inc
bswap
ror
pushl
adc
std
xor
out
jl
jno
and
add
leave
sbb
lret
out
pop
mov
sub
shrl
popa
sub
or
mov
mov
jecxz
shrb
or
mov
fisttp
pop
jb
add
add
cmp
inc
sti
rcl
leave
cmp
cmc
mov
repz
loopne
fistpl
lock
cld
push
je
faddl
mov
shll
les
ret
out
sbb
incb
insl
fisttpll
lahf
cmp
and
xor
adc
loope
call
aam
ror
sub
and
fucomp
push
stc
mov
or
sbb
pushf
push
aaa
push
mov
push
ret
rolb
mov
outsb
ret
xor
jmp
push
mov
lods
fwait
mov
jmp
repz
imul
and
div
ret
add
loop
pop
ret
or
fldl
aaa
adc
push
cli
ficom
test
loopew
popa
lds
mov
push
data16
lcall
jns
sub
imul
aaa
push
clc
and
movsl
push
xchg
stos
shrb
leave
jge
aaa
or
gs
in
jp
xchg
not
not
mov
leave
or
ljmp
pop
sti
cli
push
jnp
call
pop
call
clc
hlt
cli
mov
call
add
sub
sbb
mov
ret
add
rcll
in
stc
pushf
test
xchg
or
mov
mov
ja
addr16
mov
aam
loope
call
int3
mov
jbe
mov
repz
mov
loop
iret
insl
and
or
dec
pop
rorb
xlat
les
pop
push
test
call
call
jmp
rcrb
add
push
test
clc
ret
lahf
into
add
rcl
pop
jb
pop
sbb
fs
cmpsl
int
icebp
test
and
movsl
outsl
cmp
mov
into
shr
pop
clc
loopne
mov
pop
stc
loop
jmp
mov
movl
gs
xor
insb
push
and
jl
push
shrb
jecxz
hlt
sarl
rcl
and
lahf
jbe
rol
and
jle
pusha
clc
lahf
jmp
mov
std
dec
cld
push
sbb
mov
les
cld
lds
int3
mov
or
call
add
fldl
outsb
jnp
leave
dec
flds
sub
inc
ja
cmp
das
add
inc
nop
jnp
sbb
pop
pushf
pushf
inc
test
out
pop
test
sub
loop
movsl
dec
mov
xor
jp
leave
rcll
mov
pop
ret
shll
sbb
lods
lock
inc
aad
push
test
das
popa
popa
sbb
ficom
xor
sti
std
cmp
int
fsubrs
dec
jne
sub
push
push
jb
jo
popa
call
and
xchg
ljmp
imul
and
ror
dec
mov
mov
cld
rcr
jecxz
js
pop
scas
lret
xchg
push
xlat
outsb
ret
push
ja
out
sbb
xchg
rcl
pop
jmp
les
test
jo
mov
or
pop
dec
jmp
sbb
das
and
xchg
test
jg
out
fiaddl
addb
aad
loopne
enter
xor
xchg
fidivrl
setne
sbb
mov
dec
clc
dec
sbb
rol
xor
mov
cli
jb
add
scas
jmp
int
pop
cld
ja
push
ljmp
lock
cmp
pop
std
ljmp
dec
pushf
cld
pusha
rep
xor
neg
jge
pop
add
pop
lds
test
mov
sbb
daa
mov
nop
stc
pop
xor
push
fbld
mov
cmp
sbb
add
jae
pusha
sub
or
popf
bswap
mov
inc
dec
outsb
test
mov
push
and
pop
add
ljmp
ja
lods
out
in
cld
xchg
push
xor
call
stc
dec
je
ret
pushf
pusha
call
cld
inc
fdivrs
fstl
test
mov
and
fisubrl
mov
aaa
push
cwtl
testb
cmp
mov
mov
jmp
push
jb
lcall
fnop
push
loopne
iret
sub
push
data16
mov
loope
std
pusha
pop
pop
pop
inc
add
or
push
andl
idivl
inc
stos
jge
incl
fucomp
sahf
ds
call
jmp
jbe
cmc
jecxz
loop
or
out
add
test
iret
lea
movsb
roll
jnp
dec
je
cmp
xchg
cltd
cmp
insl
mov
rorb
int
inc
push
mov
icebp
mov
add
inc
insl
add
jbe
xor
jecxz
cld
push
lock
test
ja
not
ror
shr
xor
mov
pop
call
loope
fcomps
jmp
adc
lahf
into
dec
ret
imul
adc
pop
cmp
pop
loope
push
add
jmp
sbb
in
iret
sub
clc
gs
push
outsb
inc
out
pop
movsl
jle
cwtl
xchg
push
sti
hlt
xchg
or
pop
subb
sub
adc
dec
cmp
fisubr
ret
xor
push
in
push
jmp
rcrl
call
adc
fbstp
mov
mov
and
inc
mov
std
push
ss
sbbb
mov
pop
xor
push
dec
ds
add
stos
push
shlb
mov
aam
dec
mov
repz
imul
inc
jecxz
dec
out
push
int3
fadds
xchg
cmp
js
xchg
repnz
cmp
add
add
jne
mov
rolb
repnz
insl
sub
sbb
cmpsl
cwtl
inc
enter
es
clc
sub
pop
add
das
xchg
jae
jg
loope
push
push
pushf
lods
movsl
shl
jo
add
stos
adc
ret
lret
xchg
hlt
pop
jo
and
cmp
push
cmc
mov
icebp
pushf
adc
std
mov
in
push
scas
in
clc
push
pushf
xorl
adc
je
sbb
std
rorb
aaa
ret
je
notb
addr16
sbb
sbb
stc
popa
and
cli
out
sbb
sbb
dec
dec
inc
test
or
dec
cwtl
add
mov
sti
daa
aaa
add
dec
lcall
push
ljmp
mov
call
adc
sets
arpl
repz
sbb
push
fistp
mov
les
jbe
rclb
push
or
test
push
xor
xchg
xchg
cwtl
pusha
pop
cmp
std
shl
sbb
sbbb
mov
ja
popf
hlt
imul
sbb
mov
in
pop
test
scas
lret
loopne
push
ret
mov
push
outsl
sbb
call
movsb
push
push
add
dec
test
pusha
fistl
add
add
lock
icebp
push
cmp
pop
pushf
fiadd
cmp
adc
inc
pop
add
mov
icebp
mov
or
push
call
stos
mov
in
sti
dec
pop
lret
cmp
push
clc
adc
fdiv
push
lret
test
flds
rol
push
call
push
dec
jl
adc
arpl
sbb
and
xor
push
cmp
sbb
int
dec
pop
jo
out
out
mov
mov
inc
push
jmp
stc
je
ljmp
or
jno
lcall
movsl
cmpsl
mov
or
xor
xor
lods
faddl
push
xor
ljmp
pop
jmp
xlat
pusha
loope
push
mov
jbe
dec
ss
lret
cmp
sub
es
pop
push
sub
xor
call
mov
inc
test
add
enter
adc
pop
add
popa
call
jns
cmp
rcrb
lds
cld
gs
aas
test
sbb
lcall
dec
mov
push
aas
scas
dec
stos
jl
cmp
repnz
test
mov
jg
fistp
jmp
je
out
sbb
scas
pop
cli
pandn
add
sarl
js
rolb
sbb
loopne,pn
jmp
out
mov
fstl
jbe
ret
in
xchg
inc
icebp
cltd
inc
insl
sbb
das
sahf
mov
pop
ds
add
pushl
mov
add
mov
nop
xchg
add
adc
fisttp
dec
or
cmp
out
jne
movsb
fs
xchg
xlat
xchg
sahf
frstor
xor
call
scas
xor
mov
xchg
out
aaa
loope
jb
les
ret
aad
or
xchg
data16
call
inc
or
adc
and
jge
aad
sub
dec
xchg
mov
imul
mov
xchg
mov
cltd
inc
cs
scas
pop
fistpl
and
sbb
xchg
movsl
in
cmp
arpl
push
mov
dec
cmp
sub
dec
or
push
jle
lahf
cs
xchg
mov
sar
int
call
jo
lret
or
fimul
gs
outsb
mov
xor
std
out
mov
push
repnz
int
cltd
add
jmp
mov
test
sub
into
mov
in
mov
call
stos
roll
das
faddl
pop
mov
es
adc
aam
push
pop
dec
adc
sti
adc
push
cld
lcall
sub
call
sbb
andb
xlat
rorb
and
faddp
mov
in
push
inc
notb
stos
scas
in
in
adc
js
jae
dec
mov
mov
imul
mov
mov
nop
cmp
xchg
insb
inc
iret
cld
stos
pop
xchg
pop
std
fistpll
xchg
int3
cmp
mov
addr16
add
ljmp
sti
or
lea
ds
data16
das
lcall
outsl
flds
sub
shl
rorl
mov
jle
xor
or
mov
iret
sbb
xlat
mov
and
cmp
cs
decl
sbb
aad
lds
mov
inc
sbbb
lods
cmp
cmp
stos
fdivs
pop
inc
test
pop
jecxz
outsb
call
adcl
stc
or
dec
jmp
inc
in
lcall
adc
out
scas
mov
int3
jle
iret
xor
add
adc
decl
fnsave
add
inc
jnp
repnz
jno
insb
push
push
test
shrb
enter
mov
stc
and
jns
xor
push
pop
cld
shll
mov
hlt
xor
xor
jbe
sbb
mov
inc
mov
xchg
test
cmp
dec
xchg
pop
aaa
and
das
ret
outsb
xor
std
and
iret
mov
incl
xor
imul
cs
aaa
rcrl
ja
mov
mov
mov
pop
int3
xor
xchg
loopne
mov
mov
or
push
xor
test
jne
es
xchg
js
sahf
mov
nop
cmp
dec
adc
dec
mov
aam
cli
movsl
dec
negl
jae
shr
ret
aad
xchg
fdivrp
inc
xchg
sbb
add
adc
sub
or
xchg
ret
sbb
add
mov
fldlg2
lods
cs
jg
inc
or
mov
jae
stos
cwtl
mov
jmp
jle
xlat
sti
push
out
incl
xchg
add
adc
insb
xchg
rclb
popa
jge
jle
or
out
dec
jns
std
in
call
push
movsl
dec
daa
push
xor
stos
and
ljmp
sbb
push
sbb
lahf
sbb
andl
jp
push
sub
fs
cs
jg
xlat
mov
mov
lods
ret
lret
xor
xor
aad
push
jge
pop
das
ds
ljmp
pop
add
xlat
add
and
dec
xchg
mov
jecxz
call
jne
push
rcl
out
xlat
clc
dec
les
jmp
imul
das
jge
mov
sub
nop
lods
clc
pusha
iret
pop
int
incl
jp
push
jnp
fistpl
cmpsl
andb
push
mov
cmp
pop
rorb
mov
test
xchg
cld
ljmp
mov
or
pop
inc
out
test
cli
addr16
inc
sub
xchg
pop
enter
out
pushf
call
add
mov
in
push
mov
xchg
shrb
scas
jg
out
loop
outsb
mov
adcl
jo
int3
mov
pop
inc
lods
push
mov
or
leave
dec
and
outsb
faddl
push
jl
dec
xchg
fnstenv
std
mov
call
push
in
insl
js
dec
rolb
inc
mov
dec
scas
gs
cs
push
cld
data16
fcompl
add
inc
mov
lret
add
add
decl
or
sub
cmp
pop
mov
dec
rcr
decl
test
inc
popf
mov
fmul
dec
cmp
roll
scas
sbb
clc
incl
add
or
sbb
dec
lret
or
mov
mov
inc
lock
inc
mov
insw
test
jbe
movsl
jnp
lods
out
inc
dec
jne
pop
cld
jmp
cmp
cmc
adc
inc
stos
or
mov
sbb
das
push
mov
aad
in
sbb
out
jmp
icebp
fild
or
and
push
xor
jnp
in
nop
inc
pop
movsl
sahf
dec
insb
push
incl
mov
pop
enter
sti
mov
into
sahf
leave
repz
pop
and
jg,pt
mov
push
es
ficoml
lods
mov
ljmp
or
xchg
loopne
out
mov
mov
jmp
icebp
jmp
add
inc
xor
push
mov
jne
jge
and
call
cmpsl
out
loopne
and
js
repnz
adc
pushf
addb
int3
leave
mov
sbb
call
xchg
decb
int3
ss
outsl
fnstsw
cltd
movb
aam
and
std
cmpsl
dec
cli
mov
mov
inc
scas
xchg
pusha
sbb
sarl
jecxz
sbb
out
stos
enter
mov
sti
cld
out
inc
movsb
or
inc
inc
push
cmc
mov
or
pop
repnz
cmp
pop
sub
test
std
push
sbb
and
ss
or
jl
outsl
lock
add
xchg
add
push
jae
loope
call
into
loop
jle
xor
push
mov
cli
dec
paddsb
dec
and
cmp
out
jbe
or
shrl
sbb
out
pop
bound
movsb
pop
test
aas
daa
movsl
add
lahf
daa
mov
loop
sbb
test
lods
popf
pop
call
inc
inc
repnz
mov
mov
jb
sti
incl
mov
idiv
jo
mov
adc
jg
dec
pop
push
jl
xchg
jnp
push
call
mov
xor
adc
daa
mov
jg
jne
lods
xchg
add
popf
xchg
sub
adc
sub
lock
adc
test
jno
scas
das
popa
idivl
cwtl
cmp
jg
outsl
cmp
faddl
adc
xchg
fsubr
mov
rcrl
jne
pop
or
or
xchg
aad
test
jo
inc
outsl
sbb
fdivr
das
hlt
pop
fs
jae
imul
mov
jg
push
push
adc
cmp
mov
dec
inc
sub
dec
mov
mov
mul
dec
cmp
push
jle
aaa
sub
repz
xchg
pushl
sub
mov
out
gs
stos
fwait
inc
out
sbb
out
push
mov
pop
pop
loopne
rcll
xchg
les
in
std
inc
mov
test
mov
loop
and
or
shrl
push
push
ret
jns
dec
mov
test
inc
leave
push
ucomiss
popf
iret
fmuls
xchg
push
pushf
mov
cmp
push
mov
stos
sbb
pushf
push
pop
or
xchg
sbb
in
hlt
aaa
push
push
loope
fcmovb
pop
push
push
sbb
xor
in
adc
aad
cld
psubb
xchg
push
xlat
push
pushf
adc
movsl
lcall
xchg
pusha
das
scas
sbb
add
std
scas
inc
inc
in
ficompl
pop
jl
outsl
std
incl
ret
sbb
or
xor
lcall
fisttp
jns
repz
call
icebp
mov
sub
ljmp
icebp
add
lcall
xorl
sub
and
rcll
call
jle
int
and
fisubrl
push
push
ja
mov
sub
inc
jmp
adc
cmp
fadd
mov
enter
outsl
call
data16
lret
cli
ljmp
xchg
pop
movsb
xchg
loopne
pop
or
stc
mov
dec
inc
mov
add
pop
scas
aas
cmp
and
outsl
call
and
xchg
fs
or
sub
sti
lahf
push
and
inc
outsb
pop
clc
mov
mov
std
mov
mov
shlb
sub
pop
sub
add
push
adc
or
add
mov
mov
scas
jno
nop
dec
dec
xchg
hlt
mov
push
cmp
jg
xchg
cmp
xorb
xchg
inc
pop
mov
pop
inc
in
sub
orb
inc
nop
mov
mov
incb
mov
gs
and
mov
sub
ret
aam
pop
loop
rcrb
scas
ja
in
mov
inc
leave
lret
decl
lea
mov
jl
push
das
push
mov
mov
enter
ror
adc
sti
es
mov
outsl
mov
push
rorl
mov
cmc
mov
stc
mov
ret
movsb
into
mov
mov
or
sar
ljmp
mull
xor
xchg
mov
adc
dec
std
stos
imulb
mov
movsl
lods
and
nop
stc
fst
and
and
mov
jle
dec
leave
leave
in
fwait
jg
jl
stos
pop
pop
scas
fcompl
call
xor
nop
aad
cmp
mov
xor
sbb
xchg
in
sub
enter
fist
fcmovnb
or
lcall
push
mov
jo
pop
inc
mov
mov
outsb
ja
xchg
shr
mov
sbb
fnop
pushl
push
inc
lods
loope
out
ja
stc
out
sbb
ljmp
vfnmadd231ss
inc
dec
ljmp
jg
lock
hlt
lea
and
ljmp
sub
sub
dec
pop
cmp
adc
std
movsl
incb
fs
mov
jbe
mov
lcall
mov
jo
xchg
mov
push
pop
sbb
stos
jp
and
sbb
xchg
outsl
icebp
mov
test
push
lretw
pop
ficompl
in
ljmp
cmpsl
fsubr
mov
xor
mov
rorb
mov
test
call
test
sbbl
out
cmp
pop
icebp
xchg
incb
adc
mov
jge
pushf
call
jmp
mov
and
fwait
cmpsb
in
loope
or
sbb
ror
imul
inc
inc
jb
dec
div
mov
fiaddl
pop
test
das
outsl
popf
or
pop
xor
jg
mov
jae
lahf
mov
scas
sbb
test
xor
cld
idiv
inc
mov
icebp
cmp
pop
aam
dec
xor
inc
xor
cs
add
ljmp
xchg
sub
cmc
dec
lods
pop
dec
cmp
xchg
push
cmp
jg
mov
sub
lds
jns
leave
xor
inc
call
xor
or
push
add
pushf
loopne
jmp
xor
mov
cs
mov
pop
sarb
push
repz
jb
in
xor
loopne
pop
mov
sbb
mov
into
popf
sub
test
mov
idivl
push
pop
jecxz
std
fstl
das
pusha
push
add
loope
in
or
stc
adc
xchg
mov
xchg
lret
xchg
ret
cmpsl
addl
or
mov
scas
aas
lock
xor
pop
add
jge
push
add
mov
sbb
xchg
push
add
mov
mov
cld
push
decl
mov
mov
dec
cmp
push
cmc
fistpll
lods
mov
rclb
xor
mov
sarl
or
mov
ja
cmpsl
mov
fadds
test
mov
mov
dec
arpl
jmp
jl
aaa
push
std
psubw
mov
jg
subl
rcll
out
pusha
insb
jb
sbb
pusha
ret
pop
or
or
outsb
mov
or
pop
xchg
sub
cltd
mov
inc
aam
mov
loope
and
mov
call
sub
jl
cmpl
fsubs
bound
popf
lea
pushf
mov
xchg
pop
and
mov
and
mov
push
add
insl
add
pop
clc
pushl
ret
out
xor
scas
leave
pop
adc
or
les
mov
dec
test
in
test
fiaddl
mov
cmpsb
out
jecxz
xor
or
fstl
mov
pop
inc
xor
fcmovnu
jle
jae
out
fcomps
lahf
mov
xor
std
add
ss
pop
add
cli
jmp
pusha
and
mov
push
rcrl
or
cld
mov
jmp
fisubr
sahf
sbb
in
sbb
add
pop
add
call
xor
mov
scas
pop
lds
into
pop
xor
cmp
jl
fucomip
loope
mov
mov
fistl
jnp
es
cli
sub
aaa
pusha
daa
sbb
dec
jno
jg
pop
pop
repz
or
fs
mov
xor
cwtl
in
jl
mov
sti
jle
ljmp
xor
jns
xchg
test
pop
mov
xchg
inc
xchg
jp
out
push
mov
sub
ficompl
jp
movsl
xchg
loope
fstpt
out
mov
ja
adc
xor
xchg
out
add
mov
mov
pop
add
pop
mov
push
xchg
and
xchg
push
lock
imul
push
jg
fdivl
push
add
sbb
or
fldl
cwtl
pop
add
aaa
cli
ret
or
mov
jl
dec
stc
xchg
cmpsb
lock
das
xor
movsb
test
adc
fs
jg
sub
call
enter
xchg
nopl
hlt
xchg
jg
push
cltd
and
pop
cmpsb
push
jge
std
test
pop
in
cmp
xor
push
add
and
dec
ja
adc
arpl
or
das
sbb
jecxz
push
subl
jns
mov
mov
mov
loope
sub
lret
add
loopne
sub
add
mov
and
pop
and
decl
das
pusha
sbb
fwait
sub
movsb
mov
cmp
nop
jnp
inc
sub
xor
mov
incl
lahf
push
lea
mov
or
mov
adc
mov
std
sub
cld
sub
lahf
dec
stos
iret
mov
test
mov
and
mov
pop
push
jbe
dec
fcmove
mov
hlt
repnz
cmp
xchg
loope
ja
cmpsl
xor
sbb
adc
call
xor
xor
lods
xchg
jmp
leave
or
ret
ljmp
je
stos
test
cli
test
je
iret
std
sub
mov
dec
loop
mov
add
sti
ret
lods
pop
jge
lds
xor
xlat
out
ljmp
stc
aad
dec
sub
fisubr
sbb
ret
mov
and
mov
xor
vsubps
cld
imul
outsb
call
sbb
add
imull
cmpsb
or
sbb
inc
cmpb
pop
adc
cmp
test
push
cmp
addr16
fldcw
call
in
sub
sbb
movb
scas
ja
push
data16
jno
mov
mov
add
out
int
and
add
cmp
mov
and
push
data16
mov
jecxz
push
mov
push
push
push
push
icebp
addr16
mov
cmp
test
push
ret
push
call
pushf
cld
ficompl
ja
dec
inc
clc
movsl
sub
dec
mov
mov
ret
mov
mov
pop
mov
outsb
rclb
xchg
sahf
int3
ljmp
ret
jns
pop
daa
adc
rorb
mov
scas
pop
hlt
out
out
call
movsb
in
jns
stos
gs
cwtl
mov
add
loopne
shrd
sub
repnz
dec
mov
repnz
jg
push
ljmp
fisttp
cmp
mov
call
and
dec
jge
push
dec
jne
xor
testb
aam
ljmp
int3
mov
clc
mov
lcall
fimul
mov
in
pop
inc
out
sbb
jbe
mov
incl
adc
inc
sbb
push
xor
arpl
push
inc
inc
cmp
mov
sarl
arpl
hlt
call
rclb
test
jb
inc
icebp
fild
mov
jge
xchg
push
sti
movsl
outsl
std
mov
pusha
add
repnz
hlt
and
sbb
mov
jle
jo
or
out
and
jae
sbb
sarl
std
mov
cmpb
pop
ret
lret
xor
mov
in
movsl
dec
icebp
pop
adc
push
incl
inc
jb
dec
js
jl
cmc
and
jp
mov
pusha
jmp
punpcklbw
outsb
ds
sbb
sbb
decl
sub
ja
into
cmp
dec
jp
ss
jle
nop
iret
ret
ret
jns
pop
pop
in
xchg
xchg
int3
lea
in
mov
push
int3
mov
mov
cs
mov
lahf
cs
out
xchg
ds
jg
mov
out
rclb
and
xlat
inc
stos
lret
clc
and
cs
lods
mov
lahf
lods
call
sbb
or
cmp
arpl
cmpsl
les
insl
std
call
mov
jae
xchg
xchg
dec
or
pop
fistl
fisttpl
idivl
arpl
aam
out
das
sbb
mov
jmp
in
cmp
jmp
outsl
or
jge
cmc
pop
dec
mov
data16
mov
outsl
mov
mov
ret
shrb
adc
sub
mov
lcall
adc
adc
test
daa
mov
shll
mov
cwtl
fldt
fimull
inc
or
jmp
dec
inc
dec
lods
ret
jmp
daa
add
inc
fwait
push
fcmovnu
les
dec
nop
adc
insl
xchg
shr
imul
lock
sar
lcall
dec
mov
mov
xchg
ret
cs
lret
inc
test
jbe
int
push
repnz
lods
les
add
push
call
inc
test
jmp
call
out
mov
stos
nop
adc
add
mov
lcall
test
jne
mov
cli
cmpb
add
das
hlt
pop
mov
mov
scas
in
sub
dec
mov
mov
lcall
xor
add
xchg
into
idivl
call
icebp
cmp
ljmp
cmp
xchg
jl
rolb
fucomip
ljmp
rcr
lods
mov
xchg
test
in
dec
aaa
movsb
mov
inc
incl
dec
pop
pop
or
cmp
setae
sub
shr
add
stos
out
aaa
fwait
cmp
fld
xor
or
addr16
mov
repnz
clc
inc
mov
push
jmp
dec
dec
adc
push
mov
daa
adc
dec
push
xchg
add
and
stc
sbb
push
or
jae
mov
fwait
jle
xchg
or
shll
push
jmp
mov
dec
sub
test
jg
fstpt
dec
js
mov
popa
imul
call
mov
bound
or
ja
decl
cld
jecxz
int3
mov
lods
lcall
and
icebp
pop
leave
xor
je
and
and
cmpsb
add
jecxz
pushf
push
jns
xlat
mov
clc
fiadd
je
adc
add
call
leave
insl
data16
push
ret
insb
push
inc
ja
std
mov
push
subl
ljmp
scas
pushf
mov
jnp
jmp
jmp
mov
dec
mov
pop
inc
xor
push
scas
cmpsb
cli
test
pop
aas
jmp
imul
lock
ret
inc
je
int3
cli
and
aad
mov
aam
bound
jns
jb
in
and
ljmp
loopne
stc
out
sahf
pop
in
mov
or
mov
cmpsl
pushf
test
sub
mov
sarb
pop
xchg
fldl
stos
divb
insl
ret
pushf
movsb
jmp
add
loope
shlb
mov
hlt
and
mov
in
cs
cltd
add
and
lcall
scas
mov
call
sub
rorl
clc
loop
push
mov
jno
push
and
and
fs
mov
lds
test
fsubl
adc
aad
pop
or
push
mov
xchg
jge
mov
test
shlb
mov
imul
sbb
xchg
push
cwtl
jecxz
mov
and
test
out
pushf
xor
wrmsr
out
lods
mov
inc
adc
sbb
adc
xor
push
icebp
les
pop
jbe
sbb
mov
insb
pop
inc
scas
inc
adc
ja
jecxz
stos
sti
push
or
adc
mov
pusha
std
lcall
incl
popa
mov
mov
out
cmovo
fwait
xchg
scas
sbb
in
mov
pop
sbbl
cmp
mov
les
fucomp
out
pop
inc
scas
hlt
pushl
adc
mov
adc
xchg
shlb
ja
movsw
adc
push
lcall
sub
call
mov
jg
xchg
mov
jno
add
jae
adc
xchg
mov
or
outsl
mov
xchg
std
jmp
icebp
sbb
or
les
jg
ret
sbb
jbe
jbe
inc
ljmp
mov
pusha
cmp
add
sub
in
jae
popf
ret
fldt
outsb
cld
outsl
sub
sbb
lods
pop
testl
movsl
pop
clc
pop
mov
mov
cmc
inc
lcall
sbb
push
jecxz
cmp
push
mov
out
push
sbb
inc
paddusw
push
mov
cmpsb
xchg
and
inc
fnstsw
mov
test
mov
xchg
rcrl
push
sti
movsb
push
jnp
jecxz
lret
or
fbstp
lds
jg
jg
or
test
pop
jle
fildll
xchg
cli
in
fimull
clc
out
or
jnp
pusha
cmpsl
fsubrp
test
hlt
jecxz
outsb
test
push
inc
decb
mov
and
and
xchg
pusha
cmpsb
cmc
xlat
inc
mov
dec
mov
dec
pushf
xchg
mov
out
mov
fist
sub
mov
pusha
repz
push
pushf
mov
fildl
std
jg
inc
jno
mov
pop
xor
jae
mov
mov
dec
loop
mov
mov
mov
ret
scas
cltd
lods
pop
das
jo
or
shl
push
aas
pop
push
sahf
outsb
sarb
xor
fadds
ljmp
lea
scas
push
push
xor
decl
mov
mov
mov
mov
jmp
call
add
pop
inc
jbe
sbb
sarb
pop
mov
adc
outsl
xor
scas
mov
push
jg
pushl
loope
xchg
inc
aaa
inc
sbb
and
repnz
pop
rcrl
mov
andb
addl
fwait
cmp
and
mov
out
fwait
mov
fimull
cmpsb
fwait
inc
mov
cwtl
das
add
pusha
or
mov
hlt
inc
jg
iret
xchg
cltd
mov
or
jg
ljmp
pop
dec
hlt
cmpsb
sub
dec
nop
rorb
daa
push
jae
mov
stos
cmc
inc
sub
xor
loop
subl
in
rcrl
cld
or
pop
xchg
push
inc
mov
mov
stc
fmull
sbb
jl
test
ret
dec
xor
call
push
cltd
call
rorb
popf
xchg
mov
call
jle
fidiv
fisubl
subl
and
decl
lock
cltd
adc
cwtl
jl
dec
mov
xlat
pop
loop
inc
xlat
inc
aas
sub
push
cmp
mov
xchg
mov
jle
sti
sbb
pop
cmp
adc
popa
inc
push
std
and
call
xor
mov
sub
les
std
stos
lret
xchg
mov
je
lret
jne
enter
jg
jne
les
pushl
add
es
add
jp
aad
xor
lret
mov
mov
icebp
cmc
and
stos
pop
fs
cli
call
ljmp
xor
add
xor
std
lcall
mov
repnz
cwtl
fs
xchg
shlb
out
mov
sub
std
xlat
insl
xlat
push
or
xor
in
pop
lcall
push
int3
jp
inc
xor
scas
fidivrl
arpl
imulb
sarl
movsl
ss
bound
or
rol
xor
les
cmc
les
call
sbb
insl
jbe
push
jno
pop
sbb
fsubr
mov
add
adc
fwait
mov
dec
mov
inc
add
xchg
mov
add
pop
jp
or
jle
shr
sub
repz
inc
decl
push
inc
push
sub
test
push
push
test
cli
push
jno
into
sbb
sbb
ret
lcall
push
push
ss
imul
repz
ret
cli
xor
dec
loopne
fucom
pushl
out
push
loop
cmpsl
ret
repnz
mov
xchg
jle
push
mov
jmp
inc
xor
xchg
aas
push
sar
fsubs
das
icebp
xchg
push
mov
mov
pop
pop
sbb
icebp
xchg
mov
dec
cmp
and
sbb
out
push
pop
inc
test
repz
hlt
and
mov
adc
cs
jnp
in
cmpsl
mov
insb
sub
out
incb
adc
add
push
cmp
xor
adc
jg
mov
into
mov
or
test
xchg
ljmp
and
aaa
lcall
push
pop
leave
imul
lods
sbb
idiv
sub
ror
mov
ds
cld
aaa
jmp
jno
movsb
arpl
xchg
cmp
or
dec
or
dec
popa
dec
sbbb
dec
nop
inc
jle
dec
insb
fxam
jo
sti
push
in
pushl
int
and
inc
das
das
push
std
orb
sahf
sbb
adcl
cs
mov
pushf
nop
xor
insl
mov
mov
jecxz
repz
xlat
xor
test
push
jg
mov
adc
fisttpll
mov
xchg
mov
outsl
xlat
inc
loope
movsb
insb
imul
cmpsl
xor
mov
push
cli
jge
push
mov
ja
outsl
or
pushf
pusha
jmp
dec
xor
jle
xchg
add
repz
sub
insl
push
pusha
shr
cwtl
cwtl
jb
push
xchg
jge
mov
popa
cmp
pop
imul
mov
or
pusha
jp
pusha
sbb
jg
ja
int3
ret
xchg
xchg
in
push
inc
jo
leave
ss
dec
aaa
inc
cs
inc
mov
sub
incl
ljmp
pop
stc
mov
std
mov
pop
pop
pop
jne
enter
js
sub
jmp
add
xor
mov
mov
sarb
lds
mov
test
js
mov
push
das
sbb
fndisi(8087
out
in
cltd
mov
dec
mov
pop
hlt
cmp
gs
push
mov
lods
mull
dec
xor
sub
es
bound
test
call
dec
js
repz
dec
ljmp
add
popf
mov
xchg
mov
mov
imulb
mov
push
fsubrl
cmp
xor
std
or
sbbb
mulb
ds
cmc
push
dec
jae
push
sub
gs
rol
insb
mov
jb
testl
jo
mov
cmp
js
xor
mov
enter
dec
ja
aam
jmp
adc
jge
pop
ljmp
orl
mov
ud1
stos
pushf
sarl
cli
xchg
fcmovne
inc
add
enter
mov
movsb
lea
mov
lods
fucomi
repz
arpl
out
lds
fldenv
aaa
and
xlat
inc
xor
lret
mov
sbb
cmp
ds
xchg
mov
adc
xor
xchg
mov
push
addr16
sbb
je
push
xor
outsl
mov
fwait
test
ret
mov
clc
roll
adc
jae
dec
hlt
popf
lret
sub
sti
pop
stos
push
cltd
loop
pop
add
xchg
std
in
inc
aas
add
push
xor
xchg
and
aam
mov
imul
xchg
fstpl
xor
ja
dec
jp
push
ljmp
push
inc
sub
add
mov
pop
out
jg
add
enter
pop
sbb
add
cmp
rolb
jo
out
aaa
fcom
lret
sbb
xchg
out
insl
mov
inc
fs
aas
insb
sbb
je
cmp
dec
and
outsl
jbe,pn
outsl
jle
mov
arpl
xchg
jnp
aam
out
ret
mov
inc
cmp
rcl
or
out
les
push
mov
or
mov
push
es
cwtl
cld
cmp
pushf
clc
fnstsw
and
out
dec
inc
inc
xor
xchg
data16
bound
or
pushl
lret
out
sbb
out
aaa
fisttp
popf
pushf
out
repnz
mov
decl
push
jne
sbb
cs
int3
imulb
jl
push
mov
loopne
ja
insb
and
out
sarl
pop
les
or
pop
cli
xor
mov
fs
sbb
add
enter
inc
fnop
jnp
incb
push
mov
cmp
xchg
dec
outsl
loope
mov
pop
out
insl
cmc
jecxz
sti
mov
in
dec
mov
mov
or
and
in
pop
mov
hlt
bound
dec
je
dec
xlat
mov
sub
add
xchg
cmpl
popf
fisub
jae
lret
fcmovnu
cs
sti
dec
scas
das
adc
imul
push
cmp
mov
add
test
mov
clc
popf
sub
push
ljmp
adc
cmc
sahf
mulb
lcall
mov
insl
xor
cmp
cmp
inc
dec
ds
mov
or
jo
adc
imulb
sar
call
push
sub
nop
mov
jns
leave
popa
xor
out
xor
push
jecxz
inc
stos
ror
ret
jo
sbb
push
mov
or
jecxz
jle
pop
jle
sbb
cmp
out
sahf
dec
jecxz
fwait
aaa
dec
inc
repnz
pop
push
pop
dec
pop
call
jg
add
popf
fsubrp
ret
mov
push
adc
xchg
std
adc
lahf
stc
push
jmp
jmp
sti
iret
rorl
jg
outsl
mov
imul
rol
lcall
jl
mov
shrb
lea
setnp
mov
push
loopne
mov
xchg
add
repnz
sub
int
ror
pandn
das
pop
push
jg
add
mov
pop
push
fnsave
cmc
sahf
in
fadd
cs
shll
fistp
cmc
xchg
add
loope
sti
cmp
jmp
imul
das
sub
mov
daa
cmp
xor
das
sbb
insb
pop
lds
mov
sbb
in
je
mov
test
mov
sub
cmp
or
mov
adc
call
inc
jo
xchg
cmpb
movsb
xchg
sti
in
mov
jnp
ja
das
icebp
sbb
adc
lea
cld
mov
jmp
pop
enter
fisubrl
adc
into
push
outsl
add
enter
mov
rcll
andb
adc
clc
sar
outsb
cld
xor
jae
popa
ljmp
fsubl
jg
push
loopne
inc
stos
dec
int
lods
je
mov
data16
xor
mov
pop
pusha
mov
jg
ds
fbld
xorl
push
fidivrl
mov
push
lock
std
std
ljmp
bound
add
inc
outsl
xor
leave
sub
or
sbb
lret
mov
in
dec
dec
inc
fildll
loop
and
pop
lret
add
in
and
test
jg
jmp
xchg
and
hlt
inc
es
adc
xchg
push
push
stos
in
mov
out
add
bound
fmuls
andl
lahf
xchg
in
jne
out
enter
and
pop
pop
les
in
mov
mov
dec
inc
and
pop
lret
and
call
imul
mov
jmp
inc
xchg
inc
jo
lahf
lret
mov
jmp
xchg
dec
in
mov
fildl
pushl
inc
bound
iret
insl
and
or
bnd
pop
jge
pop
pop
dec
inc
dec
and
aam
push
ret
aaa
call
sub
test
cmpl
mov
in
jmp
mov
mov
adc
push
mov
pop
pushl
aam
je
movsl
xchg
enter
popa
rorl
dec
sti
xchg
lret
jmp
loopne
aas
dec
fnstsw
loope
jmp
aam
pop
les
jg
sub
test
ror
and
mov
aam
div
sbbl
push
cmpsb
push
inc
lret
xchg
andl
dec
mov
push
dec
sub
ljmp
out
imul
sub
pop
lahf
iret
mov
mov
enter
orb
outsb
out
aas
cmp
frstor
dec
push
jbe
cld
mov
cmc
jecxz
movsb
stos
in
dec
stos
repz
sub
pushl
adc
mov
mov
jbe
xchg
mov
mov
pusha
pop
mov
call
ret
jp
rolb
fdivr
mov
sub
ret
js
mov
jge
cld
sub
cld
push
pop
pop
xchg
xlat
add
fdivr
jge
or
xor
xor
lret
mov
xchg
inc
aaa
test
popa
sahf
xchg
add
fdivl
mov
or
sbb
inc
mov
int3
sbb
pop
inc
mov
inc
ret
jno
jnp
int
out
clc
lahf
in
and
mov
fs
or
icebp
in
in
inc
cmpsl
and
cwtl
pop
insl
jecxz
and
call
popf
lahf
mov
fdivp
add
adc
scas
add
icebp
mov
mov
arpl
add
nop
sub
fadds
xchg
xchg
outsb
push
mov
ret
mov
jmp
jns
xchg
and
enter
gs
inc
lock
mov
dec
je
cwtl
cwtl
loopne
xchg
fwait
push
ret
mov
mov
test
jecxz
cltd
push
add
inc
jmp
inc
cld
and
nop
in
xchg
addr16
ret
mov
jecxz
push
fldl
mov
pusha
repnz
ret
ja
xor
incl
jbe
rcrl
je
lock
std
mov
sar
dec
inc
cmc
and
aam
pop
iret
fucomi
fdivrl
xchg
jbe
pop
cmp
add
inc
stc
adc
mov
jl
out
sub
movsl
aad
das
mov
xchg
jo
adc
inc
cld
ljmp
dec
push
pop
push
push
jno
mov
push
iret
xchg
fwait
cmc
fisubr
call
outsb
cmc
add
sbb
loope
aas
in
frstor
or
or
jbe
sahf
mov
xor
dec
dec
stos
fadd
out
jns
inc
mov
push
cmp
xchg
jns
nop
icebp
dec
call
push
pop
gs
pop
xchg
fdivp
fs
jle
pop
pop
in
stc
popf
dec
pop
fld
sbb
clc
lsl
ljmp
push
mov
iret
outsb
inc
xor
jl
daa
push
mov
add
call
push
popa
and
ss
pop
inc
stos
enter
sbb
iret
loopne
mov
fdivs
push
cld
call
aad
push
pop
ror
in
cli
adcl
jg
std
push
mov
jmp
inc
sub
leave
push
jl
imul
jp
cmp
outsb
je
loope
ds
frstor
fs
mov
dec
ret
cwtl
adc
mov
movsb
test
mov
dec
jb
aas
arpl
fwait
sahf
pop
sahf
incl
xchg
pop
mov
inc
xchg
sarl
das
arpl
idivb
pop
lea
mov
ret
jle
bnd
cli
add
and
push
mov
in
fildll
jmp
in
int
push
mov
push
push
ret
lock
mov
cwtl
testb
push
jge
mov
push
and
or
icebp
push
mov
xchg
push
or
sbb
jg
in
pop
rolb
out
sbb
inc
loope
lret
sub
das
pusha
mov
adc
outsb
fdivr
xchg
jp
test
dec
test
in
fdivr
jg
pop
pop
insb
test
xchg
push
sbb
inc
out
inc
test
insl
imulb
lret
fimull
pop
adc
mov
dec
ja
sbb
add
push
ja
adc
or
pushf
jp
cwtl
adc
shrl
cmp
xor
push
mov
pop
decl
mov
jbe
popf
stos
insl
in
sub
stos
dec
sar
inc
stos
xlat
push
dec
icebp
jg
test
mov
sti
push
push
aam
push
ljmp
pop
jnp
mov
sub
xchg
xchg
fldt
popf
or
ficompl
rolb
push
push
lret
push
jle
and
out
mov
mov
outsb
cs
popa
cmpsl
adc
mov
gs
repz
adc
std
subl
cmp
cld
cld
jmp
test
pop
xchg
outsb
pop
test
imull
cmpsl
dec
cs
jg
jns
jle
cmp
fldl
cs
rcrb
mov
testl
in
adc
xchg
cmp
insb
cld
mov
xchg
jbe
fwait
xor
gs
loop
jb
aas
jle
dec
fldenv
aas
cmp
nop
mov
add
aas
sti
aas
mov
push
cltd
call
add
cs
sti
idivb
mov
lret
daa
jecxz
xlat
fstps
lods
mov
insb
cwtl
aaa
cmp
cld
mov
int3
outsb
dec
cmp
jo
lahf
frstor
mov
push
dec
adc
lcall
aas
movsb
mov
aaa
lods
pop
jg
and
xchg
fdivrp
sbb
push
ljmp
lea
xchg
xlat
and
inc
imul
neg
jmp
mov
push
iret
push
jns
lods
inc
jle
cmp
clc
adc
and
incb
adc
and
dec
gs
xor
fs
insl
sub
ret
jmp
mov
xchg
xor
mov
mov
iret
cs
sub
xchg
cs
mov
pop
xchg
add
mov
cmp
sarb
cmp
cmp
pop
cmp
mov
add
xor
cmp
cld
incl
aas
push
aas
pop
aas
fs
push
aas
xchg
aas
fwait
aas
lret
aas
fistpll
add
inc
ljmp
jne
js
xor
xor
xor
mov
xor
cltd
xor
nop
xor
loopne
in
xor
xor
pushl
sbb
and
xor
mov
xchg
xor
xor
xor
xor
xor
xor
xor
xor
xor
lea
pushl
xor
xor
xor
xor
xor
or
in
xor
ss
add
aaa
push
aaa
data16
add
xchg
fcmovne
repnz
xor
xor
xor
xor
xor
xor
fildll
sub
mov
jmp
xor
cs
inc
or
sub
aaa
or
rcr
imul
aaa
out
xchg
cmp
fidivrl
fistpll
adc
call
cmp
fdivrs
fwait
cmp
cmp
cmp
scas
cmp
decl
add
inc
ds
movsl
ds
enter
adc
jbe
jge
xchg
aas
lcall
push
out
pusha
xchg
shrb
xor
xor
icebp
pushl
mov
mov
xor
push
xor
jne
xorb
mov
lods
xor
push
mov
xor
xor
xor
xor
cmp
cmp
xor
insb
xor
cmp
xchg
xchg
sub
pop
xor
xor
xor
push
xor
push
jg
xor
flds
xor
outsl
xor
sbb
xor
cmp
ss
add
pushl
outsl
xorl
ss
ss
add
and
sub
incl
jge
xchg
popf
aaa
movsb
aaa
scas
aaa
mov
cmp
cmp
mov
cmp
cmp
cmp
fist
cmp
dec
cmp
xchg
movsl
xchg
cmp
insb
sarb
cmp
cmp
aas
icebp
aas
enter
and
sub
ds
mov
xor
xor
cli
xor
xor
xor
xor
testb
inc
xor
mov
repz
xor
data16
fadds
xor
xor
xor
xor
jne
xchg
aaa
jnp
xor
sbb
xchg
lods
cmpsb
ss
ss
add
ss
cld
ljmp
mov
cmp
cmp
cmp
cmp
cmp
cmp
pop
cmp
cmp
decl
ljmp
stos
cmp
lea
mov
fist
dec
ds
aas
jb
jnp
cmpl
xchg
movsl
fdivl
mov
jnp
cmc
int
lret
dec
add
mov
mov
sbb
shrl
out
or
or
xor
xor
xor
xor
xor
xor
xor
cltd
pop
cmc
pop
std
or
mov
xor
xor
xor
jg
stc
addr16
xor
xor
xor
pusha
xor
lds
int3
xor
xor
xor
xor
xor
xor
mov
xor
xor
xor
xor
imul
xor
cmc
aaa
sub
mov
sub
cmp
jne
jmp
ss
mov
cmp
mov
mov
decl
out
sarl
xlat
popl
cmp
cmp
outsb
cmp
mov
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
rorl
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
sti
leave
jg
cmp
aas
cmp
push
cmp
jp
cmpl
incl
sbb
pop
ds
ds
ds
ds
ds
adc
sub
sub
dec
aas
push
aas
push
aas
pop
aas
insb
sbb
dec
aas
mov
aas
cmc
fidivr
out
pop
cld
icebp
pushl
or
or
xor
push
xor
xor
js
popf
xor
and
int3
xor
repz
xor
xor
xor
decl
xor
xor
xor
xor
xor
xor
xor
xor
insb
push
push
xor
push
jmp
sbb
sbb
xor
cmp
pushl
xor
mov
shr
or
incl
sbb
mov
mov
ss
and
aaa
xor
pop
aaa
gs
jp
pushl
xorl
aaa
xor
cmp
cmp
cmp
cmp
xor
dec
cmp
mov
cmp
cld
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
clc
aaa
and
xchg
sub
add
imul
mov
outsl
sbb
ds
cli
adc
sbb
and
xor
mov
jb
jns
xorb
xor
xor
xor
xor
xor
xor
adc
sub
xor
cmp
dec
bsr
les
xchg
popa
pop
adc
sti
xorb
xor
std
movsl
mov
xor
xor
cmp
insb
xor
js
mov
call
xor
ret
xor
xor
xchg
and
jmp
xor
xor
es
mov
test
iret
xchg
xor
or
cmp
or
lock
xor
test
add
xchg
adcl
popa
ljmp
cmp
mov
repz
pop
pop
popf
rcrl
paddd
and
jl
popf
fstps
cltd
cmp
cltd
ds
push
stos
out
aas
jne
pop
adc
fcoms
dec
adc
outsl
adc
or
xor
out
andb
add
daa
pop
and
jle
stos
xor
cmp
add
das
mov
inc
mov
int
fs
je,pn
js
data16
jmp
jge
xchg
sub
orl
push
xor
pop
jnp
or
jb
jb
inc
add
push
xor
daa
inc
stos
xchg
fbld
out
lahf
pusha
and
and
and
adc
loopne
inc
xor
push
mov
adc
pusha
adc
vpinsrw
icebp
dec
push
adc
mov
adcb
jl
adc
add
push
add
dec
ljmp
mov
xchg
pop
inc
insl
mov
or
cld
leave
pop
add
or
int
movups
or
movsl
or
inc
mov
sbb
mov
sahf
inc
andl
push
sub
stos
dec
add
jnp
mov
lds
pop
push
and
mov
jb
inc
mov
push
ja
insb
xchg
or
test
adc
aam
outsb
sub
inc
cmp
push
scas
inc
jbe
in
in
lea
jne
enter
push
sub
add
xor
cmp
jne
xor
xor
lock
flds
jne
sbb
jmp
call
jnp
int
pop
push
jne
sbb
enter
es
aaa
pxor
inc
rolb
xor
xchg
push
cld
lds
push
xchg
mov
jnp
xor
xchg
adc
and
cmp
cmp
aaa
cmp
leave
sub
mov
add
shll
xchg
mov
mov
sbb
fidiv
pop
es
mov
stos
mov
lret
fnstcw
out
pop
and
and
dec
ss
les
sbb
add
mov
in
jns
push
or
jb
insb
mov
add
divl
clc
xor
sub
sti
insb
cld
insb
jns
dec
xchg
gs
insl
insl
jae
mov
and
pop
xchg
insb
dec
dec
inc
jg
mov
test
repnz
rorb
and
loopne
mov
add
mov
lret
insl
inc
gs
dec
xor
xchg
sub
dec
cwtl
popa
insl
mov
add
gs
xor
and
push
cmc
movsb
push
add
push
adc
insl
loope
loopne
pop
inc
xor
inc
cli
cmove
jle
lea
aas
test
out
add
aaa
dec
call
add
adc
jle
call
or
jg
popa
jae
sub
lea
push
push
mulb
out
sbb
xchg
xor
mov
jns
out
jmp
lea
push
push
push
ret
or
fs
cmp
add
out
imul
outsl
and
jecxz
or
sahf
arpl
mov
fdiv
clc
jno
jnp
xchg
adc
adc
push
icebp
ficoml
mov
jle
push
or
push
ret
xor
pusha
or
push
or
int3
or
outsl
push
aas
das
or
js
pushf
adc
add
clc
adcl
test
repz
jl
aas
cwtl
and
xor
out
sub
orb
adc
or
out
pop
or
push
fsubs
xchg
add
xor
fisttpll
mov
and
and
sbb
adc
std
adc
cmp
inc
push
loope
lds
in
and
pop
mov
test
xchg
adc
mov
andb
add
orb
clc
inc
das
dec
mov
mov
push
data16
adc
push
cmp
inc
incl
idivl
fisttp
mov
mov
mov
or
addr16
repz
push
mov
repz
or
jg
push
and
cmc
mov
push
divl
or
mov
lret
mov
jb
outsl
outsb
mov
lret
jb
jae
cs
leave
js
aam
aad
insb
mov
inc
jo
popa
add
cmpsb
fwait
sub
arpl
cmp
mov
push
dec
js
scas
push
idiv
dec
stc
inc
cli
je
shl
push
sti
xor
call
and
nop
fiadd
push
call
paddsb
inc
lcall
cmp
pusha
aad
enter
xchg
loopne
movb
sub
leave
shrb
int
insb
into
shrb
shrb
loope
sub
shll
push
cmp
imul
adc
or
lds
mov
popa
aas
std
enter
int
xor
std
mov
xor
or
mov
sub
inc
std
js
push
ja
mov
aad
push
int3
add
push
or
or
int
pusha
lods
leave
mov
jnp
movsb
adc
sub
ss
in
adc
push
inc
sub
pop
pusha
es
push
insl
xor
lcall
mov
cmp
nop
cmp
je
push
push
test
cmp
sub
inc
rorb
adc
dec
fistp
push
adc
or
outsb
rorb
dec
jne
in
outsb
sbb
stc
outsl
push
add
je,pt
test
in
mov
sub
mov
jne
pushf
insb
int
je
mov
xor
test
mov
scas
or
pop
in
mov
popa
test
mov
je
jb
fdivs
push
mov
ret
sbb
mov
inc
fiaddl
aaa
lods
cmp
std
push
xor
test
mov
xor
dec
xor
pop
or
pop
push
fsubr
sbb
int
or
add
lret
sbb
mov
fs
in
mov
outsl
add
outsb
rcl
gs
xor
nop
jae
cs
or
scas
outsb
mov
lret
mov
popa
jne
arpl
es
leave
push
gs
pop
inc
ret
jno
insb
fwait
sub
jo
pop
imul
hlt
cmc
mulb
lret
mov
lret
imul
leave
mov
jb
js,pn
sub
adc
js
bound
push
adc
add
ja
jbe
je
xor
xor
mov
mov
ret
cli
adc
in
hlt
add
imul
push
movsb
mov
push
leave
jne
lea
push
repnz
rclb
cmp
cld
or
and
fwait
mov
hlt
lods
jge
movsl
cld
into
testl
je
testb
loop
mov
or
mov
lds
mov
inc
jp
xchg
mov
push
jmp
mov
jne
push
js
cmp
push
ret
outsl
ret
jle
pop
popa
mov
add
outsl
mov
push
aam
add
fdivr
push
add
push
mov
loopne
add
push
xchg
or
fwait
outsl
sbb
add
es
dec
inc
and
mov
xor
xchg
nop
data16
stos
push
xchg
add
cwtl
ret
inc
adc
push
inc
popf
mov
pop
test
ret
ljmp
xor
cmp
pushf
or
fisttpl
sete
or
pop
into
add
pop
mov
arpl
inc
add
jae
mov
jbe
or
mov
or
jo
add
adc
ret
pop
nop
mov
pop
pop
add
mov
sbb
push
iret
dec
dec
pop
or
inc
pusha
inc
adc
enter
adc
inc
in
push
dec
cmc
dec
inc
add
push
stos
adc
pmulhuw
add
rolb
cmp
outsl
test
xor
or
test
inc
and
jo
and
and
fstp
xchg
sub
inc
sahf
add
push
add
loope
mov
xor
push
fild
cmp
loope
add
shr
mov
cmp
je
rcrl
mov
cmp
fistpl
in
cmp
add
sub
jne
inc
cmp
jne
cmp
je
mov
and
rcr
cltd
outsb
inc
or
and
pop
subl
cmp
jl
add
jg
and
or
cmp
shll
add
je
rcrl
pop
mov
andb
imul
and
int
add
imull
in
add
push
lea
adc
jmp
fildll
jae
sub
mov
or
loope
add
pop
sub
push
ret
int3
cmp
inc
mov
inc
xor
xlat
cmpsl
add
sahf
std
dec
fadds
pop
inc
pop
sbb
add
dec
push
pusha
je
cmpsb
imul
dec
xor
ret
inc
dec
lcall
cs
adc
addr16
inc
add
add
add
pop
rolb
addb
mov
stos
adc
pop
lcall
dec
insl
inc
lock
jb
insb
out
pop
mov
cli
orl
dec
gs
outsl
jecxz
dec
pop
mov
cli
jae
xor
sbb
popa
fs
add
push
mov
aas
add
js
jg
outsb
xor
or
js
fwait
add
and
fdivr
in
inc
push
sub
push
push
mov
inc
shrl
xor
xchg
cmovg
inc
adc
inc
nop
clc
inc
in
add
xchg
insb
push
sbb
and
or
adc
pushf
add
std
fmull
adc
or
sub
repz
inc
pop
push
mov
inc
add
cmp
pop
pop
loopne
and
packsswb
cmp
inc
mov
sbb
inc
mov
in
adc
adc
add
daa
movsb
or
jno
mov
mov
sti
sbb
inc
or
dec
outsb
sbb
js
outsw
es
loop
or
sub
adc
adc
sbb
je
testl
mov
and
sbb
jle
add
jb
and
add
inc
pusha
jp
xchg
cs
loopne
pop
adc
add
xchg
and
into
jno
and
push
dec
adc
add
mov
dec
inc
xor
dec
mov
das
inc
fs
nop
aas
sbb
and
sbb
or
dec
jae
mov
pusha
add
insb
xor
sti
add
cwtl
xor
imul
add
js
fstps
push
mov
sbb
jne
mov
orl
pop
ss
xlat
jge
sbbb
cwtl
pop
stos
ss
imul
dec
pop
or
jo
jmp
mov
mov
mov
sti
rorl
imul
pop
or
add
jecxz
pop
push
xor
arpl
test
pop
ljmp
mov
clc
push
lods
imul
imul
xor
js
gs
push
jne
jmp
add
js
inc
push
imull
or
push
leave
adc
mov
mov
cmpsl
fs
jno
lds
adc
mov
mov
push
dec
or
mov
mov
jnp
imul
fadd
fsubrs
xorl
fisubr
outsl
pop
jns
pop
pop
sbb
or
mov
je
pop
fistpl
popw
lds
adc
shrb
cltd
stc
roll
imul
mov
sbb
add
add
orb
int
pop
add
add
add
pusha
push
aas
cltd
out
mov
insl
adc
pop
jmp
jbe
movsb
push
or
dec
mov
dec
add
out
dec
mov
jae
fistl
add
pop
jo
subb
dec
sub
mov
dec
pop
push
shrl
lret
outsl
and
ficomp
jmp
xor
jecxz
insl
scas
jmp
inc
and
xor
jae
xlat
xor
add
movsl
popa
and
inc
add
addr16
jmp
arpl
inc
imul
mov
pop
add
add
nop
mov
inc
add
push
jmp
gs
jb
cmp
fnstenv
xor
jmp
pop
lea
outsb
xchg
insb
popf
xchg
pop
iret
jge
scas
dec
or
lds
popf
outsl
add
addr16
mov
sub
pop
xor
xor
cltd
outsb
jae
inc
push
sub
push
fwait
in
mov
imul
dec
dec
imul
lods
cmc
mov
adc
push
pop
outsl
pcmpeqw
and
and
xor
inc
push
imul
and
arpl
adc
cmpsl
xchg
out
add
insl
enter
pushf
or
outsl
add
xor
icebp
dec
pop
sub
xor
inc
mov
xor
loop,pn
icebp
xor
fucomip
xor
add
xor
xor
xor
xor
xor
xor
xor
adc
xchg
ss
aaa
pop
aaa
mov
pushl
aaa
aaa
aam
aas
cmp
cmp
cmp
cmp
cmp
sarb
clc
pushl
leave
mov
cmp
pop
xor
inc
ds
ds
fildll
jle
push
leave
ds
xor
aas
ja
adc
cld
xchg
sarl
aas
aam
fwait
dec
outsl
adc
popa
push
xor
sub
bound
add
add
aas
test
adc
xchg
jmp
popa
inc
mov
test
jb
add
hlt
jl
xchg
out
popa
adc
fildl
inc
out
flds
sbbb
divl
cmp
xor
add
jns
xchg
out
and
das
inc
jle
and
pop
sub
and
push
adc
test
adc
sub
add
push
leave
pop
and
add
fimul
repnz
daa
push
or
dec
and
jl
inc
push
mov
or
lcall
xchg
and
add
imul
lcall
sahf
scas
mov
lret
cli
cs
jae
pop
ret
sub
dec
xor
pop
cmpsb
imul
pop
imul
je
pusha
addps
add
inc
sbb
movsb
pusha
push
aas
sbbb
ret
test
dec
lcall
out
and
fwait
outsl
lds
mov
adc
lcall
ds
test
mov
lods
dec
push
adc
hlt
mov
mov
movsb
pusha
stc
and
push
sub
daa
xor
pushf
add
and
sub
test
jmp
push
or
and
in
push
dec
aad
and
stc
mov
or
and
in
push
and
jb
sub
dec
sbb
mov
and
addl
and
inc
inc
outsb
mov
out
mov
sbb
fsubr
push
and
lea
cld
out
lock
mov
icebp
nop
call
jb
add
pop
hlt
pop
in
jne
lret
mov
fsubr
clc
mov
lret
inc
mov
pop
loopne
lds
mov
pop
cmpl
test
sarb
add
adcl
mov
sub
pop
lahf
andb
mov
mov
inc
enter
incb
inc
mov
xor
fs
push
pushf
fs
fsubr
add
or
jae
call
inc
scas
imul
dec
or
adc
aas
pop
cmp
loopne
sahf
cld
mov
ds
cld
mov
push
dec
push
fmulp
adc
sbb
xchg
adc
shlb
call
mov
fisttpl
xchg
lock
outsb
cmp
dec
cld
pop
cmp
pop
popa
jle
add
pop
clc
daa
mov
xchg
in
bound
inc
cmp
in
adc
cmpsb
fwait
cmp
inc
pop
and
popa
mov
mov
into
xchg
lea
shll
cli
jmp
movl
pop
cmp
xchg
loope
fbstp
inc
mov
sbb
enter
or
mov
outsb
decl
jecxz
cld
mov
dec
mov
jne
es
pushl
sub
dec
roll
popf
hlt
inc
add
sbb
test
imul
push
or
pop
das
push
add
push
pop
xchg
and
mov
and
call
sbb
clc
dec
mov
mov
sarb
mov
jle
lea
inc
inc
sub
or
scas
cmp
jne
mov
fucomi
pop
clc
inc
nop
add
fadds
fstpl
xor
mov
xor
jge
and
push
xor
lcall
mov
sbb
and
inc
push
imul
inc
sub
fs
sub
cltd
add
call
pop
or
push
push
xor
mov
call
jge
push
push
add
add
xor
insb
cmpsb
cmp
push
das
ss
or
cli
cmp
sbb
add
fcoms
lea
stos
inc
inc
pop
fstpt
sub
dec
ret
lea
pop
mov
jecxz
mov
arpl
icebp
mov
ret
xchg
mov
add
sti
in
call
add
cmp
jl
jmp
push
js
rclb
lahf
add
js
add
mov
mov
leave
push
pop
in
mov
mov
jl
fcomp
mov
out
je
sbb
dec
cmp
inc
and
cmp
les
push
xchg
fcomip
pop
mov
cmpl
push
fcmovnb
sub
push
ficoml
or
pop
mov
push
cmp
jle
fsubrs
xor
mov
push
negb
sbb
xor
inc
lcall
int3
pop
inc
sbb
inc
jle
mov
lea
and
fs
cmp
mov
aad
mov
sub
mov
sbb
push
adc
and
inc
int3
push
push
call
je
fbstp
sbb
adc
stc
clc
adc
jnp
sbb
inc
or
add
dec
lret
sahf
and
or
lahf
add
dec
mov
int
jnp
enter
pop
push
xchg
loopne
xchg
push
xchg
sbb
inc
shlb
mov
sahf
pop
jne
imul
adc
fs
fs
loopne
cs
in
sbb
sbb
aad
xlat
sbb
sbb
fcomp
fcmovu
sbb
sbb
push
sbb
sbb
loope
fcomp
cld
cmp
fdivr
idiv
decl
data16
out
xor
jo
push
sub
int
sub
xchg
out
dec
inc
sub
lcall
push
fs
sahf
mov
nop
inc
inc
rcl
sub
mov
and
fdivl
pop
push
cmc
test
lea
shlb
test
out
sbb
adc
roll
or
nop
jbe
inc
mov
jmp
mov
sbb
fsts
and
test
mov
cwtl
inc
insl
imul
or
add
es
xor
dec
rorl
add
pop
pop
int3
outsb
cwtl
subb
mov
push
popa
xor
add
adc
adc
mov
mov
and
daa
clc
setg
mov
je
or
fsubs
push
mov
push
test
stos
push
jbe
outsl
outsb
xchg
aas
enter
jae
jle
xor
fs
or
lods
push
and
mov
and
and
ja
mov
xchg
cmp
and
pop
add
and
loopne
inc
mov
xchg
testl
outsb
lahf
jb
jb
stc
pop
dec
outsb
das
mov
insb
sbb
cmp
je
outsl
insb
jae
dec
imul
add
add
cmc
stos
add
sbb
mov
push
jl
sub
add
push
into
das
xlat
or
add
enter
sub
dec
fdivs
out
daa
add
mov
sub
xchg
movb
inc
les
das
dec
xor
popf
loopne
adc
inc
aad
xor
fwait
dec
les
inc
cld
xchg
xor
xor
cld
inc
cmpl
mov
push
les
push
gs
mov
xchg
aaa
stos
aaa
cmp
dec
in
cmp
mov
cmp
cmp
decl
add
cmp
cmp
cmp
cmp
mov
cli
imul
cmp
bound
cmp
push
cmp
sahf
cmp
inc
mov
ja
sub
push
push
rolb
add
lcall
mov
movsb
cmovo
or
rolb
dec
push
add
sti
outsl
jne
arpl
xor
loopne
sti
or
fidiv
cmp
sub
add
add
jb
sub
jmp
test
push
add
add
or
add
dec
mov
xor
dec
stos
pusha
adc
lock
jge
insb
dec
mov
dec
inc
push
cmpsl
je
inc
push
and
hlt
or
repz
pop
add
push
and
arpl
mov
into
or
inc
or
popa
add
nop
adcl
push
add
or
adc
xchg
xchg
or
lock
sbb
add
sub
es
mov
xor
adc
and
mov
pop
add
lock
cmovo
mov
dec
incl
pusha
mov
lea
push
or
jmp
nop
nop
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
mov
add
addb
add
data16
add
add
push
add
add
add
add
add
pop
add
add
push
and
add
add
add
add
addb
add
inc
and
add
add
add
add
test
add
sarb
add
add
add
push
add
add
and
and
and
pop
loope
add
loope
add
and
inc
loope
add
and
dec
loope
add
loope
add
loope
add
add
add
add
into
loope
add
add
add
loope
add
add
add
push
dec
inc
dec
xor
cs
dec
dec
add
push
inc
push
dec
xor
cs
insb
add
push
inc
push
push
cs
insb
add
inc
push
xor
cs
insb
add
add
fs
imul
add
inc
gs
jb
arpl
fs
jae
add
push
imul
jb
je
arpl
inc
js
je
jb
arpl
jae
add
dec
jo
outsb
push
jb
arpl
jae
outsl
imul
add
jb
push
jae
jb
outsb
je
inc
add
add
repnz
mov
out
lea
push
push
mov
mov
xchg
out
mov
loop
int
add
add
repnz
mov
out
lea
push
push
mov
mov
es
mov
add
repnz
mov
out
lea
push
push
mov
mov
xchg
inc
mov
roll
add
pop
xchg
push
popl
add
out
call
in
sub
andb
push
push
push
push
xor
pop
lea
fcomi
stos
push
ljmp
pop
xor
jmp
mov
pop
ja
test
add
loop
mov
dec
gs
in
in
dec
mov
xor
cs
jbe
dec
mov
insb
jmp
mov
push
call
pop
mov
jg
mov
push
push
push
push
push
mov
push
push
call
mov
and
adc
clc
lea
push
add
in
and
call
jbe
adc
adc
pop
mov
or
adc
pop
pop
pop
leave
ret
add
aaa
fstpt
push
xor
push
push
push
cmp
test
je
push
jae
adc
xor
mov
add
push
push
push
or
fwait
mov
lock
add
clc
fcomps
push
pop
mov
pop
insl
movzwl
ljmp
addr16
or
or
cmp
xor
cmp
mov
in
je
push
adc
pop
or
xor
cmp
jne
hlt
jmp
push
testb
push
pop
inc
cmp
push
cmpl
sbb
push
push
or
scas
dec
mov
adc
mov
pop
cld
sub
ret
lock
ret
repz
sub
inc
scas
ja
gs
enter
clc
inc
xchg
xor
sbb
sub
cmpl
je
adc
adc
data16
add
or
push
cmp
les
dec
and
lods
jmp
pop
push
fs
popf
insl
ret
insl
negl
test
gs
into
loopne
add
outsb
cmp
daa
push
or
add
jb
jb
sub
outsl
or
addr16
popa
add
insl
cs
lret
in
and
inc
ljmp
jb
pop
in
jae
out
pop
out
inc
lock
lcall
repz
outsb
xor
imulb
cmpsb
imul
pop
push
xor
xchg
fstp
fsubr
xchg
rep
or
push
mov
pop
mov
out
jmp
pushl
adc
adc
push
mov
ror
mov
inc
inc
dec
dec
test
jne
push
pop
jmp
lahf
xor
push
push
push
inc
push
xor
push
add
add
cmpb
subl
rclb
imul
sub
push
cmp
lret
push
jbe
push
cmp
xlat
cmpl
jne
and
fs
mov
mov
push
push
adc
pop
fcmovnbe
xor
or
adc
add
dec
scas
sub
and
jb
aas
jmp
ret
pop
pop
pop
or
mov
inc
xchg
xchg
mov
out
test
push
lea
mov
sti
mov
mov
inc
jns
mov
adc
data16
popf
cs
mov
adc
xchg
adc
xor
mov
and
fcomip
arpl
and
push
call
or
das
cld
incl
push
push
xor
mov
test
je
enter
push
push
add
test
call
imul
adc
andb
xor
sbb
inc
sbbb
cli
mov
push
mov
mov
inc
inc
test
jne
pop
adc
aad
mov
cmp
xor
rcrb
repz
gs
push
add
je
movsl
pop
lcall
fstps
add
mov
or
jne
cmpsb
fwait
lahf
lods
insb
inc
or
test
add
xchg
lret
inc
add
stos
mov
ror
in
test
push
push
test
inc
pop
jecxz
or
pop
fcmovnbe
fsincos
xor
loopne
mov
push
jb
xlat
sbb
add
mov
mov
add
dec
push
mov
in
mov
std
cmp
cmpsb
test
aaa
aaa
sub
data16
xchg
xchg
jb
inc
into
loopne
xchg
jne
xchg
outsb
pushf
pushf
insb
nop
mov
fstpl
pushf
in
loope
or
int3
cld
mov
xchg
or
clc
push
jg
mov
push
push
aas
cld
and
mov
orb
mov
and
insl
adc
nop
scas
jne
push
adc
call
sbb
jae
ret
ss
test
dec
inc
push
push
push
adc
adc
fwait
or
fldt
or
adc
loopne
imul
addl
sar
fwait
sar
sbb
add
ljmp
mov
popf
jle
stc
in
in
jl
inc
or
xchg
lahf
adcl
pop
jb
cltd
fcomp
cld
xor
gs
or
pop
inc
mov
sbb
inc
ret
int3
out
lock
and
add
flds
add
or
adc
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
mov
add
addr16
jl
pusha
xor
lcall
pop
pushf
stos
mov
imul
push
pop
jbe
rcrl
xor
dec
adc
xor
jmp
adc
dec
ret
arpl
incb
pop
add
outsl
arpl
push
call
ja
push
xor
bound
push
jb
jbe
insb
gs
cld
lcall
jae
gs
xor
pop
add
push
dec
inc
inc
and
sti
fild
and
jo
push
outsl
imul
and
sbb
dec
pop
or
daa
imul
andl
cs
insb
cmp
sub
push
in
xchg
or
xchg
cmp
mov
cmpl
ljmp
push
jle
nop
add
inc
dec
mov
leave
dec
nop
cmp
dec
inc
dec
mov
inc
nop
push
xchg
dec
adc
dec
push
push
pusha
ljmp
add
add
nop
add
xor
mov
add
mov
add
add
pop
mov
int
mov
jg
push
jb
addr16
insl
and
outsb
outsb
outsl
je
bound
jb
outsb
and
pusha
mov
and
fs
xchg
sbb
push
sarl
fwait
out
mov
add
add
push
rorl
adc
push
shrb
out
push
aam
fs
mov
mov
fldt
mov
mov
daa
cld
pop
cmp
push
xchg
pop
movsl
push
rolb
imul
fiadd
stc
xchg
stos
add
dec
loopne
and
add
in
shrl
add
and
add
clc
fiadd
pop
into
pop
xchg
fisttpll
and
xor
mov
push
inc
scas
dec
dec
pop
clc
mov
mov
xor
add
add
xor
add
imull
bound
pop
mov
mulb
fwait
mov
je
mov
in
dec
clc
leave
pop
sbb
cs
push
push
pop
cld
sub
mov
add
xor
cmpsb
fnstenv
in
lock
out
pusha
add
jb
insb
outsl
arpl
sti
add
bound
push
lock
imull
stos
daa
add
mov
add
push
fldenv
fsub
hlt
stos
and
cmpsl
push
add
jle
cmpsb
imul
mov
add
xor
xchg
and
sahf
add
cmpsb
pop
add
imul
imul
imul
insb
shrl
lods
mov
mov
sub
call
sbb
clc
add
fwait
scas
xchg
add
fnstenvs
lods
adc
and
cmp
addr16
cmpsb
imul
mov
stos
xchg
add
inc
rcll
xorl
mov
or
pop
movhps
es
lods
addb
stos
xchg
add
dec
xor
cmp
jle
punpcklbw
and
dec
outsb
je
pop
sub
gs
gs
xchg
mov
fmull
sbb
push
gs
fs
sub
adc
fcos
dec
jo
outsb
push
jb
inc
adc
lahf
fildll
dec
dec
dec
dec
inc
push
and
add
add
orb
jnp
adc
movsb
imul
mov
add
push
pop
push
or
fiadd
add
sub
add
fistp
push
adc
and
mov
add
pop
mov
sbb
mov
sub
insb
ja
aas
test
fdivrs
lret
scas
or
sarl
xchg
pop
add
pushl
push
jbe
sbb
inc
mov
and
xchg
pop
or
pop
or
lret
incl
sbb
ret
xchg
and
roll
das
xor
mov
xor
ud2
push
add
outsb
stc
repz
add
ja
jae
push
packsswb
je
jne
jb
gs
inc
or
push
incl
lods
jmp
gs
add
push
inc
jb
push
and
ja
lcall
ja
or
push
mov
jae
pop
and
addr16
xor
push
sbb
call
and
pusha
pushf
movw
push
lea
jmp
repnz
mov
das
je
cs
jae
add
fimul
subl
outsb
mov
mov
je
jo
mov
jno
gs
inc
js
add
push
xchg
das
adc
jo
lahf
je
outsl
outsb
xor
add
hlt
adcl
push
xchg
pop
je
ja
jne
in
lock
and
cs
adc
add
lea
jg
aad
jnp
test
push
or
push
push
out
mov
cmp
cmp
mov
das
dec
mov
inc
cld
or
push
and
or
lea
add
or
push
or
nop
clc
out
fistpll
inc
and
sbb
clc
aas
pusha
cmp
adc
inc
dec
testl
xor
mov
orl
aaa
mov
or
mov
icebp
jb
and
cmp
pusha
clc
sub
ljmp
aaa
and
insb
popa
jne
arpl
bound
jne
pusha
inc
lea
mov
pop
ljmp
push
imul
inc
inc
inc
push
dec
inc
popa
xor
jb
neg
outsb
lahf
fisttp
cmp
cmp
pmaddwd
sub
imul
subps
arpl
jae
push
mov
arpl
into
mov
stos
pop
inc
lods
adc
add
cmp
mov
aas
add
cmp
cmp
xor
xor
add
stc
pop
stc
xchg
cmp
xor
cmp
cmp
xor
xor
xor
lret
iret
incl
xor
xor
aaa
xor
xor
sti
jbe
xor
sysenter
add
shl
mov
push
push
sbb
add
add
lahf
mov
ljmp
inc
outsl
ja
and
push
jnp
popa
outsb
jnp
inc
das
cmp
nopl
jb
leave
sbb
js
les
xchg
xchg
pop
enter
dec
mov
std
stc
lcall
pushf
fstpl
push
add
in
push
xor
jmp
push
mov
mov
pop
in
adc
bnd
adc
push
push
mov
push
mov
jne
jle
mov
rorl
call
and
in
push
push
call
dec
mov
lea
mov
sub
sub
mov
movb
inc
or
movb
or
push
js
inc
add
push
add
imul
orl
mov
jmp
mov
ret
mov
mov
rclb
or
adc
aaa
fcmovnu
out
in
cwtl
push
call
or
add
jae
insl
or
loopne
push
mov
fcmovnu
mov
es
call
xor
sbb
push
movzbl
out
out
inc
cmp
adc
out
pop
pop
jp
adc
add
mov
andb
inc
or
fisttpl
xor
aas
enter
call
pop
jl
push
fidivl
pop
mov
nop
mov
movsb
sub
pushl
cmpw
jne
mov
add
cmpl
mov
push
add
and
inc
inc
add
and
add
ds
and
mov
imul
xchg
nop
pushl
daa
xor
inc
jne
or
in
xor
cmp
je
mov
cmp
je
insl
mov
sti
or
divl
adc
pop
cmp
ja
jge
add
mov
in
xor
mov
adc
adc
mov
inc
jmp
cmp
jb
sub
je
addl
or
dec
pop
sbb
lea
nop
xor
int
adc
enter
jmp
loopne
jecxz
or
out
jmp
or
push
sub
push
jp
dec
push
mov
sti
fisttp
call
mov
cmp
jg
add
jge
push
push
push
sbb
or
mov
adc
sub
mov
dec
loop
fcmovbe
mov
push
dec
push
push
pop
sbb
call
push
or
imul
js
lods
dec
cmpl
adc
sbb
testl
push
adc
mov
lea
movsl
add
mov
movsb
mov
inc
enter
pop
mov
dec
fisttpl
iret
lock
mov
inc
lods
dec
dec
mov
mov
or
enter
rcrl
or
mov
jp
add
cwtl
jge
add
cmp
or
push
jno
jg
inc
das
pop
adc
ds
adc
cli
push
push
cmp
jbe
jne
je
mov
jmp
push
push
inc
clc
push
cs
mov
push
sub
aad
add
leave
ds
pop
xor
adc
adc
data16
mov
dec
or
pop
call
pop
lock
mov
sub
pop
mov
cltd
insb
mov
test
push
adc
xor
inc
xor
out
push
push
sbb
je
pushf
out
xor
inc
cmp
mov
pop
dec
cli
lahf
in
not
mov
or
sub
lock
sbb
divb
push
call
push
sub
sbb
cmp
add
add
mov
jo
in
and
and
sarb
loope
or
dec
lret
test
mov
push
imul
aaa
fucomi
push
adc
mov
cli
adc
sbb
mov
incl
dec
addr16
clc
jle
xor
cmp
jle
pop
call
or
jno
cmp
ja
cmp
or
cmp
je
test
shr
pop
push
mov
incl
mov
push
in
jne
cmpl
fcmovnu
jmp
incl
mov
cmp
jne
xor
cmpsb
lods
add
add
adc
jmp
andl
out
sbb
addr16
jne
jl
inc
cmp
mov
xor
fmul
jmp
notb
lock
mov
incl
lret
xlat
faddl
ja
jne
data16
repnz
loope
ja
add
or
sti
jmp
lods
mov
rorl
add
jb
jl
fcmovnb
jbe
aaa
ret
add
lock
inc
push
ja
fidivr
pop
push
cs
pop
and
jmp
xor
sti
sbbl
insb
add
xor
pop
loopne
and
mov
popf
or
call
sbb
mov
inc
sub
pop
inc
idiv
adc
mov
call
inc
jmp
andb
mov
jmp
xor
mov
add
mov
sub
and
inc
xor
adc
dec
fldl
xchg
add
jle
jl
xor
adc
adc
adc
loopne
xlat
mov
cmpsl
call
adc
cmp
cmp
or
and
pop
out
pop
faddl
imul
sbb
mov
pop
ja
xor
dec
jbe
cmpb
jne
movb
inc
incl
icebp
cmp
jb
mov
shrl
or
incb
and
andl
push
or
inc
sub
mulb
or
imul
adc
and
fadd
jbe
push
add
fildl
mov
push
cmp
jecxz
push
add
cmp
mov
adc
loopne
cmp
jae
incl
lret
shr
add
fbld
or
inc
inc
push
mov
dec
or
sub
outsl
sbb
or
rcll
or
mov
pop
mov
rorb
rolb
or
rcll
cli
push
loope
or
jne
cmp
push
xchg
dec
mov
lock
add
pop
fmuls
stos
pop
nop
xchg
outsb
fcmovne
lds
or
pop
jbe
or
fisubrl
cwtl
cmp
sti
not
and
push
jl
and
or
loopne
incb
adc
xlat
sbb
sar
mov
shl
or
mov
add
repnz
not
and
sub
mov
add
lea
insl
outsl
out
test
or
js
add
push
aam
cs
in
int
inc
fisub
fimull
add
lea
mov
out
xadd
adc
pop
inc
sub
mov
and
in
not
cmp
add
repz
sub
rorl
push
shr
or
add
dec
ljmp
jg
push
fbld
mov
mov
cmc
sbb
jmp
push
idiv
mov
push
push
movd
not
and
das
mov
mov
push
hlt
adc
jns
mov
xchg
rcr
mov
roll
into
mov
mov
sbbb
or
out
or
adc
test
mov
add
ret
inc
or
xor
or
inc
std
sbb
add
out
cmp
popa
xor
add
sbb
lret
lret
jne
les
repz
fcomp
cwtl
subb
mov
pop
or
and
not
ficomp
sahf
popa
das
pusha
adc
pop
scas
testl
sti
mov
pop
les
subb
add
imul
mov
mov
adc
sub
ret
push
fcom
add
fisubr
mov
pop
fnstcw
pop
xlat
mov
repz
nop
imul
xor
lret
ja
fmull
or
xchg
jno
pop
fndisi(8087
popf
std
stos
lods
es
add
adc
fidivr
stc
lods
mov
pop
aaa
das
push
mov
cmpsb
pop
lretw
mov
xor
cmp
or
and
or
popa
cs
adc
add
or
mov
ret
lods
mov
and
aad
aam
pop
imul
mulb
push
imul
sbb
lock
shlb
clc
jg
jge
dec
cmp
inc
rorb
cmp
or
fadds
hlt
push
fisubr
clc
jb
repz
pop
pop
or
push
repnz
sar
mov
movsb
and
imul
and
call
insl
fwait
icebp
imull
mov
lcall
call
xlat
lods
mov
inc
jnp
fdivs
push
adc
test
rorb
arpl
pop
and
sahf
pop
mov
clc
cmp
mov
clc
in
int3
cli
fnstcw
out
adc
cmp
or
add
int
lods
fidivl
and
sbb
loopne
in
lret
outsl
pop
ret
inc
enter
aaa
or
mov
mov
mov
push
fbstp
ret
fimul
xchg
imul
gs
int
push
fsubrp
mov
adc
inc
loop
or
repz
out
or
fcmovbe
fdivs
faddl
sbb
mov
aam
mov
cmc
bound
repnz
not
daa
sub
aad
flds
outsl
adc
int
movl
mov
mov
adc
mov
xor
xor
test
fstpl
cmp
sbb
test
xor
in
and
cmp
sbb
cmp
js
repnz
adc
inc
sti
xor
in
mov
repnz
or
in
mov
call
in
inc
inc
ljmp
inc
push
sbb
xchg
mov
push
adc
cltd
jb
lret
pop
sub
push
int3
pop
pop
xchg
outsl
jecxz
dec
mov
cli
xor
rcrb
mov
sti
pop
mov
jae
or
mov
mov
jle
sub
testl
mov
xor
imul
out
pop
cs
mov
mov
fidivl
cmc
je
lea
test
out
aam
xchg
jae
adc
fisubrl
fidiv
test
jle
pop
out
cmp
or
gs
push
aas
sbb
cmp
rcl
fldenv
js
jbe
les
mov
jle
ja
divl
sarb
jp
jl
pop
je
pop
push
lret
pushl
or
sti
fdivp
cmp
lods
les
pusha
imul
sti
mov
fdivs
fisub
adc
stos
rcrb
sbb
ss
shl
ret
sbb
jl
fs
loope
int3
or
inc
push
or
movsb
mov
repz
and
jns
jb
hlt
cmp
mov
or
adc
mov
xor
cmp
pop
pop
gs
sbb
outsb
fs
rcrl
gs
xchg
int3
or
push
or
ja
mov
lcall
hlt
out
call
insl
data16
unpckhps
sbb
repz
rcrl
test
sub
cmp
call
scas
dec
jle
outsl
jecxz
jp
sbb
addl
xor
sbb
dec
outsb
repz
sub
jecxz
jp
ret
add
mov
add
in
fdivl
mov
outsb
sub
cmc
jle
test
sbb
ja
mov
xor
out
in
cmpsb
gs
mov
ret
iret
fwait
aam
rcl
sub
pslld
ret
loop
pop
mov
pop
rclb
xor
mov
xor
out
xlat
stos
push
pop
cli
pop
add
pop
movsb
mov
mov
fisttp
or
pop
call
and
js
cmp
roll
xor
cmp
jp
jge
cmp
jl
js
sub
push
push
push
sbb
adc
inc
or
int3
lods
sbb
push
insb
mov
adc
xchg
mov
outsb
lea
lods
fldt
pop
inc
addr16
clc
inc
fldt
iret
jb
adc
mov
mov
push
adc
add
sbb
cmp
enter
dec
jne
xchg
imul
add
out
push
lea
je
push
rorl
add
lahf
mov
pop
mov
sub
push
cld
push
fmuls
jl
shrl
sbb
add
test
outsl
repz
add
stos
cmp
loop
aad
sbb
mov
adc
xlat
clc
call
or
insb
ficom
push
add
lods
jns
call
sub
mov
pop
cmp
sbbb
or
dec
cmp
out
or
dec
lea
test
or
lea
push
lock
pop
adc
mov
insb
fdivrs
fsts
loopne
pop
int3
rolb
aam
ljmp
lcall
dec
std
call
push
imul
or
lahf
iret
out
call
gs
das
lock
repz
bnd
hlt
gs
divl
add
mov
pushf
or
loopne
or
mov
inc
call
lds
and
lods
mov
mov
lods
fwait
pop
mov
fimul
mov
lods
cwtl
into
inc
insb
outsb
fcmovu
mov
jo
jbe
fmull
inc
push
pop
cmpsl
push
sub
inc
ds
cltd
loopne
dec
std
in
add
ds
fcomi
in
push
push
movb
in
dec
out
push
out
push
fdivrs
pop
lock
icebp
inc
repnz
mov
mov
add
rolb
xor
sahf
push
mov
push
sub
add
lret
repz
insb
pop
mov
sbb
push
sbb
and
or
add
and
inc
jae
or
mov
and
adc
or
sub
push
adcb
add
adc
pushf
nop
add
fsts
adc
mov
loope
mov
xor
test
fwait
inc
dec
imul
pop
mov
sub
push
jo
xor
les
adc
jnp
xchg
pop
push
mov
push
mov
sbb
push
dec
test
test
subl
push
jmp
mov
inc
add
mulb
insb
pop
lock
and
ja
adc
push
cmp
jo
cmpsb
test
popa
and
jae
jge
test
scas
pop
adc
adc
sbb
inc
outsb
sub
test
push
outsl
movsl
jbe
xor
dec
rolb
pusha
xlat
insl
mov
sub
add
hlt
push
jbe
xchg
insl
pop
call
mov
jmp
mov
jp
inc
inc
inc
mov
das
cmp
imull
xlat
pop
mov
enter
and
shrl
rorl
and
xchg
push
andw
insl
and
subl
lock
push
dec
cld
pop
jb
bound
lahf
push
push
movsl
adc
mov
cmp
cmp
mov
out
sub
in
jo
add
dec
dec
pop
cmp
pop
push
mov
mov
add
cmp
das
fsubrl
mov
add
xchg
push
push
int3
enter
push
mov
enter
push
aad
push
aad
pop
ret
ficompl
cwtl
cmp
mov
addl
pop
cmp
pop
cs
cld
into
dec
cmpsb
and
je
dec
xchg
inc
add
sahf
sbb
pusha
pop
jb
adc
push
inc
xor
sub
xchg
or
lea
cmp
clc
add
push
call
pop
pop
cmp
push
lcall
clc
inc
sub
cwtl
mov
pop
cld
call
je
xor
scas
push
or
jo
push
jo
fcmovbe
jnp
dec
ds
xor
cld
movl
inc
fimull
enter
pop
xchg
lock
jns
xchg
or
push
dec
or
xor
lock
cmp
je
cmp
jne
push
pop
xor
fcomip
int
call
push
fildll
mov
orl
stos
int3
test
adc
int
sbb
push
or
enter
roll
cs
mov
lock
adc
dec
hlt
ret
cmp
and
ret
adc
push
ja
inc
jmp
cmp
pusha
jle
push
mov
clc
test
xchg
in
mov
sbb
mov
mov
mov
test
test
push
and
sbb
lret
mov
nop
test
loopne
scas
mov
adc
mov
out
xchg
mov
bound
and
call
int3
push
dec
mov
stc
mov
mov
pop
xchg
sub
pushl
stos
lcall
sub
lcall
or
fwait
sti
inc
xchg
or
sti
sub
mov
fldt
pop
add
jg
std
pop
sub
not
into
xor
clc
fnstcw
mov
jl
cmp
in
fstps
xor
mov
pushf
negb
push
mov
push
sti
into
pushf
decl
int3
cmp
mov
out
pop
add
mov
adc
or
xor
cmp
je
jo
popa
scas
lea
cwtl
aaa
data16
and
std
in
outsl
cmpsb
cmp
in
sbb
pop
adc
mov
pop
xor
pop
jmp
call
push
mov
mov
mov
je
jmp
cwtl
xor
idiv
xorb
xchg
adc
jmp
dec
outsb
lods
mov
mov
cmp
ss
mov
test
shlb
lahf
push
push
arpl
push
push
pusha
stos
or
push
inc
push
jo
push
inc
inc
sbb
mov
nop
leave
lods
lods
push
lret
in
scas
insl
mov
mov
mov
mov
jb
pop
cs
mov
mov
mov
mov
mov
hlt
jb
outsb
mov
rcl
js
mov
jo
insb
aam
aad
mov
lcall
fistpl
pop
mov
xor
loopne
test
loop
jecxz
mov
mov
pop
in
push
out
dec
out
xor
insb
fwait
call
jle
jae
xor
jo
imul
sub
xor
outsb
mov
les
lds
mov
lcall
lret
cmp
scas
imul
xchg
xchg
mov
lcall
pushf
adc
jnp
mov
mov
mov
xchg
inc
mov
cmpsb
xor
mov
fwait
cmpsl
test
push
test
or
xor
clc
ds
hlt
cli
jns
inc
or
xchg
lea
dec
xor
hlt
xlat
inc
or
pop
sub
inc
lahf
cltd
pushf
adc
xor
aaa
xor
lret
pop
jmp
push
in
cmp
inc
lods
add
dec
cs
data16
idivb
in
mov
sub
in
fnstenv
lcall
cwtl
jb
mov
jne
pop
xchg
xchg
push
and
hlt
adc
cmc
adc
lea
insl
and
div
jge
jg
lea
and
sub
push
inc
jge
sti
or
popf
xchg
es
xchg
xchg
push
add
loopne
into
imul
mov
cmp
xor
xchg
pop
mov
sbb
daa
inc
inc
lds
inc
sub
jnp
scas
nop
jmp
aaa
sbb
int3
test
insb
add
sbb
mov
jns
or
aas
mov
nop
repnz
sbb
out
in
mov
addl
int3
int
cmp
push
adc
std
inc
movsl
pusha
xor
stc
push
sbb
mov
mov
pop
stos
aam
xor
fildll
fadds
addr16
push
bswap
aam
sarl
sub
je
shr
cld
xchg
push
sti
jg
inc
or
and
mov
adc
fcoms
jne
mov
scas
je
lock
pop
pop
popl
arpl
inc
add
jno
sbb
out
pusha
push
push
push
push
fnstsw
mov
lahf
push
out
jecxz
xor
or
inc
add
fdivs
and
call
adc
mov
pop
leave
ret
aad
movsl
or
inc
cld
pusha
mov
bound
push
cmc
nop
cmpl
orl
push
pop
jmp
adc
add
adcb
sbb
mov
sub
rclb
jle
jo
test
enter
and
cmp
xchg
and
int3
lods
add
std
sbb
push
cld
das
mov
lea
push
push
cmp
push
nop
out
jae
push
call
push
sbb
cmp
stos
insl
add
sbb
sbb
add
adc
es
sub
xchg
and
push
js
std
pusha
and
xlat
jmp
push
add
scas
and
add
ret
xchg
cld
call
sti
pop
jp
in
andl
call
jo
rcr
fsubrl
xchg
jl
add
adc
mov
ret
dec
pop
ret
mov
xchg
sarb
mov
pop
ret
subl
gs
into
jp
imul
insb
popa
push
dec
push
imul
das
fsubs
ja
fldt
imul
imul
lcall
cld
int
insb
mov
insl
jle
lcall
mov
xchg
dec
je
mov
mov
lcall
mov
xor
pop
push
outsb
push
fs
mov
xor
enter
mov
mov
pop
lret
in
out
mov
pop
cs
jmp
mov
pop
inc
jb
icebp
ret
and
repnz
jo
jb
inc
mov
inc
pusha
push
js
mov
js
addr16
cwtl
push
push
cmp
xchg
test
mov
mov
pop
push
imull
ret
pop
xchg
pop
push
hlt
add
xor
xor
test
mov
mov
mov
lock
negl
add
add
lcall
lret
test
call
shrl
ja
jne
bnd
fwait
cmpsb
imul
insb
je
daa
mov
in
leave
insb
cmp
rcrl
addr16
movsb
mov
insl
pop
mov
inc
loopne
jb
add
mov
stc
sbb
mov
addr16
xor
mov
mov
inc
lret
fsubrl
sub
shl
xor
pushf
or
es
sub
jp
enter
push
inc
mov
andb
dec
push
pushf
ljmp
in
xchg
xchg
clc
lock
cmp
mov
fldl
or
ret
imul
mov
popa
xchg
clc
inc
lods
sbb
outsb
test
cmp
mov
pop
sub
sub
push
pop
push
adc
and
push
or
jne
out
sub
or
and
subl
test
push
sbb
es
out
mov
xor
mov
and
jae
mov
mov
mov
lcall
jae
mov
mov
pop
mov
mov
adc
mov
lcall
enter
pop
ss
lret
int3
int
das
cmpsb
imul
cmpsb
jmp
rcll
aam
aad
xlat
aaa
fdivrs
mov
mov
xor
cmpsb
imul
fnstsw
jae
loop
mov
shl
in
xor
out
xlat
insb
fwait
cmpsb
call
jmp
daa
imul
out
out
fs
es
jae
repnz
lcall
sarb
cmp
cltd
mov
notb
idivl
loop
repnz
rolb
adc
push
jo
je
cltd
pop
cld
or
push
arpl
lock
clc
sbb
xchg
sbb
nop
scas
call
and
mov
fisub
inc
sbb
cmp
loopne
mov
icebp
cmp
sub
pop
pop
inc
testl
ljmp
outsb
push
gs
sbb
cmp
and
aam
mov
lahf
daa
aas
pop
lahf
pop
call
xchg
or
insb
adc
sbb
addr16
dec
jge
fistpll
push
mov
js
pop
cli
push
rclb
or
call
cwtl
shrb
xorb
add
and
add
or
and
es
outsl
and
mov
mov
sbb
jo
sbb
jmp
les
out
jbe
fistpl
push
inc
mov
mov
mov
rcrb
divl
cmpsb
jne
adc
add
xor
push
cld
push
sbb
fucomi
sahf
dec
call
push
loop
das
jb
adc
xchg
lret
scas
push
and
les
prefetch
xchg
sbb
movsb
mov
mov
mov
add
rcr
aad
push
rol
mov
jmp
ss
mov
and
xchg
popa
add
jb
adc
jge
nop
and
pop
je
ret
sbb
jbe
mov
sbb
repnz
aad
push
mov
push
push
lret
out
and
mov
mov
mov
dec
mov
not
add
or
mov
setno
cmp
push
xchg
jmp
outsb
out
mov
lcall
cltd
push
idivl
lret
xor
xchg
pushf
push
push
xor
subl
and
add
inc
xor
dec
in
add
call
lret
jae
arpl
gs
inc
jp
mov
ret
inc
sbb
push
inc
sub
decb
sub
test
pushf
xchg
push
xchg
fnstcw
jns
jge
adc
xor
sti
mov
push
jmp
in
pushf
pushf
fwait
xor
mov
mov
inc
in
pop
push
fdivrs
xchg
adc
mov
mov
pushf
adc
push
jmp
mov
cmc
mov
cmp
cmc
pop
decl
sbb
pop
pushf
pop
sbb
dec
decl
jmp
dec
sbb
pusha
jg
int3
or
addr16
ror
sbb
jmp
hlt
jns
or
mov
or
call
ss
call
insb
jg
xor
arpl
push
insl
aas
push
stc
lea
add
sub
clc
lahf
mov
call
cld
add
scas
sbb
lods
clc
fwait
adc
sub
jle
call
mov
rolb
rol
dec
mov
add
mov
loope
push
in
jge
xchg
lea
jmp
repz
ret
sbb
stc
jmp
jecxz
dec
pop
add
rol
sub
clc
push
jge
arpl
add
add
push
shr
jg
mov
je
data16
dec
data16
push
mov
push
pop
or
push
add
xchg
mov
sub
sbb
aas
std
cld
adc
add
xor
popf
cld
add
loop
enter
add
xchg
fsubr
stos
xchg
js
jnp
add
lea
xlat
ds
adc
in
dec
test
add
mov
in
inc
pop
push
lods
or
out
repnz
cli
sub
and
sbb
hlt
pop
mov
jge
xor
or
jmp
pop
xor
add
pop
jbe
cmc
sti
sub
sti
jnp
push
or
xchg
jl
pusha
rcrb
mov
lds
popf
packsswb
int3
negl
cmp
jg
adc
jp
xchg
outsb
adc
and
in
outsb
adc
push
rolb
nop
pushf
fucomi
jge
mov
or
or
add
sub
sahf
and
nop
mov
fdivr
mov
inc
cmp
jl
iret
fnop
ret
jmp
or
call
ds
mov
fdivl
decl
jge
or
gs
fdivl
mov
repnz
sbb
dec
ret
mov
shrb
mov
stc
and
popf
loope
fdivr
rcl
add
pop
subl
add
imul
fnstcw
pop
sarb
je
push
adc
lods
mov
push
pop
pop
or
popf
call
jg
push
dec
fdivrs
fidiv
dec
push
sub
insb
arpl
cmp
and
xchg
imul
and
sub
push
aam
in
sbb
push
je
fiaddl
sub
xor
add
xor
lds
ret
jl
pop
push
movlps
add
pop
inc
cmp
sbb
int3
enter
popa
mov
or
clc
mov
stos
or
add
mov
lret
int3
rcl
fcomp
in
xor
dec
push
cmp
int3
sub
xor
fist
mov
xchg
stos
inc
les
fcoms
lcall
adc
sub
adc
adc
fcmovb
adc
mov
mov
pop
mov
jge
sbb
push
test
insl
iret
sar
inc
jl
das
dec
pop
cmp
pop
adc
inc
lock
or
repz
mov
mov
cltd
mov
or
das
addr16
cmp
and
mov
nop
xor
add
dec
mov
add
xor
movsl
dec
xchg
test
sbb
inc
mov
fcoms
or
in
cs
add
sub
out
add
push
xor
push
ds
gs
xchg
gs
dec
dec
dec
inc
xchg
gs
xchg
push
cs
insb
test
and
fsubrl
test
imul
jb
cmpsb
imul
imul
push
idivl
mov
lret
je
dec
jo
lret
mov
lret
push
gs
gs
fnsave
inc
xchg
xchg
imul
ds
lcall
pushf
inc
popf
sahf
lahf
mov
mov
js
movsl
cmpsb
xor
push
xchg
dec
je
jo
adc
dec
lea
push
jmp
gs
pop
xchg
gs
jae
inc
daa
lret
mov
inc
dec
outsb
je
lret
mov
daa
gs
je
outsl
sub
mov
outsb
outsb
arpl
lock
call
mov
xor
or
xchg
in
faddl
fisub
cmp
fnop
add
jg
add
std
or
jne
add
or
mov
int
ficom
dec
addr16
pop
rol
sub
inc
hlt
int3
add
push
sub
pop
repz
push
je
mov
jmp
add
push
pop
pop
pop
bound
fwait
stos
sti
je
push
lfs
add
jns
lea
fildll
je
ret
movsl
sti
in
push
inc
je
sbb
xor
repz
fnop
negb
roll
pushf
add
push
sbbb
push
jne
pop
cs
lock
daa
ror
mov
xchg
inc
add
test
add
orb
xor
call
adc
fbstp
mov
les
aas
sub
lret
lsl
sub
lea
pop
mov
push
and
lret
sub
jbe
adc
sarl
or
sbb
test
lret
mov
or
adc
cld
je
push
jo
icebp
jne
sahf
addr16
pop
cmc
and
mov
hlt
push
in
add
sub
push
sti
sbb
jge
add
cmp
jmp
js
je
or
inc
ret
divl
rolb
jbe
pop
or
mov
popa
es
pop
xor
mov
jle
jmp
xor
daa
clc
out
test
movsb
push
shrb
call
stos
cmpl
arpl
out
gs
ficom
sahf
mov
xor
aas
push
lcall
je
repnz
je
repz
jo
dec
xor
jae
jne
in
push
shll
fmull
and
add
or
fwait
mov
lret
jb
loopne
sub
add
out
ds
cld
cmp
jb
icebp
in
enter
or
jbe
jl
xorl
sub
or
xchg
test
fcomps
incl
sub
clc
pop
or
ret
add
je
xchg
pop
pop
mov
push
and
or
sub
xchg
out
push
jle
mov
int
adc
pop
pop
fimul
add
je
sbb
je
pop
pop
pop
pop
or
jle
adc
adc
add
xchg
call
xor
and
int3
mov
aas
push
ljmp
add
sbbb
add
jns
add
sti
in
rclb
or
std
add
pop
call
dec
aas
ret
gs
xchg
xchg
popa
je
outsl
outsb
gs
pop
xchg
cmp
insb
shrl
lcall
clc
stc
and
cld
xchg
sbb
mov
insb
cwtl
cmp
std
je
ljmp
push
lds
adc
ret
aas
sub
xlat
lahf
xchg
sub
add
scas
and
jae
adc
jle
or
pop
fs
xchg
sub
or
cwtl
cmp
push
push
or
cld
pop
mov
push
pop
push
pop
push
das
mov
cs
out
aad
cmp
add
test
mov
add
sub
mov
ljmp
and
daa
adc
adc
dec
push
mov
loopne
inc
mov
cmp
mov
sbb
adc
daa
add
mov
add
fmuls
cmp
xlat
je
fisttp
ficoml
es
jne
outsl
loope
and
mov
aam
pop
jno
sub
xor
out
pop
and
cltd
nop
add
add
aas
popa
arpl
xor
sub
mov
outsl
outsb
xor
xor
cmp
cmp
je
fsubs
mov
xchg
lods
fs
popa
arpl
pop
xchg
imul
pop
xchg
arpl
je
outsl
fstl
jne
shrb
mov
add
sub
jb
imul
mov
push
loopne
loope
jns
push
in
out
adc
or
pop
mov
pop
sub
pop
xchg
cmpsb
imul
or
sbb
or
aad
aaa
andb
or
add
mov
sbb
mov
std
lods
push
adc
mov
xchg
mov
clc
stos
clc
inc
jecxz
dec
and
notl
mov
call
sti
or
xlat
fnsave
imul
es
lcall
xchg
mov
fdivr
xor
cmp
inc
xchg
xor
add
das
clc
stc
sti
popa
dec
sar
sti
cld
negb
cmp
cmp
mov
cld
sarl
test
or
mov
xlat
imull
jb
lret
fs
or
xlat
or
xchg
fdivl
and
xchg
stc
sbb
mov
ds
je
lds
jle
mov
jns
mov
sbb
push
incl
iret
sbb
jmp
push
insl
adc
jle
dec
or
push
rcl
mov
mov
fsubl
fcmovnb
pop
jb
shlb
leave
adcl
sub
lock
jl
icebp
jmp
call
lods
call
adc
add
xlat
pop
call
dec
mov
push
vhsubpd
inc
ret
clc
jmpw
popf
cmp
daa
and
xor
sbb
inc
loope
loopne
aaa
mov
fisubrl
in
and
push
sbb
out
imul
push
mov
lret
insl
bound
jne
fstps
dec
pop
aad
cs
or
xor
push
jo
cmc
mov
cwtl
adc
mov
inc
inc
std
jg
inc
jbe
xchg
cld
in
mov
cmp
insb
out
jns
lcall
imul
clc
push
jns
mov
ficompl
cmc
sbb
mov
xor
mov
aas
jo
xor
inc
and
sbb
jne
ret
push
insl
and
inc
cmp
jb
popl
xor
popa
movq
mov
icebp
ljmp
movsl
cwtl
movsb
dec
adc
mov
or
xor
mov
outsb
daa
cs
fs
xor
jb
arpl
jb
xor
arpl
outsl
and
add
insl
jne
sarb
fs
js
lock
mov
sub
dec
je
push
push
pop
lahf
pop
call
sub
cs
mov
pop
xor
lea
and
pusha
cmpb
or
add
and
shlb
mov
sub
outsl
sub
iret
sub
xor
inc
lods
std
push
push
rclb
imull
nop
dec
cmp
xchg
popa
mov
loopne
pop
nop
loope
xchg
and
push
push
sub
lods
and
add
loop
pop
push
mov
push
mov
jno
gs
inc
dec
mov
cmp
sbb
orl
xchg
and
inc
loopne
in
mov
jb
hlt
sbb
outsb
add
add
jb
add
and
inc
clc
add
add
imul
push
insb
jo
jo
push
mov
insb
insb
test
pop
add
lret
leave
popa
je
xchg
add
dec
rorl
outsw
pop
sbb
mov
lock
and
movzbl
fs
inc
push
xchg
xchg
xchg
js
push
sbb
pop
mov
das
sbbb
push
dec
inc
and
xchg
or
enter
les
out
push
xchg
and
sbb
pop
adc
push
rcrb
movsb
imul
add
lcall
dec
xlat
push
pop
hlt
dec
je
dec
xor
bound
push
inc
and
and
fistl
je
js
insb
bound
lea
ja
mov
inc
subl
hlt
test
cmp
sub
lahf
xor
out
cs
call
inc
out
incl
mov
ret
mov
enter
inc
and
jno
pop
jo
or
enter
cmp
lock
inc
xor
imul
in
jge
nop
in
out
sbb
mov
in
add
mov
int
cmp
jns
jae
xor
andl
imul
cmp
mov
shll
push
popa
jb
adc
inc
inc
push
mov
mov
pushf
in
std
in
mov
js
enter
in
lcall
popa
arpl
cmpsb
imul
imul
imul
mov
imul
cmpsb
imul
scas
mov
incb
stos
sbb
xor
insb
sbb
cmp
das
xor
add
dec
xorl
cmpsl
jb
xor
xlat
jne
jne
bound
xor
jae
xor
arpl
xor
mov
insl
cmp
dec
xor
cmp
ret
int
mov
nop
add
cs
sbb
pop
pop
outsl
push
cltd
sahf
pop
dec
repnz
xor
add
pop
call
push
shll
mov
sub
add
sub
repnz
in
int3
enter
add
adc
push
mov
stos
pop
jno
ja
scas
fsubs
notl
mov
out
pop
mov
inc
or
loopne
mov
cmp
mov
rcrb
or
push
mov
cmpsl
cmp
mov
mov
dec
sbb
and
aas
mov
mov
push
lea
or
mov
popf
mov
sub
das
push
iret
mov
call
call
lahf
inc
pop
dec
cmpl
inc
test
jbe
add
outsl
and
dec
aam
ds
lahf
mov
mov
mov
repnz
xor
inc
fistpll
shll
mov
push
or
cli
add
xor
decb
adc
das
and
pop
push
push
pextrw
int
or
or
call
cld
std
adc
xchg
adc
mov
cmc
insb
cltd
adc
mov
mov
fwait
sub
or
add
enter
mov
xchg
int3
mov
xchg
pop
mov
ficomp
fwait
mov
fisttpll
test
popl
xchg
pop
xor
add
inc
outsl
sub
leave
pop
mov
push
mov
add
xor
xchg
int
ja
insb
push
jl
xchg
xor
mov
insb
ffreep
sub
push
add
call
push
addl
test
mov
pusha
inc
outsl
jle
mov
mov
and
cs
fstps
push
ds
lcall
sbb
push
sbb
daa
add
add
pusha
inc
scas
mov
mov
or
inc
xchg
sub
mov
data16
cmp
adc
push
or
mov
cmp
ret
push
mov
and
rclb
out
and
push
mov
call
jp
aas
push
ss
push
ret
mov
push
sub
rolb
xor
pop
sub
push
pop
adc
or
mov
jmp
inc
insb
sbb
cld
and
icebp
pop
add
aaa
xor
je
clc
jae
loopne
roll
add
mov
sub
repnz
add
data16
inc
std
imul
mov
cmp
dec
shrl
jae
mov
xchg
mov
arpl
inc
cmp
adc
stos
fldl
mov
movsl
dec
ret
bound
lods
and
aas
repz
adc
pushl
pushl
outsb
or
arpl
divl
mov
mov
mov
or
mov
out
lock
lcall
jle
cmp
or
jmp
cmp
mov
scas
lret
insl
cmp
mov
outsl
ret
jbe
stos
fsts
fdivrs
pop
jns
insb
push
push
call
push
jns
ds
call
sahf
adc
dec
jne
mov
xor
xchg
pushf
and
rcll
adc
icebp
inc
push
push
sbb
cmpl
and
adc
sbb
or
jecxz
push
pop
mov
or
dec
and
insl
dec
push
ds
das
sub
out
push
add
and
cwtl
test
pop
add
std
sbb
repnz
xchg
sarb
add
test
or
add
dec
push
push
lock
jne
mov
push
aaa
fninit
sub
aam
cmp
inc
cmp
jne
push
stc
pop
ja
lock
fisttpl
push
lea
enter
scas
pop
out
addl
mov
jl
insb
add
sbb
pop
adc
test
lahf
mov
pop
pop
aaa
shr
and
popa
fcom
jmp
cmc
mov
aaa
push
ss
stos
sub
mov
push
push
imul
sbb
adc
aas
or
jns
adc
aaa
and
xor
int
push
add
lret
cld
sub
cmp
adc
out
js
push
lret
or
movsl
mov
mov
cmp
jl
add
jg
das
or
or
cmpsl
sbb
mov
mov
aaa
jg
inc
inc
cwtl
jl
jns
push
push
sbb
push
outsb
add
das
ja
call
js
sub
pop
ja
mov
adc
loopne
add
sbb
sbb
add
pop
aad
adc
adc
or
xor
repz
sbb
or
cmp
mov
mov
xchg
xor
pop
xor
negb
lret
mov
lret
dec
imul
mov
dec
outsb
jne
inc
add
mov
push
lret
mov
sub
xor
cmp
mov
pop
stos
aad
dec
imul
outsl
std
pop
inc
dec
xor
arpl
popa
je
fs
out
xor
lcall
dec
imul
outsl
pop
push
mov
cmc
movsl
divb
idiv
xchg
stc
fldenv
sti
cld
jb
pop
dec
xchg
gs
dec
bound
xchg
sub
imul
imul
xchg
push
orl
rcll
mov
lcallw
mov
mov
or
xchg
insb
and
in
mov
jne
pop
out
add
lret
mov
lds
xchg
daa
pop
and
pop
nop
add
push
loope
clc
rolb
mov
mov
movsb
sbb
stos
mov
mov
mov
adc
mov
rcr
jnp
pop
into
mov
mov
in
movsb
adc
mov
xor
and
lock
push
aaa
xlat
test
adc
mov
or
add
rolb
adc
jb
negl
fistpl
rcrl
mov
xchg
addr16
adc
call
stos
rcrb
add
orb
adc
dec
in
push
jae
fwait
mov
in
std
push
or
icebp
mov
sahf
push
push
div
clc
push
out
outsb
lcall
jmp
push
jle
jl
jl
or
mov
mov
int
add
ficom
mov
xchg
xchg
pop
jo
mov
mov
inc
mov
shlb
sbb
adc
rcr
mov
add
fldenv
mov
sub
insb
fistpl
sbb
sub
add
add
lods
push
xor
adc
xor
lds
mov
imul
pop
push
xchg
adc
enter
add
cmp
std
add
push
cld
pop
lds
cmpl
lahf
add
jle
add
jo
jle
aam
outsb
jo
cmp
cmp
sbb
pop
jb
insb
add
testl
dec
or
imul
push
aam
adc
fcoml
icebp
ret
or
fisttp
mov
inc
jb
push
add
lea
xchg
lcall
out
or
sub
jmp
pop
add
or
mov
jmp
sahf
gs
call
jno
mov
das
push
mov
ret
mov
lahf
out
data16
mov
adc
adc
andl
or
jmp
jle
movzwl
das
adc
jne
daa
add
add
test
inc
call
je
cmp
jne
mov
fadds
adc
movsl
mov
mov
lar
data16
lock
cmpsl
mov
movsl
jae
push
sub
add
adc
pop
mov
lea
ljmp
inc
inc
cmp
jl
add
jmp
arpl
push
mov
push
repz
stos
push
jno
push
push
fildl
fldenv
push
add
jbe
add
adc
iret
jb
xchg
test
je
and
mov
pushl
add
push
imul
clc
loopne
push
push
cmp
mov
and
out
or
inc
push
mov
cltd
int3
inc
scas
mov
das
mov
data16
scas
les
lods
push
mov
call
fcmovne
jbe
lahf
inc
aaa
pushl
lcall
and
cmp
pop
jae
rcrb
sbb
mov
sub
jns
cmpsl
cs
cld
nop
or
dec
push
into
push
popa
fdivs
jge
inc
rolb
mov
xchg
inc
cmp
testb
je
fidivl
push
mov
sub
shr
or
adc
push
gs
xor
inc
sub
adc
mull
push
or
outsb
enter
lods
jno
data16
adc
mov
mov
lods
andb
and
push
popl
and
dec
iret
sarl
push
dec
nop
sbb
stos
mov
adcl
mov
in
fs
and
jl
nop
gs
xchg
xchg
in
outsl
gs
cmpsb
mov
fs
or
cmpsb
imul
lods
push
gs
adc
push
xchg
push
das
or
loopne
jbe
iret
jns
pop
add
sub
adc
and
pushf
add
fwait
loopne
call
add
xlat
push
repnz
in
add
adc
add
add
adc
and
inc
cmpsb
in
lcall
test
add
pop
push
les
mov
push
cwtl
cli
fwait
or
ror
sbb
shlb
inc
and
add
xor
jbe
and
stos
idivl
clc
sbb
insl
dec
cld
push
mov
push
fisttp
sbb
sub
push
push
jno
cmp
call
sbb
jl
sbb
push
cmp
or
inc
jo
push
adc
pop
pop
adc
sub
push
loope
mov
jo
mov
aaa
jge
aam
push
pusha
insb
inc
loope
or
pop
add
mov
out
push
jecxz
fwait
add
int
dec
inc
out
test
test
aaa
mov
scas
dec
cmc
jmp
fwait
sti
inc
faddl
scas
mov
iret
lea
les
add
lock
pop
mov
insb
cltd
fcomp
mov
inc
inc
ret
je
cmp
ds
je
xlat
push
mov
daa
pop
adc
jmp
mov
pop
push
add
jle
push
fsubs
mov
or
pop
subb
pop
stos
sbb
ds
push
push
call
adc
fisubl
mov
jo
cmp
sbbl
sbb
bound
cmp
jl
rcrb
push
cli
movsb
and
adc
push
jmp
sbb
les
add
sbb
stos
fisub
pcmpgtb
dec
out
ds
adc
shrb
outsl
fstps
imul
movsl
addr16
in
in
add
out
jb
outsb
cmpsb
push
pop
loopne
jae
std
ja
dec
aaa
loop
jcxz
push
jne
popf
push
int
cltd
in
ds
jb
xchg
popa
data16
gs
xor
gs
xor
aad
xchg
gs
cs
pop
rcll
std
push
faddl
or
cmp
cld
andl
sub
hlt
xor
cmp
cmp
cwtl
lods
addl
pop
xlat
push
mov
das
or
subb
cwtl
adc
into
push
cltd
or
cmp
es
mov
push
pusha
ds
fsubs
mov
call
inc
add
xor
pushf
lea
push
pushaw
or
mov
and
inc
sti
jle
push
test
cmp
pop
jns
js
je
mov
cmp
or
movsl
fildl
adc
add
add
andl
gs
or
push
mov
add
call
add
inc
addl
insb
enterw
in
leave
std
roll
mov
jmp
sbb
xor
enter
sbb
mov
bsf
and
push
jns
dec
shrb
fsubrs
arpl
sti
jge
push
jo
mov
xchg
mov
cld
mov
xor
fnstsw
rcrb
movsb
test
movsb
imul
jmp
inc
pop
inc
push
inc
cmp
je
mov
out
push
jne
fmull
xchg
xchg
andl
add
dec
mov
aaa
or
add
int3
fs
xor
sub
xor
add
cmp
fist
dec
xor
jl
mov
mov
pop
int3
enter
movb
inc
inc
inc
inc
in
fcom
loopne
adc
gs
xlat
pop
xor
cmpsb
adc
mov
pop
mov
mov
daa
pop
stos
adc
test
movsl
or
dec
jae
movsl
xor
enter
xor
les
stos
rorb
mov
add
xor
test
inc
mov
call
jne
jb
outsb
je
jb
arpl
ljmp
jb
adc
gs
outsl
outsl
insb
push
xor
popa
insl
out
jg
jo
push
add
jb
jne
insb
and
insl
mov
adc
jo
adc
ret
mov
insb
andb
inc
fs
out
dec
sub
imul
push
add
fiadd
cwtl
add
je
gs
fldt
fistpl
cmovbe
outsl
arpl
or
jp
push
stos
std
mov
adc
dec
outsl
fs
adc
lods
sub
imull
ljmp
xchg
add
fs
push
pop
dec
div
je
inc
jns
add
or
and
or
dec
ss
add
or
or
test
inc
fildl
gs
nop
pop
popa
imul
jb
outsb
and
push
push
mov
fldl
push
gs
outsl
pop
push
sub
gs
sbb
lods
inc
sbb
shrl
sahf
aad
push
jo
inc
push
cmpsl
imul
cmp
or
lret
fsubr
data16
push
das
push
add
cmp
pop
lcall
jae
mov
popa
push
inc
jne
add
stos
dec
gs
outsl
imul
test
jns
insb
or
mov
jle
imul
pop
cmp
inc
add
jns
fucomip
imul
inc
stc
nop
loope
out
aas
imul
jb
bt
jno
cmp
push
insb
mov
subl
adc
push
jae
jbe
test
in
jne
fwait
popw
mov
stos
push
out
addl
fcmovnb
test
insb
jae
arpl
push
outsb
push
arpl
push
lock
inc
dec
inc
push
dec
inc
outsl
and
add
jo
je
aaa
push
movsl
mov
mov
outsl
ja
add
out
js
mov
dec
gs
mov
popa
xor
adc
pop
cmp
dec
std
inc
pop
pop
ss
gs
dec
jae
mov
xchg
jae
out
add
mov
mov
aad
jecxz
jbe
and
push
push
mov
push
cmp
ss
pop
or
inc
loope
adc
inc
in
movl
insb
arpl
int3
scas
out
mov
and
jb
insl
and
ficom
and
xchg
mov
lcall
and
lea
inc
dec
mov
add
mov
test
sub
leave
lods
add
jne
pop
or
jne
add
or
inc
inc
push
inc
push
push
or
lods
or
inc
jecxz
or
xchg
or
sahf
xor
mov
lret
pop
fdivl
cmp
mov
clc
pushf
or
std
push
xor
pop
add
pop
adc
insl
jmp
dec
xchg
popa
push
sbb
pusha
lods
cld
mov
xor
outsb
insb
jns
mov
adc
pop
test
lea
cmp
mov
and
xor
pop
push
add
dec
loope
jae
mov
xor
nopl
sbb
xchg
ja
sti
and
and
test
or
out
jnp
adc
outsb
sub
or
loope
clc
pusha
in
pop
jbe
add
ss
mov
ret
cmp
ret
sti
add
cmp
dec
mov
aad
loope
ss
imul
pop
imul
addr16
ja
jae
nop
rclb
sbb
out
insl
test
push
push
addl
xor
mov
mov
fcoml
jbe
jmp
sbb
dec
jg
clc
sarb
push
dec
and
sub
popa
xlat
inc
addr16
mov
bts
jmp
fstpl
call
fcmovnbe
ja
or
stos
cmp
call
mov
push
mov
push
push
jmp
and
iret
adc
inc
cmp
lret
adc
iret
in
and
lret
sbb
add
or
bound
dec
jb
fnstenv
addb
insb
add
xor
jge
fistl
fwait
xor
add
orb
inc
or
dec
xchg
push
add
and
lar
jb
jecxz
lods
mov
call
pop
clc
into
push
inc
sbb
out
mov
sub
pop
fsubrp
pop
xchg
mov
fild
incl
cs
push
add
push
andb
fldenv
sbb
rcl
fstpl
adc
pushl
sahf
xor
pop
ja
push
shlb
or
xor
jl
dec
inc
rcrb
push
popf
jae
movsl
push
cld
mov
les
add
push
mov
adc
inc
call
int
xchg
fwait
lahf
dec
fistl
shr
lahf
frstor
inc
shll
inc
aaa
dec
hlt
in
sahf
ljmp
dec
fstp
add
aam
xchg
cld
or
mov
mov
cli
pop
xchg
mov
jmp
dec
cmpsl
mov
pop
sub
out
test
out
shlb
xor
aas
push
leave
cmp
cmc
adc
xchg
dec
daa
sbb
cmpsl
cmpsl
rep
pop
clc
push
call
in
idivl
movsb
icebp
add
pshufw
mov
cmpsb
out
jb
adc
in
mov
and
rolb
push
fild
dec
rcrl
cmp
rcl
mov
sbb
add
dec
outsb
das
dec
ljmp
mov
aad
sub
ds
imul
sbb
lsl
aas
mov
mov
add
jg
xchg
movsb
in
jbe
outsl
mov
out
adc
sbb
psadbw
sub
fldcw
sub
jg
inc
fst
call
fistp
pushl
dec
fistl
out
jle
mov
incl
addr16
in
pop
jmp
out
mov
imul
fwait
ss
fisub
xchg
or
dec
add
popa
ret
int
xor
pop
mov
fidivr
xlat
push
jg
neg
cmp
sub
fdivrp
mov
xlat
pop
push
ret
loope
in
repz
out
xlat
jo
out
mov
loopew
fsubp
xor
jecxz
pop
out
mov
das
fiaddl
sbb
push
mov
js
rcll
cmp
mov
fidivr
mov
push
push
js
mov
ja
pop
fsubr
mov
das
daa
mov
popa
ss
fsubp
mov
mov
dec
addr16
ja
cmp
push
aas
lahf
push
out
mov
xchg
aaa
mov
pop
rcrl
fnop
cmpsl
push
or
ljmp
mov
jnp
sbb
imul
push
out
sbb
incl
clc
out
mov
cmc
bts
cmp
shr
fist
mov
fcomps
or
lcall
sbb
sub
test
call
mov
mov
movl
or
mov
call
inc
and
adc
ret
sub
lahf
mov
adc
push
call
jl
mov
push
cmc
mov
xor
add
fmuls
inc
jno
cmp
cmp
mov
xchg
pop
pop
sub
cs
not
xchg
loop
aas
rolb
outsl
or
mov
cmp
cmc
clc
dec
adc
stc
mov
rorb
inc
mov
adc
dec
inc
lea
xor
in
mov
mov
rolb
call
outsb
jnp
mov
and
mov
fistpll
inc
dec
inc
adc
add
data16
sti
inc
roll
pop
bt
rcr
sub
lret
stc
pop
dec
inc
arpl
or
cmc
test
test
test
negb
je
lds
pop
pushf
sub
inc
lea
call
mov
sbb
inc
sub
and
flds
add
fucomp
popa
sti
cmp
test
adc
enter
pop
call
cmp
cmpsb
jbe
bt
mov
add
inc
pop
adc
lods
push
mov
mov
sbb
xchg
vandnps
in
enter
cltd
sub
jo
neg
mov
int
cld
rolw
mov
add
jmp
outsb
in
xlat
out
popf
outsl
lahf
pop
mov
adc
mov
jg
jo
es
mov
pushf
mov
dec
adc
jb
jg
ja
shl
bt
and
adc
mov
inc
clc
or
adc
pusha
sbb
mov
adc
or
out
orl
jle
inc
call
enter
xchg
push
mov
push
adc
jecxz
loop
push
shr
pushf
jmp
not
sar
inc
sbb
or
faddl
call
aas
adc
shr
jmp
cmpsb
aaa
mov
cmc
mov
movsl
call
enter
jg
test
fwait
aaa
cld
cmc
sub
adc
shrl
jp
ja
outsb
mov
mov
jl
add
cmp
pop
sub
push
xor
jmp
enter
aam
jns
push
repnz
and
ds
dec
shl
dec
mov
out
pop
dec
push
dec
add
xor
fs
dec
scas
mov
pop
repz
or
clc
push
push
popf
jnp
fnstsw
and
loop
insb
mov
push
in
add
push
lret
in
cli
pop
stc
jmp
cmpsl
pop
add
push
inc
rorb
sbb
aaa
ss
aad
jno
movsl
aaa
mov
push
and
shll
nop
jp
mov
cld
sar
daa
push
cmc
pusha
not
jmp
fadd
aad
loopne
sbb
sti
clc
cmc
cltd
sbb
inc
or
scas
andl
inc
jmp
xor
cmp
test
fistpll
cmc
push
and
xor
or
add
or
jge
jne
xchg
or
push
mov
jge
add
bound
inc
push
add
inc
mov
inc
mov
and
ja
xor
jb
mov
mov
sahf
ror
test
cmc
call
jle
lcall
and
in
insb
lret
cmpsb
cmp
cmc
and
or
jl
out
je
or
push
shll
push
jo
jb
inc
mov
out
arpl
fistpll
add
inc
adcb
add
xor
popf
or
pop
addr16
xchg
daa
cwtl
add
call
mov
dec
and
and
xchg
ljmp
mov
cmp
sbb
pop
sub
jmp
inc
imul
add
cmpsb
ljmp
sub
or
std
inc
xor
lock
ror
sete
push
fisubr
inc
aaa
outsl
repnz
jp
test
inc
fildl
cmp
cmp
test
cmc
pushf
mov
fimul
mov
push
pop
jp
rcll
cltd
pop
cmp
ret
rcr
icebp
ret
call
push
pop
call
lcall
pop
js
aaa
add
mov
aad
lods
mov
notl
jbe
mov
call
daa
mov
cmp
or
rolb
call
je
jmp
add
inc
out
pop
pop
fcoml
and
lcall
pop
mov
les
jg
stc
mov
jmp
pop
mov
clc
jmp
add
mov
jnp
in
lahf
daa
scas
and
pop
es
and
imul
ret
mov
jle
les
sbb
aad
jecxz
pushf
and
add
ret
jae
cwtl
pushf
clc
push
add
cmp
mov
mov
pusha
mov
xor
icebp
mov
mov
xor
rcl
push
cmp
std
rcr
js
mov
and
push
jg
push
arpl
push
sub
xor
imul
clc
mov
jge
mov
or
cltd
adc
jg
fadds
pushf
pop
mov
popa
inc
dec
icebp
jmp
imul
bswap
pushf
pop
js
lods
div
mov
inc
or
push
xchg
shr
sbb
test
mov
xchg
add
or
or
mov
bswap
lea
sub
push
cmp
lahf
mov
add
or
or
scas
lret
clc
pushf
call
adc
adc
das
rorl
cltd
ret
ljmp
cmp
adc
loope
addr16
in
pop
ja
or
push
or
inc
or
std
sti
pop
pop
out
xchg
shlb
xchg
bound
out
andl
inc
mov
or
shl
add
pop
dec
fsubl
leave
push
pop
pop
andb
sbb
cli
call
pop
mov
cli
jns
add
fucomi
pop
icebp
pop
into
imul
ret
idiv
cwtl
call
lock
and
fdivrs
sub
lock
push
sub
and
outsb
jg
insb
lock
or
std
sub
xchg
stc
push
call
xor
xchg
and
stc
lea
enter
cmp
lock
push
adc
sar
push
mov
jg
cmc
sbb
sbb
clc
add
stc
mov
mov
adc
adc
cltd
fidivrl
mov
xchg
jle
inc
bswap
ror
pushl
adc
std
xor
out
jl
jno
and
add
leave
sbb
lret
out
pop
mov
sub
shrl
popa
sub
or
mov
mov
jecxz
shrb
or
mov
fisttp
pop
jb
add
add
cmp
inc
sti
rcl
leave
cmp
cmc
mov
repz
loopne
fistpl
lock
cld
push
je
faddl
mov
shll
les
ret
out
sbb
incb
insl
fisttpll
lahf
cmp
and
xor
adc
loope
call
aam
ror
sub
and
fucomp
push
stc
mov
or
sbb
pushf
push
aaa
push
mov
push
ret
rolb
mov
outsb
ret
xor
jmp
push
mov
lods
fwait
mov
jmp
repz
imul
and
div
ret
add
loop
pop
ret
or
fldl
aaa
adc
push
cli
ficom
test
loopew
popa
lds
mov
push
data16
lcall
jns
sub
imul
aaa
push
clc
and
movsl
push
xchg
stos
shrb
leave
jge
aaa
or
gs
in
jp
xchg
not
not
mov
leave
or
ljmp
pop
sti
cli
push
jnp
call
pop
call
clc
hlt
cli
mov
call
add
sub
sbb
mov
ret
add
rcll
in
stc
pushf
test
xchg
or
mov
mov
ja
addr16
mov
aam
loope
call
int3
mov
jbe
mov
repz
mov
loop
iret
insl
and
or
dec
pop
rorb
xlat
les
pop
push
test
call
call
jmp
rcrb
add
push
test
clc
ret
lahf
into
add
rcl
pop
jb
pop
sbb
fs
cmpsl
int
icebp
test
and
movsl
outsl
cmp
mov
into
shr
pop
clc
loopne
mov
pop
stc
loop
jmp
mov
movl
gs
xor
insb
push
and
jl
push
shrb
jecxz
hlt
sarl
rcl
and
lahf
jbe
rol
and
jle
pusha
clc
lahf
jmp
mov
std
dec
cld
push
sbb
mov
les
cld
lds
int3
mov
or
call
add
fldl
outsb
jnp
leave
dec
flds
sub
inc
ja
cmp
das
add
inc
nop
jnp
sbb
pop
pushf
pushf
inc
test
out
pop
test
sub
loop
movsl
dec
mov
xor
jp
leave
rcll
mov
pop
ret
shll
sbb
lods
lock
inc
aad
push
test
das
popa
popa
sbb
ficom
xor
sti
std
cmp
int
fsubrs
dec
jne
sub
push
push
jb
jo
popa
call
and
xchg
ljmp
imul
and
ror
dec
mov
mov
cld
rcr
jecxz
js
pop
scas
lret
xchg
push
xlat
outsb
ret
push
ja
out
sbb
xchg
rcl
pop
jmp
les
test
jo
mov
or
pop
dec
jmp
sbb
das
and
xchg
test
jg
out
fiaddl
addb
aad
loopne
enter
xor
xchg
fidivrl
setne
sbb
mov
dec
clc
dec
sbb
rol
xor
mov
cli
jb
add
scas
jmp
int
pop
cld
ja
push
ljmp
lock
cmp
pop
std
ljmp
dec
pushf
cld
pusha
rep
xor
neg
jge
pop
add
pop
lds
test
mov
sbb
daa
mov
nop
stc
pop
xor
push
fbld
mov
cmp
sbb
add
jae
pusha
sub
or
popf
bswap
mov
inc
dec
outsb
test
mov
push
and
pop
add
ljmp
ja
lods
out
in
cld
xchg
push
xor
call
stc
dec
je
ret
pushf
pusha
call
cld
inc
fdivrs
fstl
test
mov
and
fisubrl
mov
aaa
push
cwtl
testb
cmp
mov
mov
jmp
push
jb
lcall
fnop
push
loopne
iret
sub
push
data16
mov
loope
std
pusha
pop
pop
pop
inc
add
or
push
andl
idivl
inc
stos
jge
incl
fucomp
sahf
ds
call
jmp
jbe
cmc
jecxz
loop
or
out
add
test
iret
lea
movsb
roll
jnp
dec
je
cmp
xchg
cltd
cmp
insl
mov
rorb
int
inc
push
mov
icebp
mov
add
inc
insl
add
jbe
xor
jecxz
cld
push
lock
test
ja
not
ror
shr
xor
mov
pop
call
loope
fcomps
jmp
adc
lahf
into
dec
ret
imul
adc
pop
cmp
pop
loope
push
add
jmp
sbb
in
iret
sub
clc
gs
push
outsb
inc
out
pop
movsl
jle
cwtl
xchg
push
sti
hlt
xchg
or
pop
subb
sub
adc
dec
cmp
fisubr
ret
xor
push
in
push
jmp
rcrl
call
adc
fbstp
mov
mov
and
inc
mov
std
push
ss
sbbb
mov
pop
xor
push
dec
ds
add
stos
push
shlb
mov
aam
dec
mov
repz
imul
inc
jecxz
dec
out
push
int3
fadds
xchg
cmp
js
xchg
repnz
cmp
add
add
jne
mov
rolb
repnz
insl
sub
sbb
cmpsl
cwtl
inc
enter
es
clc
sub
pop
add
das
xchg
jae
jg
loope
push
push
pushf
lods
movsl
shl
jo
add
stos
adc
ret
lret
xchg
hlt
pop
jo
and
cmp
push
cmc
mov
icebp
pushf
adc
std
mov
in
push
scas
in
clc
push
pushf
xorl
adc
je
sbb
std
rorb
aaa
ret
je
notb
addr16
sbb
sbb
stc
popa
and
cli
out
sbb
sbb
dec
dec
inc
test
or
dec
cwtl
add
mov
sti
daa
aaa
add
dec
lcall
push
ljmp
mov
call
adc
sets
arpl
repz
sbb
push
fistp
mov
les
jbe
rclb
push
or
test
push
xor
xchg
xchg
cwtl
pusha
pop
cmp
std
shl
sbb
sbbb
mov
ja
popf
hlt
imul
sbb
mov
in
pop
test
scas
lret
loopne
push
ret
mov
push
outsl
sbb
call
movsb
push
push
add
dec
test
pusha
fistl
add
add
lock
icebp
push
cmp
pop
pushf
fiadd
cmp
adc
inc
pop
add
mov
icebp
mov
or
push
call
stos
mov
in
sti
dec
pop
lret
cmp
push
clc
adc
fdiv
push
lret
test
flds
rol
push
call
push
dec
jl
adc
arpl
sbb
and
xor
push
cmp
sbb
int
dec
pop
jo
out
out
mov
mov
inc
push
jmp
stc
je
ljmp
or
jno
lcall
movsl
cmpsl
mov
or
xor
xor
lods
faddl
push
xor
ljmp
pop
jmp
xlat
pusha
loope
push
mov
jbe
dec
ss
lret
cmp
sub
es
pop
push
sub
xor
call
mov
inc
test
add
enter
adc
pop
add
popa
call
jns
cmp
rcrb
lds
cld
gs
aas
test
sbb
lcall
dec
mov
push
aas
scas
dec
stos
jl
cmp
repnz
test
mov
jg
fistp
jmp
je
out
sbb
scas
pop
cli
pandn
add
sarl
js
rolb
sbb
loopne,pn
jmp
out
mov
fstl
jbe
ret
in
xchg
inc
icebp
cltd
inc
insl
sbb
das
sahf
mov
pop
ds
add
pushl
mov
add
mov
nop
xchg
add
adc
fisttp
dec
or
cmp
out
jne
movsb
fs
xchg
xlat
xchg
sahf
frstor
xor
call
scas
xor
mov
xchg
out
aaa
loope
jb
les
ret
aad
or
xchg
data16
call
inc
or
adc
and
jge
aad
sub
dec
xchg
mov
imul
mov
xchg
mov
cltd
inc
cs
scas
pop
fistpl
and
sbb
xchg
movsl
in
cmp
arpl
push
mov
dec
cmp
sub
dec
or
push
jle
lahf
cs
xchg
mov
sar
int
call
jo
lret
or
fimul
gs
outsb
mov
xor
std
out
mov
push
repnz
int
cltd
add
jmp
mov
test
sub
into
mov
in
mov
call
stos
roll
das
faddl
pop
mov
es
adc
aam
push
pop
dec
adc
sti
adc
push
cld
lcall
sub
call
sbb
andb
xlat
rorb
and
faddp
mov
in
push
inc
notb
stos
scas
in
in
adc
js
jae
dec
mov
mov
imul
mov
mov
nop
cmp
xchg
insb
inc
iret
cld
stos
pop
xchg
pop
std
fistpll
xchg
int3
cmp
mov
addr16
add
ljmp
sti
or
lea
ds
data16
das
lcall
outsl
flds
sub
shl
rorl
mov
jle
xor
or
mov
iret
sbb
xlat
mov
and
cmp
cs
decl
sbb
aad
lds
mov
inc
sbbb
lods
cmp
cmp
stos
fdivs
pop
inc
test
pop
jecxz
outsb
call
adcl
stc
or
dec
jmp
inc
in
lcall
adc
out
scas
mov
int3
jle
iret
xor
add
adc
decl
fnsave
add
inc
jnp
repnz
jno
insb
push
push
test
shrb
enter
mov
stc
and
jns
xor
push
pop
cld
shll
mov
hlt
xor
xor
jbe
sbb
mov
inc
mov
xchg
test
cmp
dec
xchg
pop
aaa
and
das
ret
outsb
xor
std
and
iret
mov
incl
xor
imul
cs
aaa
rcrl
ja
mov
mov
mov
pop
int3
xor
xchg
loopne
mov
mov
or
push
xor
test
jne
es
xchg
js
sahf
mov
nop
cmp
dec
adc
dec
mov
aam
cli
movsl
dec
negl
jae
shr
ret
aad
xchg
fdivrp
inc
xchg
sbb
add
adc
sub
or
xchg
ret
sbb
add
mov
fldlg2
lods
cs
jg
inc
or
mov
jae
stos
cwtl
mov
jmp
jle
xlat
sti
push
out
incl
xchg
add
adc
insb
xchg
rclb
popa
jge
jle
or
out
dec
jns
std
in
call
push
movsl
dec
daa
push
xor
stos
and
ljmp
sbb
push
sbb
lahf
sbb
andl
jp
push
sub
fs
cs
jg
xlat
mov
mov
lods
ret
lret
xor
xor
aad
push
jge
pop
das
ds
ljmp
pop
add
xlat
add
and
dec
xchg
mov
jecxz
call
jne
push
rcl
out
xlat
clc
dec
les
jmp
imul
das
jge
mov
sub
nop
lods
clc
pusha
iret
pop
int
incl
jp
push
jnp
fistpl
cmpsl
andb
push
mov
cmp
pop
rorb
mov
test
xchg
cld
ljmp
mov
or
pop
inc
out
test
cli
addr16
inc
sub
xchg
pop
enter
out
pushf
call
add
mov
in
push
mov
xchg
shrb
scas
jg
out
loop
outsb
mov
adcl
jo
int3
mov
pop
inc
lods
push
mov
or
leave
dec
and
outsb
faddl
push
jl
dec
xchg
fnstenv
std
mov
call
push
in
insl
js
dec
rolb
inc
mov
dec
scas
gs
cs
push
cld
data16
fcompl
add
inc
mov
lret
add
add
decl
or
sub
cmp
pop
mov
dec
rcr
decl
test
inc
popf
mov
fmul
dec
cmp
roll
scas
sbb
clc
incl
add
or
sbb
dec
lret
or
mov
mov
inc
lock
inc
mov
insw
test
jbe
movsl
jnp
lods
out
inc
dec
jne
pop
cld
jmp
cmp
cmc
adc
inc
stos
or
mov
sbb
das
push
mov
aad
in
sbb
out
jmp
icebp
fild
or
and
push
xor
jnp
in
nop
inc
pop
movsl
sahf
dec
insb
push
incl
mov
pop
enter
sti
mov
into
sahf
leave
repz
pop
and
jg,pt
mov
push
es
ficoml
lods
mov
ljmp
or
xchg
loopne
out
mov
mov
jmp
icebp
jmp
add
inc
xor
push
mov
jne
jge
and
call
cmpsl
out
loopne
and
js
repnz
adc
pushf
addb
int3
leave
mov
sbb
call
xchg
decb
int3
ss
outsl
fnstsw
cltd
movb
aam
and
std
cmpsl
dec
cli
mov
mov
inc
scas
xchg
pusha
sbb
sarl
jecxz
sbb
out
stos
enter
mov
sti
cld
out
inc
movsb
or
inc
inc
push
cmc
mov
or
pop
repnz
cmp
pop
sub
test
std
push
sbb
and
ss
or
jl
outsl
lock
add
xchg
add
push
jae
loope
call
into
loop
jle
xor
push
mov
cli
dec
paddsb
dec
and
cmp
out
jbe
or
shrl
sbb
out
pop
bound
movsb
pop
test
aas
daa
movsl
add
lahf
daa
mov
loop
sbb
test
lods
popf
pop
call
inc
inc
repnz
mov
mov
jb
sti
incl
mov
idiv
jo
mov
adc
jg
dec
pop
push
jl
xchg
jnp
push
call
mov
xor
adc
daa
mov
jg
jne
lods
xchg
add
popf
xchg
sub
adc
sub
lock
adc
test
jno
scas
das
popa
idivl
cwtl
cmp
jg
outsl
cmp
faddl
adc
xchg
fsubr
mov
rcrl
jne
pop
or
or
xchg
aad
test
jo
inc
outsl
sbb
fdivr
das
hlt
pop
fs
jae
imul
mov
jg
push
push
adc
cmp
mov
dec
inc
sub
dec
mov
mov
mul
dec
cmp
push
jle
aaa
sub
repz
xchg
pushl
sub
mov
out
gs
stos
fwait
inc
out
sbb
out
push
mov
pop
pop
loopne
rcll
xchg
les
in
std
inc
mov
test
mov
loop
and
or
shrl
push
push
ret
jns
dec
mov
test
inc
leave
push
ucomiss
popf
iret
fmuls
xchg
push
pushf
mov
cmp
push
mov
stos
sbb
pushf
push
pop
or
xchg
sbb
in
hlt
aaa
push
push
loope
fcmovb
pop
push
push
sbb
xor
in
adc
aad
cld
psubb
xchg
push
xlat
push
pushf
adc
movsl
lcall
xchg
pusha
das
scas
sbb
add
std
scas
inc
inc
in
ficompl
pop
jl
outsl
std
incl
ret
sbb
or
xor
lcall
fisttp
jns
repz
call
icebp
mov
sub
ljmp
icebp
add
lcall
xorl
sub
and
rcll
call
jle
int
and
fisubrl
push
push
ja
mov
sub
inc
jmp
adc
cmp
fadd
mov
enter
outsl
call
data16
lret
cli
ljmp
xchg
pop
movsb
xchg
loopne
pop
or
stc
mov
dec
inc
mov
add
pop
scas
aas
cmp
and
outsl
call
and
xchg
fs
or
sub
sti
lahf
push
and
inc
outsb
pop
clc
mov
mov
std
mov
mov
shlb
sub
pop
sub
add
push
adc
or
add
mov
mov
scas
jno
nop
dec
dec
xchg
hlt
mov
push
cmp
jg
xchg
cmp
xorb
xchg
inc
pop
mov
pop
inc
in
sub
orb
inc
nop
mov
mov
incb
mov
gs
and
mov
sub
ret
aam
pop
loop
rcrb
scas
ja
in
mov
inc
leave
lret
decl
lea
mov
jl
push
das
push
mov
mov
enter
ror
adc
sti
es
mov
outsl
mov
push
rorl
mov
cmc
mov
stc
mov
ret
movsb
into
mov
mov
or
sar
ljmp
mull
xor
xchg
mov
adc
dec
std
stos
imulb
mov
movsl
lods
and
nop
stc
fst
and
and
mov
jle
dec
leave
leave
in
fwait
jg
jl
stos
pop
pop
scas
fcompl
call
xor
nop
aad
cmp
mov
xor
sbb
xchg
in
sub
enter
fist
fcmovnb
or
lcall
push
mov
jo
pop
inc
mov
mov
outsb
ja
xchg
shr
mov
sbb
fnop
pushl
push
inc
lods
loope
out
ja
stc
out
sbb
ljmp
vfnmadd231ss
inc
dec
ljmp
jg
lock
hlt
lea
and
ljmp
sub
sub
dec
pop
cmp
adc
std
movsl
incb
fs
mov
jbe
mov
lcall
mov
jo
xchg
mov
push
pop
sbb
stos
jp
and
sbb
xchg
outsl
icebp
mov
test
push
lretw
pop
ficompl
in
ljmp
cmpsl
fsubr
mov
xor
mov
rorb
mov
test
call
test
sbbl
out
cmp
pop
icebp
xchg
incb
adc
mov
jge
pushf
call
jmp
mov
and
fwait
cmpsb
in
loope
or
sbb
ror
imul
inc
inc
jb
dec
div
mov
fiaddl
pop
test
das
outsl
popf
or
pop
xor
jg
mov
jae
lahf
mov
scas
sbb
test
xor
cld
idiv
inc
mov
icebp
cmp
pop
aam
dec
xor
inc
xor
cs
add
ljmp
xchg
sub
cmc
dec
lods
pop
dec
cmp
xchg
push
cmp
jg
mov
sub
lds
jns
leave
xor
inc
call
xor
or
push
add
pushf
loopne
jmp
xor
mov
cs
mov
pop
sarb
push
repz
jb
in
xor
loopne
pop
mov
sbb
mov
into
popf
sub
test
mov
idivl
push
pop
jecxz
std
fstl
das
pusha
push
add
loope
in
or
stc
adc
xchg
mov
xchg
lret
xchg
ret
cmpsl
addl
or
mov
scas
aas
lock
xor
pop
add
jge
push
add
mov
sbb
xchg
push
add
mov
mov
cld
push
decl
mov
mov
dec
cmp
push
cmc
fistpll
lods
mov
rclb
xor
mov
sarl
or
mov
ja
cmpsl
mov
fadds
test
mov
mov
dec
arpl
jmp
jl
aaa
push
std
psubw
mov
jg
subl
rcll
out
pusha
insb
jb
sbb
pusha
ret
pop
or
or
outsb
mov
or
pop
xchg
sub
cltd
mov
inc
aam
mov
loope
and
mov
call
sub
jl
cmpl
fsubs
bound
popf
lea
pushf
mov
xchg
pop
and
mov
and
mov
push
add
insl
add
pop
clc
pushl
ret
out
xor
scas
leave
pop
adc
or
les
mov
dec
test
in
test
fiaddl
mov
cmpsb
out
jecxz
xor
or
fstl
mov
pop
inc
xor
fcmovnu
jle
jae
out
fcomps
lahf
mov
xor
std
add
ss
pop
add
cli
jmp
pusha
and
mov
push
rcrl
or
cld
mov
jmp
fisubr
sahf
sbb
in
sbb
add
pop
add
call
xor
mov
scas
pop
lds
into
pop
xor
cmp
jl
fucomip
loope
mov
mov
fistl
jnp
es
cli
sub
aaa
pusha
daa
sbb
dec
jno
jg
pop
pop
repz
or
fs
mov
xor
cwtl
in
jl
mov
sti
jle
ljmp
xor
jns
xchg
test
pop
mov
xchg
inc
xchg
jp
out
push
mov
sub
ficompl
jp
movsl
xchg
loope
fstpt
out
mov
ja
adc
xor
xchg
out
add
mov
mov
pop
add
pop
mov
push
xchg
and
xchg
push
lock
imul
push
jg
fdivl
push
add
sbb
or
fldl
cwtl
pop
add
aaa
cli
ret
or
mov
jl
dec
stc
xchg
cmpsb
lock
das
xor
movsb
test
adc
fs
jg
sub
call
enter
xchg
nopl
hlt
xchg
jg
push
cltd
and
pop
cmpsb
push
jge
std
test
pop
in
cmp
xor
push
add
and
dec
ja
adc
arpl
or
das
sbb
jecxz
push
subl
jns
mov
mov
mov
loope
sub
lret
add
loopne
sub
add
mov
and
pop
and
decl
das
pusha
sbb
fwait
sub
movsb
mov
cmp
nop
jnp
inc
sub
xor
mov
incl
lahf
push
lea
mov
or
mov
adc
mov
std
sub
cld
sub
lahf
dec
stos
iret
mov
test
mov
and
mov
pop
push
jbe
dec
fcmove
mov
hlt
repnz
cmp
xchg
loope
ja
cmpsl
xor
sbb
adc
call
xor
xor
lods
xchg
jmp
leave
or
ret
ljmp
je
stos
test
cli
test
je
iret
std
sub
mov
dec
loop
mov
add
sti
ret
lods
pop
jge
lds
xor
xlat
out
ljmp
stc
aad
dec
sub
fisubr
sbb
ret
mov
and
mov
xor
vsubps
cld
imul
outsb
call
sbb
add
imull
cmpsb
or
sbb
inc
cmpb
pop
adc
cmp
test
push
cmp
addr16
fldcw
call
in
sub
sbb
movb
scas
ja
push
data16
jno
mov
mov
add
out
int
and
add
cmp
mov
and
push
data16
mov
jecxz
push
mov
push
push
push
push
icebp
addr16
mov
cmp
test
push
ret
push
call
pushf
cld
ficompl
ja
dec
inc
clc
movsl
sub
dec
mov
mov
ret
mov
mov
pop
mov
outsb
rclb
xchg
sahf
int3
ljmp
ret
jns
pop
daa
adc
rorb
mov
scas
pop
hlt
out
out
call
movsb
in
jns
stos
gs
cwtl
mov
add
loopne
shrd
sub
repnz
dec
mov
repnz
jg
push
ljmp
fisttp
cmp
mov
call
and
dec
jge
push
dec
jne
xor
testb
aam
ljmp
int3
mov
clc
mov
lcall
fimul
mov
in
pop
inc
out
sbb
jbe
mov
incl
adc
inc
sbb
push
xor
arpl
push
inc
inc
cmp
mov
sarl
arpl
hlt
call
rclb
test
jb
inc
icebp
fild
mov
jge
xchg
push
sti
movsl
outsl
std
mov
pusha
add
repnz
hlt
and
sbb
mov
jle
jo
or
out
and
jae
sbb
sarl
std
mov
cmpb
pop
ret
lret
xor
mov
in
movsl
dec
icebp
pop
adc
push
incl
inc
jb
dec
js
jl
cmc
and
jp
mov
pusha
jmp
punpcklbw
outsb
ds
sbb
sbb
decl
sub
ja
into
cmp
dec
jp
ss
jle
nop
iret
ret
ret
jns
pop
pop
in
xchg
xchg
int3
lea
in
mov
push
int3
mov
mov
cs
mov
lahf
cs
out
xchg
ds
jg
mov
out
rclb
and
xlat
inc
stos
lret
clc
and
cs
lods
mov
lahf
lods
call
sbb
or
cmp
arpl
cmpsl
les
insl
std
call
mov
jae
xchg
xchg
dec
or
pop
fistl
fisttpl
idivl
arpl
aam
out
das
sbb
mov
jmp
in
cmp
jmp
outsl
or
jge
cmc
pop
dec
mov
data16
mov
outsl
mov
mov
ret
shrb
adc
sub
mov
lcall
adc
adc
test
daa
mov
shll
mov
cwtl
fldt
fimull
inc
or
jmp
dec
inc
dec
lods
ret
jmp
daa
add
inc
fwait
push
fcmovnu
les
dec
nop
adc
insl
xchg
shr
imul
lock
sar
lcall
dec
mov
mov
xchg
ret
cs
lret
inc
test
jbe
int
push
repnz
lods
les
add
push
call
inc
test
jmp
call
out
mov
stos
nop
adc
add
mov
lcall
test
jne
mov
cli
cmpb
add
das
hlt
pop
mov
mov
scas
in
sub
dec
mov
mov
lcall
xor
add
xchg
into
idivl
call
icebp
cmp
ljmp
cmp
xchg
jl
rolb
fucomip
ljmp
rcr
lods
mov
xchg
test
in
dec
aaa
movsb
mov
inc
incl
dec
pop
pop
or
cmp
setae
sub
shr
add
stos
out
aaa
fwait
cmp
fld
xor
or
addr16
mov
repnz
clc
inc
mov
push
jmp
dec
dec
adc
push
mov
daa
adc
dec
push
xchg
add
and
stc
sbb
push
or
jae
mov
fwait
jle
xchg
or
shll
push
jmp
mov
dec
sub
test
jg
fstpt
dec
js
mov
popa
imul
call
mov
bound
or
ja
decl
cld
jecxz
int3
mov
lods
lcall
and
icebp
pop
leave
xor
je
and
and
cmpsb
add
jecxz
pushf
push
jns
xlat
mov
clc
fiadd
je
adc
add
call
leave
insl
data16
push
ret
insb
push
inc
ja
std
mov
push
subl
ljmp
scas
pushf
mov
jnp
jmp
jmp
mov
dec
mov
pop
inc
xor
push
scas
cmpsb
cli
test
pop
aas
jmp
imul
lock
ret
inc
je
int3
cli
and
aad
mov
aam
bound
jns
jb
in
and
ljmp
loopne
stc
out
sahf
pop
in
mov
or
mov
cmpsl
pushf
test
sub
mov
sarb
pop
xchg
fldl
stos
divb
insl
ret
pushf
movsb
jmp
add
loope
shlb
mov
hlt
and
mov
in
cs
cltd
add
and
lcall
scas
mov
call
sub
rorl
clc
loop
push
mov
jno
push
and
and
fs
mov
lds
test
fsubl
adc
aad
pop
or
push
mov
xchg
jge
mov
test
shlb
mov
imul
sbb
xchg
push
cwtl
jecxz
mov
and
test
out
pushf
xor
wrmsr
out
lods
mov
inc
adc
sbb
adc
xor
push
icebp
les
pop
jbe
sbb
mov
insb
pop
inc
scas
inc
adc
ja
jecxz
stos
sti
push
or
adc
mov
pusha
std
lcall
incl
popa
mov
mov
out
cmovo
fwait
xchg
scas
sbb
in
mov
pop
sbbl
cmp
mov
les
fucomp
out
pop
inc
scas
hlt
pushl
adc
mov
adc
xchg
shlb
ja
movsw
adc
push
lcall
sub
call
mov
jg
xchg
mov
jno
add
jae
adc
xchg
mov
or
outsl
mov
xchg
std
jmp
icebp
sbb
or
les
jg
ret
sbb
jbe
jbe
inc
ljmp
mov
pusha
cmp
add
sub
in
jae
popf
ret
fldt
outsb
cld
outsl
sub
sbb
lods
pop
testl
movsl
pop
clc
pop
mov
mov
cmc
inc
lcall
sbb
push
jecxz
cmp
push
mov
out
push
sbb
inc
paddusw
push
mov
cmpsb
xchg
and
inc
fnstsw
mov
test
mov
xchg
rcrl
push
sti
movsb
push
jnp
jecxz
lret
or
fbstp
lds
jg
jg
or
test
pop
jle
fildll
xchg
cli
in
fimull
clc
out
or
jnp
pusha
cmpsl
fsubrp
test
hlt
jecxz
outsb
test
push
inc
decb
mov
and
and
xchg
pusha
cmpsb
cmc
xlat
inc
mov
dec
mov
dec
pushf
xchg
mov
out
mov
fist
sub
mov
pusha
repz
push
pushf
mov
fildl
std
jg
inc
jno
mov
pop
xor
jae
mov
mov
dec
loop
mov
mov
mov
ret
scas
cltd
lods
pop
das
jo
or
shl
push
aas
pop
push
sahf
outsb
sarb
xor
fadds
ljmp
lea
scas
push
push
xor
decl
mov
mov
mov
mov
jmp
call
add
pop
inc
jbe
sbb
sarb
pop
mov
adc
outsl
xor
scas
mov
push
jg
pushl
loope
xchg
inc
aaa
inc
sbb
and
repnz
pop
rcrl
mov
andb
addl
fwait
cmp
and
mov
out
fwait
mov
fimull
cmpsb
fwait
inc
mov
cwtl
das
add
pusha
or
mov
hlt
inc
jg
iret
xchg
cltd
mov
or
jg
ljmp
pop
dec
hlt
cmpsb
sub
dec
nop
rorb
daa
push
jae
mov
stos
cmc
inc
sub
xor
loop
subl
in
rcrl
cld
or
pop
xchg
push
inc
mov
mov
stc
fmull
sbb
jl
test
ret
dec
xor
call
push
cltd
call
rorb
popf
xchg
mov
call
jle
fidiv
fisubl
subl
and
decl
lock
cltd
adc
cwtl
jl
dec
mov
xlat
pop
loop
inc
xlat
inc
aas
sub
push
cmp
mov
xchg
mov
jle
sti
sbb
pop
cmp
adc
popa
inc
push
std
and
call
xor
mov
sub
les
std
stos
lret
xchg
mov
je
lret
jne
enter
jg
jne
les
pushl
add
es
add
jp
aad
xor
lret
mov
mov
icebp
cmc
and
stos
pop
fs
cli
call
ljmp
xor
add
xor
std
lcall
mov
repnz
cwtl
fs
xchg
shlb
out
mov
sub
std
xlat
insl
xlat
push
or
xor
in
pop
lcall
push
int3
jp
inc
xor
scas
fidivrl
arpl
imulb
sarl
movsl
ss
bound
or
rol
xor
les
cmc
les
call
sbb
insl
jbe
push
jno
pop
sbb
fsubr
mov
add
adc
fwait
mov
dec
mov
inc
add
xchg
mov
add
pop
jp
or
jle
shr
sub
repz
inc
decl
push
inc
push
sub
test
push
push
test
cli
push
jno
into
sbb
sbb
ret
lcall
push
push
ss
imul
repz
ret
cli
xor
dec
loopne
fucom
pushl
out
push
loop
cmpsl
ret
repnz
mov
xchg
jle
push
mov
jmp
inc
xor
xchg
aas
push
sar
fsubs
das
icebp
xchg
push
mov
mov
pop
pop
sbb
icebp
xchg
mov
dec
cmp
and
sbb
out
push
pop
inc
test
repz
hlt
and
mov
adc
cs
jnp
in
cmpsl
mov
insb
sub
out
incb
adc
add
push
cmp
xor
adc
jg
mov
into
mov
or
test
xchg
ljmp
and
aaa
lcall
push
pop
leave
imul
lods
sbb
idiv
sub
ror
mov
ds
cld
aaa
jmp
jno
movsb
arpl
xchg
cmp
or
dec
or
dec
popa
dec
sbbb
dec
nop
inc
jle
dec
insb
fxam
jo
sti
push
in
pushl
int
and
inc
das
das
push
std
orb
sahf
sbb
adcl
cs
mov
pushf
nop
xor
insl
mov
mov
jecxz
repz
xlat
xor
test
push
jg
mov
adc
fisttpll
mov
xchg
mov
outsl
xlat
inc
loope
movsb
insb
imul
cmpsl
xor
mov
push
cli
jge
push
mov
ja
outsl
or
pushf
pusha
jmp
dec
xor
jle
xchg
add
repz
sub
insl
push
pusha
shr
cwtl
cwtl
jb
push
xchg
jge
mov
popa
cmp
pop
imul
mov
or
pusha
jp
pusha
sbb
jg
ja
int3
ret
xchg
xchg
in
push
inc
jo
leave
ss
dec
aaa
inc
cs
inc
mov
sub
incl
ljmp
pop
stc
mov
std
mov
pop
pop
pop
jne
enter
js
sub
jmp
add
xor
mov
mov
sarb
lds
mov
test
js
mov
push
das
sbb
fndisi(8087
out
in
cltd
mov
dec
mov
pop
hlt
cmp
gs
push
mov
lods
mull
dec
xor
sub
es
bound
test
call
dec
js
repz
dec
ljmp
add
popf
mov
xchg
mov
mov
imulb
mov
push
fsubrl
cmp
xor
std
or
sbbb
mulb
ds
cmc
push
dec
jae
push
sub
gs
rol
insb
mov
jb
testl
jo
mov
cmp
js
xor
mov
enter
dec
ja
aam
jmp
adc
jge
pop
ljmp
orl
mov
ud1
stos
pushf
sarl
cli
xchg
fcmovne
inc
add
enter
mov
movsb
lea
mov
lods
fucomi
repz
arpl
out
lds
fldenv
aaa
and
xlat
inc
xor
lret
mov
sbb
cmp
ds
xchg
mov
adc
xor
xchg
mov
push
addr16
sbb
je
push
xor
outsl
mov
fwait
test
ret
mov
clc
roll
adc
jae
dec
hlt
popf
lret
sub
sti
pop
stos
push
cltd
loop
pop
add
xchg
std
in
inc
aas
add
push
xor
xchg
and
aam
mov
imul
xchg
fstpl
xor
ja
dec
jp
push
ljmp
push
inc
sub
add
mov
pop
out
jg
add
enter
pop
sbb
add
cmp
rolb
jo
out
aaa
fcom
lret
sbb
xchg
out
insl
mov
inc
fs
aas
insb
sbb
je
cmp
dec
and
outsl
jbe,pn
outsl
jle
mov
arpl
xchg
jnp
aam
out
ret
mov
inc
cmp
rcl
or
out
les
push
mov
or
mov
push
es
cwtl
cld
cmp
pushf
clc
fnstsw
and
out
dec
inc
inc
xor
xchg
data16
bound
or
pushl
lret
out
sbb
out
aaa
fisttp
popf
pushf
out
repnz
mov
decl
push
jne
sbb
cs
int3
imulb
jl
push
mov
loopne
ja
insb
and
out
sarl
pop
les
or
pop
cli
xor
mov
fs
sbb
add
enter
inc
fnop
jnp
incb
push
mov
cmp
xchg
dec
outsl
loope
mov
pop
out
insl
cmc
jecxz
sti
mov
in
dec
mov
mov
or
and
in
pop
mov
hlt
bound
dec
je
dec
xlat
mov
sub
add
xchg
cmpl
popf
fisub
jae
lret
fcmovnu
cs
sti
dec
scas
das
adc
imul
push
cmp
mov
add
test
mov
clc
popf
sub
push
ljmp
adc
cmc
sahf
mulb
lcall
mov
insl
xor
cmp
cmp
inc
dec
ds
mov
or
jo
adc
imulb
sar
call
push
sub
nop
mov
jns
leave
popa
xor
out
xor
push
jecxz
inc
stos
ror
ret
jo
sbb
push
mov
or
jecxz
jle
pop
jle
sbb
cmp
out
sahf
dec
jecxz
fwait
aaa
dec
inc
repnz
pop
push
pop
dec
pop
call
jg
add
popf
fsubrp
ret
mov
push
adc
xchg
std
adc
lahf
stc
push
jmp
jmp
sti
iret
rorl
jg
outsl
mov
imul
rol
lcall
jl
mov
shrb
lea
setnp
mov
push
loopne
mov
xchg
add
repnz
sub
int
ror
pandn
das
pop
push
jg
add
mov
pop
push
fnsave
cmc
sahf
in
fadd
cs
shll
fistp
cmc
xchg
add
loope
sti
cmp
jmp
imul
das
sub
mov
daa
cmp
xor
das
sbb
insb
pop
lds
mov
sbb
in
je
mov
test
mov
sub
cmp
or
mov
adc
call
inc
jo
xchg
cmpb
movsb
xchg
sti
in
mov
jnp
ja
das
icebp
sbb
adc
lea
cld
mov
jmp
pop
enter
fisubrl
adc
into
push
outsl
add
enter
mov
rcll
andb
adc
clc
sar
outsb
cld
xor
jae
popa
ljmp
fsubl
jg
push
loopne
inc
stos
dec
int
lods
je
mov
data16
xor
mov
pop
pusha
mov
jg
ds
fbld
xorl
push
fidivrl
mov
push
lock
std
std
ljmp
bound
add
inc
outsl
xor
leave
sub
or
sbb
lret
mov
in
dec
dec
inc
fildll
loop
and
pop
lret
add
in
and
test
jg
jmp
xchg
and
hlt
inc
es
adc
xchg
push
push
stos
in
mov
out
add
bound
fmuls
andl
lahf
xchg
in
jne
out
enter
and
pop
pop
les
in
mov
mov
dec
inc
and
pop
lret
and
call
imul
mov
jmp
inc
xchg
inc
jo
lahf
lret
mov
jmp
xchg
dec
in
mov
fildl
pushl
inc
bound
iret
insl
and
or
bnd
pop
jge
pop
pop
dec
inc
dec
and
aam
push
ret
aaa
call
sub
test
cmpl
mov
in
jmp
mov
mov
adc
push
mov
pop
pushl
aam
je
movsl
xchg
enter
popa
rorl
dec
sti
xchg
lret
jmp
loopne
aas
dec
fnstsw
loope
jmp
aam
pop
les
jg
sub
test
ror
and
mov
aam
div
sbbl
push
cmpsb
push
inc
lret
xchg
andl
dec
mov
push
dec
sub
ljmp
out
imul
sub
pop
lahf
iret
mov
mov
enter
orb
outsb
out
aas
cmp
frstor
dec
push
jbe
cld
mov
cmc
jecxz
movsb
stos
in
dec
stos
repz
sub
pushl
adc
mov
mov
jbe
xchg
mov
mov
pusha
pop
mov
call
ret
jp
rolb
fdivr
mov
sub
ret
js
mov
jge
cld
sub
cld
push
pop
pop
xchg
xlat
add
fdivr
jge
or
xor
xor
lret
mov
xchg
inc
aaa
test
popa
sahf
xchg
add
fdivl
mov
or
sbb
inc
mov
int3
sbb
pop
inc
mov
inc
ret
jno
jnp
int
out
clc
lahf
in
and
mov
fs
or
icebp
in
in
inc
cmpsl
and
cwtl
pop
insl
jecxz
and
call
popf
lahf
mov
fdivp
add
adc
scas
add
icebp
mov
mov
arpl
add
nop
sub
fadds
xchg
xchg
outsb
push
mov
ret
mov
jmp
jns
xchg
and
enter
gs
inc
lock
mov
dec
je
cwtl
cwtl
loopne
xchg
fwait
push
ret
mov
mov
test
jecxz
cltd
push
add
inc
jmp
inc
cld
and
nop
in
xchg
addr16
ret
mov
jecxz
push
fldl
mov
pusha
repnz
ret
ja
xor
incl
jbe
rcrl
je
lock
std
mov
sar
dec
inc
cmc
and
aam
pop
iret
fucomi
fdivrl
xchg
jbe
pop
cmp
add
inc
stc
adc
mov
jl
out
sub
movsl
aad
das
mov
xchg
jo
adc
inc
cld
ljmp
dec
push
pop
push
push
jno
mov
push
iret
xchg
fwait
cmc
fisubr
call
outsb
cmc
add
sbb
loope
aas
in
frstor
or
or
jbe
sahf
mov
xor
dec
dec
stos
fadd
out
jns
inc
mov
push
cmp
xchg
jns
nop
icebp
dec
call
push
pop
gs
pop
xchg
fdivp
fs
jle
pop
pop
in
stc
popf
dec
pop
fld
sbb
clc
lsl
ljmp
push
mov
iret
outsb
inc
xor
jl
daa
push
mov
add
call
push
popa
and
ss
pop
inc
stos
enter
sbb
iret
loopne
mov
fdivs
push
cld
call
aad
push
pop
ror
in
cli
adcl
jg
std
push
mov
jmp
inc
sub
leave
push
jl
imul
jp
cmp
outsb
je
loope
ds
frstor
fs
mov
dec
ret
cwtl
adc
mov
movsb
test
mov
dec
jb
aas
arpl
fwait
sahf
pop
sahf
incl
xchg
pop
mov
inc
xchg
sarl
das
arpl
idivb
pop
lea
mov
ret
jle
bnd
cli
add
and
push
mov
in
fildll
jmp
in
int
push
mov
push
push
ret
lock
mov
cwtl
testb
push
jge
mov
push
and
or
icebp
push
mov
xchg
push
or
sbb
jg
in
pop
rolb
out
sbb
inc
loope
lret
sub
das
pusha
mov
adc
outsb
fdivr
xchg
jp
test
dec
test
in
fdivr
jg
pop
pop
insb
test
xchg
push
sbb
inc
out
inc
test
insl
imulb
lret
fimull
pop
adc
mov
dec
ja
sbb
add
push
ja
adc
or
pushf
jp
cwtl
adc
shrl
cmp
xor
push
mov
pop
decl
mov
jbe
popf
stos
insl
in
sub
stos
dec
sar
inc
stos
xlat
push
dec
icebp
jg
test
mov
sti
push
push
aam
push
ljmp
pop
jnp
mov
sub
xchg
xchg
fldt
popf
or
ficompl
rolb
push
push
lret
push
jle
and
out
mov
mov
outsb
cs
popa
cmpsl
adc
mov
gs
repz
adc
std
subl
cmp
cld
cld
jmp
test
pop
xchg
outsb
pop
test
imull
cmpsl
dec
cs
jg
jns
jle
cmp
fldl
cs
rcrb
mov
testl
in
adc
xchg
cmp
insb
cld
mov
xchg
jbe
fwait
xor
gs
loop
jb
aas
jle
dec
fldenv
aas
cmp
nop
mov
add
aas
sti
aas
mov
push
cltd
call
add
cs
sti
idivb
mov
lret
daa
jecxz
xlat
fstps
lods
mov
insb
cwtl
aaa
cmp
cld
mov
int3
outsb
dec
cmp
jo
lahf
frstor
mov
push
dec
adc
lcall
aas
movsb
mov
aaa
lods
pop
jg
and
xchg
fdivrp
sbb
push
ljmp
lea
xchg
xlat
and
inc
imul
neg
jmp
mov
push
iret
push
jns
lods
inc
jle
cmp
clc
adc
and
incb
adc
and
dec
gs
xor
fs
insl
sub
ret
jmp
mov
xchg
xor
mov
mov
iret
cs
sub
xchg
cs
mov
pop
xchg
add
mov
cmp
sarb
cmp
cmp
pop
cmp
mov
add
xor
cmp
cld
incl
aas
push
aas
pop
aas
fs
push
aas
xchg
aas
fwait
aas
lret
aas
fistpll
add
inc
ljmp
jne
js
xor
xor
xor
mov
xor
cltd
xor
nop
xor
loopne
in
xor
xor
pushl
sbb
and
xor
mov
xchg
xor
xor
xor
xor
xor
xor
xor
xor
xor
lea
pushl
xor
xor
xor
xor
xor
or
in
xor
ss
add
aaa
push
aaa
data16
add
xchg
fcmovne
repnz
xor
xor
xor
xor
xor
xor
fildll
sub
mov
jmp
xor
cs
inc
or
sub
aaa
or
rcr
imul
aaa
out
xchg
cmp
fidivrl
fistpll
adc
call
cmp
fdivrs
fwait
cmp
cmp
cmp
scas
cmp
decl
add
inc
ds
movsl
ds
enter
adc
jbe
jge
xchg
aas
lcall
push
out
pusha
xchg
shrb
xor
xor
icebp
pushl
mov
mov
xor
push
xor
jne
xorb
mov
lods
xor
push
mov
xor
xor
xor
xor
cmp
cmp
xor
insb
xor
cmp
xchg
xchg
sub
pop
xor
xor
xor
push
xor
push
jg
xor
flds
xor
outsl
xor
sbb
xor
cmp
ss
add
pushl
outsl
xorl
ss
ss
add
and
sub
incl
jge
xchg
popf
aaa
movsb
aaa
scas
aaa
mov
cmp
cmp
mov
cmp
cmp
cmp
fist
cmp
dec
cmp
xchg
movsl
xchg
cmp
insb
sarb
cmp
cmp
aas
icebp
aas
enter
and
sub
ds
mov
xor
xor
cli
xor
xor
xor
xor
testb
inc
xor
mov
repz
xor
data16
fadds
xor
xor
xor
xor
jne
xchg
aaa
jnp
xor
sbb
xchg
lods
cmpsb
ss
ss
add
ss
cld
ljmp
mov
cmp
cmp
cmp
cmp
cmp
cmp
pop
cmp
cmp
decl
ljmp
stos
cmp
lea
mov
fist
dec
ds
aas
jb
jnp
cmpl
xchg
movsl
fdivl
mov
jnp
cmc
int
lret
dec
add
mov
mov
sbb
shrl
out
or
or
xor
xor
xor
xor
xor
xor
xor
cltd
pop
cmc
pop
std
or
mov
xor
xor
xor
jg
stc
addr16
xor
xor
xor
pusha
xor
lds
int3
xor
xor
xor
xor
xor
xor
mov
xor
xor
xor
xor
imul
xor
cmc
aaa
sub
mov
sub
cmp
jne
jmp
ss
mov
cmp
mov
mov
decl
out
sarl
xlat
popl
cmp
cmp
outsb
cmp
mov
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
rorl
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
sti
leave
jg
cmp
aas
cmp
push
cmp
jp
cmpl
incl
sbb
pop
ds
ds
ds
ds
ds
adc
sub
sub
dec
aas
push
aas
push
aas
pop
aas
insb
sbb
dec
aas
mov
aas
cmc
fidivr
out
pop
cld
icebp
pushl
or
or
xor
push
xor
xor
js
popf
xor
and
int3
xor
repz
xor
xor
xor
decl
xor
xor
xor
xor
xor
xor
xor
xor
insb
push
push
xor
push
jmp
sbb
sbb
xor
cmp
pushl
xor
mov
shr
or
incl
sbb
mov
mov
ss
and
aaa
xor
pop
aaa
gs
jp
pushl
xorl
aaa
xor
cmp
cmp
cmp
cmp
xor
dec
cmp
mov
cmp
cld
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
clc
aaa
and
xchg
sub
add
imul
mov
outsl
sbb
ds
cli
adc
sbb
and
xor
mov
jb
jns
xorb
xor
xor
xor
xor
xor
xor
adc
sub
xor
cmp
dec
bsr
les
xchg
popa
pop
adc
sti
xorb
xor
std
movsl
mov
xor
xor
cmp
insb
xor
js
mov
call
xor
ret
xor
xor
xchg
and
jmp
xor
xor
es
mov
test
iret
xchg
xor
or
cmp
or
lock
xor
test
add
xchg
adcl
popa
ljmp
cmp
mov
repz
pop
pop
popf
rcrl
paddd
and
jl
popf
fstps
cltd
cmp
cltd
ds
push
stos
out
aas
jne
pop
adc
fcoms
dec
adc
outsl
adc
or
xor
out
andb
add
daa
pop
and
jle
stos
xor
cmp
add
das
mov
inc
mov
int
fs
je,pn
js
data16
jmp
jge
xchg
sub
orl
push
xor
pop
jnp
or
jb
jb
inc
add
push
xor
daa
inc
stos
xchg
fbld
out
lahf
pusha
and
and
and
adc
loopne
inc
xor
push
mov
adc
pusha
adc
vpinsrw
icebp
dec
push
adc
mov
adcb
jl
adc
add
push
add
dec
ljmp
mov
xchg
pop
inc
insl
mov
or
cld
leave
pop
add
or
int
movups
or
movsl
or
inc
mov
sbb
mov
sahf
inc
andl
push
sub
stos
dec
add
jnp
mov
lds
pop
push
and
mov
jb
inc
mov
push
ja
insb
xchg
or
test
adc
aam
outsb
sub
inc
cmp
push
scas
inc
jbe
in
in
lea
jne
enter
push
sub
add
xor
cmp
jne
xor
xor
lock
flds
jne
sbb
jmp
call
jnp
int
pop
push
jne
sbb
enter
es
aaa
pxor
inc
rolb
xor
xchg
push
cld
lds
push
xchg
mov
jnp
xor
xchg
adc
and
cmp
cmp
aaa
cmp
leave
sub
mov
add
shll
xchg
mov
mov
sbb
fidiv
pop
es
mov
stos
mov
lret
fnstcw
out
pop
and
and
dec
ss
les
sbb
add
mov
in
jns
push
or
jb
insb
mov
add
divl
clc
xor
sub
sti
insb
cld
insb
jns
dec
xchg
gs
insl
insl
jae
mov
and
pop
xchg
insb
dec
dec
inc
jg
mov
test
repnz
rorb
and
loopne
mov
add
mov
lret
insl
inc
gs
dec
xor
xchg
sub
dec
cwtl
popa
insl
mov
add
gs
xor
and
push
cmc
movsb
push
add
push
adc
insl
loope
loopne
pop
inc
xor
inc
cli
cmove
jle
lea
aas
test
out
add
aaa
dec
call
add
adc
jle
call
or
jg
popa
jae
sub
lea
push
push
mulb
out
sbb
xchg
xor
mov
jns
out
jmp
lea
push
push
push
ret
or
fs
cmp
add
out
imul
outsl
and
jecxz
or
sahf
arpl
mov
fdiv
clc
jno
jnp
xchg
adc
adc
push
icebp
ficoml
mov
jle
push
or
push
ret
xor
pusha
or
push
or
int3
or
outsl
push
aas
das
or
js
pushf
adc
add
clc
adcl
test
repz
jl
aas
cwtl
and
xor
out
sub
orb
adc
or
out
pop
or
push
fsubs
xchg
add
xor
fisttpll
mov
and
and
sbb
adc
std
adc
cmp
inc
push
loope
lds
in
and
pop
mov
test
xchg
adc
mov
andb
add
orb
clc
inc
das
dec
mov
mov
push
data16
adc
push
cmp
inc
incl
idivl
fisttp
mov
mov
mov
or
addr16
repz
push
mov
repz
or
jg
push
and
cmc
mov
push
divl
or
mov
lret
mov
jb
outsl
outsb
mov
lret
jb
jae
cs
leave
js
aam
aad
insb
mov
inc
jo
popa
add
cmpsb
fwait
sub
arpl
cmp
mov
push
dec
js
scas
push
idiv
dec
stc
inc
cli
je
shl
push
sti
xor
call
and
nop
fiadd
push
call
paddsb
inc
lcall
cmp
pusha
aad
enter
xchg
loopne
movb
sub
leave
shrb
int
insb
into
shrb
shrb
loope
sub
shll
push
cmp
imul
adc
or
lds
mov
popa
aas
std
enter
int
xor
std
mov
xor
or
mov
sub
inc
std
js
push
ja
mov
aad
push
int3
add
push
or
or
int
pusha
lods
leave
mov
jnp
movsb
adc
sub
ss
in
adc
push
inc
sub
pop
pusha
es
push
insl
xor
lcall
mov
cmp
nop
cmp
je
push
push
test
cmp
sub
inc
rorb
adc
dec
fistp
push
adc
or
outsb
rorb
dec
jne
in
outsb
sbb
stc
outsl
push
add
je,pt
test
in
mov
sub
mov
jne
pushf
insb
int
je
mov
xor
test
mov
scas
or
pop
in
mov
popa
test
mov
je
jb
fdivs
push
mov
ret
sbb
mov
inc
fiaddl
aaa
lods
cmp
std
push
xor
test
mov
xor
dec
xor
pop
or
pop
push
fsubr
sbb
int
or
add
lret
sbb
mov
fs
in
mov
outsl
add
outsb
rcl
gs
xor
nop
jae
cs
or
scas
outsb
mov
lret
mov
popa
jne
arpl
es
leave
push
gs
pop
inc
ret
jno
insb
fwait
sub
jo
pop
imul
hlt
cmc
mulb
lret
mov
lret
imul
leave
mov
jb
js,pn
sub
adc
js
bound
push
adc
add
ja
jbe
je
xor
xor
mov
mov
ret
cli
adc
in
hlt
add
imul
push
movsb
mov
push
leave
jne
lea
push
repnz
rclb
cmp
cld
or
and
fwait
mov
hlt
lods
jge
movsl
cld
into
testl
je
testb
loop
mov
or
mov
lds
mov
inc
jp
xchg
mov
push
jmp
mov
jne
push
js
cmp
push
ret
outsl
ret
jle
pop
popa
mov
add
outsl
mov
push
aam
add
fdivr
push
add
push
mov
loopne
add
push
xchg
or
fwait
outsl
sbb
add
es
dec
inc
and
mov
xor
xchg
nop
data16
stos
push
xchg
add
cwtl
ret
inc
adc
push
inc
popf
mov
pop
test
ret
ljmp
xor
cmp
pushf
or
fisttpl
sete
or
pop
into
add
pop
mov
arpl
inc
add
jae
mov
jbe
or
mov
or
jo
add
adc
ret
pop
nop
mov
pop
pop
add
mov
sbb
push
iret
dec
dec
pop
or
inc
pusha
inc
adc
enter
adc
inc
in
push
dec
cmc
dec
inc
add
push
stos
adc
pmulhuw
add
rolb
cmp
outsl
test
xor
or
test
inc
and
jo
and
and
fstp
xchg
sub
inc
sahf
add
push
add
loope
mov
xor
push
fild
cmp
loope
add
shr
mov
cmp
je
rcrl
mov
cmp
fistpl
in
cmp
add
sub
jne
inc
cmp
jne
cmp
je
mov
and
rcr
cltd
outsb
inc
or
and
pop
subl
cmp
jl
add
jg
and
or
cmp
shll
add
je
rcrl
pop
mov
andb
imul
and
int
add
imull
in
add
push
lea
adc
jmp
fildll
jae
sub
mov
or
loope
add
pop
sub
push
ret
int3
cmp
inc
mov
inc
xor
xlat
cmpsl
add
sahf
std
dec
fadds
pop
inc
pop
sbb
add
dec
push
pusha
je
cmpsb
imul
dec
xor
ret
inc
dec
lcall
cs
adc
addr16
inc
add
add
add
pop
rolb
addb
mov
stos
adc
pop
lcall
dec
insl
inc
lock
jb
insb
out
pop
mov
cli
orl
dec
gs
outsl
jecxz
dec
pop
mov
cli
jae
xor
sbb
popa
fs
add
push
mov
aas
add
js
jg
outsb
xor
or
js
fwait
add
and
fdivr
in
inc
push
sub
push
push
mov
inc
shrl
xor
xchg
cmovg
inc
adc
inc
nop
clc
inc
in
add
xchg
insb
push
sbb
and
or
adc
pushf
add
std
fmull
adc
or
sub
repz
inc
pop
push
mov
inc
add
cmp
pop
pop
loopne
and
packsswb
cmp
inc
mov
sbb
inc
mov
in
adc
adc
add
daa
movsb
or
jno
mov
mov
sti
sbb
inc
or
dec
outsb
sbb
js
outsw
es
loop
or
sub
adc
adc
sbb
je
testl
mov
and
sbb
jle
add
jb
and
add
inc
pusha
jp
xchg
cs
loopne
pop
adc
add
xchg
and
into
jno
and
push
dec
adc
add
mov
dec
inc
xor
dec
mov
das
inc
fs
nop
aas
sbb
and
sbb
or
dec
jae
mov
pusha
add
insb
xor
sti
add
cwtl
xor
imul
add
js
fstps
push
mov
sbb
jne
mov
orl
pop
ss
xlat
jge
sbbb
cwtl
pop
stos
ss
imul
dec
pop
or
jo
jmp
mov
mov
mov
sti
rorl
imul
pop
or
add
jecxz
pop
push
xor
arpl
test
pop
ljmp
mov
clc
push
lods
imul
imul
xor
js
gs
push
jne
jmp
add
js
inc
push
imull
or
push
leave
adc
mov
mov
cmpsl
fs
jno
lds
adc
mov
mov
push
dec
or
mov
mov
jnp
imul
fadd
fsubrs
xorl
fisubr
outsl
pop
jns
pop
pop
sbb
or
mov
je
pop
fistpl
popw
lds
adc
shrb
cltd
stc
roll
imul
mov
sbb
add
add
orb
int
pop
add
add
add
pusha
push
aas
cltd
out
mov
insl
adc
pop
jmp
jbe
movsb
push
or
dec
mov
dec
add
out
dec
mov
jae
fistl
add
pop
jo
subb
dec
sub
mov
dec
pop
push
shrl
lret
outsl
and
ficomp
jmp
xor
jecxz
insl
scas
jmp
inc
and
xor
jae
xlat
xor
add
movsl
popa
and
inc
add
addr16
jmp
arpl
inc
imul
mov
pop
add
add
nop
mov
inc
add
push
jmp
gs
jb
cmp
fnstenv
xor
jmp
pop
lea
outsb
xchg
insb
popf
xchg
pop
iret
jge
scas
dec
or
lds
popf
outsl
add
addr16
mov
sub
pop
xor
xor
cltd
outsb
jae
inc
push
sub
push
fwait
in
mov
imul
dec
dec
imul
lods
cmc
mov
adc
push
pop
outsl
pcmpeqw
and
and
xor
inc
push
imul
and
arpl
adc
cmpsl
xchg
out
add
insl
enter
pushf
or
outsl
add
xor
icebp
dec
pop
sub
xor
inc
mov
xor
loop,pn
icebp
xor
fucomip
xor
add
xor
xor
xor
xor
xor
xor
xor
adc
xchg
ss
aaa
pop
aaa
mov
pushl
aaa
aaa
aam
aas
cmp
cmp
cmp
cmp
cmp
sarb
clc
pushl
leave
mov
cmp
pop
xor
inc
ds
ds
fildll
jle
push
leave
ds
xor
aas
ja
adc
cld
xchg
sarl
aas
aam
fwait
dec
outsl
adc
popa
push
xor
sub
bound
add
add
aas
test
adc
xchg
jmp
popa
inc
mov
test
jb
add
hlt
jl
xchg
out
popa
adc
fildl
inc
out
flds
sbbb
divl
cmp
xor
add
jns
xchg
out
and
das
inc
jle
and
pop
sub
and
push
adc
test
adc
sub
add
push
leave
pop
and
add
fimul
repnz
daa
push
or
dec
and
jl
inc
push
mov
or
lcall
xchg
and
add
imul
lcall
sahf
scas
mov
lret
cli
cs
jae
pop
ret
sub
dec
xor
pop
cmpsb
imul
pop
imul
je
pusha
addps
add
inc
sbb
movsb
pusha
push
aas
sbbb
ret
test
dec
lcall
out
and
fwait
outsl
lds
mov
adc
lcall
ds
test
mov
lods
dec
push
adc
hlt
mov
mov
movsb
pusha
stc
and
push
sub
daa
xor
pushf
add
and
sub
test
jmp
push
or
and
in
push
dec
aad
and
stc
mov
or
and
in
push
and
jb
sub
dec
sbb
mov
and
addl
and
inc
inc
outsb
mov
out
mov
sbb
fsubr
push
and
lea
cld
out
lock
mov
icebp
nop
call
jb
add
pop
hlt
pop
in
jne
lret
mov
fsubr
clc
mov
lret
inc
mov
pop
loopne
lds
mov
pop
cmpl
test
sarb
add
adcl
mov
sub
pop
lahf
andb
mov
mov
inc
enter
incb
inc
mov
xor
fs
push
pushf
fs
fsubr
add
or
jae
call
inc
scas
imul
dec
or
adc
aas
pop
cmp
loopne
sahf
cld
mov
ds
cld
mov
push
dec
push
fmulp
adc
sbb
xchg
adc
shlb
call
mov
fisttpl
xchg
lock
outsb
cmp
dec
cld
pop
cmp
pop
popa
jle
add
pop
clc
daa
mov
xchg
in
bound
inc
cmp
in
adc
cmpsb
fwait
cmp
inc
pop
and
popa
mov
mov
into
xchg
lea
shll
cli
jmp
movl
pop
cmp
xchg
loope
fbstp
inc
mov
sbb
enter
or
mov
outsb
decl
jecxz
cld
mov
dec
mov
jne
es
pushl
sub
dec
roll
popf
hlt
inc
add
sbb
test
imul
push
or
pop
das
push
add
push
pop
xchg
and
mov
and
call
sbb
clc
dec
mov
mov
sarb
mov
jle
lea
inc
inc
sub
or
scas
cmp
jne
mov
fucomi
pop
clc
inc
nop
add
fadds
fstpl
xor
mov
xor
jge
and
push
xor
lcall
mov
sbb
and
inc
push
imul
inc
sub
fs
sub
cltd
add
call
pop
or
push
push
xor
mov
call
jge
push
push
add
add
xor
insb
cmpsb
cmp
push
das
ss
or
cli
cmp
sbb
add
fcoms
lea
stos
inc
inc
pop
fstpt
sub
dec
ret
lea
pop
mov
jecxz
mov
arpl
icebp
mov
ret
xchg
mov
add
sti
in
call
add
cmp
jl
jmp
push
js
rclb
lahf
add
js
add
mov
mov
leave
push
pop
in
mov
mov
jl
fcomp
mov
out
je
sbb
dec
cmp
inc
and
cmp
les
push
xchg
fcomip
pop
mov
cmpl
push
fcmovnb
sub
push
ficoml
or
pop
mov
push
cmp
jle
fsubrs
xor
mov
push
negb
sbb
xor
inc
lcall
int3
pop
inc
sbb
inc
jle
mov
lea
and
fs
cmp
mov
aad
mov
sub
mov
sbb
push
adc
and
inc
int3
push
push
call
je
fbstp
sbb
adc
stc
clc
adc
jnp
sbb
inc
or
add
dec
lret
sahf
and
or
lahf
add
dec
mov
int
jnp
enter
pop
push
xchg
loopne
xchg
push
xchg
sbb
inc
shlb
mov
sahf
pop
jne
imul
adc
fs
fs
loopne
cs
in
sbb
sbb
aad
xlat
sbb
sbb
fcomp
fcmovu
sbb
sbb
push
sbb
sbb
loope
fcomp
cld
cmp
fdivr
idiv
decl
data16
out
xor
jo
push
sub
int
sub
xchg
out
dec
inc
sub
lcall
push
fs
sahf
mov
nop
inc
inc
rcl
sub
mov
and
fdivl
pop
push
cmc
test
lea
shlb
test
out
sbb
adc
roll
or
nop
jbe
inc
mov
jmp
mov
sbb
fsts
and
test
mov
cwtl
inc
insl
imul
or
add
es
xor
dec
rorl
add
pop
pop
int3
outsb
cwtl
subb
mov
push
popa
xor
add
adc
adc
mov
mov
and
daa
clc
setg
mov
je
or
fsubs
push
mov
push
test
stos
push
jbe
outsl
outsb
xchg
aas
enter
jae
jle
xor
fs
or
lods
push
and
mov
and
and
ja
mov
xchg
cmp
and
pop
add
and
loopne
inc
mov
xchg
testl
outsb
lahf
jb
jb
stc
pop
dec
outsb
das
mov
insb
sbb
cmp
je
outsl
insb
jae
dec
imul
add
add
cmc
stos
add
sbb
mov
push
jl
sub
add
push
into
das
xlat
or
add
enter
sub
dec
fdivs
out
daa
add
mov
sub
xchg
movb
inc
les
das
dec
xor
popf
loopne
adc
inc
aad
xor
fwait
dec
les
inc
cld
xchg
xor
xor
cld
inc
cmpl
mov
push
les
push
gs
mov
xchg
aaa
stos
aaa
cmp
dec
in
cmp
mov
cmp
cmp
decl
add
cmp
cmp
cmp
cmp
mov
cli
imul
cmp
bound
cmp
push
cmp
sahf
cmp
inc
mov
ja
sub
push
push
rolb
add
lcall
mov
movsb
cmovo
or
rolb
dec
push
add
sti
outsl
jne
arpl
xor
loopne
sti
or
fidiv
cmp
sub
add
add
jb
sub
jmp
test
push
add
add
or
add
dec
mov
xor
dec
stos
pusha
adc
lock
jge
insb
dec
mov
dec
inc
push
cmpsl
je
inc
push
and
hlt
or
repz
pop
add
push
and
arpl
mov
into
or
inc
or
popa
add
nop
adcl
push
add
or
adc
xchg
xchg
or
lock
sbb
add
sub
es
mov
xor
adc
and
mov
pop
add
lock
cmovo
mov
dec
incl
pusha
mov
lea
push
or
jmp
nop
nop
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
