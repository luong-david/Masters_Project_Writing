sbbl
mov
iret
incl
xchg
gs
imul
xchg
sbb
in
fcmovnbe
lds
stos
fwait
xorl
lret
mov
pop
dec
aaa
sub
cltd
les
xchg
gs
add
mov
incl
jmp
add
mov
lea
rcrl
js
js
xchg
repnz
stos
mov
out
adc
add
lcall
lea
cwtl
lcall
lcall
mov
imul
xchg
fwait
call
cwtl
xchg
xchg
sahf
xchg
fwait
call
inc
test
cwtl
popf
mov
iret
lret
rcrl
cmpsl
lcall
cli
adc
lock
lock
imul
mov
xchg
clc
test
popf
lea
mov
in
add
loope
iret
lret
je
jle
xchg
idivl
inc
lret
fwait
lcall
je
mov
and
add
test
por
scas
lods
cmp
mov
sbb
sahf
aaa
mov
hlt
xor
xchg
cld
xor
xor
xchg
xor
xor
das
hlt
cs
cld
sub
adc
and
mov
les
call
and
and
aam
enter
scas
cld
push
mov
sbb
sbb
and
push
mov
fcoms
mov
enter
or
mov
or
or
pop
or
cld
add
add
xchg
push
xchg
dec
subb
pop
cmp
subl
aaa
out
paddusw
or
add
sub
pop
les
mov
test
je
adc
je
idivl
mov
int3
aas
and
dec
add
jb
addr16
cmp
xlat
stos
scas
test
ljmp
aas
mov
in
ljmp
inc
inc
lret
cmpsb
mov
icebp
repz
out
pop
fsubl
xchg
and
add
xor
cmp
repnz
movsb
ss
jl
jecxz
rorb
insb
ljmp
test
inc
bound
out
repz
notl
je
jbe
stc
pop
cli
adc
ficomp
test
cmp
xchg
stc
orl
xchg
mov
mov
loopne
dec
mov
inc
xor
add
int3
and
or
loop
out
fbld
pop
in
loope
les
pushf
xor
xchg
cld
xchg
movsb
mov
jl
dec
mov
test
jmp
mov
movsb
adc
fdivrs
mov
jge
scas
jg
ret
mov
movsb
pop
das
dec
mov
push
jmp
pushf
mov
repz
dec
dec
lret
xor
in
pop
scas
jae
ds
jae
scas
sub
iret
in
xor
xchg
push
lock
call
bnd
repz
xchg
nop
jp
cmpsl
mov
xchg
aad
mov
loopne
or
pop
in
inc
repz
dec
cmp
dec
cmpsl
sti
movsl
iret
and
jmp
jecxz
inc
fwait
lock
pop
mov
fistp
xchg
mov
jl
ss
cmp
mov
out
mov
hlt
negl
jnp
dec
pushl
jmp
pusha
imul
ret
dec
push
inc
and
dec
and
repz
push
jp
repnz
out
mov
in
stos
jmp
outsb
out
stc
jne
sub
mov
mov
cmp
loopne
sbb
cmp
stos
dec
adcl
std
ljmp
iret
jmp
lock
ljmp
loopne
std
fildl
jb
push
stos
in
xchg
add
mov
inc
sub
mov
mov
movsl
in
mov
aad
xlat
inc
int3
fildl
dec
test
dec
inc
aam
pop
or
outsl
ljmp
push
pop
and
cmp
ds
mov
scas
and
mov
lods
cmp
call
test
aam
fildll
sub
stos
fsubs
arpl
sbb
shr
pop
dec
shrb
push
adc
das
test
inc
mov
mov
sti
aas
into
add
and
jb
jae
mov
mov
or
lods
test
jb
dec
dec
sti
jg
pop
out
aas
inc
out
adc
jb
push
repnz
cltd
push
inc
xor
lods
push
xchg
xor
inc
xchg
or
jne
cld
cmp
adc
lret
cmp
jl
dec
mov
andl
test
sub
cmp
and
int
xor
cmpsl
pop
jmp
mov
pop
iret
test
adc
cmpsl
rorl
aad
jnp
das
lds
call
jne
cmpsl
mov
or
xchg
mov
test
cmpsb
push
push
ret
mov
cmpsb
repz
cmp
test
and
add
push
and
fimul
pop
cmpsb
gs
iret
cld
mov
cmpsb
gs
lcall
cmpsb
inc
idiv
mov
xchg
cmc
mov
hlt
inc
hlt
stc
xor
jl
xor
dec
cli
hlt
adc
jb
scas
lods
pushl
cld
ljmp
ss
imul
pop
sbb
scas
or
repz
ljmp
hlt
cmp
mov
shll
sub
stc
adc
jb
stc
xor
xor
shll
pushf
xor
inc
xchg
ja
cs
lods
repnz
dec
repnz
inc
cli
add
mov
inc
addr16
push
xchg
sub
jb
ljmp
test
cld
add
mov
ds
aas
cli
in
inc
lret
cmp
inc
jnp
lea
pushf
cmp
lock
add
add
xor
popf
xor
fmull
pop
add
mov
lret
int3
sub
sub
and
push
sub
xchg
repnz
add
lea
addr16
push
ljmp
cltd
add
push
or
fsubrl
or
outsl
xlat
das
xchg
inc
push
xchg
inc
stc
sub
inc
xor
ss
xchg
dec
test
add
fcoml
hlt
leave
imul
dec
or
xchg
mov
nop
ror
mov
xchg
mov
dec
insl
iret
rolb
inc
stos
mov
xchg
hlt
xchg
push
out
fwait
pushf
or
hlt
dec
ds
leave
popf
rorb
lret
cli
je
add
xchg
arpl
bnd
mov
inc
sarl
add
in
mov
cmp
inc
lahf
push
cmp
xchg
push
jl
aaa
xchg
jae
dec
jmp
stc
push
mov
nop
int3
aaa
cmp
lcall
or
popf
icebp
xchg
cld
ret
mov
pop
loopne
cltd
mov
ss
lahf
stc
mov
popf
inc
add
jb
scas
stc
pop
inc
scas
pushf
inc
pop
mov
pop
push
ret
out
mov
lods
fadd
fwait
scas
mov
sbbl
mov
loopne
sbb
push
ds
mov
roll
mov
adc
movhps
ret
inc
jle
in
out
push
or
xchg
pop
int3
cmp
push
out
jmp
inc
add
fdivrp
ret
sub
mov
jmp
je
loopne
hlt
xor
fidivrl
fidivl
xor
hlt
lock
xchg
outsl
out
imul
je
cmp
sar
int
and
cmpsl
call
je
repz
je
mov
push
cmp
arpl
fisttp
in
jnp
mov
scas
jp
aam
dec
fwait
ds
mov
mov
xchg
jge
stos
aad
mov
mov
fildll
scas
mov
mov
jmp
call
xchg
out
std
stos
stos
es
incl
fcom
fwait
cld
ljmp
pushl
ja
repz
sti
cld
add
inc
loopne
stc
aas
stc
mov
loopne
icebp
shr
nop
add
dec
divb
fiadd
mov
stos
xchg
xchg
inc
lea
add
sahf
xchg
xchg
nop
mov
popf
lcall
std
mov
nop
fwait
lcall
repnz
fstpt
or
cld
push
pushf
rorb
clc
cmp
data16
dec
and
or
data16
adc
inc
data16
clc
lods
xchg
pushf
xchg
and
out
or
pop
scas
mov
out
dec
inc
adc
jbe
dec
icebp
fdivp
stc
repz
cmovb
out
cld
cli
clc
std
rcll
clc
scas
repz
daa
ds
out
clc
stc
outsl
das
jb
pop
test
mov
fs
loope
leave
or
popf
mov
popf
aas
jg
rcrl
lcall
jmp
pop
cmp
lea
adc
jecxz
les
hlt
hlt
fdivrs
pop
inc
into
cld
jae
sbb
sarl
pop
into
loopne
ror
mov
xchg
cld
push
dec
cmp
adc
mov
daa
std
iret
add
aad
mov
mov
mov
lret
mov
dec
inc
xor
sub
mull
mov
mov
test
fwait
stos
inc
adc
mov
lret
lcall
imul
xchg
jge
scas
movsl
xchg
int
das
cmp
and
hlt
dec
fcmove
fs
mov
clc
int3
movsl
mov
scas
addr16
or
test
and
mov
mov
inc
xlat
jp
mov
imul
data16
out
sbb
fdivrp
in
out
iret
pop
es
sti
shll
mov
jmp
mov
repz
jg
mov
or
inc
arpl
jmp
fs
iret
fnop
bnd
out
jmp
repz
sahf
jnp
aam
jecxz
aaa
cld
incb
daa
xor
cmp
cmc
add
cmp
int
test
or
adc
out
ret
mov
ds
lret
mov
out
jne
cmp
out
mov
sbb
pushf
addl
repz
inc
xlat
mov
adc
xchg
loopne
dec
scas
stc
pop
fucomi
fwait
push
sahf
daa
out
mov
sub
adc
loop
aas
sub
add
loop
inc
cmc
fneni(8087
mov
arpl
jg
shr
xchg
sbb
je
outsb
jmp
sub
cmp
push
fbld
jno
ffreep
int3
and
mov
sbb
ss
lret
jg
adc
fwait
nop
lods
pop
pop
aaa
dec
and
daa
xchg
pop
inc
stc
pop
rolb
mov
jmp
xchg
push
clc
pop
pop
dec
xlat
mov
mov
out
fistl
mov
out
mov
sahf
mulb
sarl
jno
jl
mov
lock
fmull
inc
out
idivl
pop
cli
testb
or
divl
ret
inc
cld
mov
insb
xor
xchg
nop
in
xor
pop
cltd
inc
adc
dec
out
je
jns
mov
or
rclb
bound
xchg
xchg
mov
loope
adc
lcall
lods
push
mov
cmp
jnp
addr16
sarb
test
pop
mov
cwtl
mov
ret
ror
sarb
js
sub
adc
pop
jle
pop
test
loope
and
xchg
test
push
sub
inc
aad
add
jbe
testb
sbb
push
or
jne
jb
xor
bound
jp
call
xchg
fs
scas
int3
imul
sti
dec
adc
call
ljmp
mov
dec
in
inc
or
cmpsb
in
add
test
dec
iret
cmc
xlat
mov
notl
xchg
std
pop
stos
adc
or
sub
pop
iret
loop
cmp
pop
cli
push
push
and
loop
fdivr
in
mull
mov
pop
mull
jb
sbb
aaa
lahf
lock
movsl
cli
ds
and
mov
mov
out
out
movsl
pop
in
repz
stc
stos
iret
clc
stos
jl
arpl
mov
das
cmpb
les
les
jmp
ret
addr16
popf
add
lds
lods
pop
ret
in
cmp
leave
mov
out
repnz
leave
dec
fs
sub
xchg
or
cli
mov
cmp
loope
xchg
dec
cmp
outsb
xor
xchg
enter
lahf
xchg
pop
sar
fwait
pop
test
icebp
and
fwait
jbe
clc
sbb
fwait
nop
jbe
lcall
xchg
xchg
lea
cmpsl
imul
lcall
and
inc
xchg
and
in
pop
lret
push
setno
int
outsl
add
adc
dec
sub
aaa
scas
cli
daa
scas
in
icebp
cmp
cmp
jmp
mov
inc
cli
pop
xchg
not
mov
sub
xor
dec
js
clc
xor
lods
lods
cld
mov
icebp
cmp
aad
push
out
std
ljmp
jl
divl
pop
mov
cmp
subb
stos
dec
loopne
jl
sub
hlt
push
dec
cmp
fcomi
xchg
mov
repnz
je
cltd
test
dec
sub
and
ret
mulb
test
lret
shl
test
aad
scas
popf
pusha
jbe
mov
and
pop
mov
mov
lock
movsb
inc
mov
mov
jl
sub
dec
cmpl
mov
dec
and
testl
loope
and
add
cld
and
mov
scas
mov
add
mov
aad
xchg
mov
pop
or
repz
in
idiv
jl,pt
std
scas
and
pop
xor
clc
jl
sti
jl
adc
sbb
add
fxch
cmp
mov
mov
jbe
fwait
inc
and
and
jl
jae
repz
cli
je
ja
popa
adc
cmp
jl
out
jno
mov
add
fistpl
adc
adcl
add
fdivr
ds
mov
je
testl
outsb
mov
cltd
out
adc
adc
nop
cmc
cld
mov
imul
hlt
sti
mov
mov
loope
std
mov
sbb
and
int
testb
sbbb
jbe
cld
mov
outsb
cld
mov
push
mov
mov
out
and
mov
add
loope
pop
stc
mov
mov
stos
lods
mov
cld
sbb
xor
cmp
xchg
cmpsb
out
sbb
je
add
and
jp
push
pop
cld
mov
rcl
fucomi
jmp
add
mov
cmpsb
xrelease
jp
mov
jmp
xchg
mov
int3
je
inc
enter
cltd
jecxz
cmp
push
jmp
cs
movsb
stc
pop
adc
add
xchg
xchg
in
xor
enter
jnp
cli
pop
fwait
xor
pushf
int3
fldcw
arpl
jb
ljmp
bound
dec
pop
xor
xchg
xchg
sti
xchg
lods
enter
sbb
mov
insb
fisubr
testl
pop
scas
add
fildll
scas
pop
bound
jb
adc
dec
je
jns
je
ret
mov
or
movsb
mov
scas
movsb
and
fsub
adc
xlat
sub
out
inc
iret
je
and
lcall
scas
fldl
mov
mov
aaa
jmp
jmp
mov
inc
pop
mov
pop
cmp
ja
jmp
mov
inc
fistpll
sub
jecxz
xchg
pop
ret
arpl
mov
pop
daa
mov
cmpsb
adc
not
es
arpl
mov
push
or
test
mov
or
or
pop
push
push
hlt
add
faddl
mov
dec
test
mov
ret
jmp
divb
cmp
mov
je
pushf
dec
mov
jne
repnz
pop
jb
std
incb
adcl
scas
adc
clc
dec
jnp
mov
fnstcw
out
inc
icebp
jp,pn
orb
sti
jb
rclb
js
cli
repz
jmp
out
add
xchg
scas
jge
aaa
daa
fimull
in
adc
cmp
aaa
cli
inc
in
lcall
jge
push
push
ljmp
mov
hlt
xchg
push
int3
test
rcl
in
aas
in
mov
repnz
cmpsl
fdiv
fcoms
push
fild
fcomps
movsb
lret
mov
mov
xchg
cmp
cmp
fwait
xchg
lcall
nop
pushf
mov
inc
adc
enter
mov
sahf
fwait
mov
popf
lea
fidiv
and
mov
mov
lcall
mov
rol
cmpsb
icebp
xchg
psrld
inc
cld
xchg
mov
push
lock
xor
in
xchg
mov
sub
jmp
jnp
test
add
mov
mov
test
xchg
jecxz
lea
nop
fidiv
mov
xchg
mov
cli
stos
dec
lcall
push
aam
lcall
in
cld
scas
mov
dec
xchg
out
pushl
jb
xchg
nop
jns
adc
and
or
test
nop
mov
lret
or
and
and
mov
lock
or
lock
jo
lahf
dec
leave
sub
and
mov
sub
cltd
stc
lcall
and
xchg
xchg
repz
mov
popf
pop
jp
dec
clc
jmp
jo
int
xor
aad
lea
stos
nop
nop
xchg
xchg
data16
out
xchg
sahf
mov
sahf
out
jns
mov
dec
mov
jle
rorb
decl
les
pop
dec
jp
cmc
jle
icebp
mov
lods
mov
aam
ret
roll
std
fmuls
and
lods
in
call
nop
adc
lcall
mov
mov
iret
xchg
jp
jl
dec
lret
mov
pushf
nop
mov
fsubrs
mov
cltd
xchg
dec
and
sbb
lods
ljmp
jp
xchg
inc
mov
sub
ljmp
and
fild
xchg
test
cmc
cwtd
dec
outsb
jbe
mov
sub
xchg
xlat
int3
in
data16
cmc
dec
push
dec
add
fsubrs
idivb
std
dec
jmp
sbb
mov
into
adc
fdivs
mov
fild
add
jo
fwait
into
xchg
into
test
ja
push
arpl
xor
pop
into
add
ljmp
add
add
mov
lahf
int
int
int
int
int
int
int
int3
ljmp
int3
mov
add
add
pusha
int3
push
int3
add
icebp
lret
loopne
lret
jae
gs
push
lret
out
lret
movsl
lret
or
add
adc
sti
leave
out
leave
out
pushf
leave
popa
leave
cmp
sub
adc
pop
cmpsl
leave
jmp
add
add
in
fcmovne
aam
leave
enter
enter
enter
enter
fadd
int
cmpsb
sahf
add
or
xchg
movl
inc
loop
mov
les
les
add
pop
test
ret
rol
ret
xchg
ret
dec
ret
inc
ret
aas
ret
fadd
enter
ret
ja
push
add
ret
imul
ret
push
ret
or
ljmp
pop
push
arpl
cs
or
adc
in
lahf
insl
pop
das
clc
push
mov
pop
sub
inc
cmp
add
push
pop
and
or
sbb
pop
sub
xchg
sub
pop
sub
mov
sub
sbb
inc
and
push
clc
gs
jecxz
xchg
push
decb
jge
les
dec
sbb
das
loopne
aas
lods
cmpsb
dec
pop
adc
imulb
arpl
pushl
mov
dec
clc
jl
push
in
aas
add
aas
push
adc
rolb
cld
imul
inc
sub
fwait
lods
mov
xor
repz
pop
inc
mov
hlt
mov
in
sbbl
xchg
dec
pop
mov
lret
mov
aas
sub
sub
sbb
iret
xchg
gs
xchg
mov
pop
xchg
gs
gs
inc
xor
inc
adc
push
xlat
cld
iret
shrl
sub
cmpsl
xchg
test
sub
mov
dec
cmp
sub
lret
jmp
fxch
mov
scas
mov
mov
pop
mov
lret
mov
in
lcall
dec
sub
xchg
gs
dec
arpl
xchg
pop
fs
xchg
lods
vpsubq
pop
lds
inc
popf
cld
mov
adc
pop
push
cld
leave
sarl
in
dec
add
mov
cld
adc
inc
pop
pop
std
in
repz
gs
xchg
gs
mov
gs
xchg
xchg
xchg
imul
dec
inc
cmp
lcall
inc
hlt
inc
mov
or
xor
clc
leave
sub
sbb
int
and
push
cld
sub
test
cld
inc
pop
mov
cmp
int
fdivs
push
std
jo
ret
mov
sahf
in
mov
or
call
mov
xchg
or
scas
adc
repnz
mov
mov
cld
std
iret
push
mov
add
pop
cltd
pushf
mov
lods
mov
stos
test
lods
mov
and
lahf
lea
cltd
mov
cli
daa
xor
xlat
test
jmp
test
pop
cwtl
pushf
int3
fbld
dec
idiv
out
mov
icebp
xlat
hlt
loopne
xchg
sti
lahf
fdivr
pusha
cwtl
sti
jl
idiv
cld
out
xor
mov
lahf
mov
mov
mov
int
cmp
fist
cmpsl
and
cmpsl
and
cld
or
out
mov
cld
jmp
dec
cld
dec
out
leave
rorl
imul
fildll
push
clc
notl
cld
add
daa
dec
clc
incl
fnstenv
cld
mov
insb
mov
js
mov
mov
rcr
loopne
add
repz
in
hlt
jg
shl
xchg
mov
dec
clc
fucomip
add
int
lock
test
xchg
aad
scas
lret
loopne
nop
inc
stos
sub
sub
lock
decl
loop
lock
loop
mov
mov
lcall
add
cld
add
fbstp
hlt
mov
and
fwait
rcll
iret
dec
inc
cmpsb
dec
icebp
in
iret
int
cld
or
arpl
dec
mov
or
in
mov
scas
in
pushf
mov
mov
das
jp
mov
mov
lea
inc
sar
movsl
mov
cld
scas
xchg
cmp
mov
stos
les
dec
mov
mov
adc
cld
into
incl
popf
sahf
xchg
clc
ficoml
cld
xchg
fadds
inc
inc
mov
clc
jbe
pop
je
je
xchg
add
or
hlt
cli
scas
out
mov
in
fwait
add
fwait
jbe
stc
pop
dec
pcmpeqb
fdivl
push
jmp
scas
hlt
mov
xchg
stos
cli
adc
adc
cld
js
sti
in
mov
xor
jno
outsl
shr
lods
in
sarl
loopne
push
jns
clc
jg
notb
stc
imul
sub
xchg
js
imull
rorb
fwait
mov
fild
push
icebp
inc
xchg
cli
mov
rclb
in
hlt
xchg
test
roll
mull
out
cmp
daa
daa
or
cli
fcomip
push
adcl
jmp
lods
push
ds
xchg
loopne
cwtl
xlat
mov
int3
loope
mov
fiadd
jbe
mov
push
idivl
loop
sub
add
add
add
hlt
popf
hlt
lock
lock
shr
mov
fwait
lock
hlt
insl
jbe
bnd
jecxz
inc
hlt
out
jno
clc
dec
lock
dec
sbb
mov
sarb
scas
cli
sbb
ret
jmp
jmp
scas
mov
aam
loop
and
icebp
jmp
xchg
mov
std
pop
shrb
fstpt
ja
jp
pop
jb
aam
scas
xor
nop
pop
xor
imul
insb
leave
xchg
xchg
insb
fdivs
es
out
jmp
add
aam
inc
xchg
inc
push
movsb
cmc
je
jle
mov
mov
clc
fs
subl
sar
and
into
mov
jl
sti
mov
cmp
mov
or
je
push
jbe
fnstsw
adc
insl
cmp
sbb
xchg
das
xchg
stc
xchg
std
and
sbb
cmp
sti
call
sub
mov
ja
jmp
jmp
sbb
std
pop
es
push
in
jae
test
sub
test
add
adc
das
lods
adcl
test
insb
pop
imul
inc
push
cli
add
inc
jle
test
add
inc
iret
pop
jle
enter
dec
add
or
adc
scas
cmp
push
jbe
jb
or
adc
jbe
dec
mov
cmpsl
mov
jp
ss
lret
fidivr
pop
inc
lret
add
pop
xchg
pop
out
adc
cmp
mov
adc
jo
lret
mov
mov
insl
mov
int3
add
pop
imul
jmp
and
add
ret
jp
out
ss
cmpl
mov
cmpsl
add
dec
inc
clc
xchg
lock
mov
clc
xchg
push
and
lock
lock
f2xm1
rol
sub
clc
repnz
cli
jl
push
mov
dec
jo
jbe
xchg
cld
adc
out
out
xor
xor
std
adc
sti
jecxz
sbb
decb
je
fs
cmc
mov
mov
repz
sbb
ljmp
js
fcmovbe
je
movsb
test
and
movb
jg
push
pop
in
int3
imul
je
insl
scas
test
and
hlt
mov
mov
inc
aad
xchg
and
movsl
pop
jnp
pop
cmp
std
lock
xor
adc
out
call
fisttpll
cwtl
out
or
add
adc
out
fldl
ljmp
aas
cmp
adc
sub
jae
adc
push
mov
pop
imulb
jge
and
cmpsb
cmp
movsl
lahf
dec
and
mov
mov
scas
push
shrl
pcmpeqb
iret
lahf
sub
mov
mov
push
xor
mov
stc
rcrb
incb
inc
sbb
pop
xchg
sbb
cmp
push
je
aam
jl
adc
cmp
repz
repnz
and
inc
add
xchg
outsl
xchg
jb
mov
dec
inc
mov
inc
pop
test
mov
rcl
sbb
adc
ljmp
mov
push
out
repnz
sbb
mov
test
sti
fiadd
out
jge
cmp
sub
adc
repz
out
mov
nop
inc
lock
mov
or
dec
repz
xchg
adc
decb
inc
mov
jg
icebp
pushl
repnz
loope
dec
loopne
stos
inc
mov
addl
enter
mov
xchg
cmp
mov
jg
loope
pushf
cmp
fnop
jp
cli
jmp
aaa
out
out
cli
or
jp
pop
jmp
iret
jp
jg
mov
dec
imul
vcomisd
cmpsl
jp
jp
aaa
je
fistl
inc
adc
jle
jbe
ret
cld
xor
jmp
insl
mov
jg
stos
iret
icebp
jecxz
lret
push
repz
test
mov
data16
mov
ljmp
repnz
mov
rolb
test
add
decb
clc
sub
enter
jmp
fstl
jecxz
jle
movsb
jl
loope
icebp
pop
sbb
or
neg
ljmp
and
test
loopne
clc
popa
push
dec
push
scas
xchg
icebp
loopne
dec
hlt
mov
xchg
fcos
out
jb
or
and
adc
cvtps2pd
cltd
pop
inc
pop
repz
jmp
inc
das
pop
out
inc
daa
movsb
jl
inc
in
andl
lock
jg
call
fidivrl
xor
pop
dec
mov
lods
inc
icebp
inc
dec
dec
and
repnz
mov
lock
xor
das
repnz
nop
jmp
jp
rorb
scas
fisttpl
bound
lret
pop
pop
push
cltd
push
sbb
test
mov
aas
jle
push
and
inc
dec
and
mov
mov
dec
mov
mov
xor
and
xchg
clc
pop
adc
out
mov
test
loop
paddw
jno
mov
loop
out
inc
xchg
rol
out
cmpsb
lea
mov
dec
mov
aaa
mov
cld
jno,pt
xor
xor
push
sub
jnp
inc
xchg
in
test
jl
mov
inc
and
jecxz
jmp
xchg
std
test
add
sub
or
jl
enter
push
aam
shll
in
incb
jno
adc
in
int3
jmp
or
inc
std
sti
add
dec
add
jecxz
lds
jne
and
clc
fsubp
and
or
inc
cmc
pop
or
jne
cld
mov
xor
pop
inc
loopne
lea
movsb
sub
jo
push
repnz
pop
into
sbb
popa
and
cld
cmp
lods
pop
notl
jns
enter
idiv
cmp
jne
lcall
pop
movsl
les
sbb
rcll
fistpll
fwait
xor
lea
inc
repz
les
std
sbb
icebp
fcomip
jnp
jg
aaa
testb
xchg
call
iret
mov
jae
fcmovbe
outsl
iret
mov
fistpll
iret
pop
jge
mov
pop
fstps
scas
fsubrs
imul
fildll
rcrb
pop
imull
testb
jp
outsl
cld
pop
iret
arpl
mov
pop
lcall
negl
pop
scas
lcall
aad
push
cltd
inc
ror
mov
hlt
mov
jmp
incl
repz
mov
xor
mov
aad
jns
mov
mov
data16
ljmp
inc
mov
icebp
cmpsl
mov
popa
jae
jecxz
ljmp
sbb
fidiv
adc
in
popa
pushf
dec
jno
push
add
lahf
rorb
mov
out
and
das
mov
mov
out
and
and
popf
lock
xchg
movsl
jp
inc
xlat
out
das
push
mov
std
jne
dec
out
stos
call
sbb
loop
and
out
rcrl
test
cli
mov
or
pop
pushf
or
das
cmpsl
mov
add
pop
fsubrp
popa
xor
in
xor
scas
lahf
frstpm(287
fnstenv
xor
iret
iret
test
add
mov
icebp
in
sub
lea
jne
xchg
cmpsl
das
cmp
loope
push
int
std
inc
dec
sbbl
mov
adc
out
mov
mov
pop
les
pop
lret
or
jmp
pop
rorb
clc
mov
jnp
les
int3
jbe
inc
or
sarl
scas
adc
mov
xor
inc
mov
mov
outsl
pop
mov
mov
jmp
nop
inc
aas
mov
sahf
js
jl
jecxz
cwtl
andl
into
in
dec
les
jl
mov
xchg
ret
lahf
xor
add
sub
push
dec
mov
movsb
hlt
aad
nop
push
aas
inc
or
jmp
ret
push
jbe
cmp
pusha
gs
add
jle
or
inc
adc
mov
adc
cmp
les
mov
ljmp
xor
mov
nop
movsb
add
idiv
adc
jl
lock
jmp
mov
hlt
sti
and
loopne
jb
enter
hlt
aas
push
cli
push
out
cmp
sub
add
mov
hlt
cmp
cmp
out
aaa
ds
idivl
fisttp
cmp
and
add
int3
sub
hlt
cmp
roll
call
je,pn
sbb
and
enter
ds
div
xor
jns
out
inc
aam
inc
mov
push
out
mov
jnp
popa
test
jecxz
sarb
rol
mov
les
push
cli
mov
repz
inc
das
cmc
xchg
idiv
lock
lret
jl
std
push
fistp
inc
in
aaa
fdivrl
cmp
test
ds
jl
dec
mov
hlt
jbe
cmp
mov
pop
adc
leave
sub
std
pusha
fdiv
sti
dec
inc
mov
mov
aam
je
iret
fnop
in
push
out
fs
sub
ret
cld
das
mov
cld
sub
cltd
mov
cmp
jecxz
fimull
jbe
mov
inc
lahf
aaa
notb
jo
jp
ret
mulb
enter
mov
das
test
nop
sub
pushf
adc
in
xchg
loope
inc
and
outsb
pop
sbb
lret
adc
dec
add
cmp
aam
into
sti
repnz
or
pop
sti
cmp
mov
scas
test
inc
mov
clc
aas
shll
mov
nop
out
pop
ja
hlt
pop
addb
jg
decl
jmp
int
mov
divl
lahf
sub
fidivr
mov
and
ja
adc
out
repz
fisub
mov
dec
ja
jnp
sbb
lret
lea
fisttpll
lcall
fisub
and
movsl
and
out
ficom
mov
or
xchg
and
mov
test
add
movsb
add
mov
ret
into
fnstcw
sti
into
cmpl
jns
adc
sub
aas
repnz
jbe
imul
mov
dec
add
dec
int
fucomip
repz
in
inc
lret
ds
jmp
pop
loopne
jp
out
or
ds
nop
inc
add
pop
rol
mov
add
aaa
loop
mov
adc
mov
add
jp
jecxz
pop
mov
stc
call
push
enter
in
mov
out
add
sub
inc
jne
aas
sti
ds
negl
out
jp
mov
lret
mov
cwtl
icebp
cmp
push
aaa
stos
and
das
in
outsb
mov
cmpsb
inc
or
mov
or
faddl
push
nop
adcb
add
out
jb
call
inc
stos
addr16
sub
adc
xchg
rolb
sti
cld
cltd
scas
or
hlt
ud1
addb
xchg
cld
out
jb
enter
xchg
or
adc
repz
sub
sub
xchg
mull
hlt
cli
cmpsb
jmp
add
les
cmpsb
ds
ds
jmp
sbb
mov
or
sub
mov
mov
mov
adc
inc
xor
dec
push
add
hlt
or
or
and
cmc
inc
cld
and
in
lock
je
adc
mov
je
jmp
stos
inc
xor
or
ficompl
xchg
in
stos
in
aad
js
je
and
inc
mov
cld
sub
je
jg
and
hlt
and
in
mov
bound
sub
fisubl
xchg
cmpl
jecxz
das
and
into
loope
push
add
or
push
adc
jmp
pop
std
out
into
hlt
fldenv
rclb
aas
lret
pop
daa
daa
addr16
sub
sbb
cmpsl
nop
and
daa
das
and
xlat
loopne
or
loop
dec
rclb
sub
sbb
jg
aas
sti
pusha
sbb
mov
sar
jecxz
sahf
xchg
aad
daa
stc
sub
cli
cmp
daa
cli
inc
sub
xchg
movsl
adc
fcoml
inc
iret
stos
cmp
fucomp
outsl
xchg
adc
push
icebp
xchg
lret
and
sub
repz
or
and
add
sahf
and
push
ret
add
add
dec
enter
pop
mov
invlpg
mov
je
ret
movsb
fisub
int
mov
fcomi
test
cmc
js
sbb
cli
adcl
mov
dec
aad
and
pop
dec
adc
inc
pushf
cmp
sub
daa
sub
stos
je
popf
or
loop
jns
hlt
sub
call
mov
adc
aas
mov
mov
jmp
inc
jp
gs
pop
lea
or
movsl
ds
shll
mov
or
sub
pop
and
je
fs
cmp
pop
fcoml
pop
dec
lret
dec
mov
inc
push
xchg
push
or
jae
cmp
push
push
sub
js
dec
test
iret
jae
jns
jmp
std
lahf
jo
aam
call
fisubl
nop
or
jle
pop
daa
sub
icebp
pop
dec
enter
cmpsl
stc
and
or
xchg
inc
dec
aaa
add
sbb
lea
dec
inc
push
dec
and
mov
mov
das
dec
sbb
push
ficom
outsb
pop
xchg
jnp
movsb
dec
cmp
je
adc
fnop
enter
jo
iret
shll
mov
and
inc
pop
stos
shll
js
sub
sub
and
cld
xor
call
adc
iret
daa
fsubl
es
je
jmp
mov
mov
lcall
xchg
js
dec
mov
and
push
sbb
xchg
jo
adc
dec
push
dec
cmovle
inc
int3
pop
pop
adc
or
test
imul
out
std
xor
shll
nop
cwtl
sub
icebp
cmp
dec
mov
cmp
aad
inc
xor
mov
das
loope
and
mov
adc
ret
sti
push
add
int3
add
and
jp
jle
mov
jge
jge
out
popa
pop
add
rcll
bound
add
mov
or
lret
repz
sbb
das
and
and
int3
dec
adc
mov
mov
dec
out
outsb
xor
in
push
xor
mov
jp
dec
lods
lea
cmpsb
xchg
or
loope
call
sbb
sbb
xchg
pop
nop
inc
loop
dec
jmp
inc
sbb
lcall
iret
cmp
xlat
sub
rol
xchg
out
wrmsr
xchg
add
dec
scas
jne
je
and
jle
fisttpll
jp
iret
adc
and
mov
sbb
and
push
icebp
add
pop
xchg
cmpsb
inc
ja
adc
mov
sub
rcrb
add
das
mov
xchg
call
mov
data16
inc
lds
shll
or
lods
sbb
pop
sbbl
sbb
inc
push
sub
ret
lcall
cmp
cmc
sbb
stc
jb
xor
dec
push
fstps
fst
push
das
in
push
jmp
hlt
loope
cmp
xchg
int3
cmp
in
jg
dec
stc
mov
mov
xor
cmc
sbbl
lock
fsubrl
out
test
loop
scas
cmp
loopne
lahf
and
pop
insb
add
adc
loop
into
push
mov
dec
push
push
sub
shrb
cmp
or
scas
mov
scas
sub
cmp
xchg
lret
sub
mov
insl
xor
jo
mov
cmp
mov
dec
cmp
ja
inc
inc
roll
sbb
and
loop
out
adc
mov
adc
les
push
test
rorb
adcl
mov
or
mov
mov
out
sbb
add
ss
and
cmc
test
lahf
add
loope
mov
hlt
adc
and
pop
out
divl
or
sub
sbb
sub
sub
dec
sub
mov
pop
lret
inc
into
adc
cmpsb
xchg
xchg
movsl
daa
pop
and
sub
xor
aad
lock
cmp
jmp
dec
mov
je
xchg
jb
shrb
adc
mov
pop
jbe
je
stos
je
push
cs
jno
cmc
add
je
je
fidivr
jg
fdivrl
ds
xchg
xchg
ja
in
sub
mov
or
movsb
add
addb
sub
add
bnd
xchg
jb
xchg
dec
pop
movsl
dec
jge
mov
outsl
xor
mov
xor
out
icebp
das
bound
les
jge
js
out
xchg
pop
arpl
add
pop
xchg
lods
push
sar
lods
adc
xor
icebp
xabort
out
mov
mov
jb
dec
enter
nop
add
xchg
mov
mov
jecxz
sbb
xchg
or
lods
adc
pop
ljmp
jb
push
and
je
cmpsb
in
dec
das
jmp
push
pop
xchg
imul
dec
xor
sub
aas
cmp
jmp
cmpsb
cli
stos
imul
add
add
pop
movsl
push
mov
cmp
add
xchg
cmc
sub
dec
scas
aam
mov
xchg
adc
sbb
pop
out
mov
sbb
adc
in
dec
test
lods
test
loopne
lods
jmp
cmp
fiadd
sbb
jo
out
mov
adc
insb
or
out
stos
clc
sub
das
cltd
dec
das
xchg
cld
fwait
xor
repnz
sahf
sub
pusha
lcall
pop
lcall
stos
sbb
nop
ret
inc
dec
xadd
mov
mov
jle
pop
xor
mov
jbe
mov
mov
cmpsl
scas
mov
jle
sbb
cmp
shrb
mov
cmc
leave
movsb
xchg
imul
dec
jmp
adc
jns
push
mov
sbb
xchg
cmc
pop
xchg
clc
iret
ljmp
cli
jecxz
iret
imull
cmc
xchg
je
fs
sbb
lds
xor
out
jae
ja
pop
cmp
jl
les
cmp
lret
xor
xchg
clc
bound
add
jb
notb
adc
js
jp
lods
scas
loope
dec
lret
adc
scas
daa
fdivl
adc
mov
inc
mov
std
cmpsb
jae
xchg
or
adc
dec
test
sub
pop
add
call
test
jmp
pop
sub
mov
mov
add
ret
inc
sti
cltd
loope
lea
lds
mov
icebp
pushf
cltd
je
sti
cltd
ret
mov
cli
fdivrl
and
pop
adc
aam
lret
lock
push
cs
shlb
and
and
sbb
sub
cmc
clc
mov
sub
mov
mov
pop
mov
clc
xchg
lods
pusha
dec
dec
dec
repnz
and
test
mov
mov
add
mov
mov
mov
sti
ret
rorb
out
inc
outsb
aaa
inc
js
lock
mov
push
test
pop
xor
mov
mov
push
arpl
jecxz
sbb
jnp
mov
sub
jg
aaa
jbe
movsl
nop
icebp
lcall
rcl
and
jmp
ret
push
test
stos
and
js
mov
adc
mov
daa
enter
dec
xchg
std
jp
lahf
cmp
and
dec
dec
test
iret
jno
jnp
add
inc
mov
das
jl
jecxz
insb
out
ja
icebp
cmp
dec
test
repnz
in
les
test
sbb
ljmp
lea
jae,pt
nop
dec
cs
ror
in
fdivs
ficoml
scas
pop
lahf
mov
mov
push
jno
jmp
inc
jno
shll
xchg
rol
in
sub
mov
xor
shlb
leave
jl
xchg
xchg
loopne
adcb
decl
loopne
sbb
and
iret
sub
pop
mov
popa
push
cmp
outsl
fild
push
and
pop
je
arpl
repz
arpl
lods
add
mov
dec
fimul
pop
mov
jl
ds
pop
insl
mov
cli
mov
mov
push
xchg
mov
shrb
out
icebp
xor
xor
and
xor
mov
sbb
mov
mov
nop
test
pop
jno
adc
pop
xlat
cwtl
lahf
je
das
sub
fistpl
jnp
mov
or
cmovno
movsl
shr
inc
sub
iret
mov
stc
jae
mov
clc
mov
cmpsl
outsb
xchg
pushf
lcall
or
leave
xchg
fild
jecxz
ret
pop
xchg
push
mov
inc
stos
dec
xchg
jl
pop
in
test
xchg
mov
mov
mov
mov
in
daa
sub
xchg
xor
shrl
xchg
push
xchg
cld
push
mov
xchg
dec
cwtl
dec
test
dec
mov
mov
push
lcall
pop
push
push
inc
faddl
cld
inc
xchg
ja
lcall
xchg
xchg
nop
lea
lcall
lcall
scas
sahf
imul
lcall
jmp
leave
mov
xchg
pop
adc
adc
femms
or
and
or
aas
sarb
sub
outsl
sti
adc
iret
mov
cmp
dec
xor
es
iret
iret
iret
iret
dec
sti
xchg
xor
mov
push
aam
mov
push
bound
fstpl
and
cmp
push
dec
das
decl
loopne
add
shl
cmpsb
jg
jmp
out
pop
popa
jg
ljmp
incb
rcll
pinsrw
incb
jecxz
ss
inc
push
fwait
cltd
jb
cltd
and
in
lcall
xchg
jne
jb
lock
and
mov
dec
data16
jmp
jae
std
pop
lret
aaa
jne
dec
add
add
mov
int
jo
dec
sbb
jb
mov
add
ds
call
cmpsb
jno
mov
in
sub
pop
mov
dec
sbb
sti
jge
dec
pop
fldt
add
and
add
dec
xchg
jp
jnp
loope
and
inc
sbb
test
inc
xor
enter
cld
xchg
lret
cmpsb
pop
jnp
mov
cmp
shr
les
inc
stc
sbb
iret
cmc
lret
push
js
inc
mov
repz
stos
out
addr16
sbb
clc
jae
mov
add
cmpsl
out
mov
mov
iret
add
roll
ret
out
mov
daa
or
xlat
adc
mov
and
lds
mov
movsb
xchg
dec
aaa
pop
rorl
xchg
rcr
popf
je
pop
push
scas
test
jno
and
jb
into
dec
repnz
mov
xchg
lahf
out
movsb
icebp
lds
jge
in
shrl
repz
repz
adc
inc
popf
mov
sti
fcom
aad
ljmp
sahf
sbb
cltd
sub
mov
inc
and
enter
dec
add
mov
adcl
pop
outsb
push
jnp
cmp
sbb
out
cwtl
jae
add
mov
cld
movsl
dec
mov
dec
xchg
mov
and
sbb
lret
mov
xchg
gs
adc
jbe
cmp
in
mov
xchg
and
mov
pop
mov
fbld
jl
jnp
rcrl
leave
cli
sub
lcall
pop
or
in
mov
pop
sahf
jmp
dec
ljmp
inc
and
jl
jb
or
fist
pop
mov
cld
xor
xchg
dec
push
and
in
js
imul
jmp
and
cmp
add
inc
mov
repz
mov
push
scas
test
daa
adc
sbb
call
leave
lds
add
sahf
jmp
or
fs
push
fsts
adc
movsb
sub
daa
aas
jmp
add
sarl
mov
cmp
jge
js
fnstsw
je
test
sub
fidivl
notl
mov
cmc
mov
adc
inc
pop
arpl
std
pushf
mov
inc
push
ret
push
xchg
test
pop
pop
loopne
add
decb
je
mov
jmp
addr16
incb
sub
adc
cld
cmp
add
or
xchg
scas
xchg
fwait
mov
xchg
imul
sarl
ljmp
scas
outsl
mov
or
adc
out
fwait
or
mov
arpl
fisubr
jno
negb
jg
pop
cld
in
mov
ds
add
mov
rclb
jns
les
push
jge
in
pop
pmuludq
sahf
insb
fxch
cmp
pop
or
addr16
mov
lcall
pop
in
rcrb
sbb
lock
sub
cltd
lock
aas
mov
mov
scas
pextrw
mov
mov
ror
stc
push
loope
ss
data16
addr16
imul
adc
add
xchg
pushf
and
test
mov
fistpll
js
mov
jl
js
ror
loope
popf
jecxz
and
xor
shl
pop
lret
mov
aam
js
sbb
mov
in
std
loope
ret
sbb
cmp
jp
das
gs
mul
jp
sar
hlt
leave
jge
sub
push
push
std
mov
mov
jmp
lods
push
pushl
out
jo
cmp
cltd
fnstsw
fist
sbb
shrb
cmp
sbb
out
fisub
push
jmp
leave
les
jmp
in
loop
movsl
jl
xchg
push
add
and
cld
icebp
jb
imul
scas
lcall
sub
imull
inc
cmp
stos
out
fmuls
scas
cmp
push
sti
pop
xchg
scas
mov
repz
std
and
mov
sub
mov
xor
aaa
ja
out
fndisi(8087
jmp
inc
dec
rcr
stc
mov
jb
fcmovnb
and
jl
adc
out
movsb
sti
sti
jl
cmp
xchg
test
loopne
call
incb
xchg
xchg
jge
cltd
inc
scas
or
jne
jb
mov
push
rcr
cmp
mov
ljmp
inc
jge
mov
xchg
ja
lea
and
jle
scas
fldl
cmpsl
les
pop
cld
hlt
rorl
lock
jg
or
mov
out
lods
adc
inc
inc
pop
out
pop
push
hlt
fsts
adc
jg
cmp
or
push
out
imul
movsb
jmp
jmp
rclb
pop
dec
pop
xchg
push
clc
pop
dec
xchg
push
pop
stc
xchg
add
out
imull
push
xor
adc
push
scas
es
pop
mov
mov
cli
adc
pop
adc
popf
lret
jo
and
fldenv
jl
mov
pop
xchg
adc
jnp
mov
inc
imul
fisttpll
add
mov
je
mov
sarl
pop
mov
xchg
sub
addr16
fisubl
shrb
arpl
clc
popa
in
pusha
pop
gs
and
hlt
pop
in
pop
mov
pop
in
pop
pop
gs
push
xchg
pop
pop
mov
in
push
push
xchg
inc
push
xchg
push
push
clc
push
call
inc
push
dec
lock
call
dec
push
inc
gs
dec
dec
dec
push
inc
in
inc
sub
push
push
inc
pop
inc
in
inc
xchg
aas
ds
push
cmp
cmp
cmp
mov
aam
sahf
fwait
xchg
ret
mov
xor
mov
call
sub
sub
sub
daa
es
mov
and
and
rcrb
fld
xchg
gs
xchg
gs
int
fimull
int
mov
fcoms
cld
mov
adc
cmc
sub
mov
or
or
lret
das
inc
test
pop
add
call
mov
dec
cld
mov
stos
sbb
stc
into
jae
cli
lds
xor
xor
inc
and
aad
lret
mov
hlt
xchg
add
inc
add
test
sarl
scas
aam
ret
loopne
jbe
negb
je
stc
out
cmp
das
outsl
sub
repz
daa
daa
or
cli
mov
jo
xchg
aam
stc
mov
scas
scas
ss
jmp
call
pop
mov
lock
cmpsl
cmp
and
mov
push
loop
imul
pop
mov
sub
or
sub
cmp
mov
sub
add
ljmp
popf
and
add
rcrl
jb
clc
add
mov
stc
mov
jbe
pop
pop
dec
psubusb
pop
push
sub
test
ss
mov
xchg
psubb
mov
out
xchg
cli
test
movsl
clc
aam
jae
dec
fnstsw
inc
clc
test
loopne
ja
orl
fbstp
in
int3
je
add
daa
lahf
mov
jbe
imul
mov
addr16
test
cmp
mov
jb
in
test
out
test
cld
xchg
mov
mul
je
lea
lahf
shrb
cmp
adc
stc
push
hlt
daa
dec
xchg
cmp
jl
cmc
aaa
std
xor
mov
shll
aas
dec
out
and
pop
pop
and
call
iret
aad
mov
imul
and
out
mov
jne
cs
jecxz
mov
lods
pusha
push
pop
add
mov
lds
add
in
mov
aas
pushf
jmp
ret
ljmp
ret
mov
push
fsts
jnp
mov
jp
dec
jns
aas
mov
cmpsb
jae
out
fcomi
icebp
stos
in
adc
test
enter
push
or
test
rolb
dec
jns
cmp
cmp
or
push
and
jmp
mov
inc
sub
fiaddl
xchg
mov
int
stc
or
mov
scas
test
ja
cmpsl
or
cmp
pop
dec
cld
jmp
mov
xchg
mov
out
mov
mov
xchg
gs
sbb
stc
mov
xchg
gs
mov
stos
rorl
add
cwtl
adc
cli
lret
popa
adc
push
adc
pop
adc
pmulhuw
pop
inc
push
in
or
int
push
pop
sub
mov
gs
xchg
mov
xchg
gs
xchg
test
xchg
mov
mov
push
daa
pop
xchg
dec
mov
mov
xchg
in
lcall
xchg
mov
ljmp
jbe
dec
mov
je
jae
cld
jb
jno
fnstsw
outsl
mov
mov
and
scas
insl
mov
imul
xchg
mov
lds
addr16
data16
lret
das
stos
gs
mov
mov
adc
push
int3
mov
sbb
sbb
gs
push
pop
sbb
mov
mov
lea
xchg
gs
nop
xchg
xchg
lcall
mov
daa
int
pop
imul
hlt
ja
int
int
daa
outsl
dec
jmp
pop
jb
pop
jnp
or
cmpsb
test
pop
xor
in
roll
hlt
repz
loopne
cmp
leave
add
xor
sub
add
scas
mov
or
sti
cbtw
iret
lret
jp
popf
sub
cmc
cmpsb
or
pop
sbb
mov
ja
mov
cmpsl
mov
mov
mov
lods
out
push
scas
out
sbb
xchg
lods
push
mov
mov
imul
xchg
stos
mov
cmc
mov
lret
sti
popa
lds
or
test
aas
repnz
ja
cli
in
mov
test
dec
mov
mov
jbe
sahf
pop
daa
icebp
add
cli
cld
add
adc
rcll
sub
fiadd
test
push
add
push
or
std
fmull
lods
shr
sbb
lock
dec
pop
sbb
xchg
int
test
popf
or
ljmp
movsb
cld
inc
in
cmpsl
or
dec
sbb
shll
nop
cmp
mov
iret
add
dec
idivb
cli
addr16
mov
fbld
push
jg
out
ret
pushf
js
loope
das
pop
mov
cltd
dec
xchg
gs
int3
jbe
aad
mov
dec
pop
mov
cld
pop
lea
xchg
add
adc
xchg
sub
cmc
or
adc
cltd
clc
push
inc
push
pop
xchg
mov
push
and
mov
add
mov
cmp
pop
arpl
mov
xor
adc
pusha
push
inc
aaa
mov
pop
sub
push
xor
push
xor
enter
hlt
popa
pop
loop
lret
jns
in
mov
push
adc
movsl
jl
je
fcmovnu
jne
inc
in
sahf
add
cmpsb
jecxz,pt
push
call
decl
je
mov
or
mov
pop
push
jno
inc
pop
in
push
mov
or
test
out
clc
pop
push
cmp
lea
xor
test
loop
int3
out
fstl
das
jg
stos
pop
pop
push
daa
pop
test
mov
jp
inc
negl
jb
ja
jmp
lods
in
pop
mov
scas
mov
bound
pushf
mov
adc
in
cli
pop
xchg
fcomps
dec
adc
push
loopne
xchg
push
or
adc
in
mov
fmull
fisubrl
mov
mov
fsts
aas
fnstsw
add
sub
xchg
out
fiaddl
fcomp
std
ret
sbb
add
ja
inc
sub
test
adc
add
nop
push
js
rclb
inc
shrl
dec
adc
mov
lret
cwtl
lcall
cmpsl
enter
mov
xchg
dec
jle
inc
sbb
sarb
test
xchg
into
adc
test
jge
and
out
out
add
inc
fidivr
cli
ret
xlat
cli
out
and
pop
movsl
mov
daa
in
jae
mov
lret
std
int
aad
fdivrl
repz
ret
inc
loop
xchg
ljmp
out
int3
icebp
fsubrp
loope
repnz
icebp
mov
cltd
outsl
mov
sub
pop
rolb
xchg
icebp
repz
adc
inc
cwtl
mov
out
jp
in
sti
test
jae
or
movsl
push
cmp
mov
jle
pop
sbb
lret
in
out
cld
test
repz
sbb
jl
icebp
or
mov
ljmp
mov
subb
push
xchg
adc
movsb
inc
pop
divb
adc
or
jo
jl
pop
cmc
cmp
fistpll
mov
sti
fnstsw
stc
into
lds
ja
push
int3
pushw
cltd
fimull
das
lret
lret
addr16
shll
arpl
das
das
das
lds
popa
xchg
pusha
mov
das
sub
das
xchg
pop
rcrl
and
mov
pop
fcomps
pop
xchg
push
fcoms
cld
mov
push
lcall
imul
stos
dec
arpl
lret
popf
dec
lds
inc
inc
lds
mov
inc
mov
mov
hlt
cmp
cmp
iret
mov
aaa
addr16
lcall
sub
gs
xchg
sub
daa
inc
push
jle
es
xor
aas
push
adc
and
and
pop
xchg
jo
mov
cltd
aam
mov
inc
icebp
decb
xor
xchg
pusha
test
mov
std
in
mov
mov
aaa
clc
dec
xchg
repnz
icebp
das
adc
ds
loopne
adc
addr16
xor
jle
das
sbb
jne
lret
pop
pop
jmp
cmpl
push
sbb
lret
sbb
add
and
out
scas
int3
scas
xchg
mov
pop
push
mov
lcall
sub
xchg
xchg
xchg
fidivrl
xchg
repnz
add
dec
jne
push
push
fbld
inc
mov
jg
pop
sarb
aas
loop
test
fiaddl
pop
lcall
jge
iret
sub
scas
cwtl
sti
js
cmpl
je
inc
xchg
das
imul
and
mov
enter
sub
shlb
out
repnz
lret
cmp
cmp
dec
cltd
out
mov
xchg
cltd
push
xor
xor
sti
jg
cltd
mov
jnp
stc
pushf
sub
dec
addr16
xchg
ss
add
loope
push
das
shlb
jle
dec
cmovnp
cmpsl
lahf
mov
test
mov
sahf
jo
xchg
hlt
mov
mov
fist
adc
sete
mov
sahf
lea
xchg
stc
xor
or
ret
or
jle
mov
sub
mov
mov
cld
jmp
in
mov
and
fwait
jp
fstpl
loop
jecxz
popf
lods
out
adcb
inc
incb
enter
dec
hlt
daa
in
fld
add
cli
jp
cs
push
iret
cmc
pop
jmp
ja
pop
or
xchg
lods
jmp
inc
lahf
testl
dec
sub
aas
cli
jb
sbbl
mov
cmc
pop
push
and
test
lahf
lods
cmp
idivl
pop
sub
mov
mov
ret
pop
pop
xor
xchg
lock
cmp
in
jge
inc
pushf
mov
pop
and
mov
cmp
insb
cmp
jge
notb
push
ss
aas
cmp
add
daa
mov
cmc
jo
cli
pop
jecxz
mov
in
add
rorl
lahf
and
addr16
fldcw
jb
ds
cld
adcl
xchg
xchg
or
fs
xchg
imul
inc
or
or
in
lds
add
add
mov
add
mov
mov
cmp
pop
xchg
stc
push
add
gs
xchg
mov
jle
lcall
int3
bnd
stc
mov
push
dec
and
pop
and
xchg
testb
clc
inc
push
pop
push
sbb
mov
stos
hlt
lret
loop
mov
imul
push
xor
push
mov
add
out
insl
pop
add
pop
add
inc
cmpsl
mov
ljmp
push
lds
loope
je
mov
daa
sub
mov
sarl
daa
ret
ds
push
mov
call
mov
dec
mov
cmp
iret
lds
inc
stos
ficompl
pop
sbb
inc
mov
jp
cli
xlat
jmp
sbb
push
cmp
mov
icebp
and
call
push
lods
scas
fsub
adc
inc
jb
mov
dec
ja
mov
notb
sarb
mov
int
dec
jae
popf
into
cmp
cmp
mov
jl
stc
sbb
stc
pop
mov
pushf
stos
pushf
stos
lcall
stos
jle
stc
xchg
int3
and
adc
mov
dec
adc
push
cmpsl
int
stc
pop
cmpsb
lret
push
je
inc
and
push
jae
stos
out
fmuls
jne
jp
movsl
es
and
stc
and
and
ss
and
and
and
adc
stc
dec
lcall
cmpsb
bound
jl
outsl
and
or
jo
fwait
sub
inc
xor
push
pop
fstps
xchg
sbb
sub
sub
xchg
in
sysret
push
test
jg
je
lahf
mov
pop
icebp
aas
inc
lcall
sbb
hlt
ljmp
xchg
pop
rorb
jecxz
jmp
sti
jg
mov
add
add
cmc
les
pop
incb
pop
jg
dec
push
std
add
bound
mov
cmp
lcall
loopne
jne
mov
cmp
divl
push
orl
repnz
stc
mov
jge
add
in
js
mov
incl
stc
mov
iret
ret
setp
fistl
repnz
cli
xchg
lds
shrb
cld
js
stos
or
dec
add
sbb
lcall
mov
aas
jb
mov
push
hlt
inc
mov
lea
pop
out
dec
sub
movsb
cmp
fcompl
cmp
fucomip
aas
mov
sbb
fisub
divb
daa
cmpsb
out
mov
out
add
repz
cmp
push
movsb
xchg
ror
arpl
fdivs
in
jne
cmc
icebp
jle
mov
notl
aas
inc
jecxz
xor
mov
cld
add
add
add
cwtl
mov
and
xlat
and
pop
inc
out
jno
ficomp
add
addl
xchg
ficomp
add
je
cmp
loope
sbb
scas
mov
cmp
pop
inc
mov
aam
mov
gs
lea
mov
fwait
xor
xchg
nop
call
into
ljmp
add
pushf
ret
sub
stc
add
aaa
frstor
and
sbb
dec
add
add
dec
jl
add
push
stc
sbb
push
sbb
push
sbb
adc
scas
jno
test
sbb
sbb
scas
pop
add
add
clc
jle
adc
or
xor
pop
das
inc
push
lahf
jl
jmp
in
iret
mov
jnp
lods
lret
dec
loopne
mov
add
sub
jg
pop
add
cli
mov
out
sbb
scas
mov
decl
rcll
fisttpll
jno
xor
repnz
icebp
test
pop
loopne
sar
xchg
push
je
test
testl
push
jp
je
mov
pop
mov
cmp
test
push
mov
pop
test
dec
mov
add
jle
pusha
jno
out
cmpsl
pop
movhlps
inc
and
push
jo
aam
mov
adc
jb
cli
push
int3
cs
cmp
int3
sub
loope
lret
fcmovnb
mov
rclb
jns
ja
adc
decb
inc
fs
out
dec
mov
test
nop
jge
std
pusha
inc
movsl
cld
xcrypt-ctr
cmpsl
sahf
test
and
cmp
cs
xor
xchg
jae
mov
mov
ret
lock
js
add
mov
cs
sub
into
add
mov
push
les
adc
das
jnp
and
mov
pop
in
push
mov
in
jns
mov
xor
inc
pop
jb
pop
xor
in
std
ret
or
popa
adc
in
dec
popl
dec
jle
test
xchg
xchg
imul
mov
loope
inc
je
test
mov
jbe
adc
fcomi
xchg
dec
repz
adc
or
pop
push
negb
add
cs
out
sub
adc
out
dec
cmpsb
stc
je
xlat
ficoml
dec
sub
xor
lock
repz
xlat
loopne
sarl
mov
loopne
ljmp
out
push
push
xor
push
xchg
jecxz
adc
stos
insb
hlt
mov
xorl
pop
stc
inc
pop
jbe
sti
jbe
je
out
je
je
clc
push
add
jb
je
mov
int3
das
pop
mov
dec
nop
adc
push
mov
outsb
mov
jns
pop
je
mov
imul
push
es
lcall
sbb
scas
aam
mov
and
in
jb
out
mov
loope
hlt
sarl
jmp
mov
dec
mov
jecxz
negl
pop
inc
pop
repnz
push
dec
cli
push
and
popf
pop
in
dec
mov
cmpsb
pop
ljmp
xchg
jmp
xchg
xlat
pop
adc
int
sti
mov
xor
xchg
mov
pushf
addl
xor
clc
out
pop
aas
jl
and
add
stos
jmp
add
pop
dec
icebp
repnz
mov
or
mov
mov
add
push
lock
ds
test
int3
adc
inc
andb
stc
mov
je
push
push
icebp
cmpsl
xchg
stc
push
cmp
ljmp
push
or
test
jb
repz
jg
add
dec
inc
mov
mov
les
andl
add
mov
cld
mov
jbe
scas
cli
push
sbb
lods
dec
divl
das
and
daa
mov
mov
and
cmp
fstpt
arpl
enter
xor
mov
aaa
adc
les
or
inc
call
inc
fcmovb
xchg
fist
lock
inc
xor
sub
sahf
out
or
sbb
cmpsl
cmp
scas
sub
add
and
jbe
in
andl
ds
pop
pop
mov
enter
cmp
movsl
cld
aas
mov
adcl
push
sar
repz
repnz
cmp
dec
idivb
pop
jecxz
les
stos
xor
inc
mov
decl
xchg
je
cltd
add
clc
ds
sub
iret
clc
aad
aas
mov
push
push
push
imul
stc
lret
aam
enter
cmp
mov
test
jmp
cwtl
mov
js
mov
mov
out
inc
push
iret
mov
mov
movsb
mov
iret
lret
setl
push
es
push
xchg
dec
add
sub
call
xchg
mov
in
add
mov
icebp
scas
cwtl
pop
into
test
inc
in
dec
dec
cld
stc
lahf
sbb
mov
cmp
and
lock
in
icebp
lock
xchg
repz
xchg
stc
push
in
stos
or
sti
jecxz
test
test
adc
cmp
mov
adc
mov
je
iret
mov
lahf
ret
daa
cmp
inc
mov
dec
jp
lock
mov
add
mov
mov
mov
lods
sarb
loopne
out
mov
xchg
jne
addr16
daa
jmp
mov
cs
int
sub
jo
mov
xchg
decl
fsubp
and
repz
jge
mov
outsb
mov
in
mov
mov
pop
dec
pop
jp
pop
inc
mov
scas
cmp
movsb
dec
mov
jge
push
xchg
in
test
out
sahf
pop
shl
pusha
ds
js
inc
lods
mov
jmp
daa
bound
xchg
lcall
pop
stos
lret
push
pop
pop
out
cmp
dec
loop
js
mov
rcrb
mov
je
jmp
inc
fwait
ret
ret
sbb
aas
inc
pop
push
leave
stos
cwtl
pushf
clc
mov
inc
leave
lock
negl
lods
adc
push
cld
jnp
jmp
mov
jbe
aam
mov
jecxz
icebp
mov
fisub
fistl
mov
jg
lahf
hlt
imul
or
pop
lock
pop
and
fisubrl
add
add
fucomp
dec
inc
add
std
push
jne
sub
fdiv
add
ret
jbe
jnp
sub
in
pop
daa
jno
clc
push
inc
push
loopne
pop
out
mov
and
pop
pop
xor
cli
pop
pop
adc
and
cmp
jbe
add
mov
in
scas
mov
xchg
pop
mov
xchg
int
mov
ret
in
mov
sti
sahf
sti
pop
sarl
call
insl
jmp
inc
fdivrs
adc
jl
xchg
gs
mov
jns
push
adc
inc
pop
cld
notb
in
gs
xchg
sahf
leave
loopne
subl
sahf
ljmp
cmp
jp
mov
jmp
sub
js
cld
xor
xchg
mov
xor
mov
rorb
test
lcall
lds
lock
enter
and
and
and
sahf
test
sbb
xchg
lods
dec
sbb
pop
push
fldenv
fcoml
adc
call
sti
mov
lret
xor
xchg
popf
test
pop
pop
dec
fs
push
jp
push
insl
movsb
mov
fisttp
fmulp
sbb
xchg
pop
adc
ds
sub
cmpsb
les
je
dec
jge
aas
in
xchg
les
outsb
lcall
xchg
stos
mov
sbb
movl
mov
xchg
pop
fwait
mov
pop
aad
xchg
mov
or
lods
repz
into
out
mov
ljmp
loope
jecxz
push
imul
sub
dec
pop
xchg
ja
mov
add
add
ljmp
in
add
sbb
pop
orl
pushf
dec
shrb
mov
arpl
cltd
lret
mov
insl
lcall
mov
out
mov
cmc
mov
out
icebp
push
jns
mov
loop
and
and
test
lods
xchg
psubw
pop
push
mov
cmp
cli
mov
mov
or
fldt
stos
fs
push
test
mov
jnp
jle
daa
cld
and
mov
movsb
js
lcall
fbld
pop
lret
inc
xchg
jo
scas
add
dec
mov
jmp
out
sub
cmpsb
pop
jnp
sub
cld
mov
loopne
bound
fild
push
std
in
pop
pop
sub
in
outsb
and
roll
jno
popl
fidivl
arpl
mov
fcmovb
cli
jae
jo
dec
mov
jg
add
pop
stc
das
lods
cld
push
sahf
sub
dec
add
fnop
in
test
xchg
scas
inc
sub
adcl
cld
and
xchg
mov
mov
inc
adc
pop
mov
or
roll
and
movb
jle
ja
sub
popa
dec
pop
push
mov
jns
lock
xchg
xor
jecxz
jb
jg
cld
adc
inc
xlat
fildll
stos
fnstsw
arpl
test
cld
adc
loopne
jnp
inc
scas
fldcw
xchg
inc
cmp
or
push
insb
xchg
stos
push
add
sbb
cltd
out
inc
pop
ja
mov
mov
in
aas
andl
xlat
dec
cld
test
lock
daa
jmp
xlat
dec
out
in
fwait
sbb
aaa
std
lret
mov
ljmp
jmp
or
fwait
push
neg
jge
mov
pushf
jl
clc
push
roll
out
nopl
dec
decl
mov
mov
insb
mov
dec
in
repnz
sub
sub
add
pop
rcr
mov
into
adc
pop
loope
aad
mov
in
call
xchg
mov
pop
movsb
mov
cmp
lods
out
mov
sub
std
mov
cld
mov
xchg
fstl
cli
mov
mov
sub
jne
enter
arpl
add
sahf
clc
xchg
sbbl
sub
inc
push
es
sbb
mov
loopne
push
cs
sub
popa
scas
pop
enter
ret
mov
adc
out
std
pop
or
fmuls
pop
jbe
jecxz
and
or
adc
jmp
ljmp
pop
jmp
xchg
ja
push
fisubr
out
jb
ja
pop
iret
sub
loopne
and
mov
outsl
and
inc
and
adc
xor
sub
mov
inc
push
xchg
pop
or
mov
cmp
sbb
mov
insb
mov
jae
inc
stc
lret
ljmp
fcoml
lock
inc
xchg
cli
or
lret
sbb
fisttpll
pop
push
shr
cmp
into
repnz
scas
scas
push
and
lahf
ja
ja
sti
movsl
jecxz
ret
xchg
movsb
pop
loope
sarb
jle
into
pop
into
add
inc
cmp
incl
rcrb
test
pop
loop
cmp
jnp
inc
or
clc
mull
sub
mov
pop
and
mov
js
and
in
std
sti
pop
scas
stos
cmp
repnz
adcl
call
xchg
fdivrs
mov
jle
mov
rcrb
pop
mov
jns
xor
jle
cli
out
xchg
clc
jae
fcoms
fstps
fisubl
pop
sbb
push
mov
sub
pop
stc
jl
mov
lds
bound
ljmp
inc
jle
test
cmp
pop
lea
sarl
clc
outsb
mov
xor
mov
push
popa
and
adc
lods
lods
adc
adc
jg
popf
out
stc
xchg
psrad
mov
cmc
xchg
or
or
push
cmpsb
nop
pop
add
mov
lods
xlat
pop
scas
jmp
int3
std
imul
nop
push
mov
insb
addl
out
out
push
mov
sbb
mov
or
xchg
stos
or
pop
jnp
lods
adc
cmp
mov
das
xor
mov
stos
fwait
in
int
add
cmc
clc
cmp
mov
cli
cmpsl
sbb
pop
test
daa
mov
cmpsb
out
jno
repnz
push
sbb
inc
inc
icebp
jl
ljmp
adc
ret
adcl
lahf
mov
ljmp
xor
sbbl
out
ror
nop
fwait
outsl
js
pop
mov
inc
and
mov
cld
cmp
add
in
sub
cmp
daa
mov
xlat
pop
mov
call
daa
pop
into
add
pop
fwait
out
repnz
mov
add
out
pop
lahf
and
or
sbb
into
mov
into
lods
fnop
sbb
iret
movsb
cmc
shrb
out
into
jno
ja
lahf
iret
pushf
incl
sub
mov
iret
lock
outsl
mul
pushf
js
ljmp
into
punpckhbw
pop
jge
aad
fucomip
pushf
ja
lahf
enter
push
dec
mov
pushf
popa
jmp
pushf
fstpl
cli
mov
pushf
xlat
iret
jbe
lock
iret
or
into
pushf
lahf
idiv
fadd
sarb
aaa
mov
daa
stos
sarl
jp
lret
mov
int
jmp
sahf
cmp
stos
xchg
jmp
mov
repz
inc
jne
dec
inc
fwait
jno
stc
sub
sub
push
repnz
mov
out
jno
fldenv
sub
cli
int3
pop
test
cmc
xchg
gs
je
add
ds
pop
push
inc
aaa
das
mov
out
fidivl
jg
enter
enter
adc
scas
cmc
sbbl
ret
jmp
xchg
insb
in
jge
es
in
std
jns
jecxz
aad
pop
out
jne
stos
push
cmp
scas
inc
adc
adc
cmp
xlat
mov
push
fsub
inc
mov
loopne
jmp
pop
jae
cmp
xor
fsubrl
cwtl
mov
dec
pop
add
mov
int
xor
xchg
add
in
dec
fs
mov
add
jg
aam
loop
cli
js
fucomp
jae
fadd
loope
cltd
out
xchg
dec
mov
or
adc
mov
jbe
lods
mov
imul
sbb
cli
stc
cli
fild
daa
sti
das
jmp
pop
lcall
add
xchg
and
in
loopne
and
into
cmp
nop
sbb
mov
lock
dec
push
pop
and
lcall
sbb
mov
lret
mov
mov
mov
jne
aad
pop
xor
int
and
pop
push
pop
fsts
dec
lea
fsubl
mov
fdivrs
mov
and
popa
xlat
cmc
cmp
test
negb
dec
or
cmp
xlat
iret
fnop
outsl
clc
dec
ret
into
imul
sti
push
mov
in
lret
sbb
out
or
outsl
aad
fcomip
xchg
xchg
int3
mov
mov
add
pop
insb
xchg
sbb
add
out
test
fidivrl
das
js
jmp
out
scas
std
shrb
add
jne
shrb
add
lcall
adc
scas
sub
cmp
dec
lret
add
jge
idivl
aas
int3
ds
cmp
cmp
cmp
ds
cmp
cmp
in
xor
es
xor
xor
mov
xor
sub
jge
xchg
clc
in
int3
ret
int
xchg
movl
out
pop
xor
ret
pop
mov
pop
lods
jo
mov
cwtl
cmpsb
cmpsb
push
xchg
lahf
jmp
sub
push
add
jo
ds
push
add
sub
mov
push
leave
cld
jb
aad
mov
sahf
cwtl
push
dec
add
dec
add
dec
test
cmp
dec
add
dec
add
mov
aam
cli
mov
stos
dec
pusha
jmp
mov
dec
push
divb
add
cmpsb
jl
pop
enter
je
jp
sar
popf
test
das
cltd
sbb
outsl
fnsave
adc
jb
xchg
in
es
pop
pop
fisttp
int
negl
ds
jnp
mov
xor
aaa
iret
outsb
outsb
sbb
daa
arpl
pop
push
daa
mov
push
mov
fbstp
dec
push
adc
dec
mov
int
aaa
aaa
aaa
cmpsl
cli
repz
stos
mov
mov
mov
dec
incl
test
sub
mov
and
decl
in
das
fsubrs
in
jg
push
out
and
repz
call
and
int3
lahf
in
mov
fbstp
roll
push
mov
ds
mov
sti
dec
lcall
push
iret
lahf
mov
fild
fdivr
clc
mov
movsb
pushf
cmc
lods
rol
scas
std
negl
lods
or
jmp
mov
mov
neg
mov
sarb
mov
and
nop
rcr
mov
lahf
jne
imull
fistpl
xchg
outsl
sti
mov
fistpll
jge
mov
pop
xor
test
leave
and
std
clc
ja
in
sti
or
adc
jge
fcomps
iret
fldl
dec
fs
fwait
xchg
xchg
lcall
int
mov
std
hlt
lahf
mov
rcr
jne
scas
sub
jae
and
insl
scas
mov
clc
push
ret
pushl
js
ds
mov
adc
xor
dec
leave
cmp
mov
cmp
mov
cmpsb
out
jecxz
nop
mov
push
lret
push
out
mov
daa
jg
in
scas
nop
xchg
icebp
pushl
out
pusha
inc
sar
repz
mov
out
jecxz
cmp
sub
scas
inc
mov
test
xchg
and
mov
stos
mov
idivl
adc
xchg
dec
push
sub
out
mov
xchg
dec
insb
dec
dec
imul
sahf
and
xchg
adc
daa
jnp
mov
jne
loope
out
enter
mov
fwait
mov
fsubr
in
nop
xchg
xchg
add
mov
lcall
mov
out
add
lods
lods
lcall
xchg
mov
ret
dec
xchg
test
cwtl
lea
ficompl
dec
mov
push
mov
and
dec
repz
cmp
mov
sub
cmp
loopne
decl
lods
dec
lods
hlt
scas
out
cli
dec
sbb
sarl
lods
out
out
leave
sti
push
push
repz
sahf
xor
in
xchg
test
out
xchg
sub
adc
push
cmp
dec
dec
jmp
mov
jb
jg
mov
pop
jae
mov
mov
lcall
pop
cmpsl
int
mov
adc
fucomip
jns
pop
fmulp
daa
jp
cwtl
out
or
cmpsl
out
sti
in
jbe
dec
enter
cmc
xor
mov
imull
sahf
pslld
xchg
sub
mov
in
in
jns
xchg
outsb
mov
sahf
pusha
and
pushf
mov
je
test
idivb
ds
xchg
xlat
xchg
xchg
lret
mov
jmp
sbb
imulb
ficom
pushf
cmp
test
sub
inc
std
mov
lea
xor
mov
mov
xchg
inc
std
mov
pusha
lock
xchg
and
xor
mov
insb
pop
popf
lret
cmp
or
push
adc
push
sahf
fisub
addr16
icebp
pop
in
xlat
xchg
std
lea
iret
test
lods
insb
jmp
and
ret
push
mov
xchg
in
pop
scas
cmp
ljmp
loope
cli
loopne
dec
into
fildll
xchg
jp
adc
aam
nop
jle
sub
call
loope
jno
in
mov
ret
fcom
lods
sahf
mov
mov
jb
and
sti
adc
xchg
mov
mov
mov
mov
test
push
ds
cwtl
lock
inc
popf
hlt
shr
ljmp
imulb
stc
mov
ljmp
cli
clc
dec
mov
pop
lea
or
fild
cmp
in
push
dec
adcb
push
ret
pop
ret
rol
stos
shrl
add
mov
shrb
rcrb
rorb
sarb
aaa
shrb
daa
rolb
and
movl
iret
push
iret
inc
iret
push
iret
repnz
jecxz
int
ror
into
lods
nop
scas
str
cmpsb
into
mov
into
mov
jge
push
into
dec
add
add
into
ds
push
into
add
std
int
int
int
int
int
int3
lret
int3
mov
int3
pop
int3
inc
int3
fild
call
lret
mov
les
mov
add
add
lret
xor
pop
leave
push
leave
inc
leave
sub
enter
enter
enter
enter
inc
mov
enter
cmpsl
jns
outsb
popa
push
add
add
movl
sbb
push
inc
icebp
loope
rol
mov
mov
nop
scas
sldt
int
mov
pushf
les
ret
cmp
add
add
sub
adc
hlt
ret
mov
stos
ret
jno
pusha
ret
dec
ret
dec
ret
or
mov
ret
cmp
add
ret
adc
or
movsb
rcll
mov
lcall
testb
xor
in
ror
xor
into
out
add
aad
mov
int
int
int
int
int
ret
jns
sldt
add
hlt
rcr
lret
sarl
in
fadd
nop
rolb
adc
nop
negl
iret
ret
add
add
iret
push
iret
dec
iret
es
and
push
iret
adc
mov
into
mov
mov
hlt
ljmp
ljmp
int
mov
add
jp
sub
mov
lret
fxch
ror
leave
jb
add
add
leave
and
or
xlat
enter
enter
enter
enter
pop
aaa
movl
add
add
mov
pop
arpl
push
movb
aaa
xor
and
or
cli
add
xlat
lds
lds
lds
adc
add
in
or
inc
rol
mov
les
les
dec
les
inc
les
mov
das
les
sbb
ret
lret
ret
ret
ret
xchg
ret
outsl
ret
ss
and
pop
mov
add
add
cmp
test
mov
lods
roll
and
sbb
or
mov
stos
pop
jle
mov
lock
pop
scas
call
iret
test
mov
ljmp
xchg
iret
sub
aad
jb
stos
bswap
add
out
xchg
int3
add
add
xchg
test
popf
lret
xchg
lret
insl
lret
push
lret
xor
add
lret
dec
clc
lret
xor
push
clc
leave
call
leave
jo
cmp
and
add
loopne
enter
adc
add
mov
call
imul
xor
ffreep
inc
add
add
lds
push
lds
aas
lds
lds
cli
les
or
enter
inc
les
les
jle
ret
add
jp
ret
mov
add
mov
xchg
jle
sbb
mov
ja
outsl
roll
ficoml
xchg
shlb
push
jp
and
add
nop
pop
imul
dec
into
inc
into
cmp
sub
int
int
int
int
dec
lods
cli
add
push
int
int3
ror
imul
lret
push
lret
dec
lret
inc
lret
cmp
xor
and
add
jmp
loop
ror
enter
mov
stos
lret
add
and
popf
lret
dec
lret
sbb
jge
enter
enter
mov
mov
inc
or
or
add
cmc
sbb
lods
les
std
ret
imul
and
add
roll
sarl
xor
sub
pop
rorl
or
out
shr
loope
adc
leave
sbb
outsl
pop
ret
push
mov
ds
aaa
iret
xor
add
add
adc
or
bound
int3
jmp
aad
mov
lcall
lret
cmc
add
lret
pop
jl
xor
and
sbb
add
add
leave
sti
enter
enter
push
outsb
enter
enter
enter
enter
add
or
pop
out
jmp
sbb
jecxz
je
outsl
jb
push
repz
mov
add
lds
lds
sub
icebp
faddp
lret
mov
test
les
les
arpl
push
add
les
les
les
je
stc
ret
repz
loope
aam
mov
ret
lcall
ret
test
jo
fs
push
push
jb
ret
adc
movnti
add
repnz
test
ret
lcall
shll
rorl
cmp
aaa
add
and
sbb
stc
shr
out
loopne
cmpb
jp
rol
mov
mov
cmpsb
shlb
cmp
xadd
rolb
ds
pop
iret
ljmp
add
cmc
iret
out
fcmove
ror
enter
test
iret
push
push
cmpl
iret
inc
iret
cmp
iret
and
sbb
into
out
into
or
dec
mov
and
mov
cld
mov
sbb
cld
ljmp
int
jbe
ja
dec
mov
leave
andb
xchg
int3
int3
push
pop
int3
dec
mov
int3
xor
and
add
add
int3
sbb
adc
or
add
sti
lret
repnz
in
lret
out
stc
add
pop
out
lret
pop
leave
push
leave
inc
leave
xor
sbb
add
xchg
enter
shrb
fcmovnb
je
fs
pop
push
dec
fiadd
and
call
test
dec
call
scas
lds
nop
pop
aas
les
xor
sbb
ret
cmc
ret
fild
out
ret
faddp
roll
xchg
ret
jl
add
jp
jne
mov
sarl
rorl
clc
mov
rcrb
dec
in
stc
add
cmpsl
push
shr
iret
mov
iret
les
pop
cmpsl
push
xchg
iret
pop
fmuls
inc
test
iret
scas
lock
xor
iret
and
pop
pop
ja
out
test
push
ljmp
cmp
add
pop
mov
test
in
in
pop
mov
orl
cld
xchg
inc
xchg
clc
outsl
inc
test
mov
inc
ljmp
inc
mov
das
push
xlat
inc
jmp
inc
addl
push
pop
mov
lock
sahf
xor
add
jg
or
mov
clc
loope
cwtl
mov
cmp
clc
lahf
call
and
psrlw
iret
cld
pop
stos
cmpsl
sti
stc
repz
es
clc
cwtl
lock
ljmp
jmp
pushf
lcall
dec
ds
fsub
fdivrs
clc
insl
std
and
stc
out
out
clc
bound
out
ljmp
js
lret
and
out
loopne
jne
adc
jne
inc
cmp
inc
push
jl
pop
xchg
inc
jae
jg
movsl
mov
aad
outsl
xchg
rcrl
gs
push
mov
pop
cld
push
dec
mov
sub
mov
adcb
test
loopne
mov
mov
fist
jno
jge
fsubrs
adc
aam
scas
and
push
out
sbbb
sti
fbstp
mov
scas
push
mov
das
push
xchg
jmp
cld
stos
lods
loopne
lock
stos
hlt
mov
mov
cli
xchg
lcall
mov
aas
jl
out
scas
add
adc
inc
call
push
xchg
repz
scas
fcomip
notl
test
lock
mov
cmp
cli
sbb
pop
fsubr
xchg
scas
imul
dec
pop
sti
push
pushf
xlat
fbld
cld
sub
xchg
pop
loopne
jmp
pop
pop
mov
cmp
dec
cli
fsubp
lds
cmp
inc
jp
stc
mov
aas
or
pop
ljmp
cltd
sti
repnz
fisttp
in
fwait
cmp
fwait
addr16
jne
aaa
cmp
mov
sbb
jecxz
cld
add
fildll
mov
int
divl
cmp
or
imul
adc
xchg
mov
mov
int
pmulhw
jns
insb
inc
mov
mov
not
fdivrs
int3
mov
dec
inc
dec
loop
test
jge
sbb
inc
jnp
cmpsl
jle
subb
mov
adc
inc
test
xor
movsb
pop
add
fdiv
mov
jne
mov
std
cmp
cmpsl
cld
or
mov
imul
and
out
add
bound
xchg
cmc
in
lcall
insb
mov
cmc
in
inc
mov
fisttp
mov
fxtract
mov
xor
and
in
ja
pop
lahf
idivb
sbb
bts
and
adc
ljmp
cltd
jmp
mov
cmpsl
daa
aaa
addr16
jmp
inc
sbbl
xor
pop
push
sbb
mov
dec
decb
fistpl
jb
dec
inc
jl
sti
repz
mov
jmp
fucom
jmp
sub
scas
xor
hlt
lds
lods
repz
dec
xchg
movsb
cwtl
movsl
outsl
ret
sub
sbb
fidivr
jecxz
int3
jb
fsubrl
inc
mov
mov
sbb
jecxz
cmp
inc
insl
dec
mov
mov
mov
ja
cmpsl
sti
or
fisubrl
jne
out
loopne
pop
addr16
mov
push
mov
xlat
fidiv
insl
pop
out
in
xchg
push
pop
pop
mov
clc
rcr
jecxz
out
jo
xchg
jmp
scas
jbe
pop
pop
or
jae
jecxz
out
xchg
div
call
into
push
pop
cmc
cmpsb
cmc
dec
mov
into
hlt
out
jns
xor
xchg
insb
sbb
push
sbb
add
ret
imul
mov
ljmp
fistp
stos
clc
inc
jmp
sti
int
clc
push
lods
or
ljmp
pushl
fnop
ffreep
mov
fisubr
iret
ljmp
ss
mov
out
mov
sbb
in
mov
lcall
psubd
cmpsl
fwait
aas
jmp
jecxz
pop
cli
stos
in
push
jle
cld
stos
ret
push
inc
stos
shrl
jl
pop
cmpsl
dec
cmp
jae
dec
stos
mov
mov
out
idivl
dec
mov
dec
xor
mov
inc
inc
dec
or
pop
mov
test
outsb
outsb
outsb
dec
and
insl
outsb
nop
xchg
dec
jnp
dec
out
push
push
cmpsl
and
cli
aaa
dec
add
xlat
movsb
fist
daa
dec
dec
cmc
out
stc
push
add
push
add
jg
dec
xor
dec
sar
das
xchg
gs
xchg
rcl
adc
lcall
sbb
mov
jns
movsb
mov
aas
jmp
mov
push
mov
inc
imull
jg
sub
sub
inc
jl
mov
hlt
cmp
pop
iret
stos
rclb
repnz
test
inc
cli
push
jl
cmp
pop
inc
xor
out
les
jno
jno
sub
outsl
jg
enter
shlb
and
dec
jg
lcall
sub
hlt
aas
enter
inc
and
mov
jl
mov
and
loope
mov
add
mov
sbb
sbb
jno
adc
jmp
pop
xchg
shr
fadds
dec
enter
std
rcll
or
std
push
dec
jnp
pop
addr16
push
out
cmp
lock
jmp
rcll
sti
pop
aas
jb
dec
lock
sub
jb
scas
push
jne
fdiv
xchg
mov
push
mov
cmp
dec
cmc
sahf
pop
dec
mov
or
fucomp
mov
jg
sub
mov
imul
xchg
xor
cmp
cli
mov
repnz
push
dec
fildll
xchg
incl
pop
or
stc
dec
push
in
daa
daa
xchg
pop
pop
sub
stos
dec
imul
jbe
push
out
jle
xchg
gs
lahf
lds
cmp
sub
pcmpeqd
sub
and
jb
xchg
loope
sub
cmp
lahf
mov
dec
je
lret
pop
ja
lods
test
fist
jmp
out
jg
cmpsl
add
or
mov
or
nop
cwtl
push
test
jbe
pushf
cmp
mov
dec
and
jbe
push
ds
cmpsb
mov
out
or
sti
repz
int
xchg
shl
int
int
jae
out
je
jge
dec
cmpsl
out
jecxz
pop
adc
or
cld
pop
jne
popf
sbb
push
popf
fwait
fwait
adc
cmpsl
cmp
scas
cmp
inc
push
mov
push
iret
in
gs
push
xchg
outsl
sbb
push
stc
adc
sti
fdivs
stc
push
arpl
popf
in
fbld
mov
lahf
fild
mov
cmpsl
in
out
mov
jnp
std
jmp
stos
jnp
lods
ljmp
out
jne
mov
mov
fidivrl
sub
push
ja
mov
les
sar
dec
dec
mov
adc
jl
dec
push
jecxz
lea
push
gs
aam
mov
icebp
fisttp
stos
xchg
inc
outsb
iret
ja
sahf
mov
fildll
data16
cld
xchg
ljmp
xchg
push
lcall
stos
pushl
mov
jle
sub
push
mov
mov
jg
fstpt
dec
std
out
aas
push
fdivrs
stos
fstpt
mov
in
push
cli
clc
jle
call
int3
mov
lahf
fdivrl
cld
div
lahf
cld
inc
adc
es
sarb
inc
cld
lock
sub
lret
dec
push
ljmp
add
repz
cld
ss
shld
push
add
test
gs
xchg
aad
ret
inc
aaa
pop
xchg
gs
scas
pop
movsb
adc
adc
repnz
repz
cld
xchg
hlt
into
clc
jle
inc
pop
je
push
jbe
scas
pop
scas
scas
adc
repnz
mov
adc
enter
or
cli
xchg
jl
data16
ljmp
push
mov
js
mov
test
daa
push
jns
ja
lods
hlt
faddl
lcall
xchg
cwtl
out
lods
jmp
sbb
ja
cmp
stc
cmp
ret
dec
sub
push
cmc
fisttpll
outsb
in
out
adc
insb
jge
mov
in
dec
in
test
jns
rcrb
lcall
imul
lahf
cmp
call
pop
fdiv
xchg
test
scas
xchg
lds
hlt
js
cld
mov
and
inc
mov
push
mov
mov
mov
out
xchg
incl
pop
push
in
jg
adc
call
sti
imul
lahf
cmp
std
aad
and
test
hlt
mov
mov
mov
sbb
mov
mov
adc
push
in
decb
nop
sti
pop
hlt
movsb
imul
sub
sar
fidivl
je
cwtl
mov
sbb
mov
xor
repnz
sbb
xchg
or
lret
popf
dec
sbb
mov
fcoml
mov
lcall
enter
mov
cld
push
adc
leave
lret
mov
inc
add
movsb
mov
stos
xlat
ljmp
fs
ljmp
mov
into
es
iret
fs
lahf
cli
jg
and
dec
xchg
adc
bound
loopne
hlt
cwtl
out
popl
lahf
mov
cwtl
jo
in
xlat
inc
xchg
xchg
je
movsb
int
cmc
xlat
decl
mov
lock
mov
xchg
fdivs
repnz
jo
xchg
push
dec
scas
fmuls
mov
fwait
loopne
lock
jg
mov
loopne
sub
and
loopne
jbe
cmp
rcrl
adc
call
xchg
test
mov
sahf
xor
dec
sti
cmpsb
lret
dec
add
into
xor
int
int
int
int
add
dec
stc
push
push
int
int
int
int3
mov
int3
lret
mov
and
imul
lret
and
add
push
lret
cmpsb
leave
fwait
leave
xchg
leave
ja
dec
leave
add
jge
test
enter
enter
enter
mov
fidivrl
gs
sub
adc
cmp
xor
sub
and
push
cmpsb
rol
ret
fwait
ret
imul
adc
ret
iret
ret
fldl
fidivrl
pop
ret
std
bswap
ja
jb
rcll
push
rorl
ljmp
pop
push
addr16
int3
sub
sub
dec
orl
call
cmp
dec
loop
dec
ficoml
cltd
lock
repnz
pop
push
aam
in
pop
hlt
pop
inc
in
pop
pusha
fistpll
out
push
bound
fsubrp
mov
cli
jnp
std
jmp
add
add
jmp
pop
jg
inc
lahf
cltd
leave
mov
aad
sub
fs
test
into
iret
popf
jl
stos
repnz
lcall
inc
bnd
dec
fisttp
loope
xchg
idiv
dec
mov
cli
sbb
clc
popl
fs
cmp
mov
cs
rcrb
rcll
pop
ds
dec
arpl
cmp
lock
pop
or
outsl
push
lcall
out
jmp
dec
sub
lret
xchg
fstpl
jle
fwait
push
loope
int3
out
test
out
cld
test
mov
in
aas
push
push
cmp
cmp
cld
and
fadds
and
stos
in
ljmp
idiv
mov
incl
jmp
add
inc
add
call
int
jmp
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
pusha
mov
mov
xor
mov
inc
cmp
jb
popa
jmp
add
add
add
mov
add
addb
add
add
add
add
push
add
add
add
add
add
pop
add
add
inc
add
add
add
add
add
add
addb
add
pop
add
add
add
add
add
test
add
sar
add
and
add
add
add
pop
inc
add
and
add
gs
add
inc
inc
add
jb
add
dec
inc
add
jge
add
push
inc
add
mov
add
inc
add
mov
add
les
add
inc
add
add
add
loopne
add
add
add
repnz
add
add
add
cli
inc
add
add
add
dec
inc
push
dec
inc
dec
xor
cs
dec
dec
add
push
inc
push
dec
xor
cs
insb
add
push
inc
push
push
cs
insb
add
inc
push
xor
cs
insb
add
add
fs
imul
add
inc
gs
jb
arpl
fs
jae
add
push
imul
jb
je
arpl
push
imul
insb
insb
outsl
arpl
add
jb
jne
insb
inc
jb
add
add
imul
jae
add
dec
jo
outsb
push
jb
arpl
jae
outsl
imul
add
jb
popa
je
add
jo
imul
add
inc
andl
aaa
jno
xchg
jno
inc
roll
loop
jnp
mov
add
mov
adc
push
jno
aaa
addl
add
repnz
mov
roll
imulb
push
mov
xchg
xor
jns
divb
pop
add
add
je
and
add
adc
add
inc
inc
inc
andl
aaa
jno
xchg
jno
inc
roll
loop
jnp
mov
add
mov
adc
push
imul
or
pop
add
repnz
mov
roll
imulb
push
mov
xchg
xor
adcl
add
add
sbbl
mov
iret
incl
xchg
gs
imul
xchg
sbb
in
fcmovnbe
lds
stos
fwait
xorl
lret
mov
pop
dec
aaa
sub
cltd
les
xchg
gs
add
mov
incl
jmp
add
mov
lea
rcrl
js
js
xchg
repnz
stos
mov
out
adc
add
lcall
lea
cwtl
lcall
lcall
mov
imul
xchg
fwait
call
cwtl
xchg
xchg
sahf
xchg
fwait
call
inc
test
cwtl
popf
mov
iret
lret
rcrl
cmpsl
lcall
cli
adc
lock
lock
imul
mov
xchg
clc
test
popf
lea
mov
in
add
loope
iret
lret
je
jle
xchg
idivl
inc
lret
fwait
lcall
je
mov
and
add
test
por
scas
lods
cmp
mov
sbb
sahf
aaa
mov
hlt
xor
xchg
cld
xor
xor
xchg
xor
xor
das
hlt
cs
cld
sub
adc
and
mov
les
call
and
and
aam
enter
scas
cld
push
mov
sbb
sbb
and
push
mov
fcoms
mov
enter
or
mov
or
or
pop
or
cld
add
add
xchg
push
xchg
dec
subb
pop
cmp
subl
aaa
out
paddusw
or
add
sub
pop
les
mov
test
je
adc
je
idivl
mov
int3
aas
and
dec
add
jb
addr16
cmp
xlat
stos
scas
test
ljmp
aas
mov
in
ljmp
inc
inc
lret
cmpsb
mov
icebp
repz
out
pop
fsubl
xchg
and
add
xor
cmp
repnz
movsb
ss
jl
jecxz
rorb
insb
ljmp
test
inc
bound
out
repz
notl
je
jbe
stc
pop
cli
adc
ficomp
test
cmp
xchg
stc
orl
xchg
mov
mov
loopne
dec
mov
inc
xor
add
int3
and
or
loop
out
fbld
pop
in
loope
les
pushf
xor
xchg
cld
xchg
movsb
mov
jl
dec
mov
test
jmp
mov
movsb
adc
fdivrs
mov
jge
scas
jg
ret
mov
movsb
pop
das
dec
mov
push
jmp
pushf
mov
repz
dec
dec
lret
xor
in
pop
scas
jae
ds
jae
scas
sub
iret
in
xor
xchg
push
lock
call
bnd
repz
xchg
nop
jp
cmpsl
mov
xchg
aad
mov
loopne
or
pop
in
inc
repz
dec
cmp
dec
cmpsl
sti
movsl
iret
and
jmp
jecxz
inc
fwait
lock
pop
mov
fistp
xchg
mov
jl
ss
cmp
mov
out
mov
hlt
negl
jnp
dec
pushl
jmp
pusha
imul
ret
dec
push
inc
and
dec
and
repz
push
jp
repnz
out
mov
in
stos
jmp
outsb
out
stc
jne
sub
mov
mov
cmp
loopne
sbb
cmp
stos
dec
adcl
std
ljmp
iret
jmp
lock
ljmp
loopne
std
fildl
jb
push
stos
in
xchg
add
mov
inc
sub
mov
mov
movsl
in
mov
aad
xlat
inc
int3
fildl
dec
test
dec
inc
aam
pop
or
outsl
ljmp
push
pop
and
cmp
ds
mov
scas
and
mov
lods
cmp
call
test
aam
fildll
sub
stos
fsubs
arpl
sbb
shr
pop
dec
shrb
push
adc
das
test
inc
mov
mov
sti
aas
into
add
and
jb
jae
mov
mov
or
lods
test
jb
dec
dec
sti
jg
pop
out
aas
inc
out
adc
jb
push
repnz
cltd
push
inc
xor
lods
push
xchg
xor
inc
xchg
or
jne
cld
cmp
adc
lret
cmp
jl
dec
mov
andl
test
sub
cmp
and
int
xor
cmpsl
pop
jmp
mov
pop
iret
test
adc
cmpsl
rorl
aad
jnp
das
lds
call
jne
cmpsl
mov
or
xchg
mov
test
cmpsb
push
push
ret
mov
cmpsb
repz
cmp
test
and
add
push
and
fimul
pop
cmpsb
gs
iret
cld
mov
cmpsb
gs
lcall
cmpsb
inc
idiv
mov
xchg
cmc
mov
hlt
inc
hlt
stc
xor
jl
xor
dec
cli
hlt
adc
jb
scas
lods
pushl
cld
ljmp
ss
imul
pop
sbb
scas
or
repz
ljmp
hlt
cmp
mov
shll
sub
stc
adc
jb
stc
xor
xor
shll
pushf
xor
inc
xchg
ja
cs
lods
repnz
dec
repnz
inc
cli
add
mov
inc
addr16
push
xchg
sub
jb
ljmp
test
cld
add
mov
ds
aas
cli
in
inc
lret
cmp
inc
jnp
lea
pushf
cmp
lock
add
add
xor
popf
xor
fmull
pop
add
mov
lret
int3
sub
sub
and
push
sub
xchg
repnz
add
lea
addr16
push
ljmp
cltd
add
push
or
fsubrl
or
outsl
xlat
das
xchg
inc
push
xchg
inc
stc
sub
inc
xor
ss
xchg
dec
test
add
fcoml
hlt
leave
imul
dec
or
xchg
mov
nop
ror
mov
xchg
mov
dec
insl
iret
rolb
inc
stos
mov
xchg
hlt
xchg
push
out
fwait
pushf
or
hlt
dec
ds
leave
popf
rorb
lret
cli
je
add
xchg
arpl
bnd
mov
inc
sarl
add
in
mov
cmp
inc
lahf
push
cmp
xchg
push
jl
aaa
xchg
jae
dec
jmp
stc
push
mov
nop
int3
aaa
cmp
lcall
or
popf
icebp
xchg
cld
ret
mov
pop
loopne
cltd
mov
ss
lahf
stc
mov
popf
inc
add
jb
scas
stc
pop
inc
scas
pushf
inc
pop
mov
pop
push
ret
out
mov
lods
fadd
fwait
scas
mov
sbbl
mov
loopne
sbb
push
ds
mov
roll
mov
adc
movhps
ret
inc
jle
in
out
push
or
xchg
pop
int3
cmp
push
out
jmp
inc
add
fdivrp
ret
sub
mov
jmp
je
loopne
hlt
xor
fidivrl
fidivl
xor
hlt
lock
xchg
outsl
out
imul
je
cmp
sar
int
and
cmpsl
call
je
repz
je
mov
push
cmp
arpl
fisttp
in
jnp
mov
scas
jp
aam
dec
fwait
ds
mov
mov
xchg
jge
stos
aad
mov
mov
fildll
scas
mov
mov
jmp
call
xchg
out
std
stos
stos
es
incl
fcom
fwait
cld
ljmp
pushl
ja
repz
sti
cld
add
inc
loopne
stc
aas
stc
mov
loopne
icebp
shr
nop
add
dec
divb
fiadd
mov
stos
xchg
xchg
inc
lea
add
sahf
xchg
xchg
nop
mov
popf
lcall
std
mov
nop
fwait
lcall
repnz
fstpt
or
cld
push
pushf
rorb
clc
cmp
data16
dec
and
or
data16
adc
inc
data16
clc
lods
xchg
pushf
xchg
and
out
or
pop
scas
mov
out
dec
inc
adc
jbe
dec
icebp
fdivp
stc
repz
cmovb
out
cld
cli
clc
std
rcll
clc
scas
repz
daa
ds
out
clc
stc
outsl
das
jb
pop
test
mov
fs
loope
leave
or
popf
mov
popf
aas
jg
rcrl
lcall
jmp
pop
cmp
lea
adc
jecxz
les
hlt
hlt
fdivrs
pop
inc
into
cld
jae
sbb
sarl
pop
into
loopne
ror
mov
xchg
cld
push
dec
cmp
adc
mov
daa
std
iret
add
aad
mov
mov
mov
lret
mov
dec
inc
xor
sub
mull
mov
mov
test
fwait
stos
inc
adc
mov
lret
lcall
imul
xchg
jge
scas
movsl
xchg
int
das
cmp
and
hlt
dec
fcmove
fs
mov
clc
int3
movsl
mov
scas
addr16
or
test
and
mov
mov
inc
xlat
jp
mov
imul
data16
out
sbb
fdivrp
in
out
iret
pop
es
sti
shll
mov
jmp
mov
repz
jg
mov
or
inc
arpl
jmp
fs
iret
fnop
bnd
out
jmp
repz
sahf
jnp
aam
jecxz
aaa
cld
incb
daa
xor
cmp
cmc
add
cmp
int
test
or
adc
out
ret
mov
ds
lret
mov
out
jne
cmp
out
mov
sbb
pushf
addl
repz
inc
xlat
mov
adc
xchg
loopne
dec
scas
stc
pop
fucomi
fwait
push
sahf
daa
out
mov
sub
adc
loop
aas
sub
add
loop
inc
cmc
fneni(8087
mov
arpl
jg
shr
xchg
sbb
je
outsb
jmp
sub
cmp
push
fbld
jno
ffreep
int3
and
mov
sbb
ss
lret
jg
adc
fwait
nop
lods
pop
pop
aaa
dec
and
daa
xchg
pop
inc
stc
pop
rolb
mov
jmp
xchg
push
clc
pop
pop
dec
xlat
mov
mov
out
fistl
mov
out
mov
sahf
mulb
sarl
jno
jl
mov
lock
fmull
inc
out
idivl
pop
cli
testb
or
divl
ret
inc
cld
mov
insb
xor
xchg
nop
in
xor
pop
cltd
inc
adc
dec
out
je
jns
mov
or
rclb
bound
xchg
xchg
mov
loope
adc
lcall
lods
push
mov
cmp
jnp
addr16
sarb
test
pop
mov
cwtl
mov
ret
ror
sarb
js
sub
adc
pop
jle
pop
test
loope
and
xchg
test
push
sub
inc
aad
add
jbe
testb
sbb
push
or
jne
jb
xor
bound
jp
call
xchg
fs
scas
int3
imul
sti
dec
adc
call
ljmp
mov
dec
in
inc
or
cmpsb
in
add
test
dec
iret
cmc
xlat
mov
notl
xchg
std
pop
stos
adc
or
sub
pop
iret
loop
cmp
pop
cli
push
push
and
loop
fdivr
in
mull
mov
pop
mull
jb
sbb
aaa
lahf
lock
movsl
cli
ds
and
mov
mov
out
out
movsl
pop
in
repz
stc
stos
iret
clc
stos
jl
arpl
mov
das
cmpb
les
les
jmp
ret
addr16
popf
add
lds
lods
pop
ret
in
cmp
leave
mov
out
repnz
leave
dec
fs
sub
xchg
or
cli
mov
cmp
loope
xchg
dec
cmp
outsb
xor
xchg
enter
lahf
xchg
pop
sar
fwait
pop
test
icebp
and
fwait
jbe
clc
sbb
fwait
nop
jbe
lcall
xchg
xchg
lea
cmpsl
imul
lcall
and
inc
xchg
and
in
pop
lret
push
setno
int
outsl
add
adc
dec
sub
aaa
scas
cli
daa
scas
in
icebp
cmp
cmp
jmp
mov
inc
cli
pop
xchg
not
mov
sub
xor
dec
js
clc
xor
lods
lods
cld
mov
icebp
cmp
aad
push
out
std
ljmp
jl
divl
pop
mov
cmp
subb
stos
dec
loopne
jl
sub
hlt
push
dec
cmp
fcomi
xchg
mov
repnz
je
cltd
test
dec
sub
and
ret
mulb
test
lret
shl
test
aad
scas
popf
pusha
jbe
mov
and
pop
mov
mov
lock
movsb
inc
mov
mov
jl
sub
dec
cmpl
mov
dec
and
testl
loope
and
add
cld
and
mov
scas
mov
add
mov
aad
xchg
mov
pop
or
repz
in
idiv
jl,pt
std
scas
and
pop
xor
clc
jl
sti
jl
adc
sbb
add
fxch
cmp
mov
mov
jbe
fwait
inc
and
and
jl
jae
repz
cli
je
ja
popa
adc
cmp
jl
out
jno
mov
add
fistpl
adc
adcl
add
fdivr
ds
mov
je
testl
outsb
mov
cltd
out
adc
adc
nop
cmc
cld
mov
imul
hlt
sti
mov
mov
loope
std
mov
sbb
and
int
testb
sbbb
jbe
cld
mov
outsb
cld
mov
push
mov
mov
out
and
mov
add
loope
pop
stc
mov
mov
stos
lods
mov
cld
sbb
xor
cmp
xchg
cmpsb
out
sbb
je
add
and
jp
push
pop
cld
mov
rcl
fucomi
jmp
add
mov
cmpsb
xrelease
jp
mov
jmp
xchg
mov
int3
je
inc
enter
cltd
jecxz
cmp
push
jmp
cs
movsb
stc
pop
adc
add
xchg
xchg
in
xor
enter
jnp
cli
pop
fwait
xor
pushf
int3
fldcw
arpl
jb
ljmp
bound
dec
pop
xor
xchg
xchg
sti
xchg
lods
enter
sbb
mov
insb
fisubr
testl
pop
scas
add
fildll
scas
pop
bound
jb
adc
dec
je
jns
je
ret
mov
or
movsb
mov
scas
movsb
and
fsub
adc
xlat
sub
out
inc
iret
je
and
lcall
scas
fldl
mov
mov
aaa
jmp
jmp
mov
inc
pop
mov
pop
cmp
ja
jmp
mov
inc
fistpll
sub
jecxz
xchg
pop
ret
arpl
mov
pop
daa
mov
cmpsb
adc
not
es
arpl
mov
push
or
test
mov
or
or
pop
push
push
hlt
add
faddl
mov
dec
test
mov
ret
jmp
divb
cmp
mov
je
pushf
dec
mov
jne
repnz
pop
jb
std
incb
adcl
scas
adc
clc
dec
jnp
mov
fnstcw
out
inc
icebp
jp,pn
orb
sti
jb
rclb
js
cli
repz
jmp
out
add
xchg
scas
jge
aaa
daa
fimull
in
adc
cmp
aaa
cli
inc
in
lcall
jge
push
push
ljmp
mov
hlt
xchg
push
int3
test
rcl
in
aas
in
mov
repnz
cmpsl
fdiv
fcoms
push
fild
fcomps
movsb
lret
mov
mov
xchg
cmp
cmp
fwait
xchg
lcall
nop
pushf
mov
inc
adc
enter
mov
sahf
fwait
mov
popf
lea
fidiv
and
mov
mov
lcall
mov
rol
cmpsb
icebp
xchg
psrld
inc
cld
xchg
mov
push
lock
xor
in
xchg
mov
sub
jmp
jnp
test
add
mov
mov
test
xchg
jecxz
lea
nop
fidiv
mov
xchg
mov
cli
stos
dec
lcall
push
aam
lcall
in
cld
scas
mov
dec
xchg
out
pushl
jb
xchg
nop
jns
adc
and
or
test
nop
mov
lret
or
and
and
mov
lock
or
lock
jo
lahf
dec
leave
sub
and
mov
sub
cltd
stc
lcall
and
xchg
xchg
repz
mov
popf
pop
jp
dec
clc
jmp
jo
int
xor
aad
lea
stos
nop
nop
xchg
xchg
data16
out
xchg
sahf
mov
sahf
out
jns
mov
dec
mov
jle
rorb
decl
les
pop
dec
jp
cmc
jle
icebp
mov
lods
mov
aam
ret
roll
std
fmuls
and
lods
in
call
nop
adc
lcall
mov
mov
iret
xchg
jp
jl
dec
lret
mov
pushf
nop
mov
fsubrs
mov
cltd
xchg
dec
and
sbb
lods
ljmp
jp
xchg
inc
mov
sub
ljmp
and
fild
xchg
test
cmc
cwtd
dec
outsb
jbe
mov
sub
xchg
xlat
int3
in
data16
cmc
dec
push
dec
add
fsubrs
idivb
std
dec
jmp
sbb
mov
into
adc
fdivs
mov
fild
add
jo
fwait
into
xchg
into
test
ja
push
arpl
xor
pop
into
add
ljmp
add
add
mov
lahf
int
int
int
int
int
int
int
int3
ljmp
int3
mov
add
add
pusha
int3
push
int3
add
icebp
lret
loopne
lret
jae
gs
push
lret
out
lret
movsl
lret
or
add
adc
sti
leave
out
leave
out
pushf
leave
popa
leave
cmp
sub
adc
pop
cmpsl
leave
jmp
add
add
in
fcmovne
aam
leave
enter
enter
enter
enter
fadd
int
cmpsb
sahf
add
or
xchg
movl
inc
loop
mov
les
les
add
pop
test
ret
rol
ret
xchg
ret
dec
ret
inc
ret
aas
ret
fadd
enter
ret
ja
push
add
ret
imul
ret
push
ret
or
ljmp
pop
push
arpl
cs
or
adc
in
lahf
insl
pop
das
clc
push
mov
pop
sub
inc
cmp
add
push
pop
and
or
sbb
pop
sub
xchg
sub
pop
sub
mov
sub
sbb
inc
and
push
clc
gs
jecxz
xchg
push
decb
jge
les
dec
sbb
das
loopne
aas
lods
cmpsb
dec
pop
adc
imulb
arpl
pushl
mov
dec
clc
jl
push
in
aas
add
aas
push
adc
rolb
cld
imul
inc
sub
fwait
lods
mov
xor
repz
pop
inc
mov
hlt
mov
in
sbbl
xchg
dec
pop
mov
lret
mov
aas
sub
sub
sbb
iret
xchg
gs
xchg
mov
pop
xchg
gs
gs
inc
xor
inc
adc
push
xlat
cld
iret
shrl
sub
cmpsl
xchg
test
sub
mov
dec
cmp
sub
lret
jmp
fxch
mov
scas
mov
mov
pop
mov
lret
mov
in
lcall
dec
sub
xchg
gs
dec
arpl
xchg
pop
fs
xchg
lods
vpsubq
pop
lds
inc
popf
cld
mov
adc
pop
push
cld
leave
sarl
in
dec
add
mov
cld
adc
inc
pop
pop
std
in
repz
gs
xchg
gs
mov
gs
xchg
xchg
xchg
imul
dec
inc
cmp
lcall
inc
hlt
inc
mov
or
xor
clc
leave
sub
sbb
int
and
push
cld
sub
test
cld
inc
pop
mov
cmp
int
fdivs
push
std
jo
ret
mov
sahf
in
mov
or
call
mov
xchg
or
scas
adc
repnz
mov
mov
cld
std
iret
push
mov
add
pop
cltd
pushf
mov
lods
mov
stos
test
lods
mov
and
lahf
lea
cltd
mov
cli
daa
xor
xlat
test
jmp
test
pop
cwtl
pushf
int3
fbld
dec
idiv
out
mov
icebp
xlat
hlt
loopne
xchg
sti
lahf
fdivr
pusha
cwtl
sti
jl
idiv
cld
out
xor
mov
lahf
mov
mov
mov
int
cmp
fist
cmpsl
and
cmpsl
and
cld
or
out
mov
cld
jmp
dec
cld
dec
out
leave
rorl
imul
fildll
push
clc
notl
cld
add
daa
dec
clc
incl
fnstenv
cld
mov
insb
mov
js
mov
mov
rcr
loopne
add
repz
in
hlt
jg
shl
xchg
mov
dec
clc
fucomip
add
int
lock
test
xchg
aad
scas
lret
loopne
nop
inc
stos
sub
sub
lock
decl
loop
lock
loop
mov
mov
lcall
add
cld
add
fbstp
hlt
mov
and
fwait
rcll
iret
dec
inc
cmpsb
dec
icebp
in
iret
int
cld
or
arpl
dec
mov
or
in
mov
scas
in
pushf
mov
mov
das
jp
mov
mov
lea
inc
sar
movsl
mov
cld
scas
xchg
cmp
mov
stos
les
dec
mov
mov
adc
cld
into
incl
popf
sahf
xchg
clc
ficoml
cld
xchg
fadds
inc
inc
mov
clc
jbe
pop
je
je
xchg
add
or
hlt
cli
scas
out
mov
in
fwait
add
fwait
jbe
stc
pop
dec
pcmpeqb
fdivl
push
jmp
scas
hlt
mov
xchg
stos
cli
adc
adc
cld
js
sti
in
mov
xor
jno
outsl
shr
lods
in
sarl
loopne
push
jns
clc
jg
notb
stc
imul
sub
xchg
js
imull
rorb
fwait
mov
fild
push
icebp
inc
xchg
cli
mov
rclb
in
hlt
xchg
test
roll
mull
out
cmp
daa
daa
or
cli
fcomip
push
adcl
jmp
lods
push
ds
xchg
loopne
cwtl
xlat
mov
int3
loope
mov
fiadd
jbe
mov
push
idivl
loop
sub
add
add
add
hlt
popf
hlt
lock
lock
shr
mov
fwait
lock
hlt
insl
jbe
bnd
jecxz
inc
hlt
out
jno
clc
dec
lock
dec
sbb
mov
sarb
scas
cli
sbb
ret
jmp
jmp
scas
mov
aam
loop
and
icebp
jmp
xchg
mov
std
pop
shrb
fstpt
ja
jp
pop
jb
aam
scas
xor
nop
pop
xor
imul
insb
leave
xchg
xchg
insb
fdivs
es
out
jmp
add
aam
inc
xchg
inc
push
movsb
cmc
je
jle
mov
mov
clc
fs
subl
sar
and
into
mov
jl
sti
mov
cmp
mov
or
je
push
jbe
fnstsw
adc
insl
cmp
sbb
xchg
das
xchg
stc
xchg
std
and
sbb
cmp
sti
call
sub
mov
ja
jmp
jmp
sbb
std
pop
es
push
in
jae
test
sub
test
add
adc
das
lods
adcl
test
insb
pop
imul
inc
push
cli
add
inc
jle
test
add
inc
iret
pop
jle
enter
dec
add
or
adc
scas
cmp
push
jbe
jb
or
adc
jbe
dec
mov
cmpsl
mov
jp
ss
lret
fidivr
pop
inc
lret
add
pop
xchg
pop
out
adc
cmp
mov
adc
jo
lret
mov
mov
insl
mov
int3
add
pop
imul
jmp
and
add
ret
jp
out
ss
cmpl
mov
cmpsl
add
dec
inc
clc
xchg
lock
mov
clc
xchg
push
and
lock
lock
f2xm1
rol
sub
clc
repnz
cli
jl
push
mov
dec
jo
jbe
xchg
cld
adc
out
out
xor
xor
std
adc
sti
jecxz
sbb
decb
je
fs
cmc
mov
mov
repz
sbb
ljmp
js
fcmovbe
je
movsb
test
and
movb
jg
push
pop
in
int3
imul
je
insl
scas
test
and
hlt
mov
mov
inc
aad
xchg
and
movsl
pop
jnp
pop
cmp
std
lock
xor
adc
out
call
fisttpll
cwtl
out
or
add
adc
out
fldl
ljmp
aas
cmp
adc
sub
jae
adc
push
mov
pop
imulb
jge
and
cmpsb
cmp
movsl
lahf
dec
and
mov
mov
scas
push
shrl
pcmpeqb
iret
lahf
sub
mov
mov
push
xor
mov
stc
rcrb
incb
inc
sbb
pop
xchg
sbb
cmp
push
je
aam
jl
adc
cmp
repz
repnz
and
inc
add
xchg
outsl
xchg
jb
mov
dec
inc
mov
inc
pop
test
mov
rcl
sbb
adc
ljmp
mov
push
out
repnz
sbb
mov
test
sti
fiadd
out
jge
cmp
sub
adc
repz
out
mov
nop
inc
lock
mov
or
dec
repz
xchg
adc
decb
inc
mov
jg
icebp
pushl
repnz
loope
dec
loopne
stos
inc
mov
addl
enter
mov
xchg
cmp
mov
jg
loope
pushf
cmp
fnop
jp
cli
jmp
aaa
out
out
cli
or
jp
pop
jmp
iret
jp
jg
mov
dec
imul
vcomisd
cmpsl
jp
jp
aaa
je
fistl
inc
adc
jle
jbe
ret
cld
xor
jmp
insl
mov
jg
stos
iret
icebp
jecxz
lret
push
repz
test
mov
data16
mov
ljmp
repnz
mov
rolb
test
add
decb
clc
sub
enter
jmp
fstl
jecxz
jle
movsb
jl
loope
icebp
pop
sbb
or
neg
ljmp
and
test
loopne
clc
popa
push
dec
push
scas
xchg
icebp
loopne
dec
hlt
mov
xchg
fcos
out
jb
or
and
adc
cvtps2pd
cltd
pop
inc
pop
repz
jmp
inc
das
pop
out
inc
daa
movsb
jl
inc
in
andl
lock
jg
call
fidivrl
xor
pop
dec
mov
lods
inc
icebp
inc
dec
dec
and
repnz
mov
lock
xor
das
repnz
nop
jmp
jp
rorb
scas
fisttpl
bound
lret
pop
pop
push
cltd
push
sbb
test
mov
aas
jle
push
and
inc
dec
and
mov
mov
dec
mov
mov
xor
and
xchg
clc
pop
adc
out
mov
test
loop
paddw
jno
mov
loop
out
inc
xchg
rol
out
cmpsb
lea
mov
dec
mov
aaa
mov
cld
jno,pt
xor
xor
push
sub
jnp
inc
xchg
in
test
jl
mov
inc
and
jecxz
jmp
xchg
std
test
add
sub
or
jl
enter
push
aam
shll
in
incb
jno
adc
in
int3
jmp
or
inc
std
sti
add
dec
add
jecxz
lds
jne
and
clc
fsubp
and
or
inc
cmc
pop
or
jne
cld
mov
xor
pop
inc
loopne
lea
movsb
sub
jo
push
repnz
pop
into
sbb
popa
and
cld
cmp
lods
pop
notl
jns
enter
idiv
cmp
jne
lcall
pop
movsl
les
sbb
rcll
fistpll
fwait
xor
lea
inc
repz
les
std
sbb
icebp
fcomip
jnp
jg
aaa
testb
xchg
call
iret
mov
jae
fcmovbe
outsl
iret
mov
fistpll
iret
pop
jge
mov
pop
fstps
scas
fsubrs
imul
fildll
rcrb
pop
imull
testb
jp
outsl
cld
pop
iret
arpl
mov
pop
lcall
negl
pop
scas
lcall
aad
push
cltd
inc
ror
mov
hlt
mov
jmp
incl
repz
mov
xor
mov
aad
jns
mov
mov
data16
ljmp
inc
mov
icebp
cmpsl
mov
popa
jae
jecxz
ljmp
sbb
fidiv
adc
in
popa
pushf
dec
jno
push
add
lahf
rorb
mov
out
and
das
mov
mov
out
and
and
popf
lock
xchg
movsl
jp
inc
xlat
out
das
push
mov
std
jne
dec
out
stos
call
sbb
loop
and
out
rcrl
test
cli
mov
or
pop
pushf
or
das
cmpsl
mov
add
pop
fsubrp
popa
xor
in
xor
scas
lahf
frstpm(287
fnstenv
xor
iret
iret
test
add
mov
icebp
in
sub
lea
jne
xchg
cmpsl
das
cmp
loope
push
int
std
inc
dec
sbbl
mov
adc
out
mov
mov
pop
les
pop
lret
or
jmp
pop
rorb
clc
mov
jnp
les
int3
jbe
inc
or
sarl
scas
adc
mov
xor
inc
mov
mov
outsl
pop
mov
mov
jmp
nop
inc
aas
mov
sahf
js
jl
jecxz
cwtl
andl
into
in
dec
les
jl
mov
xchg
ret
lahf
xor
add
sub
push
dec
mov
movsb
hlt
aad
nop
push
aas
inc
or
jmp
ret
push
jbe
cmp
pusha
gs
add
jle
or
inc
adc
mov
adc
cmp
les
mov
ljmp
xor
mov
nop
movsb
add
idiv
adc
jl
lock
jmp
mov
hlt
sti
and
loopne
jb
enter
hlt
aas
push
cli
push
out
cmp
sub
add
mov
hlt
cmp
cmp
out
aaa
ds
idivl
fisttp
cmp
and
add
int3
sub
hlt
cmp
roll
call
je,pn
sbb
and
enter
ds
div
xor
jns
out
inc
aam
inc
mov
push
out
mov
jnp
popa
test
jecxz
sarb
rol
mov
les
push
cli
mov
repz
inc
das
cmc
xchg
idiv
lock
lret
jl
std
push
fistp
inc
in
aaa
fdivrl
cmp
test
ds
jl
dec
mov
hlt
jbe
cmp
mov
pop
adc
leave
sub
std
pusha
fdiv
sti
dec
inc
mov
mov
aam
je
iret
fnop
in
push
out
fs
sub
ret
cld
das
mov
cld
sub
cltd
mov
cmp
jecxz
fimull
jbe
mov
inc
lahf
aaa
notb
jo
jp
ret
mulb
enter
mov
das
test
nop
sub
pushf
adc
in
xchg
loope
inc
and
outsb
pop
sbb
lret
adc
dec
add
cmp
aam
into
sti
repnz
or
pop
sti
cmp
mov
scas
test
inc
mov
clc
aas
shll
mov
nop
out
pop
ja
hlt
pop
addb
jg
decl
jmp
int
mov
divl
lahf
sub
fidivr
mov
and
ja
adc
out
repz
fisub
mov
dec
ja
jnp
sbb
lret
lea
fisttpll
lcall
fisub
and
movsl
and
out
ficom
mov
or
xchg
and
mov
test
add
movsb
add
mov
ret
into
fnstcw
sti
into
cmpl
jns
adc
sub
aas
repnz
jbe
imul
mov
dec
add
dec
int
fucomip
repz
in
inc
lret
ds
jmp
pop
loopne
jp
out
or
ds
nop
inc
add
pop
rol
mov
add
aaa
loop
mov
adc
mov
add
jp
jecxz
pop
mov
stc
call
push
enter
in
mov
out
add
sub
inc
jne
aas
sti
ds
negl
out
jp
mov
lret
mov
cwtl
icebp
cmp
push
aaa
stos
and
das
in
outsb
mov
cmpsb
inc
or
mov
or
faddl
push
nop
adcb
add
out
jb
call
inc
stos
addr16
sub
adc
xchg
rolb
sti
cld
cltd
scas
or
hlt
ud1
addb
xchg
cld
out
jb
enter
xchg
or
adc
repz
sub
sub
xchg
mull
hlt
cli
cmpsb
jmp
add
les
cmpsb
ds
ds
jmp
sbb
mov
or
sub
mov
mov
mov
adc
inc
xor
dec
push
add
hlt
or
or
and
cmc
inc
cld
and
in
lock
je
adc
mov
je
jmp
stos
inc
xor
or
ficompl
xchg
in
stos
in
aad
js
je
and
inc
mov
cld
sub
je
jg
and
hlt
and
in
mov
bound
sub
fisubl
xchg
cmpl
jecxz
das
and
into
loope
push
add
or
push
adc
jmp
pop
std
out
into
hlt
fldenv
rclb
aas
lret
pop
daa
daa
addr16
sub
sbb
cmpsl
nop
and
daa
das
and
xlat
loopne
or
loop
dec
rclb
sub
sbb
jg
aas
sti
pusha
sbb
mov
sar
jecxz
sahf
xchg
aad
daa
stc
sub
cli
cmp
daa
cli
inc
sub
xchg
movsl
adc
fcoml
inc
iret
stos
cmp
fucomp
outsl
xchg
adc
push
icebp
xchg
lret
and
sub
repz
or
and
add
sahf
and
push
ret
add
add
dec
enter
pop
mov
invlpg
mov
je
ret
movsb
fisub
int
mov
fcomi
test
cmc
js
sbb
cli
adcl
mov
dec
aad
and
pop
dec
adc
inc
pushf
cmp
sub
daa
sub
stos
je
popf
or
loop
jns
hlt
sub
call
mov
adc
aas
mov
mov
jmp
inc
jp
gs
pop
lea
or
movsl
ds
shll
mov
or
sub
pop
and
je
fs
cmp
pop
fcoml
pop
dec
lret
dec
mov
inc
push
xchg
push
or
jae
cmp
push
push
sub
js
dec
test
iret
jae
jns
jmp
std
lahf
jo
aam
call
fisubl
nop
or
jle
pop
daa
sub
icebp
pop
dec
enter
cmpsl
stc
and
or
xchg
inc
dec
aaa
add
sbb
lea
dec
inc
push
dec
and
mov
mov
das
dec
sbb
push
ficom
outsb
pop
xchg
jnp
movsb
dec
cmp
je
adc
fnop
enter
jo
iret
shll
mov
and
inc
pop
stos
shll
js
sub
sub
and
cld
xor
call
adc
iret
daa
fsubl
es
je
jmp
mov
mov
lcall
xchg
js
dec
mov
and
push
sbb
xchg
jo
adc
dec
push
dec
cmovle
inc
int3
pop
pop
adc
or
test
imul
out
std
xor
shll
nop
cwtl
sub
icebp
cmp
dec
mov
cmp
aad
inc
xor
mov
das
loope
and
mov
adc
ret
sti
push
add
int3
add
and
jp
jle
mov
jge
jge
out
popa
pop
add
rcll
bound
add
mov
or
lret
repz
sbb
das
and
and
int3
dec
adc
mov
mov
dec
out
outsb
xor
in
push
xor
mov
jp
dec
lods
lea
cmpsb
xchg
or
loope
call
sbb
sbb
xchg
pop
nop
inc
loop
dec
jmp
inc
sbb
lcall
iret
cmp
xlat
sub
rol
xchg
out
wrmsr
xchg
add
dec
scas
jne
je
and
jle
fisttpll
jp
iret
adc
and
mov
sbb
and
push
icebp
add
pop
xchg
cmpsb
inc
ja
adc
mov
sub
rcrb
add
das
mov
xchg
call
mov
data16
inc
lds
shll
or
lods
sbb
pop
sbbl
sbb
inc
push
sub
ret
lcall
cmp
cmc
sbb
stc
jb
xor
dec
push
fstps
fst
push
das
in
push
jmp
hlt
loope
cmp
xchg
int3
cmp
in
jg
dec
stc
mov
mov
xor
cmc
sbbl
lock
fsubrl
out
test
loop
scas
cmp
loopne
lahf
and
pop
insb
add
adc
loop
into
push
mov
dec
push
push
sub
shrb
cmp
or
scas
mov
scas
sub
cmp
xchg
lret
sub
mov
insl
xor
jo
mov
cmp
mov
dec
cmp
ja
inc
inc
roll
sbb
and
loop
out
adc
mov
adc
les
push
test
rorb
adcl
mov
or
mov
mov
out
sbb
add
ss
and
cmc
test
lahf
add
loope
mov
hlt
adc
and
pop
out
divl
or
sub
sbb
sub
sub
dec
sub
mov
pop
lret
inc
into
adc
cmpsb
xchg
xchg
movsl
daa
pop
and
sub
xor
aad
lock
cmp
jmp
dec
mov
je
xchg
jb
shrb
adc
mov
pop
jbe
je
stos
je
push
cs
jno
cmc
add
je
je
fidivr
jg
fdivrl
ds
xchg
xchg
ja
in
sub
mov
or
movsb
add
addb
sub
add
bnd
xchg
jb
xchg
dec
pop
movsl
dec
jge
mov
outsl
xor
mov
xor
out
icebp
das
bound
les
jge
js
out
xchg
pop
arpl
add
pop
xchg
lods
push
sar
lods
adc
xor
icebp
xabort
out
mov
mov
jb
dec
enter
nop
add
xchg
mov
mov
jecxz
sbb
xchg
or
lods
adc
pop
ljmp
jb
push
and
je
cmpsb
in
dec
das
jmp
push
pop
xchg
imul
dec
xor
sub
aas
cmp
jmp
cmpsb
cli
stos
imul
add
add
pop
movsl
push
mov
cmp
add
xchg
cmc
sub
dec
scas
aam
mov
xchg
adc
sbb
pop
out
mov
sbb
adc
in
dec
test
lods
test
loopne
lods
jmp
cmp
fiadd
sbb
jo
out
mov
adc
insb
or
out
stos
clc
sub
das
cltd
dec
das
xchg
cld
fwait
xor
repnz
sahf
sub
pusha
lcall
pop
lcall
stos
sbb
nop
ret
inc
dec
xadd
mov
mov
jle
pop
xor
mov
jbe
mov
mov
cmpsl
scas
mov
jle
sbb
cmp
shrb
mov
cmc
leave
movsb
xchg
imul
dec
jmp
adc
jns
push
mov
sbb
xchg
cmc
pop
xchg
clc
iret
ljmp
cli
jecxz
iret
imull
cmc
xchg
je
fs
sbb
lds
xor
out
jae
ja
pop
cmp
jl
les
cmp
lret
xor
xchg
clc
bound
add
jb
notb
adc
js
jp
lods
scas
loope
dec
lret
adc
scas
daa
fdivl
adc
mov
inc
mov
std
cmpsb
jae
xchg
or
adc
dec
test
sub
pop
add
call
test
jmp
pop
sub
mov
mov
add
ret
inc
sti
cltd
loope
lea
lds
mov
icebp
pushf
cltd
je
sti
cltd
ret
mov
cli
fdivrl
and
pop
adc
aam
lret
lock
push
cs
shlb
and
and
sbb
sub
cmc
clc
mov
sub
mov
mov
pop
mov
clc
xchg
lods
pusha
dec
dec
dec
repnz
and
test
mov
mov
add
mov
mov
mov
sti
ret
rorb
out
inc
outsb
aaa
inc
js
lock
mov
push
test
pop
xor
mov
mov
push
arpl
jecxz
sbb
jnp
mov
sub
jg
aaa
jbe
movsl
nop
icebp
lcall
rcl
and
jmp
ret
push
test
stos
and
js
mov
adc
mov
daa
enter
dec
xchg
std
jp
lahf
cmp
and
dec
dec
test
iret
jno
jnp
add
inc
mov
das
jl
jecxz
insb
out
ja
icebp
cmp
dec
test
repnz
in
les
test
sbb
ljmp
lea
jae,pt
nop
dec
cs
ror
in
fdivs
ficoml
scas
pop
lahf
mov
mov
push
jno
jmp
inc
jno
shll
xchg
rol
in
sub
mov
xor
shlb
leave
jl
xchg
xchg
loopne
adcb
decl
loopne
sbb
and
iret
sub
pop
mov
popa
push
cmp
outsl
fild
push
and
pop
je
arpl
repz
arpl
lods
add
mov
dec
fimul
pop
mov
jl
ds
pop
insl
mov
cli
mov
mov
push
xchg
mov
shrb
out
icebp
xor
xor
and
xor
mov
sbb
mov
mov
nop
test
pop
jno
adc
pop
xlat
cwtl
lahf
je
das
sub
fistpl
jnp
mov
or
cmovno
movsl
shr
inc
sub
iret
mov
stc
jae
mov
clc
mov
cmpsl
outsb
xchg
pushf
lcall
or
leave
xchg
fild
jecxz
ret
pop
xchg
push
mov
inc
stos
dec
xchg
jl
pop
in
test
xchg
mov
mov
mov
mov
in
daa
sub
xchg
xor
shrl
xchg
push
xchg
cld
push
mov
xchg
dec
cwtl
dec
test
dec
mov
mov
push
lcall
pop
push
push
inc
faddl
cld
inc
xchg
ja
lcall
xchg
xchg
nop
lea
lcall
lcall
scas
sahf
imul
lcall
jmp
leave
mov
xchg
pop
adc
adc
femms
or
and
or
aas
sarb
sub
outsl
sti
adc
iret
mov
cmp
dec
xor
es
iret
iret
iret
iret
dec
sti
xchg
xor
mov
push
aam
mov
push
bound
fstpl
and
cmp
push
dec
das
decl
loopne
add
shl
cmpsb
jg
jmp
out
pop
popa
jg
ljmp
incb
rcll
pinsrw
incb
jecxz
ss
inc
push
fwait
cltd
jb
cltd
and
in
lcall
xchg
jne
jb
lock
and
mov
dec
data16
jmp
jae
std
pop
lret
aaa
jne
dec
add
add
mov
int
jo
dec
sbb
jb
mov
add
ds
call
cmpsb
jno
mov
in
sub
pop
mov
dec
sbb
sti
jge
dec
pop
fldt
add
and
add
dec
xchg
jp
jnp
loope
and
inc
sbb
test
inc
xor
enter
cld
xchg
lret
cmpsb
pop
jnp
mov
cmp
shr
les
inc
stc
sbb
iret
cmc
lret
push
js
inc
mov
repz
stos
out
addr16
sbb
clc
jae
mov
add
cmpsl
out
mov
mov
iret
add
roll
ret
out
mov
daa
or
xlat
adc
mov
and
lds
mov
movsb
xchg
dec
aaa
pop
rorl
xchg
rcr
popf
je
pop
push
scas
test
jno
and
jb
into
dec
repnz
mov
xchg
lahf
out
movsb
icebp
lds
jge
in
shrl
repz
repz
adc
inc
popf
mov
sti
fcom
aad
ljmp
sahf
sbb
cltd
sub
mov
inc
and
enter
dec
add
mov
adcl
pop
outsb
push
jnp
cmp
sbb
out
cwtl
jae
add
mov
cld
movsl
dec
mov
dec
xchg
mov
and
sbb
lret
mov
xchg
gs
adc
jbe
cmp
in
mov
xchg
and
mov
pop
mov
fbld
jl
jnp
rcrl
leave
cli
sub
lcall
pop
or
in
mov
pop
sahf
jmp
dec
ljmp
inc
and
jl
jb
or
fist
pop
mov
cld
xor
xchg
dec
push
and
in
js
imul
jmp
and
cmp
add
inc
mov
repz
mov
push
scas
test
daa
adc
sbb
call
leave
lds
add
sahf
jmp
or
fs
push
fsts
adc
movsb
sub
daa
aas
jmp
add
sarl
mov
cmp
jge
js
fnstsw
je
test
sub
fidivl
notl
mov
cmc
mov
adc
inc
pop
arpl
std
pushf
mov
inc
push
ret
push
xchg
test
pop
pop
loopne
add
decb
je
mov
jmp
addr16
incb
sub
adc
cld
cmp
add
or
xchg
scas
xchg
fwait
mov
xchg
imul
sarl
ljmp
scas
outsl
mov
or
adc
out
fwait
or
mov
arpl
fisubr
jno
negb
jg
pop
cld
in
mov
ds
add
mov
rclb
jns
les
push
jge
in
pop
pmuludq
sahf
insb
fxch
cmp
pop
or
addr16
mov
lcall
pop
in
rcrb
sbb
lock
sub
cltd
lock
aas
mov
mov
scas
pextrw
mov
mov
ror
stc
push
loope
ss
data16
addr16
imul
adc
add
xchg
pushf
and
test
mov
fistpll
js
mov
jl
js
ror
loope
popf
jecxz
and
xor
shl
pop
lret
mov
aam
js
sbb
mov
in
std
loope
ret
sbb
cmp
jp
das
gs
mul
jp
sar
hlt
leave
jge
sub
push
push
std
mov
mov
jmp
lods
push
pushl
out
jo
cmp
cltd
fnstsw
fist
sbb
shrb
cmp
sbb
out
fisub
push
jmp
leave
les
jmp
in
loop
movsl
jl
xchg
push
add
and
cld
icebp
jb
imul
scas
lcall
sub
imull
inc
cmp
stos
out
fmuls
scas
cmp
push
sti
pop
xchg
scas
mov
repz
std
and
mov
sub
mov
xor
aaa
ja
out
fndisi(8087
jmp
inc
dec
rcr
stc
mov
jb
fcmovnb
and
jl
adc
out
movsb
sti
sti
jl
cmp
xchg
test
loopne
call
incb
xchg
xchg
jge
cltd
inc
scas
or
jne
jb
mov
push
rcr
cmp
mov
ljmp
inc
jge
mov
xchg
ja
lea
and
jle
scas
fldl
cmpsl
les
pop
cld
hlt
rorl
lock
jg
or
mov
out
lods
adc
inc
inc
pop
out
pop
push
hlt
fsts
adc
jg
cmp
or
push
out
imul
movsb
jmp
jmp
rclb
pop
dec
pop
xchg
push
clc
pop
dec
xchg
push
pop
stc
xchg
add
out
imull
push
xor
adc
push
scas
es
pop
mov
mov
cli
adc
pop
adc
popf
lret
jo
and
fldenv
jl
mov
pop
xchg
adc
jnp
mov
inc
imul
fisttpll
add
mov
je
mov
sarl
pop
mov
xchg
sub
addr16
fisubl
shrb
arpl
clc
popa
in
pusha
pop
gs
and
hlt
pop
in
pop
mov
pop
in
pop
pop
gs
push
xchg
pop
pop
mov
in
push
push
xchg
inc
push
xchg
push
push
clc
push
call
inc
push
dec
lock
call
dec
push
inc
gs
dec
dec
dec
push
inc
in
inc
sub
push
push
inc
pop
inc
in
inc
xchg
aas
ds
push
cmp
cmp
cmp
mov
aam
sahf
fwait
xchg
ret
mov
xor
mov
call
sub
sub
sub
daa
es
mov
and
and
rcrb
fld
xchg
gs
xchg
gs
int
fimull
int
mov
fcoms
cld
mov
adc
cmc
sub
mov
or
or
lret
das
inc
test
pop
add
call
mov
dec
cld
mov
stos
sbb
stc
into
jae
cli
lds
xor
xor
inc
and
aad
lret
mov
hlt
xchg
add
inc
add
test
sarl
scas
aam
ret
loopne
jbe
negb
je
stc
out
cmp
das
outsl
sub
repz
daa
daa
or
cli
mov
jo
xchg
aam
stc
mov
scas
scas
ss
jmp
call
pop
mov
lock
cmpsl
cmp
and
mov
push
loop
imul
pop
mov
sub
or
sub
cmp
mov
sub
add
ljmp
popf
and
add
rcrl
jb
clc
add
mov
stc
mov
jbe
pop
pop
dec
psubusb
pop
push
sub
test
ss
mov
xchg
psubb
mov
out
xchg
cli
test
movsl
clc
aam
jae
dec
fnstsw
inc
clc
test
loopne
ja
orl
fbstp
in
int3
je
add
daa
lahf
mov
jbe
imul
mov
addr16
test
cmp
mov
jb
in
test
out
test
cld
xchg
mov
mul
je
lea
lahf
shrb
cmp
adc
stc
push
hlt
daa
dec
xchg
cmp
jl
cmc
aaa
std
xor
mov
shll
aas
dec
out
and
pop
pop
and
call
iret
aad
mov
imul
and
out
mov
jne
cs
jecxz
mov
lods
pusha
push
pop
add
mov
lds
add
in
mov
aas
pushf
jmp
ret
ljmp
ret
mov
push
fsts
jnp
mov
jp
dec
jns
aas
mov
cmpsb
jae
out
fcomi
icebp
stos
in
adc
test
enter
push
or
test
rolb
dec
jns
cmp
cmp
or
push
and
jmp
mov
inc
sub
fiaddl
xchg
mov
int
stc
or
mov
scas
test
ja
cmpsl
or
cmp
pop
dec
cld
jmp
mov
xchg
mov
out
mov
mov
xchg
gs
sbb
stc
mov
xchg
gs
mov
stos
rorl
add
cwtl
adc
cli
lret
popa
adc
push
adc
pop
adc
pmulhuw
pop
inc
push
in
or
int
push
pop
sub
mov
gs
xchg
mov
xchg
gs
xchg
test
xchg
mov
mov
push
daa
pop
xchg
dec
mov
mov
xchg
in
lcall
xchg
mov
ljmp
jbe
dec
mov
je
jae
cld
jb
jno
fnstsw
outsl
mov
mov
and
scas
insl
mov
imul
xchg
mov
lds
addr16
data16
lret
das
stos
gs
mov
mov
adc
push
int3
mov
sbb
sbb
gs
push
pop
sbb
mov
mov
lea
xchg
gs
nop
xchg
xchg
lcall
mov
daa
int
pop
imul
hlt
ja
int
int
daa
outsl
dec
jmp
pop
jb
pop
jnp
or
cmpsb
test
pop
xor
in
roll
hlt
repz
loopne
cmp
leave
add
xor
sub
add
scas
mov
or
sti
cbtw
iret
lret
jp
popf
sub
cmc
cmpsb
or
pop
sbb
mov
ja
mov
cmpsl
mov
mov
mov
lods
out
push
scas
out
sbb
xchg
lods
push
mov
mov
imul
xchg
stos
mov
cmc
mov
lret
sti
popa
lds
or
test
aas
repnz
ja
cli
in
mov
test
dec
mov
mov
jbe
sahf
pop
daa
icebp
add
cli
cld
add
adc
rcll
sub
fiadd
test
push
add
push
or
std
fmull
lods
shr
sbb
lock
dec
pop
sbb
xchg
int
test
popf
or
ljmp
movsb
cld
inc
in
cmpsl
or
dec
sbb
shll
nop
cmp
mov
iret
add
dec
idivb
cli
addr16
mov
fbld
push
jg
out
ret
pushf
js
loope
das
pop
mov
cltd
dec
xchg
gs
int3
jbe
aad
mov
dec
pop
mov
cld
pop
lea
xchg
add
adc
xchg
sub
cmc
or
adc
cltd
clc
push
inc
push
pop
xchg
mov
push
and
mov
add
mov
cmp
pop
arpl
mov
xor
adc
pusha
push
inc
aaa
mov
pop
sub
push
xor
push
xor
enter
hlt
popa
pop
loop
lret
jns
in
mov
push
adc
movsl
jl
je
fcmovnu
jne
inc
in
sahf
add
cmpsb
jecxz,pt
push
call
decl
je
mov
or
mov
pop
push
jno
inc
pop
in
push
mov
or
test
out
clc
pop
push
cmp
lea
xor
test
loop
int3
out
fstl
das
jg
stos
pop
pop
push
daa
pop
test
mov
jp
inc
negl
jb
ja
jmp
lods
in
pop
mov
scas
mov
bound
pushf
mov
adc
in
cli
pop
xchg
fcomps
dec
adc
push
loopne
xchg
push
or
adc
in
mov
fmull
fisubrl
mov
mov
fsts
aas
fnstsw
add
sub
xchg
out
fiaddl
fcomp
std
ret
sbb
add
ja
inc
sub
test
adc
add
nop
push
js
rclb
inc
shrl
dec
adc
mov
lret
cwtl
lcall
cmpsl
enter
mov
xchg
dec
jle
inc
sbb
sarb
test
xchg
into
adc
test
jge
and
out
out
add
inc
fidivr
cli
ret
xlat
cli
out
and
pop
movsl
mov
daa
in
jae
mov
lret
std
int
aad
fdivrl
repz
ret
inc
loop
xchg
ljmp
out
int3
icebp
fsubrp
loope
repnz
icebp
mov
cltd
outsl
mov
sub
pop
rolb
xchg
icebp
repz
adc
inc
cwtl
mov
out
jp
in
sti
test
jae
or
movsl
push
cmp
mov
jle
pop
sbb
lret
in
out
cld
test
repz
sbb
jl
icebp
or
mov
ljmp
mov
subb
push
xchg
adc
movsb
inc
pop
divb
adc
or
jo
jl
pop
cmc
cmp
fistpll
mov
sti
fnstsw
stc
into
lds
ja
push
int3
pushw
cltd
fimull
das
lret
lret
addr16
shll
arpl
das
das
das
lds
popa
xchg
pusha
mov
das
sub
das
xchg
pop
rcrl
and
mov
pop
fcomps
pop
xchg
push
fcoms
cld
mov
push
lcall
imul
stos
dec
arpl
lret
popf
dec
lds
inc
inc
lds
mov
inc
mov
mov
hlt
cmp
cmp
iret
mov
aaa
addr16
lcall
sub
gs
xchg
sub
daa
inc
push
jle
es
xor
aas
push
adc
and
and
pop
xchg
jo
mov
cltd
aam
mov
inc
icebp
decb
xor
xchg
pusha
test
mov
std
in
mov
mov
aaa
clc
dec
xchg
repnz
icebp
das
adc
ds
loopne
adc
addr16
xor
jle
das
sbb
jne
lret
pop
pop
jmp
cmpl
push
sbb
lret
sbb
add
and
out
scas
int3
scas
xchg
mov
pop
push
mov
lcall
sub
xchg
xchg
xchg
fidivrl
xchg
repnz
add
dec
jne
push
push
fbld
inc
mov
jg
pop
sarb
aas
loop
test
fiaddl
pop
lcall
jge
iret
sub
scas
cwtl
sti
js
cmpl
je
inc
xchg
das
imul
and
mov
enter
sub
shlb
out
repnz
lret
cmp
cmp
dec
cltd
out
mov
xchg
cltd
push
xor
xor
sti
jg
cltd
mov
jnp
stc
pushf
sub
dec
addr16
xchg
ss
add
loope
push
das
shlb
jle
dec
cmovnp
cmpsl
lahf
mov
test
mov
sahf
jo
xchg
hlt
mov
mov
fist
adc
sete
mov
sahf
lea
xchg
stc
xor
or
ret
or
jle
mov
sub
mov
mov
cld
jmp
in
mov
and
fwait
jp
fstpl
loop
jecxz
popf
lods
out
adcb
inc
incb
enter
dec
hlt
daa
in
fld
add
cli
jp
cs
push
iret
cmc
pop
jmp
ja
pop
or
xchg
lods
jmp
inc
lahf
testl
dec
sub
aas
cli
jb
sbbl
mov
cmc
pop
push
and
test
lahf
lods
cmp
idivl
pop
sub
mov
mov
ret
pop
pop
xor
xchg
lock
cmp
in
jge
inc
pushf
mov
pop
and
mov
cmp
insb
cmp
jge
notb
push
ss
aas
cmp
add
daa
mov
cmc
jo
cli
pop
jecxz
mov
in
add
rorl
lahf
and
addr16
fldcw
jb
ds
cld
adcl
xchg
xchg
or
fs
xchg
imul
inc
or
or
in
lds
add
add
mov
add
mov
mov
cmp
pop
xchg
stc
push
add
gs
xchg
mov
jle
lcall
int3
bnd
stc
mov
push
dec
and
pop
and
xchg
testb
clc
inc
push
pop
push
sbb
mov
stos
hlt
lret
loop
mov
imul
push
xor
push
mov
add
out
insl
pop
add
pop
add
inc
cmpsl
mov
ljmp
push
lds
loope
je
mov
daa
sub
mov
sarl
daa
ret
ds
push
mov
call
mov
dec
mov
cmp
iret
lds
inc
stos
ficompl
pop
sbb
inc
mov
jp
cli
xlat
jmp
sbb
push
cmp
mov
icebp
and
call
push
lods
scas
fsub
adc
inc
jb
mov
dec
ja
mov
notb
sarb
mov
int
dec
jae
popf
into
cmp
cmp
mov
jl
stc
sbb
stc
pop
mov
pushf
stos
pushf
stos
lcall
stos
jle
stc
xchg
int3
and
adc
mov
dec
adc
push
cmpsl
int
stc
pop
cmpsb
lret
push
je
inc
and
push
jae
stos
out
fmuls
jne
jp
movsl
es
and
stc
and
and
ss
and
and
and
adc
stc
dec
lcall
cmpsb
bound
jl
outsl
and
or
jo
fwait
sub
inc
xor
push
pop
fstps
xchg
sbb
sub
sub
xchg
in
sysret
push
test
jg
je
lahf
mov
pop
icebp
aas
inc
lcall
sbb
hlt
ljmp
xchg
pop
rorb
jecxz
jmp
sti
jg
mov
add
add
cmc
les
pop
incb
pop
jg
dec
push
std
add
bound
mov
cmp
lcall
loopne
jne
mov
cmp
divl
push
orl
repnz
stc
mov
jge
add
in
js
mov
incl
stc
mov
iret
ret
setp
fistl
repnz
cli
xchg
lds
shrb
cld
js
stos
or
dec
add
sbb
lcall
mov
aas
jb
mov
push
hlt
inc
mov
lea
pop
out
dec
sub
movsb
cmp
fcompl
cmp
fucomip
aas
mov
sbb
fisub
divb
daa
cmpsb
out
mov
out
add
repz
cmp
push
movsb
xchg
ror
arpl
fdivs
in
jne
cmc
icebp
jle
mov
notl
aas
inc
jecxz
xor
mov
cld
add
add
add
cwtl
mov
and
xlat
and
pop
inc
out
jno
ficomp
add
addl
xchg
ficomp
add
je
cmp
loope
sbb
scas
mov
cmp
pop
inc
mov
aam
mov
gs
lea
mov
fwait
xor
xchg
nop
call
into
ljmp
add
pushf
ret
sub
stc
add
aaa
frstor
and
sbb
dec
add
add
dec
jl
add
push
stc
sbb
push
sbb
push
sbb
adc
scas
jno
test
sbb
sbb
scas
pop
add
add
clc
jle
adc
or
xor
pop
das
inc
push
lahf
jl
jmp
in
iret
mov
jnp
lods
lret
dec
loopne
mov
add
sub
jg
pop
add
cli
mov
out
sbb
scas
mov
decl
rcll
fisttpll
jno
xor
repnz
icebp
test
pop
loopne
sar
xchg
push
je
test
testl
push
jp
je
mov
pop
mov
cmp
test
push
mov
pop
test
dec
mov
add
jle
pusha
jno
out
cmpsl
pop
movhlps
inc
and
push
jo
aam
mov
adc
jb
cli
push
int3
cs
cmp
int3
sub
loope
lret
fcmovnb
mov
rclb
jns
ja
adc
decb
inc
fs
out
dec
mov
test
nop
jge
std
pusha
inc
movsl
cld
xcrypt-ctr
cmpsl
sahf
test
and
cmp
cs
xor
xchg
jae
mov
mov
ret
lock
js
add
mov
cs
sub
into
add
mov
push
les
adc
das
jnp
and
mov
pop
in
push
mov
in
jns
mov
xor
inc
pop
jb
pop
xor
in
std
ret
or
popa
adc
in
dec
popl
dec
jle
test
xchg
xchg
imul
mov
loope
inc
je
test
mov
jbe
adc
fcomi
xchg
dec
repz
adc
or
pop
push
negb
add
cs
out
sub
adc
out
dec
cmpsb
stc
je
xlat
ficoml
dec
sub
xor
lock
repz
xlat
loopne
sarl
mov
loopne
ljmp
out
push
push
xor
push
xchg
jecxz
adc
stos
insb
hlt
mov
xorl
pop
stc
inc
pop
jbe
sti
jbe
je
out
je
je
clc
push
add
jb
je
mov
int3
das
pop
mov
dec
nop
adc
push
mov
outsb
mov
jns
pop
je
mov
imul
push
es
lcall
sbb
scas
aam
mov
and
in
jb
out
mov
loope
hlt
sarl
jmp
mov
dec
mov
jecxz
negl
pop
inc
pop
repnz
push
dec
cli
push
and
popf
pop
in
dec
mov
cmpsb
pop
ljmp
xchg
jmp
xchg
xlat
pop
adc
int
sti
mov
xor
xchg
mov
pushf
addl
xor
clc
out
pop
aas
jl
and
add
stos
jmp
add
pop
dec
icebp
repnz
mov
or
mov
mov
add
push
lock
ds
test
int3
adc
inc
andb
stc
mov
je
push
push
icebp
cmpsl
xchg
stc
push
cmp
ljmp
push
or
test
jb
repz
jg
add
dec
inc
mov
mov
les
andl
add
mov
cld
mov
jbe
scas
cli
push
sbb
lods
dec
divl
das
and
daa
mov
mov
and
cmp
fstpt
arpl
enter
xor
mov
aaa
adc
les
or
inc
call
inc
fcmovb
xchg
fist
lock
inc
xor
sub
sahf
out
or
sbb
cmpsl
cmp
scas
sub
add
and
jbe
in
andl
ds
pop
pop
mov
enter
cmp
movsl
cld
aas
mov
adcl
push
sar
repz
repnz
cmp
dec
idivb
pop
jecxz
les
stos
xor
inc
mov
decl
xchg
je
cltd
add
clc
ds
sub
iret
clc
aad
aas
mov
push
push
push
imul
stc
lret
aam
enter
cmp
mov
test
jmp
cwtl
mov
js
mov
mov
out
inc
push
iret
mov
mov
movsb
mov
iret
lret
setl
push
es
push
xchg
dec
add
sub
call
xchg
mov
in
add
mov
icebp
scas
cwtl
pop
into
test
inc
in
dec
dec
cld
stc
lahf
sbb
mov
cmp
and
lock
in
icebp
lock
xchg
repz
xchg
stc
push
in
stos
or
sti
jecxz
test
test
adc
cmp
mov
adc
mov
je
iret
mov
lahf
ret
daa
cmp
inc
mov
dec
jp
lock
mov
add
mov
mov
mov
lods
sarb
loopne
out
mov
xchg
jne
addr16
daa
jmp
mov
cs
int
sub
jo
mov
xchg
decl
fsubp
and
repz
jge
mov
outsb
mov
in
mov
mov
pop
dec
pop
jp
pop
inc
mov
scas
cmp
movsb
dec
mov
jge
push
xchg
in
test
out
sahf
pop
shl
pusha
ds
js
inc
lods
mov
jmp
daa
bound
xchg
lcall
pop
stos
lret
push
pop
pop
out
cmp
dec
loop
js
mov
rcrb
mov
je
jmp
inc
fwait
ret
ret
sbb
aas
inc
pop
push
leave
stos
cwtl
pushf
clc
mov
inc
leave
lock
negl
lods
adc
push
cld
jnp
jmp
mov
jbe
aam
mov
jecxz
icebp
mov
fisub
fistl
mov
jg
lahf
hlt
imul
or
pop
lock
pop
and
fisubrl
add
add
fucomp
dec
inc
add
std
push
jne
sub
fdiv
add
ret
jbe
jnp
sub
in
pop
daa
jno
clc
push
inc
push
loopne
pop
out
mov
and
pop
pop
xor
cli
pop
pop
adc
and
cmp
jbe
add
mov
in
scas
mov
xchg
pop
mov
xchg
int
mov
ret
in
mov
sti
sahf
sti
pop
sarl
call
insl
jmp
inc
fdivrs
adc
jl
xchg
gs
mov
jns
push
adc
inc
pop
cld
notb
in
gs
xchg
sahf
leave
loopne
subl
sahf
ljmp
cmp
jp
mov
jmp
sub
js
cld
xor
xchg
mov
xor
mov
rorb
test
lcall
lds
lock
enter
and
and
and
sahf
test
sbb
xchg
lods
dec
sbb
pop
push
fldenv
fcoml
adc
call
sti
mov
lret
xor
xchg
popf
test
pop
pop
dec
fs
push
jp
push
insl
movsb
mov
fisttp
fmulp
sbb
xchg
pop
adc
ds
sub
cmpsb
les
je
dec
jge
aas
in
xchg
les
outsb
lcall
xchg
stos
mov
sbb
movl
mov
xchg
pop
fwait
mov
pop
aad
xchg
mov
or
lods
repz
into
out
mov
ljmp
loope
jecxz
push
imul
sub
dec
pop
xchg
ja
mov
add
add
ljmp
in
add
sbb
pop
orl
pushf
dec
shrb
mov
arpl
cltd
lret
mov
insl
lcall
mov
out
mov
cmc
mov
out
icebp
push
jns
mov
loop
and
and
test
lods
xchg
psubw
pop
push
mov
cmp
cli
mov
mov
or
fldt
stos
fs
push
test
mov
jnp
jle
daa
cld
and
mov
movsb
js
lcall
fbld
pop
lret
inc
xchg
jo
scas
add
dec
mov
jmp
out
sub
cmpsb
pop
jnp
sub
cld
mov
loopne
bound
fild
push
std
in
pop
pop
sub
in
outsb
and
roll
jno
popl
fidivl
arpl
mov
fcmovb
cli
jae
jo
dec
mov
jg
add
pop
stc
das
lods
cld
push
sahf
sub
dec
add
fnop
in
test
xchg
scas
inc
sub
adcl
cld
and
xchg
mov
mov
inc
adc
pop
mov
or
roll
and
movb
jle
ja
sub
popa
dec
pop
push
mov
jns
lock
xchg
xor
jecxz
jb
jg
cld
adc
inc
xlat
fildll
stos
fnstsw
arpl
test
cld
adc
loopne
jnp
inc
scas
fldcw
xchg
inc
cmp
or
push
insb
xchg
stos
push
add
sbb
cltd
out
inc
pop
ja
mov
mov
in
aas
andl
xlat
dec
cld
test
lock
daa
jmp
xlat
dec
out
in
fwait
sbb
aaa
std
lret
mov
ljmp
jmp
or
fwait
push
neg
jge
mov
pushf
jl
clc
push
roll
out
nopl
dec
decl
mov
mov
insb
mov
dec
in
repnz
sub
sub
add
pop
rcr
mov
into
adc
pop
loope
aad
mov
in
call
xchg
mov
pop
movsb
mov
cmp
lods
out
mov
sub
std
mov
cld
mov
xchg
fstl
cli
mov
mov
sub
jne
enter
arpl
add
sahf
clc
xchg
sbbl
sub
inc
push
es
sbb
mov
loopne
push
cs
sub
popa
scas
pop
enter
ret
mov
adc
out
std
pop
or
fmuls
pop
jbe
jecxz
and
or
adc
jmp
ljmp
pop
jmp
xchg
ja
push
fisubr
out
jb
ja
pop
iret
sub
loopne
and
mov
outsl
and
inc
and
adc
xor
sub
mov
inc
push
xchg
pop
or
mov
cmp
sbb
mov
insb
mov
jae
inc
stc
lret
ljmp
fcoml
lock
inc
xchg
cli
or
lret
sbb
fisttpll
pop
push
shr
cmp
into
repnz
scas
scas
push
and
lahf
ja
ja
sti
movsl
jecxz
ret
xchg
movsb
pop
loope
sarb
jle
into
pop
into
add
inc
cmp
incl
rcrb
test
pop
loop
cmp
jnp
inc
or
clc
mull
sub
mov
pop
and
mov
js
and
in
std
sti
pop
scas
stos
cmp
repnz
adcl
call
xchg
fdivrs
mov
jle
mov
rcrb
pop
mov
jns
xor
jle
cli
out
xchg
clc
jae
fcoms
fstps
fisubl
pop
sbb
push
mov
sub
pop
stc
jl
mov
lds
bound
ljmp
inc
jle
test
cmp
pop
lea
sarl
clc
outsb
mov
xor
mov
push
popa
and
adc
lods
lods
adc
adc
jg
popf
out
stc
xchg
psrad
mov
cmc
xchg
or
or
push
cmpsb
nop
pop
add
mov
lods
xlat
pop
scas
jmp
int3
std
imul
nop
push
mov
insb
addl
out
out
push
mov
sbb
mov
or
xchg
stos
or
pop
jnp
lods
adc
cmp
mov
das
xor
mov
stos
fwait
in
int
add
cmc
clc
cmp
mov
cli
cmpsl
sbb
pop
test
daa
mov
cmpsb
out
jno
repnz
push
sbb
inc
inc
icebp
jl
ljmp
adc
ret
adcl
lahf
mov
ljmp
xor
sbbl
out
ror
nop
fwait
outsl
js
pop
mov
inc
and
mov
cld
cmp
add
in
sub
cmp
daa
mov
xlat
pop
mov
call
daa
pop
into
add
pop
fwait
out
repnz
mov
add
out
pop
lahf
and
or
sbb
into
mov
into
lods
fnop
sbb
iret
movsb
cmc
shrb
out
into
jno
ja
lahf
iret
pushf
incl
sub
mov
iret
lock
outsl
mul
pushf
js
ljmp
into
punpckhbw
pop
jge
aad
fucomip
pushf
ja
lahf
enter
push
dec
mov
pushf
popa
jmp
pushf
fstpl
cli
mov
pushf
xlat
iret
jbe
lock
iret
or
into
pushf
lahf
idiv
fadd
sarb
aaa
mov
daa
stos
sarl
jp
lret
mov
int
jmp
sahf
cmp
stos
xchg
jmp
mov
repz
inc
jne
dec
inc
fwait
jno
stc
sub
sub
push
repnz
mov
out
jno
fldenv
sub
cli
int3
pop
test
cmc
xchg
gs
je
add
ds
pop
push
inc
aaa
das
mov
out
fidivl
jg
enter
enter
adc
scas
cmc
sbbl
ret
jmp
xchg
insb
in
jge
es
in
std
jns
jecxz
aad
pop
out
jne
stos
push
cmp
scas
inc
adc
adc
cmp
xlat
mov
push
fsub
inc
mov
loopne
jmp
pop
jae
cmp
xor
fsubrl
cwtl
mov
dec
pop
add
mov
int
xor
xchg
add
in
dec
fs
mov
add
jg
aam
loop
cli
js
fucomp
jae
fadd
loope
cltd
out
xchg
dec
mov
or
adc
mov
jbe
lods
mov
imul
sbb
cli
stc
cli
fild
daa
sti
das
jmp
pop
lcall
add
xchg
and
in
loopne
and
into
cmp
nop
sbb
mov
lock
dec
push
pop
and
lcall
sbb
mov
lret
mov
mov
mov
jne
aad
pop
xor
int
and
pop
push
pop
fsts
dec
lea
fsubl
mov
fdivrs
mov
and
popa
xlat
cmc
cmp
test
negb
dec
or
cmp
xlat
iret
fnop
outsl
clc
dec
ret
into
imul
sti
push
mov
in
lret
sbb
out
or
outsl
aad
fcomip
xchg
xchg
int3
mov
mov
add
pop
insb
xchg
sbb
add
out
test
fidivrl
das
js
jmp
out
scas
std
shrb
add
jne
shrb
add
lcall
adc
scas
sub
cmp
dec
lret
add
jge
idivl
aas
int3
ds
cmp
cmp
cmp
ds
cmp
cmp
in
xor
es
xor
xor
mov
xor
sub
jge
xchg
clc
in
int3
ret
int
xchg
movl
out
pop
xor
ret
pop
mov
pop
lods
jo
mov
cwtl
cmpsb
cmpsb
push
xchg
lahf
jmp
sub
push
add
jo
ds
push
add
sub
mov
push
leave
cld
jb
aad
mov
sahf
cwtl
push
dec
add
dec
add
dec
test
cmp
dec
add
dec
add
mov
aam
cli
mov
stos
dec
pusha
jmp
mov
dec
push
divb
add
cmpsb
jl
pop
enter
je
jp
sar
popf
test
das
cltd
sbb
outsl
fnsave
adc
jb
xchg
in
es
pop
pop
fisttp
int
negl
ds
jnp
mov
xor
aaa
iret
outsb
outsb
sbb
daa
arpl
pop
push
daa
mov
push
mov
fbstp
dec
push
adc
dec
mov
int
aaa
aaa
aaa
cmpsl
cli
repz
stos
mov
mov
mov
dec
incl
test
sub
mov
and
decl
in
das
fsubrs
in
jg
push
out
and
repz
call
and
int3
lahf
in
mov
fbstp
roll
push
mov
ds
mov
sti
dec
lcall
push
iret
lahf
mov
fild
fdivr
clc
mov
movsb
pushf
cmc
lods
rol
scas
std
negl
lods
or
jmp
mov
mov
neg
mov
sarb
mov
and
nop
rcr
mov
lahf
jne
imull
fistpl
xchg
outsl
sti
mov
fistpll
jge
mov
pop
xor
test
leave
and
std
clc
ja
in
sti
or
adc
jge
fcomps
iret
fldl
dec
fs
fwait
xchg
xchg
lcall
int
mov
std
hlt
lahf
mov
rcr
jne
scas
sub
jae
and
insl
scas
mov
clc
push
ret
pushl
js
ds
mov
adc
xor
dec
leave
cmp
mov
cmp
mov
cmpsb
out
jecxz
nop
mov
push
lret
push
out
mov
daa
jg
in
scas
nop
xchg
icebp
pushl
out
pusha
inc
sar
repz
mov
out
jecxz
cmp
sub
scas
inc
mov
test
xchg
and
mov
stos
mov
idivl
adc
xchg
dec
push
sub
out
mov
xchg
dec
insb
dec
dec
imul
sahf
and
xchg
adc
daa
jnp
mov
jne
loope
out
enter
mov
fwait
mov
fsubr
in
nop
xchg
xchg
add
mov
lcall
mov
out
add
lods
lods
lcall
xchg
mov
ret
dec
xchg
test
cwtl
lea
ficompl
dec
mov
push
mov
and
dec
repz
cmp
mov
sub
cmp
loopne
decl
lods
dec
lods
hlt
scas
out
cli
dec
sbb
sarl
lods
out
out
leave
sti
push
push
repz
sahf
xor
in
xchg
test
out
xchg
sub
adc
push
cmp
dec
dec
jmp
mov
jb
jg
mov
pop
jae
mov
mov
lcall
pop
cmpsl
int
mov
adc
fucomip
jns
pop
fmulp
daa
jp
cwtl
out
or
cmpsl
out
sti
in
jbe
dec
enter
cmc
xor
mov
imull
sahf
pslld
xchg
sub
mov
in
in
jns
xchg
outsb
mov
sahf
pusha
and
pushf
mov
je
test
idivb
ds
xchg
xlat
xchg
xchg
lret
mov
jmp
sbb
imulb
ficom
pushf
cmp
test
sub
inc
std
mov
lea
xor
mov
mov
xchg
inc
std
mov
pusha
lock
xchg
and
xor
mov
insb
pop
popf
lret
cmp
or
push
adc
push
sahf
fisub
addr16
icebp
pop
in
xlat
xchg
std
lea
iret
test
lods
insb
jmp
and
ret
push
mov
xchg
in
pop
scas
cmp
ljmp
loope
cli
loopne
dec
into
fildll
xchg
jp
adc
aam
nop
jle
sub
call
loope
jno
in
mov
ret
fcom
lods
sahf
mov
mov
jb
and
sti
adc
xchg
mov
mov
mov
mov
test
push
ds
cwtl
lock
inc
popf
hlt
shr
ljmp
imulb
stc
mov
ljmp
cli
clc
dec
mov
pop
lea
or
fild
cmp
in
push
dec
adcb
push
ret
pop
ret
rol
stos
shrl
add
mov
shrb
rcrb
rorb
sarb
aaa
shrb
daa
rolb
and
movl
iret
push
iret
inc
iret
push
iret
repnz
jecxz
int
ror
into
lods
nop
scas
str
cmpsb
into
mov
into
mov
jge
push
into
dec
add
add
into
ds
push
into
add
std
int
int
int
int
int
int3
lret
int3
mov
int3
pop
int3
inc
int3
fild
call
lret
mov
les
mov
add
add
lret
xor
pop
leave
push
leave
inc
leave
sub
enter
enter
enter
enter
inc
mov
enter
cmpsl
jns
outsb
popa
push
add
add
movl
sbb
push
inc
icebp
loope
rol
mov
mov
nop
scas
sldt
int
mov
pushf
les
ret
cmp
add
add
sub
adc
hlt
ret
mov
stos
ret
jno
pusha
ret
dec
ret
dec
ret
or
mov
ret
cmp
add
ret
adc
or
movsb
rcll
mov
lcall
testb
xor
in
ror
xor
into
out
add
aad
mov
int
int
int
int
int
ret
jns
sldt
add
hlt
rcr
lret
sarl
in
fadd
nop
rolb
adc
nop
negl
iret
ret
add
add
iret
push
iret
dec
iret
es
and
push
iret
adc
mov
into
mov
mov
hlt
ljmp
ljmp
int
mov
add
jp
sub
mov
lret
fxch
ror
leave
jb
add
add
leave
and
or
xlat
enter
enter
enter
enter
pop
aaa
movl
add
add
mov
pop
arpl
push
movb
aaa
xor
and
or
cli
add
xlat
lds
lds
lds
adc
add
in
or
inc
rol
mov
les
les
dec
les
inc
les
mov
das
les
sbb
ret
lret
ret
ret
ret
xchg
ret
outsl
ret
ss
and
pop
mov
add
add
cmp
test
mov
lods
roll
and
sbb
or
mov
stos
pop
jle
mov
lock
pop
scas
call
iret
test
mov
ljmp
xchg
iret
sub
aad
jb
stos
bswap
add
out
xchg
int3
add
add
xchg
test
popf
lret
xchg
lret
insl
lret
push
lret
xor
add
lret
dec
clc
lret
xor
push
clc
leave
call
leave
jo
cmp
and
add
loopne
enter
adc
add
mov
call
imul
xor
ffreep
inc
add
add
lds
push
lds
aas
lds
lds
cli
les
or
enter
inc
les
les
jle
ret
add
jp
ret
mov
add
mov
xchg
jle
sbb
mov
ja
outsl
roll
ficoml
xchg
shlb
push
jp
and
add
nop
pop
imul
dec
into
inc
into
cmp
sub
int
int
int
int
dec
lods
cli
add
push
int
int3
ror
imul
lret
push
lret
dec
lret
inc
lret
cmp
xor
and
add
jmp
loop
ror
enter
mov
stos
lret
add
and
popf
lret
dec
lret
sbb
jge
enter
enter
mov
mov
inc
or
or
add
cmc
sbb
lods
les
std
ret
imul
and
add
roll
sarl
xor
sub
pop
rorl
or
out
shr
loope
adc
leave
sbb
outsl
pop
ret
push
mov
ds
aaa
iret
xor
add
add
adc
or
bound
int3
jmp
aad
mov
lcall
lret
cmc
add
lret
pop
jl
xor
and
sbb
add
add
leave
sti
enter
enter
push
outsb
enter
enter
enter
enter
add
or
pop
out
jmp
sbb
jecxz
je
outsl
jb
push
repz
mov
add
lds
lds
sub
icebp
faddp
lret
mov
test
les
les
arpl
push
add
les
les
les
je
stc
ret
repz
loope
aam
mov
ret
lcall
ret
test
jo
fs
push
push
jb
ret
adc
movnti
add
repnz
test
ret
lcall
shll
rorl
cmp
aaa
add
and
sbb
stc
shr
out
loopne
cmpb
jp
rol
mov
mov
cmpsb
shlb
cmp
xadd
rolb
ds
pop
iret
ljmp
add
cmc
iret
out
fcmove
ror
enter
test
iret
push
push
cmpl
iret
inc
iret
cmp
iret
and
sbb
into
out
into
or
dec
mov
and
mov
cld
mov
sbb
cld
ljmp
int
jbe
ja
dec
mov
leave
andb
xchg
int3
int3
push
pop
int3
dec
mov
int3
xor
and
add
add
int3
sbb
adc
or
add
sti
lret
repnz
in
lret
out
stc
add
pop
out
lret
pop
leave
push
leave
inc
leave
xor
sbb
add
xchg
enter
shrb
fcmovnb
je
fs
pop
push
dec
fiadd
and
call
test
dec
call
scas
lds
nop
pop
aas
les
xor
sbb
ret
cmc
ret
fild
out
ret
faddp
roll
xchg
ret
jl
add
jp
jne
mov
sarl
rorl
clc
mov
rcrb
dec
in
stc
add
cmpsl
push
shr
iret
mov
iret
les
pop
cmpsl
push
xchg
iret
pop
fmuls
inc
test
iret
scas
lock
xor
iret
and
pop
pop
ja
out
test
push
ljmp
cmp
add
pop
mov
test
in
in
pop
mov
orl
cld
xchg
inc
xchg
clc
outsl
inc
test
mov
inc
ljmp
inc
mov
das
push
xlat
inc
jmp
inc
addl
push
pop
mov
lock
sahf
xor
add
jg
or
mov
clc
loope
cwtl
mov
cmp
clc
lahf
call
and
psrlw
iret
cld
pop
stos
cmpsl
sti
stc
repz
es
clc
cwtl
lock
ljmp
jmp
pushf
lcall
dec
ds
fsub
fdivrs
clc
insl
std
and
stc
out
out
clc
bound
out
ljmp
js
lret
and
out
loopne
jne
adc
jne
inc
cmp
inc
push
jl
pop
xchg
inc
jae
jg
movsl
mov
aad
outsl
xchg
rcrl
gs
push
mov
pop
cld
push
dec
mov
sub
mov
adcb
test
loopne
mov
mov
fist
jno
jge
fsubrs
adc
aam
scas
and
push
out
sbbb
sti
fbstp
mov
scas
push
mov
das
push
xchg
jmp
cld
stos
lods
loopne
lock
stos
hlt
mov
mov
cli
xchg
lcall
mov
aas
jl
out
scas
add
adc
inc
call
push
xchg
repz
scas
fcomip
notl
test
lock
mov
cmp
cli
sbb
pop
fsubr
xchg
scas
imul
dec
pop
sti
push
pushf
xlat
fbld
cld
sub
xchg
pop
loopne
jmp
pop
pop
mov
cmp
dec
cli
fsubp
lds
cmp
inc
jp
stc
mov
aas
or
pop
ljmp
cltd
sti
repnz
fisttp
in
fwait
cmp
fwait
addr16
jne
aaa
cmp
mov
sbb
jecxz
cld
add
fildll
mov
int
divl
cmp
or
imul
adc
xchg
mov
mov
int
pmulhw
jns
insb
inc
mov
mov
not
fdivrs
int3
mov
dec
inc
dec
loop
test
jge
sbb
inc
jnp
cmpsl
jle
subb
mov
adc
inc
test
xor
movsb
pop
add
fdiv
mov
jne
mov
std
cmp
cmpsl
cld
or
mov
imul
and
out
add
bound
xchg
cmc
in
lcall
insb
mov
cmc
in
inc
mov
fisttp
mov
fxtract
mov
xor
and
in
ja
pop
lahf
idivb
sbb
bts
and
adc
ljmp
cltd
jmp
mov
cmpsl
daa
aaa
addr16
jmp
inc
sbbl
xor
pop
push
sbb
mov
dec
decb
fistpl
jb
dec
inc
jl
sti
repz
mov
jmp
fucom
jmp
sub
scas
xor
hlt
lds
lods
repz
dec
xchg
movsb
cwtl
movsl
outsl
ret
sub
sbb
fidivr
jecxz
int3
jb
fsubrl
inc
mov
mov
sbb
jecxz
cmp
inc
insl
dec
mov
mov
mov
ja
cmpsl
sti
or
fisubrl
jne
out
loopne
pop
addr16
mov
push
mov
xlat
fidiv
insl
pop
out
in
xchg
push
pop
pop
mov
clc
rcr
jecxz
out
jo
xchg
jmp
scas
jbe
pop
pop
or
jae
jecxz
out
xchg
div
call
into
push
pop
cmc
cmpsb
cmc
dec
mov
into
hlt
out
jns
xor
xchg
insb
sbb
push
sbb
add
ret
imul
mov
ljmp
fistp
stos
clc
inc
jmp
sti
int
clc
push
lods
or
ljmp
pushl
fnop
ffreep
mov
fisubr
iret
ljmp
ss
mov
out
mov
sbb
in
mov
lcall
psubd
cmpsl
fwait
aas
jmp
jecxz
pop
cli
stos
in
push
jle
cld
stos
ret
push
inc
stos
shrl
jl
pop
cmpsl
dec
cmp
jae
dec
stos
mov
mov
out
idivl
dec
mov
dec
xor
mov
inc
inc
dec
or
pop
mov
test
outsb
outsb
outsb
dec
and
insl
outsb
nop
xchg
dec
jnp
dec
out
push
push
cmpsl
and
cli
aaa
dec
add
xlat
movsb
fist
daa
dec
dec
cmc
out
stc
push
add
push
add
jg
dec
xor
dec
sar
das
xchg
gs
xchg
rcl
adc
lcall
sbb
mov
jns
movsb
mov
aas
jmp
mov
push
mov
inc
imull
jg
sub
sub
inc
jl
mov
hlt
cmp
pop
iret
stos
rclb
repnz
test
inc
cli
push
jl
cmp
pop
inc
xor
out
les
jno
jno
sub
outsl
jg
enter
shlb
and
dec
jg
lcall
sub
hlt
aas
enter
inc
and
mov
jl
mov
and
loope
mov
add
mov
sbb
sbb
jno
adc
jmp
pop
xchg
shr
fadds
dec
enter
std
rcll
or
std
push
dec
jnp
pop
addr16
push
out
cmp
lock
jmp
rcll
sti
pop
aas
jb
dec
lock
sub
jb
scas
push
jne
fdiv
xchg
mov
push
mov
cmp
dec
cmc
sahf
pop
dec
mov
or
fucomp
mov
jg
sub
mov
imul
xchg
xor
cmp
cli
mov
repnz
push
dec
fildll
xchg
incl
pop
or
stc
dec
push
in
daa
daa
xchg
pop
pop
sub
stos
dec
imul
jbe
push
out
jle
xchg
gs
lahf
lds
cmp
sub
pcmpeqd
sub
and
jb
xchg
loope
sub
cmp
lahf
mov
dec
je
lret
pop
ja
lods
test
fist
jmp
out
jg
cmpsl
add
or
mov
or
nop
cwtl
push
test
jbe
pushf
cmp
mov
dec
and
jbe
push
ds
cmpsb
mov
out
or
sti
repz
int
xchg
shl
int
int
jae
out
je
jge
dec
cmpsl
out
jecxz
pop
adc
or
cld
pop
jne
popf
sbb
push
popf
fwait
fwait
adc
cmpsl
cmp
scas
cmp
inc
push
mov
push
iret
in
gs
push
xchg
outsl
sbb
push
stc
adc
sti
fdivs
stc
push
arpl
popf
in
fbld
mov
lahf
fild
mov
cmpsl
in
out
mov
jnp
std
jmp
stos
jnp
lods
ljmp
out
jne
mov
mov
fidivrl
sub
push
ja
mov
les
sar
dec
dec
mov
adc
jl
dec
push
jecxz
lea
push
gs
aam
mov
icebp
fisttp
stos
xchg
inc
outsb
iret
ja
sahf
mov
fildll
data16
cld
xchg
ljmp
xchg
push
lcall
stos
pushl
mov
jle
sub
push
mov
mov
jg
fstpt
dec
std
out
aas
push
fdivrs
stos
fstpt
mov
in
push
cli
clc
jle
call
int3
mov
lahf
fdivrl
cld
div
lahf
cld
inc
adc
es
sarb
inc
cld
lock
sub
lret
dec
push
ljmp
add
repz
cld
ss
shld
push
add
test
gs
xchg
aad
ret
inc
aaa
pop
xchg
gs
scas
pop
movsb
adc
adc
repnz
repz
cld
xchg
hlt
into
clc
jle
inc
pop
je
push
jbe
scas
pop
scas
scas
adc
repnz
mov
adc
enter
or
cli
xchg
jl
data16
ljmp
push
mov
js
mov
test
daa
push
jns
ja
lods
hlt
faddl
lcall
xchg
cwtl
out
lods
jmp
sbb
ja
cmp
stc
cmp
ret
dec
sub
push
cmc
fisttpll
outsb
in
out
adc
insb
jge
mov
in
dec
in
test
jns
rcrb
lcall
imul
lahf
cmp
call
pop
fdiv
xchg
test
scas
xchg
lds
hlt
js
cld
mov
and
inc
mov
push
mov
mov
mov
out
xchg
incl
pop
push
in
jg
adc
call
sti
imul
lahf
cmp
std
aad
and
test
hlt
mov
mov
mov
sbb
mov
mov
adc
push
in
decb
nop
sti
pop
hlt
movsb
imul
sub
sar
fidivl
je
cwtl
mov
sbb
mov
xor
repnz
sbb
xchg
or
lret
popf
dec
sbb
mov
fcoml
mov
lcall
enter
mov
cld
push
adc
leave
lret
mov
inc
add
movsb
mov
stos
xlat
ljmp
fs
ljmp
mov
into
es
iret
fs
lahf
cli
jg
and
dec
xchg
adc
bound
loopne
hlt
cwtl
out
popl
lahf
mov
cwtl
jo
in
xlat
inc
xchg
xchg
je
movsb
int
cmc
xlat
decl
mov
lock
mov
xchg
fdivs
repnz
jo
xchg
push
dec
scas
fmuls
mov
fwait
loopne
lock
jg
mov
loopne
sub
and
loopne
jbe
cmp
rcrl
adc
call
xchg
test
mov
sahf
xor
dec
sti
cmpsb
lret
dec
add
into
xor
int
int
int
int
add
dec
stc
push
push
int
int
int
int3
mov
int3
lret
mov
and
imul
lret
and
add
push
lret
cmpsb
leave
fwait
leave
xchg
leave
ja
dec
leave
add
jge
test
enter
enter
enter
mov
fidivrl
gs
sub
adc
cmp
xor
sub
and
push
cmpsb
rol
ret
fwait
ret
imul
adc
ret
iret
ret
fldl
fidivrl
pop
ret
std
bswap
ja
jb
rcll
push
rorl
ljmp
pop
push
addr16
int3
sub
sub
dec
orl
call
cmp
dec
loop
dec
ficoml
cltd
lock
repnz
pop
push
aam
in
pop
hlt
pop
inc
in
pop
pusha
fistpll
out
push
bound
fsubrp
mov
cli
jnp
std
jmp
add
add
jmp
pop
jg
inc
lahf
cltd
leave
mov
aad
sub
fs
test
into
iret
popf
jl
stos
repnz
lcall
inc
bnd
dec
fisttp
loope
xchg
idiv
dec
mov
cli
sbb
clc
popl
fs
cmp
mov
cs
rcrb
rcll
pop
ds
dec
arpl
cmp
lock
pop
or
outsl
push
lcall
out
jmp
dec
sub
lret
xchg
fstpl
jle
fwait
push
loope
int3
out
test
out
cld
test
mov
in
aas
push
push
cmp
cmp
cld
and
fadds
and
stos
in
ljmp
idiv
mov
incl
jmp
add
inc
add
call
int
jmp
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
pusha
mov
mov
xor
mov
inc
cmp
jb
popa
jmp
